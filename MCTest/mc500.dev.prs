{'sentences': [{'string': ' One sunny morning, Stewart chose to go to the beach.', 'parse': {'tree': '(ROOT (S (NP (CD One) (JJ sunny) (NN morning)) (, ,) (NP (NNP Stewart)) (VP (VBD chose) (S (VP (TO to) (VP (VB go) (PP (TO to) (NP (DT the) (NN beach))))))) (. .)))', 'lemma': [(u'One', u'one', u'CD'), (u'sunny', u'sunny', u'JJ'), (u'morning', u'morning', u'NN'), (u',', u',', u','), (u'Stewart', u'Stewart', u'NNP'), (u'chose', u'choose', u'VBD'), (u'to', u'to', u'TO'), (u'go', u'go', u'VB'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'beach', u'beach', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['One', 'sunny', 'morning', ',', 'Stewart', 'chose', 'to', 'go', 'to', 'the', 'beach', '.']}, {'string': ' He knew that a rainstorm was going to arrive on Saturday and wanted to enjoy some sun before it arrived.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VP (VBD knew) (SBAR (IN that) (S (NP (DT a) (NN rainstorm)) (VP (VBD was) (VP (VBG going) (S (VP (TO to) (VP (VB arrive) (PP (IN on) (NP (NNP Saturday))))))))))) (CC and) (VP (VBD wanted) (S (VP (TO to) (VP (VB enjoy) (NP (DT some) (NN sun)) (SBAR (IN before) (S (NP (PRP it)) (VP (VBD arrived))))))))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'knew', u'know', u'VBD'), (u'that', u'that', u'IN'), (u'a', u'a', u'DT'), (u'rainstorm', u'rainstorm', u'NN'), (u'was', u'be', u'VBD'), (u'going', u'go', u'VBG'), (u'to', u'to', u'TO'), (u'arrive', u'arrive', u'VB'), (u'on', u'on', u'IN'), (u'Saturday', u'Saturday', u'NNP'), (u'and', u'and', u'CC'), (u'wanted', u'want', u'VBD'), (u'to', u'to', u'TO'), (u'enjoy', u'enjoy', u'VB'), (u'some', u'some', u'DT'), (u'sun', u'sun', u'NN'), (u'before', u'before', u'IN'), (u'it', u'it', u'PRP'), (u'arrived', u'arrive', u'VBD'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'knew', 'that', 'a', 'rainstorm', 'was', 'going', 'to', 'arrive', 'on', 'Saturday', 'and', 'wanted', 'to', 'enjoy', 'some', 'sun', 'before', 'it', 'arrived', '.']}, {'string': ' Stewart laid on his belly and began reading his newspaper.', 'parse': {'tree': '(ROOT (S (NP (NNP Stewart)) (VP (VP (VBD laid) (PP (IN on) (NP (PRP$ his) (NN belly)))) (CC and) (VP (VBD began) (S (VP (VBG reading) (NP (PRP$ his) (NN newspaper)))))) (. .)))', 'lemma': [(u'Stewart', u'Stewart', u'NNP'), (u'laid', u'lay', u'VBD'), (u'on', u'on', u'IN'), (u'his', u'he', u'PRP$'), (u'belly', u'belly', u'NN'), (u'and', u'and', u'CC'), (u'began', u'begin', u'VBD'), (u'reading', u'read', u'VBG'), (u'his', u'he', u'PRP$'), (u'newspaper', u'newspaper', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Stewart', 'laid', 'on', 'his', 'belly', 'and', 'began', 'reading', 'his', 'newspaper', '.']}, {'string': ' As he was enjoying the sun and the newspaper, he saw a bug crawl across his blanket.', 'parse': {'tree': '(ROOT (S (SBAR (IN As) (S (NP (PRP he)) (VP (VBD was) (VP (VBG enjoying) (NP (NP (DT the) (NN sun)) (CC and) (NP (DT the) (NN newspaper))))))) (, ,) (NP (PRP he)) (VP (VBD saw) (NP (DT a) (NN bug) (NN crawl)) (PP (IN across) (NP (PRP$ his) (NN blanket)))) (. .)))', 'lemma': [(u'As', u'as', u'IN'), (u'he', u'he', u'PRP'), (u'was', u'be', u'VBD'), (u'enjoying', u'enjoy', u'VBG'), (u'the', u'the', u'DT'), (u'sun', u'sun', u'NN'), (u'and', u'and', u'CC'), (u'the', u'the', u'DT'), (u'newspaper', u'newspaper', u'NN'), (u',', u',', u','), (u'he', u'he', u'PRP'), (u'saw', u'see', u'VBD'), (u'a', u'a', u'DT'), (u'bug', u'bug', u'NN'), (u'crawl', u'crawl', u'NN'), (u'across', u'across', u'IN'), (u'his', u'he', u'PRP$'), (u'blanket', u'blanket', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['As', 'he', 'was', 'enjoying', 'the', 'sun', 'and', 'the', 'newspaper', ',', 'he', 'saw', 'a', 'bug', 'crawl', 'across', 'his', 'blanket', '.']}, {'string': ' At first Stewart thought it was an ant, but the bug was moving too slowly to be an ant.', 'parse': {'tree': '(ROOT (S (S (PP (IN At) (NP (JJ first) (NNP Stewart) (NN thought))) (NP (PRP it)) (VP (VBD was) (NP (DT an) (NN ant)))) (, ,) (CC but) (S (NP (DT the) (NN bug)) (VP (VBD was) (VP (VBG moving) (ADVP (RB too) (RB slowly)) (S (VP (TO to) (VP (VB be) (NP (DT an) (NN ant)))))))) (. .)))', 'lemma': [(u'At', u'at', u'IN'), (u'first', u'first', u'JJ'), (u'Stewart', u'Stewart', u'NNP'), (u'thought', u'thought', u'NN'), (u'it', u'it', u'PRP'), (u'was', u'be', u'VBD'), (u'an', u'a', u'DT'), (u'ant', u'ant', u'NN'), (u',', u',', u','), (u'but', u'but', u'CC'), (u'the', u'the', u'DT'), (u'bug', u'bug', u'NN'), (u'was', u'be', u'VBD'), (u'moving', u'move', u'VBG'), (u'too', u'too', u'RB'), (u'slowly', u'slowly', u'RB'), (u'to', u'to', u'TO'), (u'be', u'be', u'VB'), (u'an', u'a', u'DT'), (u'ant', u'ant', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['At', 'first', 'Stewart', 'thought', 'it', 'was', 'an', 'ant', ',', 'but', 'the', 'bug', 'was', 'moving', 'too', 'slowly', 'to', 'be', 'an', 'ant', '.']}, {'string': ' As Stewart leaned in for a closer look, the bug cried out, `` Excuse me, sir!', 'parse': {'tree': '(ROOT (S (SBAR (IN As) (S (NP (NNP Stewart)) (VP (VBD leaned) (PRT (RP in)) (PP (IN for) (NP (DT a) (JJR closer) (NN look)))))) (PRN (, ,) (S (NP (DT the) (NN bug)) (VP (VBD cried) (PRT (RP out)))) (, ,)) (`` ``) (S (VP (VBG Excuse) (NP (PRP me)))) (, ,) (VP (VBP sir)) (. !)))', 'lemma': [(u'As', u'as', u'IN'), (u'Stewart', u'Stewart', u'NNP'), (u'leaned', u'lean', u'VBD'), (u'in', u'in', u'RP'), (u'for', u'for', u'IN'), (u'a', u'a', u'DT'), (u'closer', u'closer', u'JJR'), (u'look', u'look', u'NN'), (u',', u',', u','), (u'the', u'the', u'DT'), (u'bug', u'bug', u'NN'), (u'cried', u'cry', u'VBD'), (u'out', u'out', u'RP'), (u',', u',', u','), (u'``', u'``', u'``'), (u'Excuse', u'excuse', u'VBG'), (u'me', u'I', u'PRP'), (u',', u',', u','), (u'sir', u'sir', u'VBP'), (u'!', u'!', u'.')]}, 'tokens': ['As', 'Stewart', 'leaned', 'in', 'for', 'a', 'closer', 'look', ',', 'the', 'bug', 'cried', 'out', ',', '``', 'Excuse', 'me', ',', 'sir', '!']}, {'string': " Can you help me? ''", 'parse': {'tree': "(ROOT (SQ (MD Can) (NP (PRP you)) (VP (VBP help) (NP (PRP me))) (. ?) ('' '')))", 'lemma': [(u'Can', u'can', u'MD'), (u'you', u'you', u'PRP'), (u'help', u'help', u'VBP'), (u'me', u'I', u'PRP'), (u'?', u'?', u'.'), (u"''", u"''", u"''")]}, 'tokens': ['Can', 'you', 'help', 'me', '?', "''"]}, {'string': ' Stewart was surprised and jumped to his feet.', 'parse': {'tree': '(ROOT (S (NP (NNP Stewart)) (VP (VBD was) (VP (VBN surprised) (CC and) (VBN jumped) (PP (TO to) (NP (PRP$ his) (NNS feet))))) (. .)))', 'lemma': [(u'Stewart', u'Stewart', u'NNP'), (u'was', u'be', u'VBD'), (u'surprised', u'surprise', u'VBN'), (u'and', u'and', u'CC'), (u'jumped', u'jump', u'VBN'), (u'to', u'to', u'TO'), (u'his', u'he', u'PRP$'), (u'feet', u'foot', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['Stewart', 'was', 'surprised', 'and', 'jumped', 'to', 'his', 'feet', '.']}, {'string': " `` You can talk! ''", 'parse': {'tree': "(ROOT (S (`` ``) (NP (PRP You)) (VP (MD can) (VP (VB talk))) (. !) ('' '')))", 'lemma': [(u'``', u'``', u'``'), (u'You', u'you', u'PRP'), (u'can', u'can', u'MD'), (u'talk', u'talk', u'VB'), (u'!', u'!', u'.'), (u"''", u"''", u"''")]}, 'tokens': ['``', 'You', 'can', 'talk', '!', "''"]}, {'string': ' he shouted.', 'parse': {'tree': '(ROOT (S (NP (PRP he)) (VP (VBD shouted)) (. .)))', 'lemma': [(u'he', u'he', u'PRP'), (u'shouted', u'shout', u'VBD'), (u'.', u'.', u'.')]}, 'tokens': ['he', 'shouted', '.']}, {'string': " `` Yes, '' said the bug.", 'parse': {'tree': "(ROOT (SINV (`` ``) (FRAG (INTJ (UH Yes))) (, ,) ('' '') (VP (VBD said)) (NP (DT the) (NN bug)) (. .)))", 'lemma': [(u'``', u'``', u'``'), (u'Yes', u'yes', u'UH'), (u',', u',', u','), (u"''", u"''", u"''"), (u'said', u'say', u'VBD'), (u'the', u'the', u'DT'), (u'bug', u'bug', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['``', 'Yes', ',', "''", 'said', 'the', 'bug', '.']}, {'string': ' `` Please help me!', 'parse': {'tree': '(ROOT (S (INTJ (`` ``) (UH Please)) (VP (VB help) (NP (PRP me))) (. !)))', 'lemma': [(u'``', u'``', u'``'), (u'Please', u'please', u'UH'), (u'help', u'help', u'VB'), (u'me', u'I', u'PRP'), (u'!', u'!', u'.')]}, 'tokens': ['``', 'Please', 'help', 'me', '!']}, {'string': ' As you might know, there is a rainstorm coming into town.', 'parse': {'tree': '(ROOT (S (SBAR (IN As) (S (NP (PRP you)) (VP (MD might) (VP (VB know))))) (, ,) (NP (EX there)) (VP (VBZ is) (NP (NP (DT a) (NN rainstorm)) (VP (VBG coming) (PP (IN into) (NP (NN town)))))) (. .)))', 'lemma': [(u'As', u'as', u'IN'), (u'you', u'you', u'PRP'), (u'might', u'might', u'MD'), (u'know', u'know', u'VB'), (u',', u',', u','), (u'there', u'there', u'EX'), (u'is', u'be', u'VBZ'), (u'a', u'a', u'DT'), (u'rainstorm', u'rainstorm', u'NN'), (u'coming', u'come', u'VBG'), (u'into', u'into', u'IN'), (u'town', u'town', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['As', 'you', 'might', 'know', ',', 'there', 'is', 'a', 'rainstorm', 'coming', 'into', 'town', '.']}, {'string': ' Unfortunately, I do not have a place to call home.', 'parse': {'tree': '(ROOT (S (ADVP (RB Unfortunately)) (, ,) (NP (PRP I)) (VP (VBP do) (RB not) (VP (VB have) (NP (DT a) (NN place) (S (VP (TO to) (VP (VB call) (NP (NN home)))))))) (. .)))', 'lemma': [(u'Unfortunately', u'unfortunately', u'RB'), (u',', u',', u','), (u'I', u'I', u'PRP'), (u'do', u'do', u'VBP'), (u'not', u'not', u'RB'), (u'have', u'have', u'VB'), (u'a', u'a', u'DT'), (u'place', u'place', u'NN'), (u'to', u'to', u'TO'), (u'call', u'call', u'VB'), (u'home', u'home', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Unfortunately', ',', 'I', 'do', 'not', 'have', 'a', 'place', 'to', 'call', 'home', '.']}, {'string': " I need to find somewhere to sleep before the rain washes me away! ''", 'parse': {'tree': "(ROOT (S (NP (PRP I)) (VP (VBP need) (S (VP (TO to) (VP (VB find) (ADVP (RB somewhere)) (S (VP (TO to) (VP (VB sleep) (SBAR (IN before) (S (NP (DT the) (NN rain)) (VP (VBZ washes) (NP (PRP me)) (ADVP (RB away)))))))))))) (. !) ('' '')))", 'lemma': [(u'I', u'I', u'PRP'), (u'need', u'need', u'VBP'), (u'to', u'to', u'TO'), (u'find', u'find', u'VB'), (u'somewhere', u'somewhere', u'RB'), (u'to', u'to', u'TO'), (u'sleep', u'sleep', u'VB'), (u'before', u'before', u'IN'), (u'the', u'the', u'DT'), (u'rain', u'rain', u'NN'), (u'washes', u'wash', u'VBZ'), (u'me', u'I', u'PRP'), (u'away', u'away', u'RB'), (u'!', u'!', u'.'), (u"''", u"''", u"''")]}, 'tokens': ['I', 'need', 'to', 'find', 'somewhere', 'to', 'sleep', 'before', 'the', 'rain', 'washes', 'me', 'away', '!', "''"]}, {'string': ' Stewart felt sad.', 'parse': {'tree': '(ROOT (S (NP (NNP Stewart)) (VP (VBD felt) (ADJP (JJ sad))) (. .)))', 'lemma': [(u'Stewart', u'Stewart', u'NNP'), (u'felt', u'feel', u'VBD'), (u'sad', u'sad', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['Stewart', 'felt', 'sad', '.']}, {'string': " `` Gee, '' he cried.", 'parse': {'tree': "(ROOT (S (`` ``) (FRAG (NP (NNP Gee))) (, ,) ('' '') (NP (PRP he)) (VP (VBD cried)) (. .)))", 'lemma': [(u'``', u'``', u'``'), (u'Gee', u'Gee', u'NNP'), (u',', u',', u','), (u"''", u"''", u"''"), (u'he', u'he', u'PRP'), (u'cried', u'cry', u'VBD'), (u'.', u'.', u'.')]}, 'tokens': ['``', 'Gee', ',', "''", 'he', 'cried', '.']}, {'string': " `` That sounds terrible! ''", 'parse': {'tree': "(ROOT (S (`` ``) (NP (DT That)) (VP (VBZ sounds) (ADJP (JJ terrible))) (. !) ('' '')))", 'lemma': [(u'``', u'``', u'``'), (u'That', u'that', u'DT'), (u'sounds', u'sound', u'VBZ'), (u'terrible', u'terrible', u'JJ'), (u'!', u'!', u'.'), (u"''", u"''", u"''")]}, 'tokens': ['``', 'That', 'sounds', 'terrible', '!', "''"]}, {'string': ' Stewart thought about the problem.', 'parse': {'tree': '(ROOT (S (NP (NNP Stewart)) (VP (VBD thought) (PP (IN about) (NP (DT the) (NN problem)))) (. .)))', 'lemma': [(u'Stewart', u'Stewart', u'NNP'), (u'thought', u'think', u'VBD'), (u'about', u'about', u'IN'), (u'the', u'the', u'DT'), (u'problem', u'problem', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Stewart', 'thought', 'about', 'the', 'problem', '.']}, {'string': " `` Perhaps you can stay at my house, '' he said.", 'parse': {'tree': "(ROOT (S (`` ``) (S (ADVP (RB Perhaps)) (NP (PRP you)) (VP (MD can) (VP (VB stay) (PP (IN at) (NP (PRP$ my) (NN house)))))) (, ,) ('' '') (NP (PRP he)) (VP (VBD said)) (. .)))", 'lemma': [(u'``', u'``', u'``'), (u'Perhaps', u'perhaps', u'RB'), (u'you', u'you', u'PRP'), (u'can', u'can', u'MD'), (u'stay', u'stay', u'VB'), (u'at', u'at', u'IN'), (u'my', u'my', u'PRP$'), (u'house', u'house', u'NN'), (u',', u',', u','), (u"''", u"''", u"''"), (u'he', u'he', u'PRP'), (u'said', u'say', u'VBD'), (u'.', u'.', u'.')]}, 'tokens': ['``', 'Perhaps', 'you', 'can', 'stay', 'at', 'my', 'house', ',', "''", 'he', 'said', '.']}, {'string': " The bug jumped for joy and said, `` Oh, that would be wonderful! ''", 'parse': {'tree': "(ROOT (S (NP (DT The) (NN bug)) (VP (VP (VBD jumped) (PP (IN for) (NP (NN joy)))) (CC and) (VP (VBD said) (, ,) (`` ``) (S (INTJ (UH Oh)) (, ,) (NP (DT that)) (VP (MD would) (VP (VB be) (ADJP (JJ wonderful))))))) (. !) ('' '')))", 'lemma': [(u'The', u'the', u'DT'), (u'bug', u'bug', u'NN'), (u'jumped', u'jump', u'VBD'), (u'for', u'for', u'IN'), (u'joy', u'joy', u'NN'), (u'and', u'and', u'CC'), (u'said', u'say', u'VBD'), (u',', u',', u','), (u'``', u'``', u'``'), (u'Oh', u'oh', u'UH'), (u',', u',', u','), (u'that', u'that', u'DT'), (u'would', u'would', u'MD'), (u'be', u'be', u'VB'), (u'wonderful', u'wonderful', u'JJ'), (u'!', u'!', u'.'), (u"''", u"''", u"''")]}, 'tokens': ['The', 'bug', 'jumped', 'for', 'joy', 'and', 'said', ',', '``', 'Oh', ',', 'that', 'would', 'be', 'wonderful', '!', "''"]}, {'string': " The two traveled back to Stewart 's house and the bug found a soft spot to sleep.", 'parse': {'tree': "(ROOT (S (S (NP (DT The) (CD two)) (VP (VBD traveled) (ADVP (RB back)) (PP (TO to) (NP (NP (NNP Stewart) (POS 's)) (NN house))))) (CC and) (S (NP (DT the) (NN bug)) (VP (VBD found) (NP (DT a) (JJ soft) (NN spot)) (S (VP (TO to) (VP (VB sleep)))))) (. .)))", 'lemma': [(u'The', u'the', u'DT'), (u'two', u'two', u'CD'), (u'traveled', u'travel', u'VBD'), (u'back', u'back', u'RB'), (u'to', u'to', u'TO'), (u'Stewart', u'Stewart', u'NNP'), (u"'s", u"'s", u'POS'), (u'house', u'house', u'NN'), (u'and', u'and', u'CC'), (u'the', u'the', u'DT'), (u'bug', u'bug', u'NN'), (u'found', u'find', u'VBD'), (u'a', u'a', u'DT'), (u'soft', u'soft', u'JJ'), (u'spot', u'spot', u'NN'), (u'to', u'to', u'TO'), (u'sleep', u'sleep', u'VB'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'two', 'traveled', 'back', 'to', 'Stewart', "'s", 'house', 'and', 'the', 'bug', 'found', 'a', 'soft', 'spot', 'to', 'sleep', '.']}, {'string': ' The next day, the sky had darkened and rain clouds appeared all over town.', 'parse': {'tree': '(ROOT (S (S (NP (DT The) (JJ next) (NN day)) (, ,) (NP (DT the) (NN sky)) (VP (VBD had) (VP (VBN darkened)))) (CC and) (S (NP (NN rain) (NNS clouds)) (VP (VBD appeared) (NP (NP (DT all)) (PP (IN over) (NP (NN town)))))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'next', u'next', u'JJ'), (u'day', u'day', u'NN'), (u',', u',', u','), (u'the', u'the', u'DT'), (u'sky', u'sky', u'NN'), (u'had', u'have', u'VBD'), (u'darkened', u'darken', u'VBN'), (u'and', u'and', u'CC'), (u'rain', u'rain', u'NN'), (u'clouds', u'cloud', u'NNS'), (u'appeared', u'appear', u'VBD'), (u'all', u'all', u'DT'), (u'over', u'over', u'IN'), (u'town', u'town', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'next', 'day', ',', 'the', 'sky', 'had', 'darkened', 'and', 'rain', 'clouds', 'appeared', 'all', 'over', 'town', '.']}, {'string': ' Just as the news had said, a rainstorm had arrived.', 'parse': {'tree': '(ROOT (S (SBAR (RB Just) (IN as) (S (NP (DT the) (NN news)) (VP (VBD had) (VP (VBN said))))) (, ,) (NP (DT a) (NN rainstorm)) (VP (VBD had) (VP (VBN arrived))) (. .)))', 'lemma': [(u'Just', u'just', u'RB'), (u'as', u'as', u'IN'), (u'the', u'the', u'DT'), (u'news', u'news', u'NN'), (u'had', u'have', u'VBD'), (u'said', u'say', u'VBN'), (u',', u',', u','), (u'a', u'a', u'DT'), (u'rainstorm', u'rainstorm', u'NN'), (u'had', u'have', u'VBD'), (u'arrived', u'arrive', u'VBN'), (u'.', u'.', u'.')]}, 'tokens': ['Just', 'as', 'the', 'news', 'had', 'said', ',', 'a', 'rainstorm', 'had', 'arrived', '.']}, {'string': ' When Stewart woke up, he looked for the bug but could not find him.', 'parse': {'tree': '(ROOT (S (SBAR (WHADVP (WRB When)) (S (NP (NNP Stewart)) (VP (VBD woke) (PRT (RP up))))) (, ,) (NP (PRP he)) (VP (VP (VBD looked) (PP (IN for) (NP (DT the) (NN bug)))) (CC but) (VP (MD could) (RB not) (VP (VB find) (NP (PRP him))))) (. .)))', 'lemma': [(u'When', u'when', u'WRB'), (u'Stewart', u'Stewart', u'NNP'), (u'woke', u'wake', u'VBD'), (u'up', u'up', u'RP'), (u',', u',', u','), (u'he', u'he', u'PRP'), (u'looked', u'look', u'VBD'), (u'for', u'for', u'IN'), (u'the', u'the', u'DT'), (u'bug', u'bug', u'NN'), (u'but', u'but', u'CC'), (u'could', u'could', u'MD'), (u'not', u'not', u'RB'), (u'find', u'find', u'VB'), (u'him', u'he', u'PRP'), (u'.', u'.', u'.')]}, 'tokens': ['When', 'Stewart', 'woke', 'up', ',', 'he', 'looked', 'for', 'the', 'bug', 'but', 'could', 'not', 'find', 'him', '.']}, {'string': ' Then, he saw something flying around his house.', 'parse': {'tree': '(ROOT (S (ADVP (RB Then)) (, ,) (NP (PRP he)) (VP (VBD saw) (NP (NP (NN something)) (VP (VBG flying) (PP (IN around) (NP (PRP$ his) (NN house)))))) (. .)))', 'lemma': [(u'Then', u'then', u'RB'), (u',', u',', u','), (u'he', u'he', u'PRP'), (u'saw', u'see', u'VBD'), (u'something', u'something', u'NN'), (u'flying', u'fly', u'VBG'), (u'around', u'around', u'IN'), (u'his', u'he', u'PRP$'), (u'house', u'house', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Then', ',', 'he', 'saw', 'something', 'flying', 'around', 'his', 'house', '.']}, {'string': " `` Thank you for letting me sleep here last night, '' said the butterfly.", 'parse': {'tree': "(ROOT (SINV (`` ``) (S (VP (VB Thank) (NP (PRP you)) (PP (IN for) (S (VP (VBG letting) (SBAR (S (NP (PRP me)) (VP (VBP sleep) (ADVP (RB here)) (NP (JJ last) (NN night)))))))))) (, ,) ('' '') (VP (VBD said)) (NP (DT the) (NN butterfly)) (. .)))", 'lemma': [(u'``', u'``', u'``'), (u'Thank', u'thank', u'VB'), (u'you', u'you', u'PRP'), (u'for', u'for', u'IN'), (u'letting', u'let', u'VBG'), (u'me', u'I', u'PRP'), (u'sleep', u'sleep', u'VBP'), (u'here', u'here', u'RB'), (u'last', u'last', u'JJ'), (u'night', u'night', u'NN'), (u',', u',', u','), (u"''", u"''", u"''"), (u'said', u'say', u'VBD'), (u'the', u'the', u'DT'), (u'butterfly', u'butterfly', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['``', 'Thank', 'you', 'for', 'letting', 'me', 'sleep', 'here', 'last', 'night', ',', "''", 'said', 'the', 'butterfly', '.']}, {'string': ' It was the bug!', 'parse': {'tree': '(ROOT (S (NP (PRP It)) (VP (VBD was) (NP (DT the) (NN bug))) (. !)))', 'lemma': [(u'It', u'it', u'PRP'), (u'was', u'be', u'VBD'), (u'the', u'the', u'DT'), (u'bug', u'bug', u'NN'), (u'!', u'!', u'.')]}, 'tokens': ['It', 'was', 'the', 'bug', '!']}, {'string': ' `` I knew I could not change into a butterfly if I was out in the rain.', 'parse': {'tree': '(ROOT (S (`` ``) (NP (PRP I)) (VP (VBD knew) (SBAR (S (NP (PRP I)) (VP (MD could) (RB not) (VP (VB change) (PP (IN into) (NP (DT a) (NN butterfly))) (SBAR (IN if) (S (NP (PRP I)) (VP (VBD was) (ADVP (RB out)) (PP (IN in) (NP (DT the) (NN rain))))))))))) (. .)))', 'lemma': [(u'``', u'``', u'``'), (u'I', u'I', u'PRP'), (u'knew', u'know', u'VBD'), (u'I', u'I', u'PRP'), (u'could', u'could', u'MD'), (u'not', u'not', u'RB'), (u'change', u'change', u'VB'), (u'into', u'into', u'IN'), (u'a', u'a', u'DT'), (u'butterfly', u'butterfly', u'NN'), (u'if', u'if', u'IN'), (u'I', u'I', u'PRP'), (u'was', u'be', u'VBD'), (u'out', u'out', u'RB'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'rain', u'rain', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['``', 'I', 'knew', 'I', 'could', 'not', 'change', 'into', 'a', 'butterfly', 'if', 'I', 'was', 'out', 'in', 'the', 'rain', '.']}, {'string': " I wo n't forget your kindness. ''", 'parse': {'tree': "(ROOT (S (NP (PRP I)) (VP (MD wo) (RB n't) (VP (VB forget) (NP (PRP$ your) (NN kindness)))) (. .) ('' '')))", 'lemma': [(u'I', u'I', u'PRP'), (u'wo', u'will', u'MD'), (u"n't", u'not', u'RB'), (u'forget', u'forget', u'VB'), (u'your', u'you', u'PRP$'), (u'kindness', u'kindness', u'NN'), (u'.', u'.', u'.'), (u"''", u"''", u"''")]}, 'tokens': ['I', 'wo', "n't", 'forget', 'your', 'kindness', '.', "''"]}, {'string': ' After speaking, the butterfly flew away.', 'parse': {'tree': '(ROOT (S (PP (IN After) (NP (NN speaking))) (, ,) (NP (DT the) (NN butterfly)) (VP (VBD flew) (PRT (RP away))) (. .)))', 'lemma': [(u'After', u'after', u'IN'), (u'speaking', u'speaking', u'NN'), (u',', u',', u','), (u'the', u'the', u'DT'), (u'butterfly', u'butterfly', u'NN'), (u'flew', u'fly', u'VBD'), (u'away', u'away', u'RP'), (u'.', u'.', u'.')]}, 'tokens': ['After', 'speaking', ',', 'the', 'butterfly', 'flew', 'away', '.']}, {'string': " Stewart stood in his doorway and shouted, `` Goodbye! ''", 'parse': {'tree': "(ROOT (S (NP (NNP Stewart)) (VP (VP (VBD stood) (PP (IN in) (NP (PRP$ his) (NN doorway)))) (CC and) (VP (VBD shouted) (, ,) (`` ``) (INTJ (UH Goodbye) (. !)) ('' '')))))", 'lemma': [(u'Stewart', u'Stewart', u'NNP'), (u'stood', u'stand', u'VBD'), (u'in', u'in', u'IN'), (u'his', u'he', u'PRP$'), (u'doorway', u'doorway', u'NN'), (u'and', u'and', u'CC'), (u'shouted', u'shout', u'VBD'), (u',', u',', u','), (u'``', u'``', u'``'), (u'Goodbye', u'goodbye', u'UH'), (u'!', u'!', u'.'), (u"''", u"''", u"''")]}, 'tokens': ['Stewart', 'stood', 'in', 'his', 'doorway', 'and', 'shouted', ',', '``', 'Goodbye', '!', "''"]}], 'questions': [{'question': {'string': ' If the rain arrived on Saturday, what day did Stewart go to the beach?', 'parse': {'tree': '(ROOT (SBARQ (SBAR (IN If) (S (NP (DT the) (NN rain)) (VP (VBD arrived) (PP (IN on) (NP (NNP Saturday)))))) (, ,) (WHNP (WDT what) (NN day)) (SQ (VBD did) (NP (NNP Stewart)) (VP (VB go) (PP (TO to) (NP (DT the) (NN beach))))) (. ?)))', 'lemma': [(u'If', u'if', u'IN'), (u'the', u'the', u'DT'), (u'rain', u'rain', u'NN'), (u'arrived', u'arrive', u'VBD'), (u'on', u'on', u'IN'), (u'Saturday', u'Saturday', u'NNP'), (u',', u',', u','), (u'what', u'what', u'WDT'), (u'day', u'day', u'NN'), (u'did', u'do', u'VBD'), (u'Stewart', u'Stewart', u'NNP'), (u'go', u'go', u'VB'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'beach', u'beach', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['If', 'the', 'rain', 'arrived', 'on', 'Saturday', ',', 'what', 'day', 'did', 'Stewart', 'go', 'to', 'the', 'beach', '?']}, 'answers': [{'string': ' Friday', 'parse': {'tree': '(ROOT (NP (NNP Friday)))', 'lemma': [(u'Friday', u'Friday', u'NNP')]}, 'tokens': ['Friday']}, {'string': ' Monday', 'parse': {'tree': '(ROOT (NP (NNP Monday)))', 'lemma': [(u'Monday', u'Monday', u'NNP')]}, 'tokens': ['Monday']}, {'string': ' Sunday', 'parse': {'tree': '(ROOT (NP (NNP Sunday)))', 'lemma': [(u'Sunday', u'Sunday', u'NNP')]}, 'tokens': ['Sunday']}, {'string': ' Wednesday', 'parse': {'tree': '(ROOT (NP (NNP Wednesday)))', 'lemma': [(u'Wednesday', u'Wednesday', u'NNP')]}, 'tokens': ['Wednesday']}], 'mode': 0}, {'question': {'string': ' What was Stewart doing at the beach?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD was) (NP (NNP Stewart)) (VP (VBG doing) (PP (IN at) (NP (DT the) (NN beach))))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'was', u'be', u'VBD'), (u'Stewart', u'Stewart', u'NNP'), (u'doing', u'do', u'VBG'), (u'at', u'at', u'IN'), (u'the', u'the', u'DT'), (u'beach', u'beach', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'was', 'Stewart', 'doing', 'at', 'the', 'beach', '?']}, 'answers': [{'string': ' reading a newspaper', 'parse': {'tree': '(ROOT (S (VP (VBG reading) (NP (DT a) (NN newspaper)))))', 'lemma': [(u'reading', u'read', u'VBG'), (u'a', u'a', u'DT'), (u'newspaper', u'newspaper', u'NN')]}, 'tokens': ['reading', 'a', 'newspaper']}, {'string': ' looking for bugs', 'parse': {'tree': '(ROOT (S (VP (VBG looking) (PP (IN for) (NP (NNS bugs))))))', 'lemma': [(u'looking', u'look', u'VBG'), (u'for', u'for', u'IN'), (u'bugs', u'bug', u'NNS')]}, 'tokens': ['looking', 'for', 'bugs']}, {'string': ' swimming', 'parse': {'tree': '(ROOT (NP (NN swimming)))', 'lemma': [(u'swimming', u'swimming', u'NN')]}, 'tokens': ['swimming']}, {'string': ' sleeping on his blanket', 'parse': {'tree': '(ROOT (S (VP (VBG sleeping) (PP (IN on) (NP (PRP$ his) (NN blanket))))))', 'lemma': [(u'sleeping', u'sleep', u'VBG'), (u'on', u'on', u'IN'), (u'his', u'he', u'PRP$'), (u'blanket', u'blanket', u'NN')]}, 'tokens': ['sleeping', 'on', 'his', 'blanket']}], 'mode': 1}, {'question': {'string': ' What did the bug want from Stewart?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD did) (NP (DT the) (NN bug)) (VP (VB want) (PP (IN from) (NP (NNP Stewart))))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'did', u'do', u'VBD'), (u'the', u'the', u'DT'), (u'bug', u'bug', u'NN'), (u'want', u'want', u'VB'), (u'from', u'from', u'IN'), (u'Stewart', u'Stewart', u'NNP'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'did', 'the', 'bug', 'want', 'from', 'Stewart', '?']}, 'answers': [{'string': ' food', 'parse': {'tree': '(ROOT (NP (NN food)))', 'lemma': [(u'food', u'food', u'NN')]}, 'tokens': ['food']}, {'string': " to read Stewart 's newspaper", 'parse': {'tree': "(ROOT (FRAG (S (VP (TO to) (VP (VB read) (NP (NP (NNP Stewart) (POS 's)) (NN newspaper)))))))", 'lemma': [(u'to', u'to', u'TO'), (u'read', u'read', u'VB'), (u'Stewart', u'Stewart', u'NNP'), (u"'s", u"'s", u'POS'), (u'newspaper', u'newspaper', u'NN')]}, 'tokens': ['to', 'read', 'Stewart', "'s", 'newspaper']}, {'string': ' a place to sleep', 'parse': {'tree': '(ROOT (S (NP (DT a) (NN place)) (VP (TO to) (VP (VB sleep)))))', 'lemma': [(u'a', u'a', u'DT'), (u'place', u'place', u'NN'), (u'to', u'to', u'TO'), (u'sleep', u'sleep', u'VB')]}, 'tokens': ['a', 'place', 'to', 'sleep']}, {'string': ' a new friend', 'parse': {'tree': '(ROOT (FRAG (NP (DT a) (JJ new) (NN friend))))', 'lemma': [(u'a', u'a', u'DT'), (u'new', u'new', u'JJ'), (u'friend', u'friend', u'NN')]}, 'tokens': ['a', 'new', 'friend']}], 'mode': 1}, {'question': {'string': ' What was the bug that Stewart found at the beach?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD was) (NP (DT the) (NN bug)) (SBAR (IN that) (S (NP (NNP Stewart)) (VP (VBD found) (PP (IN at) (NP (DT the) (NN beach))))))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'was', u'be', u'VBD'), (u'the', u'the', u'DT'), (u'bug', u'bug', u'NN'), (u'that', u'that', u'IN'), (u'Stewart', u'Stewart', u'NNP'), (u'found', u'find', u'VBD'), (u'at', u'at', u'IN'), (u'the', u'the', u'DT'), (u'beach', u'beach', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'was', 'the', 'bug', 'that', 'Stewart', 'found', 'at', 'the', 'beach', '?']}, 'answers': [{'string': ' beetle', 'parse': {'tree': '(ROOT (NP (NN beetle)))', 'lemma': [(u'beetle', u'beetle', u'NN')]}, 'tokens': ['beetle']}, {'string': ' caterpillar', 'parse': {'tree': '(ROOT (NP (NN caterpillar)))', 'lemma': [(u'caterpillar', u'caterpillar', u'NN')]}, 'tokens': ['caterpillar']}, {'string': ' ant', 'parse': {'tree': '(ROOT (NP (NN ant)))', 'lemma': [(u'ant', u'ant', u'NN')]}, 'tokens': ['ant']}, {'string': ' butterfly', 'parse': {'tree': '(ROOT (NP (NN butterfly)))', 'lemma': [(u'butterfly', u'butterfly', u'NN')]}, 'tokens': ['butterfly']}], 'mode': 0}]}
{'sentences': [{'string': ' My mommy has a really cool job!', 'parse': {'tree': '(ROOT (S (NP (PRP$ My) (NN mommy)) (VP (VBZ has) (NP (DT a) (ADJP (RB really) (JJ cool)) (NN job))) (. !)))', 'lemma': [(u'My', u'my', u'PRP$'), (u'mommy', u'mommy', u'NN'), (u'has', u'have', u'VBZ'), (u'a', u'a', u'DT'), (u'really', u'really', u'RB'), (u'cool', u'cool', u'JJ'), (u'job', u'job', u'NN'), (u'!', u'!', u'.')]}, 'tokens': ['My', 'mommy', 'has', 'a', 'really', 'cool', 'job', '!']}, {'string': ' She makes costumes for movie stars.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBZ makes) (NP (NP (NNS costumes)) (PP (IN for) (NP (NN movie) (NNS stars))))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'makes', u'make', u'VBZ'), (u'costumes', u'costume', u'NNS'), (u'for', u'for', u'IN'), (u'movie', u'movie', u'NN'), (u'stars', u'star', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'makes', 'costumes', 'for', 'movie', 'stars', '.']}, {'string': ' She works in the attic of our house, so I get to see her work all the time.', 'parse': {'tree': '(ROOT (S (S (NP (PRP She)) (VP (VBZ works) (PP (IN in) (NP (NP (DT the) (NN attic)) (PP (IN of) (NP (PRP$ our) (NN house))))))) (, ,) (IN so) (S (NP (PRP I)) (VP (VBP get) (S (VP (TO to) (VP (VB see) (NP (PRP$ her) (NN work)) (NP (PDT all) (DT the) (NN time))))))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'works', u'work', u'VBZ'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'attic', u'attic', u'NN'), (u'of', u'of', u'IN'), (u'our', u'we', u'PRP$'), (u'house', u'house', u'NN'), (u',', u',', u','), (u'so', u'so', u'IN'), (u'I', u'I', u'PRP'), (u'get', u'get', u'VBP'), (u'to', u'to', u'TO'), (u'see', u'see', u'VB'), (u'her', u'she', u'PRP$'), (u'work', u'work', u'NN'), (u'all', u'all', u'PDT'), (u'the', u'the', u'DT'), (u'time', u'time', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'works', 'in', 'the', 'attic', 'of', 'our', 'house', ',', 'so', 'I', 'get', 'to', 'see', 'her', 'work', 'all', 'the', 'time', '.']}, {'string': ' I watch every movie I can, and try to learn all of the different costumes by heart.', 'parse': {'tree': '(ROOT (S (NP (PRP I)) (VP (VBP watch) (NP (NP (DT every) (NN movie)) (SBAR (S (NP (PRP I)) (VP (VP (MD can)) (, ,) (CC and) (VP (VBP try) (S (VP (TO to) (VP (VB learn) (NP (NP (DT all)) (PP (IN of) (NP (DT the) (JJ different) (NNS costumes)))) (PP (IN by) (NP (NN heart)))))))))))) (. .)))', 'lemma': [(u'I', u'I', u'PRP'), (u'watch', u'watch', u'VBP'), (u'every', u'every', u'DT'), (u'movie', u'movie', u'NN'), (u'I', u'I', u'PRP'), (u'can', u'can', u'MD'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'try', u'try', u'VBP'), (u'to', u'to', u'TO'), (u'learn', u'learn', u'VB'), (u'all', u'all', u'DT'), (u'of', u'of', u'IN'), (u'the', u'the', u'DT'), (u'different', u'different', u'JJ'), (u'costumes', u'costume', u'NNS'), (u'by', u'by', u'IN'), (u'heart', u'heart', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['I', 'watch', 'every', 'movie', 'I', 'can', ',', 'and', 'try', 'to', 'learn', 'all', 'of', 'the', 'different', 'costumes', 'by', 'heart', '.']}, {'string': " Mommy says if I work hard and keep up my practice, one day I 'll get to to make costumes for movie stars too!", 'parse': {'tree': "(ROOT (S (NP (NNP Mommy)) (VP (VBZ says) (SBAR (S (SBAR (IN if) (S (NP (PRP I)) (VP (VP (VB work) (ADJP (JJ hard))) (CC and) (VP (VB keep) (PRT (RP up)) (NP (PRP$ my) (NN practice)))))) (, ,) (NP (CD one) (NN day)) (NP (PRP I)) (VP (MD 'll) (VP (VB get) (S (VP (TO to) (S (VP (TO to) (VP (VB make) (NP (NP (NNS costumes)) (PP (IN for) (NP (NN movie) (NNS stars)))) (ADVP (RB too)))))))))))) (. !)))", 'lemma': [(u'Mommy', u'Mommy', u'NNP'), (u'says', u'say', u'VBZ'), (u'if', u'if', u'IN'), (u'I', u'I', u'PRP'), (u'work', u'work', u'VB'), (u'hard', u'hard', u'JJ'), (u'and', u'and', u'CC'), (u'keep', u'keep', u'VB'), (u'up', u'up', u'RP'), (u'my', u'my', u'PRP$'), (u'practice', u'practice', u'NN'), (u',', u',', u','), (u'one', u'one', u'CD'), (u'day', u'day', u'NN'), (u'I', u'I', u'PRP'), (u"'ll", u"'ll", u'MD'), (u'get', u'get', u'VB'), (u'to', u'to', u'TO'), (u'to', u'to', u'TO'), (u'make', u'make', u'VB'), (u'costumes', u'costume', u'NNS'), (u'for', u'for', u'IN'), (u'movie', u'movie', u'NN'), (u'stars', u'star', u'NNS'), (u'too', u'too', u'RB'), (u'!', u'!', u'.')]}, 'tokens': ['Mommy', 'says', 'if', 'I', 'work', 'hard', 'and', 'keep', 'up', 'my', 'practice', ',', 'one', 'day', 'I', "'ll", 'get', 'to', 'to', 'make', 'costumes', 'for', 'movie', 'stars', 'too', '!']}, {'string': ' That job sounds like heaven.', 'parse': {'tree': '(ROOT (S (NP (DT That) (NN job)) (VP (VBZ sounds) (PP (IN like) (NP (NN heaven)))) (. .)))', 'lemma': [(u'That', u'that', u'DT'), (u'job', u'job', u'NN'), (u'sounds', u'sound', u'VBZ'), (u'like', u'like', u'IN'), (u'heaven', u'heaven', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['That', 'job', 'sounds', 'like', 'heaven', '.']}, {'string': ' One day I was in the attic, helping Mommy make a boot for a costume.', 'parse': {'tree': '(ROOT (S (NP (CD One) (NN day)) (NP (PRP I)) (VP (VBD was) (PP (IN in) (NP (DT the) (NN attic))) (, ,) (S (VP (VBG helping) (S (NP (NNP Mommy)) (VP (VB make) (NP (NP (DT a) (NN boot)) (PP (IN for) (NP (DT a) (NN costume))))))))) (. .)))', 'lemma': [(u'One', u'one', u'CD'), (u'day', u'day', u'NN'), (u'I', u'I', u'PRP'), (u'was', u'be', u'VBD'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'attic', u'attic', u'NN'), (u',', u',', u','), (u'helping', u'help', u'VBG'), (u'Mommy', u'Mommy', u'NNP'), (u'make', u'make', u'VB'), (u'a', u'a', u'DT'), (u'boot', u'boot', u'NN'), (u'for', u'for', u'IN'), (u'a', u'a', u'DT'), (u'costume', u'costume', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['One', 'day', 'I', 'was', 'in', 'the', 'attic', ',', 'helping', 'Mommy', 'make', 'a', 'boot', 'for', 'a', 'costume', '.']}, {'string': ' They were covered in little beads, and mom had to sew them on.', 'parse': {'tree': '(ROOT (S (S (NP (PRP They)) (VP (VBD were) (VP (VBN covered) (PP (IN in) (NP (JJ little) (NNS beads)))))) (, ,) (CC and) (S (NP (NN mom)) (VP (VBD had) (S (VP (TO to) (VP (VB sew) (NP (PRP them)) (PRT (RP on))))))) (. .)))', 'lemma': [(u'They', u'they', u'PRP'), (u'were', u'be', u'VBD'), (u'covered', u'cover', u'VBN'), (u'in', u'in', u'IN'), (u'little', u'little', u'JJ'), (u'beads', u'bead', u'NNS'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'mom', u'mom', u'NN'), (u'had', u'have', u'VBD'), (u'to', u'to', u'TO'), (u'sew', u'sew', u'VB'), (u'them', u'they', u'PRP'), (u'on', u'on', u'RP'), (u'.', u'.', u'.')]}, 'tokens': ['They', 'were', 'covered', 'in', 'little', 'beads', ',', 'and', 'mom', 'had', 'to', 'sew', 'them', 'on', '.']}, {'string': ' She kept dropping the needles on the ground.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBD kept) (S (VP (VBG dropping) (NP (DT the) (NNS needles)) (PP (IN on) (NP (DT the) (NN ground)))))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'kept', u'keep', u'VBD'), (u'dropping', u'drop', u'VBG'), (u'the', u'the', u'DT'), (u'needles', u'needle', u'NNS'), (u'on', u'on', u'IN'), (u'the', u'the', u'DT'), (u'ground', u'ground', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'kept', 'dropping', 'the', 'needles', 'on', 'the', 'ground', '.']}, {'string': ' Then I was helping by picking them up.', 'parse': {'tree': '(ROOT (S (RB Then) (NP (PRP I)) (VP (VBD was) (VP (VBG helping) (PP (IN by) (S (VP (VBG picking) (NP (PRP them)) (PRT (RP up))))))) (. .)))', 'lemma': [(u'Then', u'then', u'RB'), (u'I', u'I', u'PRP'), (u'was', u'be', u'VBD'), (u'helping', u'help', u'VBG'), (u'by', u'by', u'IN'), (u'picking', u'pick', u'VBG'), (u'them', u'they', u'PRP'), (u'up', u'up', u'RP'), (u'.', u'.', u'.')]}, 'tokens': ['Then', 'I', 'was', 'helping', 'by', 'picking', 'them', 'up', '.']}, {'string': ' I was also helping by moving the lamp around so Mommy could see the boot better.', 'parse': {'tree': '(ROOT (S (NP (PRP I)) (VP (VBD was) (ADVP (RB also)) (VP (VBG helping) (PP (IN by) (S (VP (VBG moving) (NP (DT the) (NN lamp)) (ADVP (RB around)) (SBAR (IN so) (S (NP (NNP Mommy)) (VP (MD could) (VP (VB see) (NP (DT the) (NN boot)) (ADVP (RBR better))))))))))) (. .)))', 'lemma': [(u'I', u'I', u'PRP'), (u'was', u'be', u'VBD'), (u'also', u'also', u'RB'), (u'helping', u'help', u'VBG'), (u'by', u'by', u'IN'), (u'moving', u'move', u'VBG'), (u'the', u'the', u'DT'), (u'lamp', u'lamp', u'NN'), (u'around', u'around', u'RB'), (u'so', u'so', u'IN'), (u'Mommy', u'Mommy', u'NNP'), (u'could', u'could', u'MD'), (u'see', u'see', u'VB'), (u'the', u'the', u'DT'), (u'boot', u'boot', u'NN'), (u'better', u'better', u'RBR'), (u'.', u'.', u'.')]}, 'tokens': ['I', 'was', 'also', 'helping', 'by', 'moving', 'the', 'lamp', 'around', 'so', 'Mommy', 'could', 'see', 'the', 'boot', 'better', '.']}, {'string': " `` Ouch! ''", 'parse': {'tree': "(ROOT (S (`` ``) (VP (VB Ouch)) (. !) ('' '')))", 'lemma': [(u'``', u'``', u'``'), (u'Ouch', u'ouch', u'VB'), (u'!', u'!', u'.'), (u"''", u"''", u"''")]}, 'tokens': ['``', 'Ouch', '!', "''"]}, {'string': ' I said.', 'parse': {'tree': '(ROOT (S (NP (PRP I)) (VP (VBD said)) (. .)))', 'lemma': [(u'I', u'I', u'PRP'), (u'said', u'say', u'VBD'), (u'.', u'.', u'.')]}, 'tokens': ['I', 'said', '.']}, {'string': " `` I accidentally stuck my finger with the needle! ''", 'parse': {'tree': "(ROOT (S (`` ``) (NP (PRP I)) (VP (ADVP (RB accidentally)) (VBD stuck) (NP (PRP$ my) (NN finger)) (PP (IN with) (NP (DT the) (NN needle)))) (. !) ('' '')))", 'lemma': [(u'``', u'``', u'``'), (u'I', u'I', u'PRP'), (u'accidentally', u'accidentally', u'RB'), (u'stuck', u'stick', u'VBD'), (u'my', u'my', u'PRP$'), (u'finger', u'finger', u'NN'), (u'with', u'with', u'IN'), (u'the', u'the', u'DT'), (u'needle', u'needle', u'NN'), (u'!', u'!', u'.'), (u"''", u"''", u"''")]}, 'tokens': ['``', 'I', 'accidentally', 'stuck', 'my', 'finger', 'with', 'the', 'needle', '!', "''"]}, {'string': ' My mommy looked at my finger, and gave it a kiss.', 'parse': {'tree': '(ROOT (S (NP (PRP$ My) (NN mommy)) (VP (VP (VBD looked) (PP (IN at) (NP (PRP$ my) (NN finger)))) (, ,) (CC and) (VP (VBD gave) (NP (PRP it)) (NP (DT a) (NN kiss)))) (. .)))', 'lemma': [(u'My', u'my', u'PRP$'), (u'mommy', u'mommy', u'NN'), (u'looked', u'look', u'VBD'), (u'at', u'at', u'IN'), (u'my', u'my', u'PRP$'), (u'finger', u'finger', u'NN'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'gave', u'give', u'VBD'), (u'it', u'it', u'PRP'), (u'a', u'a', u'DT'), (u'kiss', u'kiss', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['My', 'mommy', 'looked', 'at', 'my', 'finger', ',', 'and', 'gave', 'it', 'a', 'kiss', '.']}, {'string': " `` Welcome to the life of a costumer! ''", 'parse': {'tree': "(ROOT (S (`` ``) (VP (VB Welcome) (PP (TO to) (NP (NP (DT the) (NN life)) (PP (IN of) (NP (DT a) (NN costumer)))))) (. !) ('' '')))", 'lemma': [(u'``', u'``', u'``'), (u'Welcome', u'welcome', u'VB'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'life', u'life', u'NN'), (u'of', u'of', u'IN'), (u'a', u'a', u'DT'), (u'costumer', u'costumer', u'NN'), (u'!', u'!', u'.'), (u"''", u"''", u"''")]}, 'tokens': ['``', 'Welcome', 'to', 'the', 'life', 'of', 'a', 'costumer', '!', "''"]}], 'questions': [{'question': {'string': ' What does Mommy do as a job?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ does) (NP (NNP Mommy)) (VP (VB do) (PP (IN as) (NP (DT a) (NN job))))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'does', u'do', u'VBZ'), (u'Mommy', u'Mommy', u'NNP'), (u'do', u'do', u'VB'), (u'as', u'as', u'IN'), (u'a', u'a', u'DT'), (u'job', u'job', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'does', 'Mommy', 'do', 'as', 'a', 'job', '?']}, 'answers': [{'string': ' filming movies', 'parse': {'tree': '(ROOT (NP (JJ filming) (NNS movies)))', 'lemma': [(u'filming', u'filming', u'JJ'), (u'movies', u'movie', u'NNS')]}, 'tokens': ['filming', 'movies']}, {'string': ' making costumes for movie stars', 'parse': {'tree': '(ROOT (S (VP (VBG making) (NP (NNS costumes)) (PP (IN for) (NP (NN movie) (NNS stars))))))', 'lemma': [(u'making', u'make', u'VBG'), (u'costumes', u'costume', u'NNS'), (u'for', u'for', u'IN'), (u'movie', u'movie', u'NN'), (u'stars', u'star', u'NNS')]}, 'tokens': ['making', 'costumes', 'for', 'movie', 'stars']}, {'string': ' watching movies', 'parse': {'tree': '(ROOT (S (VP (VBG watching) (NP (NNS movies)))))', 'lemma': [(u'watching', u'watch', u'VBG'), (u'movies', u'movie', u'NNS')]}, 'tokens': ['watching', 'movies']}, {'string': ' making boots', 'parse': {'tree': '(ROOT (S (VP (VBG making) (NP (NNS boots)))))', 'lemma': [(u'making', u'make', u'VBG'), (u'boots', u'boot', u'NNS')]}, 'tokens': ['making', 'boots']}], 'mode': 0}, {'question': {'string': ' What was special about the boot?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD was) (NP (NP (JJ special)) (PP (IN about) (NP (DT the) (NN boot))))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'was', u'be', u'VBD'), (u'special', u'special', u'JJ'), (u'about', u'about', u'IN'), (u'the', u'the', u'DT'), (u'boot', u'boot', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'was', 'special', 'about', 'the', 'boot', '?']}, 'answers': [{'string': ' It was covered in beads', 'parse': {'tree': '(ROOT (S (NP (PRP It)) (VP (VBD was) (VP (VBN covered) (PP (IN in) (NP (NNS beads)))))))', 'lemma': [(u'It', u'it', u'PRP'), (u'was', u'be', u'VBD'), (u'covered', u'cover', u'VBN'), (u'in', u'in', u'IN'), (u'beads', u'bead', u'NNS')]}, 'tokens': ['It', 'was', 'covered', 'in', 'beads']}, {'string': ' it was brown', 'parse': {'tree': '(ROOT (S (NP (PRP it)) (VP (VBD was) (ADJP (JJ brown)))))', 'lemma': [(u'it', u'it', u'PRP'), (u'was', u'be', u'VBD'), (u'brown', u'brown', u'JJ')]}, 'tokens': ['it', 'was', 'brown']}, {'string': ' it had a picture of a kiss', 'parse': {'tree': '(ROOT (S (NP (PRP it)) (VP (VBD had) (NP (NP (DT a) (NN picture)) (PP (IN of) (NP (DT a) (NN kiss)))))))', 'lemma': [(u'it', u'it', u'PRP'), (u'had', u'have', u'VBD'), (u'a', u'a', u'DT'), (u'picture', u'picture', u'NN'), (u'of', u'of', u'IN'), (u'a', u'a', u'DT'), (u'kiss', u'kiss', u'NN')]}, 'tokens': ['it', 'had', 'a', 'picture', 'of', 'a', 'kiss']}, {'string': ' it had a picture of a lamp', 'parse': {'tree': '(ROOT (S (NP (PRP it)) (VP (VBD had) (NP (NP (DT a) (NN picture)) (PP (IN of) (NP (DT a) (NN lamp)))))))', 'lemma': [(u'it', u'it', u'PRP'), (u'had', u'have', u'VBD'), (u'a', u'a', u'DT'), (u'picture', u'picture', u'NN'), (u'of', u'of', u'IN'), (u'a', u'a', u'DT'), (u'lamp', u'lamp', u'NN')]}, 'tokens': ['it', 'had', 'a', 'picture', 'of', 'a', 'lamp']}], 'mode': 0}, {'question': {'string': ' Where does Mommy work?', 'parse': {'tree': '(ROOT (SBARQ (WHADVP (WRB Where)) (SQ (VBZ does) (NP (NNP Mommy)) (VP (VB work))) (. ?)))', 'lemma': [(u'Where', u'where', u'WRB'), (u'does', u'do', u'VBZ'), (u'Mommy', u'Mommy', u'NNP'), (u'work', u'work', u'VB'), (u'?', u'?', u'.')]}, 'tokens': ['Where', 'does', 'Mommy', 'work', '?']}, 'answers': [{'string': ' in the attic', 'parse': {'tree': '(ROOT (PP (IN in) (NP (DT the) (NN attic))))', 'lemma': [(u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'attic', u'attic', u'NN')]}, 'tokens': ['in', 'the', 'attic']}, {'string': ' in a costume shop', 'parse': {'tree': '(ROOT (PP (IN in) (NP (DT a) (JJ costume) (NN shop))))', 'lemma': [(u'in', u'in', u'IN'), (u'a', u'a', u'DT'), (u'costume', u'costume', u'JJ'), (u'shop', u'shop', u'NN')]}, 'tokens': ['in', 'a', 'costume', 'shop']}, {'string': ' at the movies', 'parse': {'tree': '(ROOT (PP (IN at) (NP (DT the) (NNS movies))))', 'lemma': [(u'at', u'at', u'IN'), (u'the', u'the', u'DT'), (u'movies', u'movie', u'NNS')]}, 'tokens': ['at', 'the', 'movies']}, {'string': ' at the shoe store', 'parse': {'tree': '(ROOT (PP (IN at) (NP (DT the) (NN shoe) (NN store))))', 'lemma': [(u'at', u'at', u'IN'), (u'the', u'the', u'DT'), (u'shoe', u'shoe', u'NN'), (u'store', u'store', u'NN')]}, 'tokens': ['at', 'the', 'shoe', 'store']}], 'mode': 1}, {'question': {'string': ' Where did the needle the narrator stuck herself with come from?', 'parse': {'tree': '(ROOT (SBARQ (WHADVP (WRB Where)) (SQ (VBD did) (NP (NP (DT the) (NN needle)) (SBAR (S (NP (DT the) (NN narrator)) (VP (VBD stuck) (NP (PRP herself)) (PP (IN with)))))) (VP (VB come) (PP (IN from)))) (. ?)))', 'lemma': [(u'Where', u'where', u'WRB'), (u'did', u'do', u'VBD'), (u'the', u'the', u'DT'), (u'needle', u'needle', u'NN'), (u'the', u'the', u'DT'), (u'narrator', u'narrator', u'NN'), (u'stuck', u'stick', u'VBD'), (u'herself', u'herself', u'PRP'), (u'with', u'with', u'IN'), (u'come', u'come', u'VB'), (u'from', u'from', u'IN'), (u'?', u'?', u'.')]}, 'tokens': ['Where', 'did', 'the', 'needle', 'the', 'narrator', 'stuck', 'herself', 'with', 'come', 'from', '?']}, 'answers': [{'string': ' It was next to the lamp', 'parse': {'tree': '(ROOT (S (NP (PRP It)) (VP (VBD was) (ADJP (JJ next) (PP (TO to) (NP (DT the) (NN lamp)))))))', 'lemma': [(u'It', u'it', u'PRP'), (u'was', u'be', u'VBD'), (u'next', u'next', u'JJ'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'lamp', u'lamp', u'NN')]}, 'tokens': ['It', 'was', 'next', 'to', 'the', 'lamp']}, {'string': ' It was in the boot', 'parse': {'tree': '(ROOT (S (NP (PRP It)) (VP (VBD was) (PP (IN in) (NP (DT the) (NN boot))))))', 'lemma': [(u'It', u'it', u'PRP'), (u'was', u'be', u'VBD'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'boot', u'boot', u'NN')]}, 'tokens': ['It', 'was', 'in', 'the', 'boot']}, {'string': ' Mommy was using it to make the boot', 'parse': {'tree': '(ROOT (S (NP (NNP Mommy)) (VP (VBD was) (VP (VBG using) (S (NP (PRP it)) (VP (TO to) (VP (VB make) (NP (DT the) (NN boot)))))))))', 'lemma': [(u'Mommy', u'Mommy', u'NNP'), (u'was', u'be', u'VBD'), (u'using', u'use', u'VBG'), (u'it', u'it', u'PRP'), (u'to', u'to', u'TO'), (u'make', u'make', u'VB'), (u'the', u'the', u'DT'), (u'boot', u'boot', u'NN')]}, 'tokens': ['Mommy', 'was', 'using', 'it', 'to', 'make', 'the', 'boot']}, {'string': ' It was hidden on the ground', 'parse': {'tree': '(ROOT (S (NP (PRP It)) (VP (VBD was) (VP (VBN hidden) (PP (IN on) (NP (DT the) (NN ground)))))))', 'lemma': [(u'It', u'it', u'PRP'), (u'was', u'be', u'VBD'), (u'hidden', u'hide', u'VBN'), (u'on', u'on', u'IN'), (u'the', u'the', u'DT'), (u'ground', u'ground', u'NN')]}, 'tokens': ['It', 'was', 'hidden', 'on', 'the', 'ground']}], 'mode': 0}]}
{'sentences': [{'string': ' Marsha loves playing with her noodle friend.', 'parse': {'tree': '(ROOT (S (NP (NNP Marsha)) (VP (VBZ loves) (S (VP (VBG playing) (PP (IN with) (NP (PRP$ her) (JJ noodle) (NN friend)))))) (. .)))', 'lemma': [(u'Marsha', u'Marsha', u'NNP'), (u'loves', u'love', u'VBZ'), (u'playing', u'play', u'VBG'), (u'with', u'with', u'IN'), (u'her', u'she', u'PRP$'), (u'noodle', u'noodle', u'JJ'), (u'friend', u'friend', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Marsha', 'loves', 'playing', 'with', 'her', 'noodle', 'friend', '.']}, {'string': ' She had it for a long time so it is now a dark brown color.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBD had) (NP (PRP it)) (PP (IN for) (NP (NP (DT a) (JJ long) (NN time)) (SBAR (IN so) (S (NP (PRP it)) (VP (VBZ is) (ADVP (RB now)) (NP (DT a) (JJ dark) (JJ brown) (NN color)))))))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'had', u'have', u'VBD'), (u'it', u'it', u'PRP'), (u'for', u'for', u'IN'), (u'a', u'a', u'DT'), (u'long', u'long', u'JJ'), (u'time', u'time', u'NN'), (u'so', u'so', u'IN'), (u'it', u'it', u'PRP'), (u'is', u'be', u'VBZ'), (u'now', u'now', u'RB'), (u'a', u'a', u'DT'), (u'dark', u'dark', u'JJ'), (u'brown', u'brown', u'JJ'), (u'color', u'color', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'had', 'it', 'for', 'a', 'long', 'time', 'so', 'it', 'is', 'now', 'a', 'dark', 'brown', 'color', '.']}, {'string': ' When her mom first made it, it was white.', 'parse': {'tree': '(ROOT (S (SBAR (WHADVP (WRB When)) (S (NP (PRP$ her) (NN mom)) (ADVP (RB first)) (VP (VBD made) (NP (PRP it))))) (, ,) (NP (PRP it)) (VP (VBD was) (ADJP (JJ white))) (. .)))', 'lemma': [(u'When', u'when', u'WRB'), (u'her', u'she', u'PRP$'), (u'mom', u'mom', u'NN'), (u'first', u'first', u'RB'), (u'made', u'make', u'VBD'), (u'it', u'it', u'PRP'), (u',', u',', u','), (u'it', u'it', u'PRP'), (u'was', u'be', u'VBD'), (u'white', u'white', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['When', 'her', 'mom', 'first', 'made', 'it', ',', 'it', 'was', 'white', '.']}, {'string': ' The night she met her noodle friend was spaghetti night.', 'parse': {'tree': '(ROOT (S (NP (DT The) (NN night)) (NP (PRP she)) (VP (VBD met) (SBAR (S (NP (PRP$ her) (JJ noodle) (NN friend)) (VP (VBD was) (VP (VBN spaghetti) (NP (NN night))))))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'night', u'night', u'NN'), (u'she', u'she', u'PRP'), (u'met', u'meet', u'VBD'), (u'her', u'she', u'PRP$'), (u'noodle', u'noodle', u'JJ'), (u'friend', u'friend', u'NN'), (u'was', u'be', u'VBD'), (u'spaghetti', u'spaghetti', u'VBN'), (u'night', u'night', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'night', 'she', 'met', 'her', 'noodle', 'friend', 'was', 'spaghetti', 'night', '.']}, {'string': " Marsha 's favorite dinner was spaghetti, which happened to be every Tuesday night.", 'parse': {'tree': "(ROOT (S (NP (NP (NNP Marsha) (POS 's)) (JJ favorite) (NN dinner)) (VP (VBD was) (NP (NP (NNS spaghetti)) (, ,) (SBAR (WHNP (WDT which)) (S (VP (VBD happened) (S (VP (TO to) (VP (VB be) (NP (DT every) (NNP Tuesday) (NN night)))))))))) (. .)))", 'lemma': [(u'Marsha', u'Marsha', u'NNP'), (u"'s", u"'s", u'POS'), (u'favorite', u'favorite', u'JJ'), (u'dinner', u'dinner', u'NN'), (u'was', u'be', u'VBD'), (u'spaghetti', u'spaghetti', u'NNS'), (u',', u',', u','), (u'which', u'which', u'WDT'), (u'happened', u'happen', u'VBD'), (u'to', u'to', u'TO'), (u'be', u'be', u'VB'), (u'every', u'every', u'DT'), (u'Tuesday', u'Tuesday', u'NNP'), (u'night', u'night', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Marsha', "'s", 'favorite', 'dinner', 'was', 'spaghetti', ',', 'which', 'happened', 'to', 'be', 'every', 'Tuesday', 'night', '.']}, {'string': ' On one Tuesday, a piece of spaghetti fell on the kitchen floor.', 'parse': {'tree': '(ROOT (S (PP (IN On) (NP (CD one))) (NP (NNP Tuesday)) (, ,) (NP (NP (DT a) (NN piece)) (PP (IN of) (NP (NNS spaghetti)))) (VP (VBD fell) (PP (IN on) (NP (DT the) (NN kitchen) (NN floor)))) (. .)))', 'lemma': [(u'On', u'on', u'IN'), (u'one', u'one', u'CD'), (u'Tuesday', u'Tuesday', u'NNP'), (u',', u',', u','), (u'a', u'a', u'DT'), (u'piece', u'piece', u'NN'), (u'of', u'of', u'IN'), (u'spaghetti', u'spaghetti', u'NNS'), (u'fell', u'fall', u'VBD'), (u'on', u'on', u'IN'), (u'the', u'the', u'DT'), (u'kitchen', u'kitchen', u'NN'), (u'floor', u'floor', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['On', 'one', 'Tuesday', ',', 'a', 'piece', 'of', 'spaghetti', 'fell', 'on', 'the', 'kitchen', 'floor', '.']}, {'string': ' To Marsha, it looked like a stick man so she kept him.', 'parse': {'tree': '(ROOT (S (PP (TO To) (NP (NNP Marsha))) (, ,) (NP (PRP it)) (VP (VBD looked) (PP (IN like) (NP (DT a) (NN stick) (NN man))) (SBAR (IN so) (S (NP (PRP she)) (VP (VBD kept) (NP (PRP him)))))) (. .)))', 'lemma': [(u'To', u'to', u'TO'), (u'Marsha', u'Marsha', u'NNP'), (u',', u',', u','), (u'it', u'it', u'PRP'), (u'looked', u'look', u'VBD'), (u'like', u'like', u'IN'), (u'a', u'a', u'DT'), (u'stick', u'stick', u'NN'), (u'man', u'man', u'NN'), (u'so', u'so', u'IN'), (u'she', u'she', u'PRP'), (u'kept', u'keep', u'VBD'), (u'him', u'he', u'PRP'), (u'.', u'.', u'.')]}, 'tokens': ['To', 'Marsha', ',', 'it', 'looked', 'like', 'a', 'stick', 'man', 'so', 'she', 'kept', 'him', '.']}, {'string': ' She named her new noodle friend Joey and took him everywhere she went.', 'parse': {'tree': '(ROOT (S (S (NP (PRP She)) (VP (VP (VBD named) (NP (PRP$ her) (JJ new) (NN noodle) (NN friend)) (NP (NNP Joey))) (CC and) (VP (VBD took) (NP (PRP him)) (ADVP (RB everywhere))))) (NP (PRP she)) (VP (VBD went)) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'named', u'name', u'VBD'), (u'her', u'she', u'PRP$'), (u'new', u'new', u'JJ'), (u'noodle', u'noodle', u'NN'), (u'friend', u'friend', u'NN'), (u'Joey', u'Joey', u'NNP'), (u'and', u'and', u'CC'), (u'took', u'take', u'VBD'), (u'him', u'he', u'PRP'), (u'everywhere', u'everywhere', u'RB'), (u'she', u'she', u'PRP'), (u'went', u'go', u'VBD'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'named', 'her', 'new', 'noodle', 'friend', 'Joey', 'and', 'took', 'him', 'everywhere', 'she', 'went', '.']}, {'string': " Sometimes Joey gets a little dried out so Marsha 's mom told her to soak him in water every few days.", 'parse': {'tree': "(ROOT (S (ADVP (RB Sometimes)) (NP (NNP Joey)) (VP (VBZ gets) (SBAR (S (NP (DT a) (JJ little)) (VP (VBD dried) (PRT (RP out)) (SBAR (IN so) (S (NP (NP (NNP Marsha) (POS 's)) (NN mom)) (VP (VBD told) (S (NP (PRP her)) (VP (TO to) (VP (VB soak) (NP (PRP him)) (PP (IN in) (NP (NN water))) (NP (DT every) (JJ few) (NNS days)))))))))))) (. .)))", 'lemma': [(u'Sometimes', u'sometimes', u'RB'), (u'Joey', u'Joey', u'NNP'), (u'gets', u'get', u'VBZ'), (u'a', u'a', u'DT'), (u'little', u'little', u'JJ'), (u'dried', u'dry', u'VBD'), (u'out', u'out', u'RP'), (u'so', u'so', u'IN'), (u'Marsha', u'Marsha', u'NNP'), (u"'s", u"'s", u'POS'), (u'mom', u'mom', u'NN'), (u'told', u'tell', u'VBD'), (u'her', u'she', u'PRP'), (u'to', u'to', u'TO'), (u'soak', u'soak', u'VB'), (u'him', u'he', u'PRP'), (u'in', u'in', u'IN'), (u'water', u'water', u'NN'), (u'every', u'every', u'DT'), (u'few', u'few', u'JJ'), (u'days', u'day', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['Sometimes', 'Joey', 'gets', 'a', 'little', 'dried', 'out', 'so', 'Marsha', "'s", 'mom', 'told', 'her', 'to', 'soak', 'him', 'in', 'water', 'every', 'few', 'days', '.']}, {'string': ' There were a couple times that the family dog, Mika, has tried to take Joey from Marsha and eat him!', 'parse': {'tree': '(ROOT (S (NP (EX There)) (VP (VBD were) (NP (DT a) (NN couple) (NNS times)) (SBAR (IN that) (S (NP (NP (DT the) (NN family) (NN dog)) (, ,) (NP (NNP Mika)) (, ,)) (VP (VBZ has) (VP (VBN tried) (S (VP (TO to) (VP (VP (VB take) (NP (NNP Joey)) (PP (IN from) (NP (NNP Marsha)))) (CC and) (VP (VB eat) (NP (PRP him))))))))))) (. !)))', 'lemma': [(u'There', u'there', u'EX'), (u'were', u'be', u'VBD'), (u'a', u'a', u'DT'), (u'couple', u'couple', u'NN'), (u'times', u'time', u'NNS'), (u'that', u'that', u'IN'), (u'the', u'the', u'DT'), (u'family', u'family', u'NN'), (u'dog', u'dog', u'NN'), (u',', u',', u','), (u'Mika', u'Mika', u'NNP'), (u',', u',', u','), (u'has', u'have', u'VBZ'), (u'tried', u'try', u'VBN'), (u'to', u'to', u'TO'), (u'take', u'take', u'VB'), (u'Joey', u'Joey', u'NNP'), (u'from', u'from', u'IN'), (u'Marsha', u'Marsha', u'NNP'), (u'and', u'and', u'CC'), (u'eat', u'eat', u'VB'), (u'him', u'he', u'PRP'), (u'!', u'!', u'.')]}, 'tokens': ['There', 'were', 'a', 'couple', 'times', 'that', 'the', 'family', 'dog', ',', 'Mika', ',', 'has', 'tried', 'to', 'take', 'Joey', 'from', 'Marsha', 'and', 'eat', 'him', '!']}, {'string': ' So from now on, Marsha takes extra special care to make sure Joey is safe and sound at all times.', 'parse': {'tree': '(ROOT (S (ADVP (IN So) (PP (IN from) (ADVP (RB now) (RB on)))) (, ,) (NP (NNP Marsha)) (VP (VBZ takes) (NP (JJ extra) (JJ special) (NN care) (S (VP (TO to) (VP (VB make) (ADJP (JJ sure) (SBAR (S (NP (NNP Joey)) (VP (VBZ is) (ADJP (JJ safe) (CC and) (JJ sound)) (PP (IN at) (NP (DT all) (NNS times)))))))))))) (. .)))', 'lemma': [(u'So', u'so', u'IN'), (u'from', u'from', u'IN'), (u'now', u'now', u'RB'), (u'on', u'on', u'RB'), (u',', u',', u','), (u'Marsha', u'Marsha', u'NNP'), (u'takes', u'take', u'VBZ'), (u'extra', u'extra', u'JJ'), (u'special', u'special', u'JJ'), (u'care', u'care', u'NN'), (u'to', u'to', u'TO'), (u'make', u'make', u'VB'), (u'sure', u'sure', u'JJ'), (u'Joey', u'Joey', u'NNP'), (u'is', u'be', u'VBZ'), (u'safe', u'safe', u'JJ'), (u'and', u'and', u'CC'), (u'sound', u'sound', u'JJ'), (u'at', u'at', u'IN'), (u'all', u'all', u'DT'), (u'times', u'time', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['So', 'from', 'now', 'on', ',', 'Marsha', 'takes', 'extra', 'special', 'care', 'to', 'make', 'sure', 'Joey', 'is', 'safe', 'and', 'sound', 'at', 'all', 'times', '.']}, {'string': ' During the day she keeps him in a plastic bag in her pocket.', 'parse': {'tree': '(ROOT (S (PP (IN During) (NP (DT the) (NN day))) (NP (PRP she)) (VP (VBZ keeps) (NP (PRP him)) (PP (IN in) (NP (NP (DT a) (JJ plastic) (NN bag)) (PP (IN in) (NP (PRP$ her) (NN pocket)))))) (. .)))', 'lemma': [(u'During', u'during', u'IN'), (u'the', u'the', u'DT'), (u'day', u'day', u'NN'), (u'she', u'she', u'PRP'), (u'keeps', u'keep', u'VBZ'), (u'him', u'he', u'PRP'), (u'in', u'in', u'IN'), (u'a', u'a', u'DT'), (u'plastic', u'plastic', u'JJ'), (u'bag', u'bag', u'NN'), (u'in', u'in', u'IN'), (u'her', u'she', u'PRP$'), (u'pocket', u'pocket', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['During', 'the', 'day', 'she', 'keeps', 'him', 'in', 'a', 'plastic', 'bag', 'in', 'her', 'pocket', '.']}, {'string': ' At night, she puts him under her pillow.', 'parse': {'tree': '(ROOT (S (PP (IN At) (NP (NN night))) (, ,) (NP (PRP she)) (VP (VBZ puts) (NP (PRP him)) (PP (IN under) (NP (PRP$ her) (NN pillow)))) (. .)))', 'lemma': [(u'At', u'at', u'IN'), (u'night', u'night', u'NN'), (u',', u',', u','), (u'she', u'she', u'PRP'), (u'puts', u'put', u'VBZ'), (u'him', u'he', u'PRP'), (u'under', u'under', u'IN'), (u'her', u'she', u'PRP$'), (u'pillow', u'pillow', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['At', 'night', ',', 'she', 'puts', 'him', 'under', 'her', 'pillow', '.']}, {'string': ' She loves Joey and wants to always be friends with him.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VP (VBZ loves) (NP (NNP Joey))) (CC and) (VP (VBZ wants) (S (VP (TO to) (ADVP (RB always)) (VP (VB be) (NP (NP (NNS friends)) (PP (IN with) (NP (PRP him))))))))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'loves', u'love', u'VBZ'), (u'Joey', u'Joey', u'NNP'), (u'and', u'and', u'CC'), (u'wants', u'want', u'VBZ'), (u'to', u'to', u'TO'), (u'always', u'always', u'RB'), (u'be', u'be', u'VB'), (u'friends', u'friend', u'NNS'), (u'with', u'with', u'IN'), (u'him', u'he', u'PRP'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'loves', 'Joey', 'and', 'wants', 'to', 'always', 'be', 'friends', 'with', 'him', '.']}], 'questions': [{'question': {'string': " What is Marsha 's noodle made out of?", 'parse': {'tree': "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (NNP Marsha) (POS 's)) (NN noodle)) (VP (VBN made) (PRT (RP out)) (PP (IN of)))) (. ?)))", 'lemma': [(u'What', u'what', u'WP'), (u'is', u'be', u'VBZ'), (u'Marsha', u'Marsha', u'NNP'), (u"'s", u"'s", u'POS'), (u'noodle', u'noodle', u'NN'), (u'made', u'make', u'VBN'), (u'out', u'out', u'RP'), (u'of', u'of', u'IN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'is', 'Marsha', "'s", 'noodle', 'made', 'out', 'of', '?']}, 'answers': [{'string': ' Spaghetti', 'parse': {'tree': '(ROOT (NP (NNP Spaghetti)))', 'lemma': [(u'Spaghetti', u'Spaghetti', u'NNP')]}, 'tokens': ['Spaghetti']}, {'string': ' plastic bag', 'parse': {'tree': '(ROOT (NP (JJ plastic) (NN bag)))', 'lemma': [(u'plastic', u'plastic', u'JJ'), (u'bag', u'bag', u'NN')]}, 'tokens': ['plastic', 'bag']}, {'string': ' mom', 'parse': {'tree': '(ROOT (NP (NN mom)))', 'lemma': [(u'mom', u'mom', u'NN')]}, 'tokens': ['mom']}, {'string': ' Macaroni', 'parse': {'tree': '(ROOT (NP (NNP Macaroni)))', 'lemma': [(u'Macaroni', u'Macaroni', u'NNP')]}, 'tokens': ['Macaroni']}], 'mode': 1}, {'question': {'string': ' Who is Joey?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP Who)) (SQ (VBZ is) (NP (NNP Joey))) (. ?)))', 'lemma': [(u'Who', u'who', u'WP'), (u'is', u'be', u'VBZ'), (u'Joey', u'Joey', u'NNP'), (u'?', u'?', u'.')]}, 'tokens': ['Who', 'is', 'Joey', '?']}, 'answers': [{'string': " Marsha 's dog", 'parse': {'tree': "(ROOT (NP (NP (NNP Marsha) (POS 's)) (NN dog)))", 'lemma': [(u'Marsha', u'Marsha', u'NNP'), (u"'s", u"'s", u'POS'), (u'dog', u'dog', u'NN')]}, 'tokens': ['Marsha', "'s", 'dog']}, {'string': " Marsha 's friend", 'parse': {'tree': "(ROOT (NP (NP (NNP Marsha) (POS 's)) (NN friend)))", 'lemma': [(u'Marsha', u'Marsha', u'NNP'), (u"'s", u"'s", u'POS'), (u'friend', u'friend', u'NN')]}, 'tokens': ['Marsha', "'s", 'friend']}, {'string': " Marsha 's mom", 'parse': {'tree': "(ROOT (NP (NP (NNP Marsha) (POS 's)) (NN mom)))", 'lemma': [(u'Marsha', u'Marsha', u'NNP'), (u"'s", u"'s", u'POS'), (u'mom', u'mom', u'NN')]}, 'tokens': ['Marsha', "'s", 'mom']}, {'string': " Marsha 's dad", 'parse': {'tree': "(ROOT (NP (NP (NNP Marsha) (POS 's)) (NN dad)))", 'lemma': [(u'Marsha', u'Marsha', u'NNP'), (u"'s", u"'s", u'POS'), (u'dad', u'dad', u'NN')]}, 'tokens': ['Marsha', "'s", 'dad']}], 'mode': 1}, {'question': {'string': ' Why is Tuesday night special for Marsha?', 'parse': {'tree': '(ROOT (SBARQ (WHADVP (WRB Why)) (SQ (VBZ is) (NP (NP (NNP Tuesday) (NN night) (NN special)) (PP (IN for) (NP (NNP Marsha))))) (. ?)))', 'lemma': [(u'Why', u'why', u'WRB'), (u'is', u'be', u'VBZ'), (u'Tuesday', u'Tuesday', u'NNP'), (u'night', u'night', u'NN'), (u'special', u'special', u'NN'), (u'for', u'for', u'IN'), (u'Marsha', u'Marsha', u'NNP'), (u'?', u'?', u'.')]}, 'tokens': ['Why', 'is', 'Tuesday', 'night', 'special', 'for', 'Marsha', '?']}, 'answers': [{'string': ' Every Tuesday Marsha meets a new friend', 'parse': {'tree': '(ROOT (S (NP (DT Every) (NNP Tuesday) (NNP Marsha)) (VP (VBZ meets) (NP (DT a) (JJ new) (NN friend)))))', 'lemma': [(u'Every', u'every', u'DT'), (u'Tuesday', u'Tuesday', u'NNP'), (u'Marsha', u'Marsha', u'NNP'), (u'meets', u'meet', u'VBZ'), (u'a', u'a', u'DT'), (u'new', u'new', u'JJ'), (u'friend', u'friend', u'NN')]}, 'tokens': ['Every', 'Tuesday', 'Marsha', 'meets', 'a', 'new', 'friend']}, {'string': " It 's spaghetti night and it 's Marsha 's favorite dinner", 'parse': {'tree': "(ROOT (NP (S (S (NP (PRP It)) (VP (VBZ 's) (VP (VBG spaghetti) (NP (NN night))))) (CC and) (S (NP (PRP it)) (VP (VBZ 's) (NP (NP (NNP Marsha) (POS 's)) (JJ favorite) (NN dinner)))))))", 'lemma': [(u'It', u'it', u'PRP'), (u"'s", u'be', u'VBZ'), (u'spaghetti', u'spaghetti', u'VBG'), (u'night', u'night', u'NN'), (u'and', u'and', u'CC'), (u'it', u'it', u'PRP'), (u"'s", u'be', u'VBZ'), (u'Marsha', u'Marsha', u'NNP'), (u"'s", u"'s", u'POS'), (u'favorite', u'favorite', u'JJ'), (u'dinner', u'dinner', u'NN')]}, 'tokens': ['It', "'s", 'spaghetti', 'night', 'and', 'it', "'s", 'Marsha', "'s", 'favorite', 'dinner']}, {'string': " It 's Macaroni and Cheese night and it 's Marsha 's favorite dinner", 'parse': {'tree': "(ROOT (S (NP (PRP It)) (VP (VBZ 's) (SBAR (S (S (NP (NNP Macaroni) (CC and) (NNP Cheese)) (NP (NN night))) (CC and) (S (NP (PRP it)) (VP (VBZ 's) (NP (NP (NNP Marsha) (POS 's)) (JJ favorite) (NN dinner)))))))))", 'lemma': [(u'It', u'it', u'PRP'), (u"'s", u'be', u'VBZ'), (u'Macaroni', u'Macaroni', u'NNP'), (u'and', u'and', u'CC'), (u'Cheese', u'Cheese', u'NNP'), (u'night', u'night', u'NN'), (u'and', u'and', u'CC'), (u'it', u'it', u'PRP'), (u"'s", u'be', u'VBZ'), (u'Marsha', u'Marsha', u'NNP'), (u"'s", u"'s", u'POS'), (u'favorite', u'favorite', u'JJ'), (u'dinner', u'dinner', u'NN')]}, 'tokens': ['It', "'s", 'Macaroni', 'and', 'Cheese', 'night', 'and', 'it', "'s", 'Marsha', "'s", 'favorite', 'dinner']}, {'string': " Marsha does n't go to school on Tuesday", 'parse': {'tree': "(ROOT (S (NP (NNP Marsha)) (VP (VBZ does) (RB n't) (VP (VB go) (PP (TO to) (NP (NN school))) (PP (IN on) (NP (NNP Tuesday)))))))", 'lemma': [(u'Marsha', u'Marsha', u'NNP'), (u'does', u'do', u'VBZ'), (u"n't", u'not', u'RB'), (u'go', u'go', u'VB'), (u'to', u'to', u'TO'), (u'school', u'school', u'NN'), (u'on', u'on', u'IN'), (u'Tuesday', u'Tuesday', u'NNP')]}, 'tokens': ['Marsha', 'does', "n't", 'go', 'to', 'school', 'on', 'Tuesday']}], 'mode': 0}, {'question': {'string': ' Where did Marsha first meet Joey and what day was it', 'parse': {'tree': '(ROOT (SBARQ (SBARQ (WHADVP (WRB Where)) (SQ (VBD did) (NP (NNP Marsha)) (VP (ADVP (RB first)) (VB meet) (NP (NNP Joey))))) (CC and) (SBARQ (WHNP (WDT what) (NN day)) (SQ (VBD was) (NP (PRP it))))))', 'lemma': [(u'Where', u'where', u'WRB'), (u'did', u'do', u'VBD'), (u'Marsha', u'Marsha', u'NNP'), (u'first', u'first', u'RB'), (u'meet', u'meet', u'VB'), (u'Joey', u'Joey', u'NNP'), (u'and', u'and', u'CC'), (u'what', u'what', u'WDT'), (u'day', u'day', u'NN'), (u'was', u'be', u'VBD'), (u'it', u'it', u'PRP')]}, 'tokens': ['Where', 'did', 'Marsha', 'first', 'meet', 'Joey', 'and', 'what', 'day', 'was', 'it']}, 'answers': [{'string': ' On the kitchen floor on Tuesday', 'parse': {'tree': '(ROOT (PP (IN On) (NP (NP (DT the) (NN kitchen) (NN floor)) (PP (IN on) (NP (NNP Tuesday))))))', 'lemma': [(u'On', u'on', u'IN'), (u'the', u'the', u'DT'), (u'kitchen', u'kitchen', u'NN'), (u'floor', u'floor', u'NN'), (u'on', u'on', u'IN'), (u'Tuesday', u'Tuesday', u'NNP')]}, 'tokens': ['On', 'the', 'kitchen', 'floor', 'on', 'Tuesday']}, {'string': ' In a plastic bag on Tuesday', 'parse': {'tree': '(ROOT (PP (IN In) (NP (NP (DT a) (JJ plastic) (NN bag)) (PP (IN on) (NP (NNP Tuesday))))))', 'lemma': [(u'In', u'in', u'IN'), (u'a', u'a', u'DT'), (u'plastic', u'plastic', u'JJ'), (u'bag', u'bag', u'NN'), (u'on', u'on', u'IN'), (u'Tuesday', u'Tuesday', u'NNP')]}, 'tokens': ['In', 'a', 'plastic', 'bag', 'on', 'Tuesday']}, {'string': ' Under her pillow on Friday', 'parse': {'tree': '(ROOT (PP (IN Under) (NP (NP (PRP$ her) (NN pillow)) (PP (IN on) (NP (NNP Friday))))))', 'lemma': [(u'Under', u'under', u'IN'), (u'her', u'she', u'PRP$'), (u'pillow', u'pillow', u'NN'), (u'on', u'on', u'IN'), (u'Friday', u'Friday', u'NNP')]}, 'tokens': ['Under', 'her', 'pillow', 'on', 'Friday']}, {'string': ' In her backyard on Monday', 'parse': {'tree': '(ROOT (PP (IN In) (NP (NP (PRP$ her) (NN backyard)) (PP (IN on) (NP (NNP Monday))))))', 'lemma': [(u'In', u'in', u'IN'), (u'her', u'she', u'PRP$'), (u'backyard', u'backyard', u'NN'), (u'on', u'on', u'IN'), (u'Monday', u'Monday', u'NNP')]}, 'tokens': ['In', 'her', 'backyard', 'on', 'Monday']}], 'mode': 0}]}
{'sentences': [{'string': ' There once lived an elf who was a stinker.', 'parse': {'tree': '(ROOT (S (NP (EX There)) (ADVP (RB once)) (VP (VBD lived) (NP (NP (DT an) (NN elf)) (SBAR (WHNP (WP who)) (S (VP (VBD was) (NP (DT a) (NN stinker))))))) (. .)))', 'lemma': [(u'There', u'there', u'EX'), (u'once', u'once', u'RB'), (u'lived', u'live', u'VBD'), (u'an', u'a', u'DT'), (u'elf', u'elf', u'NN'), (u'who', u'who', u'WP'), (u'was', u'be', u'VBD'), (u'a', u'a', u'DT'), (u'stinker', u'stinker', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['There', 'once', 'lived', 'an', 'elf', 'who', 'was', 'a', 'stinker', '.']}, {'string': ' He was real mean to everyone around.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD was) (ADJP (JJ real) (SBAR (S (VP (VBP mean) (PP (TO to) (NP (NN everyone))) (ADVP (RB around))))))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'was', u'be', u'VBD'), (u'real', u'real', u'JJ'), (u'mean', u'mean', u'VBP'), (u'to', u'to', u'TO'), (u'everyone', u'everyone', u'NN'), (u'around', u'around', u'RB'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'was', 'real', 'mean', 'to', 'everyone', 'around', '.']}, {'string': " He 'd throw pies at girls.", 'parse': {'tree': "(ROOT (S (NP (PRP He)) (VP (MD 'd) (VP (VB throw) (NP (NNS pies)) (PP (IN at) (NP (NNS girls))))) (. .)))", 'lemma': [(u'He', u'he', u'PRP'), (u"'d", u'would', u'MD'), (u'throw', u'throw', u'VB'), (u'pies', u'pie', u'NNS'), (u'at', u'at', u'IN'), (u'girls', u'girl', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['He', "'d", 'throw', 'pies', 'at', 'girls', '.']}, {'string': " He 'd put soap in the fridge.", 'parse': {'tree': "(ROOT (S (NP (PRP He)) (VP (MD 'd) (VP (VB put) (NP (NN soap)) (PP (IN in) (NP (DT the) (NN fridge))))) (. .)))", 'lemma': [(u'He', u'he', u'PRP'), (u"'d", u'would', u'MD'), (u'put', u'put', u'VB'), (u'soap', u'soap', u'NN'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'fridge', u'fridge', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['He', "'d", 'put', 'soap', 'in', 'the', 'fridge', '.']}, {'string': " He 'd give the queen shorts as birthday presents.", 'parse': {'tree': "(ROOT (S (NP (PRP He)) (VP (MD 'd) (VP (VB give) (NP (DT the) (NN queen)) (NP (NP (NNS shorts)) (PP (IN as) (NP (NN birthday) (NNS presents)))))) (. .)))", 'lemma': [(u'He', u'he', u'PRP'), (u"'d", u'would', u'MD'), (u'give', u'give', u'VB'), (u'the', u'the', u'DT'), (u'queen', u'queen', u'NN'), (u'shorts', u'shorts', u'NNS'), (u'as', u'as', u'IN'), (u'birthday', u'birthday', u'NN'), (u'presents', u'present', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['He', "'d", 'give', 'the', 'queen', 'shorts', 'as', 'birthday', 'presents', '.']}, {'string': ' No one liked the elf.', 'parse': {'tree': '(ROOT (S (NP (DT No) (NN one)) (VP (VBD liked) (NP (DT the) (NN elf))) (. .)))', 'lemma': [(u'No', u'no', u'DT'), (u'one', u'one', u'NN'), (u'liked', u'like', u'VBD'), (u'the', u'the', u'DT'), (u'elf', u'elf', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['No', 'one', 'liked', 'the', 'elf', '.']}, {'string': ' One day he was planning a way to make someone feel sad.', 'parse': {'tree': '(ROOT (S (NP (NP (CD One) (NN day)) (SBAR (S (NP (PRP he)) (VP (VBD was) (VP (VBG planning) (NP (DT a) (NN way) (S (VP (TO to) (VP (VB make) (NP (NN someone))))))))))) (VP (VBP feel) (ADJP (JJ sad))) (. .)))', 'lemma': [(u'One', u'one', u'CD'), (u'day', u'day', u'NN'), (u'he', u'he', u'PRP'), (u'was', u'be', u'VBD'), (u'planning', u'plan', u'VBG'), (u'a', u'a', u'DT'), (u'way', u'way', u'NN'), (u'to', u'to', u'TO'), (u'make', u'make', u'VB'), (u'someone', u'someone', u'NN'), (u'feel', u'feel', u'VBP'), (u'sad', u'sad', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['One', 'day', 'he', 'was', 'planning', 'a', 'way', 'to', 'make', 'someone', 'feel', 'sad', '.']}, {'string': " He thought to draw on someone 's head.", 'parse': {'tree': "(ROOT (S (NP (PRP He)) (VP (VBD thought) (S (VP (TO to) (VP (VB draw) (PP (IN on) (NP (NP (NN someone) (POS 's)) (NN head))))))) (. .)))", 'lemma': [(u'He', u'he', u'PRP'), (u'thought', u'think', u'VBD'), (u'to', u'to', u'TO'), (u'draw', u'draw', u'VB'), (u'on', u'on', u'IN'), (u'someone', u'someone', u'NN'), (u"'s", u"'s", u'POS'), (u'head', u'head', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'thought', 'to', 'draw', 'on', 'someone', "'s", 'head', '.']}, {'string': ' He went looking for someone who was asleep so he could draw on them.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD went) (S (VP (VBG looking) (PP (IN for) (NP (NP (NN someone)) (SBAR (WHNP (WP who)) (S (VP (VBD was) (ADJP (RB asleep)) (SBAR (IN so) (S (NP (PRP he)) (VP (MD could) (VP (VB draw) (PP (IN on) (NP (PRP them))))))))))))))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'went', u'go', u'VBD'), (u'looking', u'look', u'VBG'), (u'for', u'for', u'IN'), (u'someone', u'someone', u'NN'), (u'who', u'who', u'WP'), (u'was', u'be', u'VBD'), (u'asleep', u'asleep', u'RB'), (u'so', u'so', u'IN'), (u'he', u'he', u'PRP'), (u'could', u'could', u'MD'), (u'draw', u'draw', u'VB'), (u'on', u'on', u'IN'), (u'them', u'they', u'PRP'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'went', 'looking', 'for', 'someone', 'who', 'was', 'asleep', 'so', 'he', 'could', 'draw', 'on', 'them', '.']}, {'string': ' He found a boy laying under a tree.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD found) (NP (NP (DT a) (NN boy)) (VP (VBG laying) (PP (IN under) (NP (DT a) (NN tree)))))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'found', u'find', u'VBD'), (u'a', u'a', u'DT'), (u'boy', u'boy', u'NN'), (u'laying', u'lay', u'VBG'), (u'under', u'under', u'IN'), (u'a', u'a', u'DT'), (u'tree', u'tree', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'found', 'a', 'boy', 'laying', 'under', 'a', 'tree', '.']}, {'string': ' He walked right up to him with his magic marker.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD walked) (ADVP (ADVP (RB right) (RB up)) (PP (TO to) (NP (PRP him)))) (PP (IN with) (NP (PRP$ his) (JJ magic) (NN marker)))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'walked', u'walk', u'VBD'), (u'right', u'right', u'RB'), (u'up', u'up', u'RB'), (u'to', u'to', u'TO'), (u'him', u'he', u'PRP'), (u'with', u'with', u'IN'), (u'his', u'he', u'PRP$'), (u'magic', u'magic', u'JJ'), (u'marker', u'marker', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'walked', 'right', 'up', 'to', 'him', 'with', 'his', 'magic', 'marker', '.']}, {'string': " He drew a giant house on the boy 's forehead.", 'parse': {'tree': "(ROOT (S (NP (PRP He)) (VP (VBD drew) (NP (DT a) (JJ giant) (NN house)) (PP (IN on) (NP (NP (DT the) (NN boy) (POS 's)) (NN forehead)))) (. .)))", 'lemma': [(u'He', u'he', u'PRP'), (u'drew', u'draw', u'VBD'), (u'a', u'a', u'DT'), (u'giant', u'giant', u'JJ'), (u'house', u'house', u'NN'), (u'on', u'on', u'IN'), (u'the', u'the', u'DT'), (u'boy', u'boy', u'NN'), (u"'s", u"'s", u'POS'), (u'forehead', u'forehead', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'drew', 'a', 'giant', 'house', 'on', 'the', 'boy', "'s", 'forehead', '.']}, {'string': ' The boy woke up and pushed the elf off of him.', 'parse': {'tree': '(ROOT (S (NP (DT The) (NN boy)) (VP (VP (VBD woke) (PRT (RP up))) (CC and) (VP (VBD pushed) (NP (DT the) (NN elf)) (PRT (RP off)) (PP (IN of) (NP (PRP him))))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'boy', u'boy', u'NN'), (u'woke', u'wake', u'VBD'), (u'up', u'up', u'RP'), (u'and', u'and', u'CC'), (u'pushed', u'push', u'VBD'), (u'the', u'the', u'DT'), (u'elf', u'elf', u'NN'), (u'off', u'off', u'RP'), (u'of', u'of', u'IN'), (u'him', u'he', u'PRP'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'boy', 'woke', 'up', 'and', 'pushed', 'the', 'elf', 'off', 'of', 'him', '.']}, {'string': ' The boy knew the elf had done something bad to him so he ran all the way home without looking back.', 'parse': {'tree': '(ROOT (S (NP (DT The) (NN boy)) (VP (VBD knew) (SBAR (S (NP (DT the) (NN elf)) (VP (VBD had) (VP (VBN done) (S (NP (NN something)) (ADJP (JJ bad) (PP (TO to) (NP (PRP him))))) (SBAR (IN so) (S (NP (PRP he)) (VP (VBD ran) (NP (PDT all) (DT the) (NN way) (NN home)) (PP (IN without) (S (VP (VBG looking) (ADVP (RB back))))))))))))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'boy', u'boy', u'NN'), (u'knew', u'know', u'VBD'), (u'the', u'the', u'DT'), (u'elf', u'elf', u'NN'), (u'had', u'have', u'VBD'), (u'done', u'do', u'VBN'), (u'something', u'something', u'NN'), (u'bad', u'bad', u'JJ'), (u'to', u'to', u'TO'), (u'him', u'he', u'PRP'), (u'so', u'so', u'IN'), (u'he', u'he', u'PRP'), (u'ran', u'run', u'VBD'), (u'all', u'all', u'PDT'), (u'the', u'the', u'DT'), (u'way', u'way', u'NN'), (u'home', u'home', u'NN'), (u'without', u'without', u'IN'), (u'looking', u'look', u'VBG'), (u'back', u'back', u'RB'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'boy', 'knew', 'the', 'elf', 'had', 'done', 'something', 'bad', 'to', 'him', 'so', 'he', 'ran', 'all', 'the', 'way', 'home', 'without', 'looking', 'back', '.']}, {'string': ' The elf felt real good about himself.', 'parse': {'tree': '(ROOT (S (NP (DT The) (NN elf)) (VP (VBD felt) (ADJP (RB real) (JJ good)) (PP (IN about) (NP (PRP himself)))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'elf', u'elf', u'NN'), (u'felt', u'feel', u'VBD'), (u'real', u'real', u'RB'), (u'good', u'good', u'JJ'), (u'about', u'about', u'IN'), (u'himself', u'himself', u'PRP'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'elf', 'felt', 'real', 'good', 'about', 'himself', '.']}, {'string': ' He had mad the boy sad!', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD had) (VP (VBN mad) (S (NP (DT the) (NN boy)) (ADJP (JJ sad))))) (. !)))', 'lemma': [(u'He', u'he', u'PRP'), (u'had', u'have', u'VBD'), (u'mad', u'mad', u'VBN'), (u'the', u'the', u'DT'), (u'boy', u'boy', u'NN'), (u'sad', u'sad', u'JJ'), (u'!', u'!', u'.')]}, 'tokens': ['He', 'had', 'mad', 'the', 'boy', 'sad', '!']}, {'string': ' He skipped off and took a swim in a nearby pond.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VP (VBD skipped) (PRT (RP off))) (CC and) (VP (VBD took) (NP (DT a) (NN swim)) (PP (IN in) (NP (DT a) (JJ nearby) (NN pond))))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'skipped', u'skip', u'VBD'), (u'off', u'off', u'RP'), (u'and', u'and', u'CC'), (u'took', u'take', u'VBD'), (u'a', u'a', u'DT'), (u'swim', u'swim', u'NN'), (u'in', u'in', u'IN'), (u'a', u'a', u'DT'), (u'nearby', u'nearby', u'JJ'), (u'pond', u'pond', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'skipped', 'off', 'and', 'took', 'a', 'swim', 'in', 'a', 'nearby', 'pond', '.']}, {'string': ' The boy never talked to the elf again after that.', 'parse': {'tree': '(ROOT (S (NP (DT The) (NN boy)) (ADVP (RB never)) (VP (VBD talked) (PP (TO to) (NP (DT the) (NN elf))) (PP (ADVP (RB again)) (IN after) (NP (DT that)))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'boy', u'boy', u'NN'), (u'never', u'never', u'RB'), (u'talked', u'talk', u'VBD'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'elf', u'elf', u'NN'), (u'again', u'again', u'RB'), (u'after', u'after', u'IN'), (u'that', u'that', u'DT'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'boy', 'never', 'talked', 'to', 'the', 'elf', 'again', 'after', 'that', '.']}, {'string': " The elf did n't care and went on annoying people.", 'parse': {'tree': "(ROOT (S (NP (DT The) (NN elf)) (VP (VP (VBD did) (RB n't) (VP (VB care))) (CC and) (VP (VBD went) (PP (IN on) (NP (JJ annoying) (NNS people))))) (. .)))", 'lemma': [(u'The', u'the', u'DT'), (u'elf', u'elf', u'NN'), (u'did', u'do', u'VBD'), (u"n't", u'not', u'RB'), (u'care', u'care', u'VB'), (u'and', u'and', u'CC'), (u'went', u'go', u'VBD'), (u'on', u'on', u'IN'), (u'annoying', u'annoying', u'JJ'), (u'people', u'people', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'elf', 'did', "n't", 'care', 'and', 'went', 'on', 'annoying', 'people', '.']}], 'questions': [{'question': {'string': ' Why did the elf go swimming in a pond?', 'parse': {'tree': '(ROOT (SBARQ (WHADVP (WRB Why)) (SQ (VBD did) (NP (DT the) (NN elf)) (VP (VB go) (NP (NN swimming)) (PP (IN in) (NP (DT a) (NN pond))))) (. ?)))', 'lemma': [(u'Why', u'why', u'WRB'), (u'did', u'do', u'VBD'), (u'the', u'the', u'DT'), (u'elf', u'elf', u'NN'), (u'go', u'go', u'VB'), (u'swimming', u'swimming', u'NN'), (u'in', u'in', u'IN'), (u'a', u'a', u'DT'), (u'pond', u'pond', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['Why', 'did', 'the', 'elf', 'go', 'swimming', 'in', 'a', 'pond', '?']}, 'answers': [{'string': ' He put soap in the fridge.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD put) (NP (NN soap)) (PP (IN in) (NP (DT the) (NN fridge)))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'put', u'put', u'VBD'), (u'soap', u'soap', u'NN'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'fridge', u'fridge', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'put', 'soap', 'in', 'the', 'fridge', '.']}, {'string': ' He was nice to everyone.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD was) (ADJP (JJ nice) (PP (TO to) (NP (NN everyone))))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'was', u'be', u'VBD'), (u'nice', u'nice', u'JJ'), (u'to', u'to', u'TO'), (u'everyone', u'everyone', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'was', 'nice', 'to', 'everyone', '.']}, {'string': ' He had annoyed the boy and made him sad.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD had) (VP (VP (VBN annoyed) (NP (DT the) (NN boy))) (CC and) (VP (VBN made) (S (NP (PRP him)) (ADJP (JJ sad)))))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'had', u'have', u'VBD'), (u'annoyed', u'annoy', u'VBN'), (u'the', u'the', u'DT'), (u'boy', u'boy', u'NN'), (u'and', u'and', u'CC'), (u'made', u'make', u'VBN'), (u'him', u'he', u'PRP'), (u'sad', u'sad', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'had', 'annoyed', 'the', 'boy', 'and', 'made', 'him', 'sad', '.']}, {'string': " He had celebrated the queen 's birthday.", 'parse': {'tree': "(ROOT (S (NP (PRP He)) (VP (VBD had) (VP (VBN celebrated) (NP (NP (DT the) (NN queen) (POS 's)) (NN birthday)))) (. .)))", 'lemma': [(u'He', u'he', u'PRP'), (u'had', u'have', u'VBD'), (u'celebrated', u'celebrate', u'VBN'), (u'the', u'the', u'DT'), (u'queen', u'queen', u'NN'), (u"'s", u"'s", u'POS'), (u'birthday', u'birthday', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'had', 'celebrated', 'the', 'queen', "'s", 'birthday', '.']}], 'mode': 0}, {'question': {'string': ' What did the elf to do girls?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VP (VBD did) (NP (DT the) (NN elf)) (S (VP (TO to) (VP (VB do) (NP (NNS girls))))))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'did', u'do', u'VBD'), (u'the', u'the', u'DT'), (u'elf', u'elf', u'NN'), (u'to', u'to', u'TO'), (u'do', u'do', u'VB'), (u'girls', u'girl', u'NNS'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'did', 'the', 'elf', 'to', 'do', 'girls', '?']}, 'answers': [{'string': ' He at their soap.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (PP (IN at) (NP (PRP$ their) (NN soap)))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'at', u'at', u'IN'), (u'their', u'they', u'PRP$'), (u'soap', u'soap', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'at', 'their', 'soap', '.']}, {'string': ' He pushed them in ponds.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD pushed) (NP (PRP them)) (PP (IN in) (NP (NNS ponds)))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'pushed', u'push', u'VBD'), (u'them', u'they', u'PRP'), (u'in', u'in', u'IN'), (u'ponds', u'pond', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'pushed', 'them', 'in', 'ponds', '.']}, {'string': ' He threw pies at them.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD threw) (NP (NNS pies)) (PP (IN at) (NP (PRP them)))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'threw', u'throw', u'VBD'), (u'pies', u'pie', u'NNS'), (u'at', u'at', u'IN'), (u'them', u'they', u'PRP'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'threw', 'pies', 'at', 'them', '.']}, {'string': ' He woke them up.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD woke) (NP (PRP them)) (PRT (RP up))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'woke', u'wake', u'VBD'), (u'them', u'they', u'PRP'), (u'up', u'up', u'RP'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'woke', 'them', 'up', '.']}], 'mode': 1}, {'question': {'string': ' What did the elf do as he went to the pond?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD did) (NP (DT the) (NN elf)) (VP (VB do) (SBAR (IN as) (S (NP (PRP he)) (VP (VBD went) (PP (TO to) (NP (DT the) (NN pond)))))))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'did', u'do', u'VBD'), (u'the', u'the', u'DT'), (u'elf', u'elf', u'NN'), (u'do', u'do', u'VB'), (u'as', u'as', u'IN'), (u'he', u'he', u'PRP'), (u'went', u'go', u'VBD'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'pond', u'pond', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'did', 'the', 'elf', 'do', 'as', 'he', 'went', 'to', 'the', 'pond', '?']}, 'answers': [{'string': ' skipped', 'parse': {'tree': '(ROOT (INTJ (UH skipped)))', 'lemma': [(u'skipped', u'skipped', u'UH')]}, 'tokens': ['skipped']}, {'string': ' layed under a tree', 'parse': {'tree': '(ROOT (VP (VBN layed) (PP (IN under) (NP (DT a) (NN tree)))))', 'lemma': [(u'layed', u'lay', u'VBN'), (u'under', u'under', u'IN'), (u'a', u'a', u'DT'), (u'tree', u'tree', u'NN')]}, 'tokens': ['layed', 'under', 'a', 'tree']}, {'string': " drew on someone 's face", 'parse': {'tree': "(ROOT (SINV (VP (VBD drew) (PP (IN on) (NP (NN someone) (POS 's)))) (NP (VB face))))", 'lemma': [(u'drew', u'draw', u'VBD'), (u'on', u'on', u'IN'), (u'someone', u'someone', u'NN'), (u"'s", u"'s", u'POS'), (u'face', u'face', u'VB')]}, 'tokens': ['drew', 'on', 'someone', "'s", 'face']}, {'string': ' slept', 'parse': {'tree': '(ROOT (INTJ (UH slept)))', 'lemma': [(u'slept', u'slept', u'UH')]}, 'tokens': ['slept']}], 'mode': 1}, {'question': {'string': ' What did the elf do to the boy?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD did) (NP (DT the) (NN elf)) (VP (VB do) (PP (TO to) (NP (DT the) (NN boy))))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'did', u'do', u'VBD'), (u'the', u'the', u'DT'), (u'elf', u'elf', u'NN'), (u'do', u'do', u'VB'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'boy', u'boy', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'did', 'the', 'elf', 'do', 'to', 'the', 'boy', '?']}, 'answers': [{'string': ' He gave him shorts for his birthday.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD gave) (NP (PRP him)) (NP (NP (NNS shorts)) (PP (IN for) (NP (PRP$ his) (NN birthday))))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'gave', u'give', u'VBD'), (u'him', u'he', u'PRP'), (u'shorts', u'shorts', u'NNS'), (u'for', u'for', u'IN'), (u'his', u'he', u'PRP$'), (u'birthday', u'birthday', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'gave', 'him', 'shorts', 'for', 'his', 'birthday', '.']}, {'string': ' He gave him soap.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD gave) (NP (PRP him)) (NP (NN soap))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'gave', u'give', u'VBD'), (u'him', u'he', u'PRP'), (u'soap', u'soap', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'gave', 'him', 'soap', '.']}, {'string': ' He drew a house on his forehead with a magic marker as he was sleeping.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD drew) (NP (DT a) (NN house)) (PP (IN on) (NP (PRP$ his) (NN forehead))) (PP (IN with) (NP (DT a) (JJ magic) (NN marker))) (SBAR (IN as) (S (NP (PRP he)) (VP (VBD was) (VP (VBG sleeping)))))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'drew', u'draw', u'VBD'), (u'a', u'a', u'DT'), (u'house', u'house', u'NN'), (u'on', u'on', u'IN'), (u'his', u'he', u'PRP$'), (u'forehead', u'forehead', u'NN'), (u'with', u'with', u'IN'), (u'a', u'a', u'DT'), (u'magic', u'magic', u'JJ'), (u'marker', u'marker', u'NN'), (u'as', u'as', u'IN'), (u'he', u'he', u'PRP'), (u'was', u'be', u'VBD'), (u'sleeping', u'sleep', u'VBG'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'drew', 'a', 'house', 'on', 'his', 'forehead', 'with', 'a', 'magic', 'marker', 'as', 'he', 'was', 'sleeping', '.']}, {'string': ' He swam with the boy.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBP swam) (PP (IN with) (NP (DT the) (NN boy)))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'swam', u'swim', u'VBP'), (u'with', u'with', u'IN'), (u'the', u'the', u'DT'), (u'boy', u'boy', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'swam', 'with', 'the', 'boy', '.']}], 'mode': 0}]}
{'sentences': [{'string': " Jane 's doll, Samantha, was a magical doll.", 'parse': {'tree': "(ROOT (S (NP (NP (NP (NNP Jane) (POS 's)) (NN doll)) (, ,) (NP (NNP Samantha)) (, ,)) (VP (VBD was) (NP (DT a) (JJ magical) (NN doll))) (. .)))", 'lemma': [(u'Jane', u'Jane', u'NNP'), (u"'s", u"'s", u'POS'), (u'doll', u'doll', u'NN'), (u',', u',', u','), (u'Samantha', u'Samantha', u'NNP'), (u',', u',', u','), (u'was', u'be', u'VBD'), (u'a', u'a', u'DT'), (u'magical', u'magical', u'JJ'), (u'doll', u'doll', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Jane', "'s", 'doll', ',', 'Samantha', ',', 'was', 'a', 'magical', 'doll', '.']}, {'string': ' Jane kept Samantha hidden from her friends, even Julie, who was her best friend.', 'parse': {'tree': '(ROOT (S (NP (NNP Jane)) (VP (VBD kept) (NP (NP (NP (NNP Samantha)) (VP (VBN hidden) (PP (IN from) (NP (PRP$ her) (NNS friends))))) (, ,) (RB even) (NP (NP (NNP Julie)) (, ,) (SBAR (WHNP (WP who)) (S (VP (VBD was) (NP (PRP$ her) (JJS best) (NN friend)))))))) (. .)))', 'lemma': [(u'Jane', u'Jane', u'NNP'), (u'kept', u'keep', u'VBD'), (u'Samantha', u'Samantha', u'NNP'), (u'hidden', u'hide', u'VBN'), (u'from', u'from', u'IN'), (u'her', u'she', u'PRP$'), (u'friends', u'friend', u'NNS'), (u',', u',', u','), (u'even', u'even', u'RB'), (u'Julie', u'Julie', u'NNP'), (u',', u',', u','), (u'who', u'who', u'WP'), (u'was', u'be', u'VBD'), (u'her', u'she', u'PRP$'), (u'best', u'best', u'JJS'), (u'friend', u'friend', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Jane', 'kept', 'Samantha', 'hidden', 'from', 'her', 'friends', ',', 'even', 'Julie', ',', 'who', 'was', 'her', 'best', 'friend', '.']}, {'string': " Jane did n't want all the other girls from school, like Wanda and Ruth, to find out that she had a magical doll.", 'parse': {'tree': "(ROOT (S (NP (NNP Jane)) (VP (VBD did) (RB n't) (VP (VB want) (NP (PDT all) (DT the) (JJ other) (NNS girls)) (PP (IN from) (NP (NN school))) (, ,) (PP (IN like) (NP (NNP Wanda) (CC and) (NNP Ruth))) (, ,) (S (VP (TO to) (VP (VB find) (PRT (RP out)) (SBAR (IN that) (S (NP (PRP she)) (VP (VBD had) (NP (DT a) (JJ magical) (NN doll)))))))))) (. .)))", 'lemma': [(u'Jane', u'Jane', u'NNP'), (u'did', u'do', u'VBD'), (u"n't", u'not', u'RB'), (u'want', u'want', u'VB'), (u'all', u'all', u'PDT'), (u'the', u'the', u'DT'), (u'other', u'other', u'JJ'), (u'girls', u'girl', u'NNS'), (u'from', u'from', u'IN'), (u'school', u'school', u'NN'), (u',', u',', u','), (u'like', u'like', u'IN'), (u'Wanda', u'Wanda', u'NNP'), (u'and', u'and', u'CC'), (u'Ruth', u'Ruth', u'NNP'), (u',', u',', u','), (u'to', u'to', u'TO'), (u'find', u'find', u'VB'), (u'out', u'out', u'RP'), (u'that', u'that', u'IN'), (u'she', u'she', u'PRP'), (u'had', u'have', u'VBD'), (u'a', u'a', u'DT'), (u'magical', u'magical', u'JJ'), (u'doll', u'doll', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Jane', 'did', "n't", 'want', 'all', 'the', 'other', 'girls', 'from', 'school', ',', 'like', 'Wanda', 'and', 'Ruth', ',', 'to', 'find', 'out', 'that', 'she', 'had', 'a', 'magical', 'doll', '.']}, {'string': " Samantha could do things other dolls could n't.", 'parse': {'tree': "(ROOT (S (NP (NNP Samantha)) (VP (MD could) (VP (VB do) (NP (NP (NNS things)) (SBAR (S (NP (JJ other) (NNS dolls)) (VP (MD could) (RB n't))))))) (. .)))", 'lemma': [(u'Samantha', u'Samantha', u'NNP'), (u'could', u'could', u'MD'), (u'do', u'do', u'VB'), (u'things', u'thing', u'NNS'), (u'other', u'other', u'JJ'), (u'dolls', u'doll', u'NNS'), (u'could', u'could', u'MD'), (u"n't", u'not', u'RB'), (u'.', u'.', u'.')]}, 'tokens': ['Samantha', 'could', 'do', 'things', 'other', 'dolls', 'could', "n't", '.']}, {'string': ' Jane would whisper in her ear a secret word, and all of a sudden Samantha would come to life, hopping around, running all over.', 'parse': {'tree': '(ROOT (S (S (NP (NNP Jane)) (VP (MD would) (VP (VB whisper) (PP (IN in) (NP (NP (PRP$ her) (NN ear)) (NP (DT a) (JJ secret) (NN word))))))) (, ,) (CC and) (S (NP (NP (DT all)) (PP (IN of) (NP (DT a) (JJ sudden) (NN Samantha)))) (VP (MD would) (VP (VB come) (PP (TO to) (NP (NN life))) (, ,) (S (VP (VP (VBG hopping) (PRT (RP around))) (, ,) (VP (VBG running) (ADVP (DT all) (RP over)))))))) (. .)))', 'lemma': [(u'Jane', u'Jane', u'NNP'), (u'would', u'would', u'MD'), (u'whisper', u'whisper', u'VB'), (u'in', u'in', u'IN'), (u'her', u'she', u'PRP$'), (u'ear', u'ear', u'NN'), (u'a', u'a', u'DT'), (u'secret', u'secret', u'JJ'), (u'word', u'word', u'NN'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'all', u'all', u'DT'), (u'of', u'of', u'IN'), (u'a', u'a', u'DT'), (u'sudden', u'sudden', u'JJ'), (u'Samantha', u'samantha', u'NN'), (u'would', u'would', u'MD'), (u'come', u'come', u'VB'), (u'to', u'to', u'TO'), (u'life', u'life', u'NN'), (u',', u',', u','), (u'hopping', u'hop', u'VBG'), (u'around', u'around', u'RP'), (u',', u',', u','), (u'running', u'run', u'VBG'), (u'all', u'all', u'DT'), (u'over', u'over', u'RP'), (u'.', u'.', u'.')]}, 'tokens': ['Jane', 'would', 'whisper', 'in', 'her', 'ear', 'a', 'secret', 'word', ',', 'and', 'all', 'of', 'a', 'sudden', 'Samantha', 'would', 'come', 'to', 'life', ',', 'hopping', 'around', ',', 'running', 'all', 'over', '.']}, {'string': ' But Samantha did more than run, she could talk.', 'parse': {'tree': '(ROOT (S (S (CC But) (NP (NNP Samantha)) (VP (VBD did) (NP (JJR more)) (PP (IN than) (NP (NN run))))) (, ,) (NP (PRP she)) (VP (MD could) (VP (VB talk))) (. .)))', 'lemma': [(u'But', u'but', u'CC'), (u'Samantha', u'Samantha', u'NNP'), (u'did', u'do', u'VBD'), (u'more', u'more', u'JJR'), (u'than', u'than', u'IN'), (u'run', u'run', u'NN'), (u',', u',', u','), (u'she', u'she', u'PRP'), (u'could', u'could', u'MD'), (u'talk', u'talk', u'VB'), (u'.', u'.', u'.')]}, 'tokens': ['But', 'Samantha', 'did', 'more', 'than', 'run', ',', 'she', 'could', 'talk', '.']}, {'string': ' Jane told Samantha everything, and Samantha understood.', 'parse': {'tree': '(ROOT (S (S (NP (NNP Jane)) (VP (VBD told) (NP (NNP Samantha) (NN everything)))) (, ,) (CC and) (S (NP (NNP Samantha)) (VP (VBD understood))) (. .)))', 'lemma': [(u'Jane', u'Jane', u'NNP'), (u'told', u'tell', u'VBD'), (u'Samantha', u'Samantha', u'NNP'), (u'everything', u'everything', u'NN'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'Samantha', u'Samantha', u'NNP'), (u'understood', u'understand', u'VBD'), (u'.', u'.', u'.')]}, 'tokens': ['Jane', 'told', 'Samantha', 'everything', ',', 'and', 'Samantha', 'understood', '.']}, {'string': ' One day, Jane was naughty and lied to her mother.', 'parse': {'tree': '(ROOT (S (NP (CD One) (NN day)) (, ,) (NP (NNP Jane)) (VP (VP (VBD was) (ADVP (RB naughty))) (CC and) (VP (VBD lied) (PP (TO to) (NP (PRP$ her) (NN mother))))) (. .)))', 'lemma': [(u'One', u'one', u'CD'), (u'day', u'day', u'NN'), (u',', u',', u','), (u'Jane', u'Jane', u'NNP'), (u'was', u'be', u'VBD'), (u'naughty', u'naughty', u'RB'), (u'and', u'and', u'CC'), (u'lied', u'lie', u'VBD'), (u'to', u'to', u'TO'), (u'her', u'she', u'PRP$'), (u'mother', u'mother', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['One', 'day', ',', 'Jane', 'was', 'naughty', 'and', 'lied', 'to', 'her', 'mother', '.']}, {'string': " Jane 's mother put Samantha on top of the refrigerator where Jane could not get to her.", 'parse': {'tree': "(ROOT (S (NP (NP (NNP Jane) (POS 's)) (NN mother)) (VP (VBD put) (NP (NNP Samantha)) (PP (IN on) (NP (NP (NN top)) (PP (IN of) (NP (DT the) (NN refrigerator))))) (SBAR (WHADVP (WRB where)) (S (NP (NNP Jane)) (VP (MD could) (RB not) (VP (VB get) (PP (TO to) (NP (PRP her)))))))) (. .)))", 'lemma': [(u'Jane', u'Jane', u'NNP'), (u"'s", u"'s", u'POS'), (u'mother', u'mother', u'NN'), (u'put', u'put', u'VBD'), (u'Samantha', u'Samantha', u'NNP'), (u'on', u'on', u'IN'), (u'top', u'top', u'NN'), (u'of', u'of', u'IN'), (u'the', u'the', u'DT'), (u'refrigerator', u'refrigerator', u'NN'), (u'where', u'where', u'WRB'), (u'Jane', u'Jane', u'NNP'), (u'could', u'could', u'MD'), (u'not', u'not', u'RB'), (u'get', u'get', u'VB'), (u'to', u'to', u'TO'), (u'her', u'she', u'PRP'), (u'.', u'.', u'.')]}, 'tokens': ['Jane', "'s", 'mother', 'put', 'Samantha', 'on', 'top', 'of', 'the', 'refrigerator', 'where', 'Jane', 'could', 'not', 'get', 'to', 'her', '.']}, {'string': ' Jane was very sad.', 'parse': {'tree': '(ROOT (S (NP (NNP Jane)) (VP (VBD was) (ADJP (RB very) (JJ sad))) (. .)))', 'lemma': [(u'Jane', u'Jane', u'NNP'), (u'was', u'be', u'VBD'), (u'very', u'very', u'RB'), (u'sad', u'sad', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['Jane', 'was', 'very', 'sad', '.']}, {'string': ' The one person she told everything to was out of her reach.', 'parse': {'tree': '(ROOT (S (NP (NP (DT The) (CD one) (NN person)) (SBAR (S (NP (PRP she)) (VP (VBD told) (NP (NN everything)) (PP (TO to)))))) (VP (VBD was) (ADVP (RB out)) (PP (IN of) (NP (PRP$ her) (NN reach)))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'one', u'one', u'CD'), (u'person', u'person', u'NN'), (u'she', u'she', u'PRP'), (u'told', u'tell', u'VBD'), (u'everything', u'everything', u'NN'), (u'to', u'to', u'TO'), (u'was', u'be', u'VBD'), (u'out', u'out', u'RB'), (u'of', u'of', u'IN'), (u'her', u'she', u'PRP$'), (u'reach', u'reach', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'one', 'person', 'she', 'told', 'everything', 'to', 'was', 'out', 'of', 'her', 'reach', '.']}, {'string': ' The next day, Jane had one of the worst days of her life.', 'parse': {'tree': '(ROOT (S (NP (DT The) (JJ next) (NN day)) (, ,) (NP (NNP Jane)) (VP (VBD had) (NP (NP (CD one)) (PP (IN of) (NP (NP (DT the) (JJS worst) (NNS days)) (PP (IN of) (NP (PRP$ her) (NN life))))))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'next', u'next', u'JJ'), (u'day', u'day', u'NN'), (u',', u',', u','), (u'Jane', u'Jane', u'NNP'), (u'had', u'have', u'VBD'), (u'one', u'one', u'CD'), (u'of', u'of', u'IN'), (u'the', u'the', u'DT'), (u'worst', u'worst', u'JJS'), (u'days', u'day', u'NNS'), (u'of', u'of', u'IN'), (u'her', u'she', u'PRP$'), (u'life', u'life', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'next', 'day', ',', 'Jane', 'had', 'one', 'of', 'the', 'worst', 'days', 'of', 'her', 'life', '.']}, {'string': " She needed to tell someone, but Julie was n't around.", 'parse': {'tree': "(ROOT (S (S (NP (PRP She)) (VP (VBD needed) (S (VP (TO to) (VP (VB tell) (NP (NN someone))))))) (, ,) (CC but) (S (NP (NNP Julie)) (VP (VBD was) (RB n't) (ADVP (RB around)))) (. .)))", 'lemma': [(u'She', u'she', u'PRP'), (u'needed', u'need', u'VBD'), (u'to', u'to', u'TO'), (u'tell', u'tell', u'VB'), (u'someone', u'someone', u'NN'), (u',', u',', u','), (u'but', u'but', u'CC'), (u'Julie', u'Julie', u'NNP'), (u'was', u'be', u'VBD'), (u"n't", u'not', u'RB'), (u'around', u'around', u'RB'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'needed', 'to', 'tell', 'someone', ',', 'but', 'Julie', 'was', "n't", 'around', '.']}, {'string': ' She needed Samantha.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBD needed) (NP (NNP Samantha))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'needed', u'need', u'VBD'), (u'Samantha', u'Samantha', u'NNP'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'needed', 'Samantha', '.']}, {'string': ' She had no ladder, chair, or stool to reach her.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBD had) (NP (NP (DT no) (NN ladder) (, ,) (NN chair) (, ,) (CC or) (NN stool)) (SBAR (S (VP (TO to) (VP (VB reach) (NP (PRP her)))))))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'had', u'have', u'VBD'), (u'no', u'no', u'DT'), (u'ladder', u'ladder', u'NN'), (u',', u',', u','), (u'chair', u'chair', u'NN'), (u',', u',', u','), (u'or', u'or', u'CC'), (u'stool', u'stool', u'NN'), (u'to', u'to', u'TO'), (u'reach', u'reach', u'VB'), (u'her', u'she', u'PRP'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'had', 'no', 'ladder', ',', 'chair', ',', 'or', 'stool', 'to', 'reach', 'her', '.']}, {'string': ' Julie moved the kitchen table forward towards the refrigerator, and hopped on top.', 'parse': {'tree': '(ROOT (S (NP (NNP Julie)) (VP (VP (VBD moved) (NP (DT the) (NN kitchen) (NN table)) (PRT (RP forward)) (PP (IN towards) (NP (DT the) (NN refrigerator)))) (, ,) (CC and) (VP (VBD hopped) (PP (IN on) (NP (NN top))))) (. .)))', 'lemma': [(u'Julie', u'Julie', u'NNP'), (u'moved', u'move', u'VBD'), (u'the', u'the', u'DT'), (u'kitchen', u'kitchen', u'NN'), (u'table', u'table', u'NN'), (u'forward', u'forward', u'RP'), (u'towards', u'towards', u'IN'), (u'the', u'the', u'DT'), (u'refrigerator', u'refrigerator', u'NN'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'hopped', u'hop', u'VBD'), (u'on', u'on', u'IN'), (u'top', u'top', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Julie', 'moved', 'the', 'kitchen', 'table', 'forward', 'towards', 'the', 'refrigerator', ',', 'and', 'hopped', 'on', 'top', '.']}, {'string': ' She started to climb up to reach for Samantha, and grabbed her quickly.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VP (VBD started) (S (VP (TO to) (VP (VB climb) (PRT (RP up)) (S (VP (TO to) (VP (VB reach) (PP (IN for) (NP (NNP Samantha)))))))))) (, ,) (CC and) (VP (VBD grabbed) (NP (PRP her)) (ADVP (RB quickly)))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'started', u'start', u'VBD'), (u'to', u'to', u'TO'), (u'climb', u'climb', u'VB'), (u'up', u'up', u'RP'), (u'to', u'to', u'TO'), (u'reach', u'reach', u'VB'), (u'for', u'for', u'IN'), (u'Samantha', u'Samantha', u'NNP'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'grabbed', u'grab', u'VBD'), (u'her', u'she', u'PRP'), (u'quickly', u'quickly', u'RB'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'started', 'to', 'climb', 'up', 'to', 'reach', 'for', 'Samantha', ',', 'and', 'grabbed', 'her', 'quickly', '.']}, {'string': ' She came down, dropping Samantha on the floor, and broke Samantha.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VP (VBD came) (ADVP (RB down)) (, ,) (S (VP (VBG dropping) (NP (NP (NNP Samantha)) (PP (IN on) (NP (DT the) (NN floor))))))) (, ,) (CC and) (VP (VBD broke) (NP (NNP Samantha)))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'came', u'come', u'VBD'), (u'down', u'down', u'RB'), (u',', u',', u','), (u'dropping', u'drop', u'VBG'), (u'Samantha', u'Samantha', u'NNP'), (u'on', u'on', u'IN'), (u'the', u'the', u'DT'), (u'floor', u'floor', u'NN'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'broke', u'break', u'VBD'), (u'Samantha', u'Samantha', u'NNP'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'came', 'down', ',', 'dropping', 'Samantha', 'on', 'the', 'floor', ',', 'and', 'broke', 'Samantha', '.']}, {'string': " Jane whispered the secret word, but Samantha did n't awake.", 'parse': {'tree': "(ROOT (S (S (NP (NNP Jane)) (VP (VBN whispered) (NP (DT the) (JJ secret) (NN word)))) (, ,) (CC but) (S (NP (NNP Samantha)) (VP (VBD did) (RB n't) (VP (VB awake)))) (. .)))", 'lemma': [(u'Jane', u'Jane', u'NNP'), (u'whispered', u'whisper', u'VBN'), (u'the', u'the', u'DT'), (u'secret', u'secret', u'JJ'), (u'word', u'word', u'NN'), (u',', u',', u','), (u'but', u'but', u'CC'), (u'Samantha', u'Samantha', u'NNP'), (u'did', u'do', u'VBD'), (u"n't", u'not', u'RB'), (u'awake', u'awake', u'VB'), (u'.', u'.', u'.')]}, 'tokens': ['Jane', 'whispered', 'the', 'secret', 'word', ',', 'but', 'Samantha', 'did', "n't", 'awake', '.']}, {'string': " Samantha 's powers were gone.", 'parse': {'tree': "(ROOT (S (NP (NP (NNP Samantha) (POS 's)) (NNS powers)) (VP (VBD were) (VP (VBN gone))) (. .)))", 'lemma': [(u'Samantha', u'Samantha', u'NNP'), (u"'s", u"'s", u'POS'), (u'powers', u'power', u'NNS'), (u'were', u'be', u'VBD'), (u'gone', u'go', u'VBN'), (u'.', u'.', u'.')]}, 'tokens': ['Samantha', "'s", 'powers', 'were', 'gone', '.']}, {'string': " She could n't walk, run, talk, or listen.", 'parse': {'tree': "(ROOT (S (NP (PRP She)) (VP (MD could) (RB n't) (VP (VB walk) (, ,) (VB run) (, ,) (VB talk) (, ,) (CC or) (VB listen))) (. .)))", 'lemma': [(u'She', u'she', u'PRP'), (u'could', u'could', u'MD'), (u"n't", u'not', u'RB'), (u'walk', u'walk', u'VB'), (u',', u',', u','), (u'run', u'run', u'VB'), (u',', u',', u','), (u'talk', u'talk', u'VB'), (u',', u',', u','), (u'or', u'or', u'CC'), (u'listen', u'listen', u'VB'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'could', "n't", 'walk', ',', 'run', ',', 'talk', ',', 'or', 'listen', '.']}, {'string': ' Jane hurt her the one person she could trust the most.', 'parse': {'tree': '(ROOT (S (NP (NNP Jane)) (VP (VBP hurt) (S (NP (PRP her)) (NP (NP (DT the) (CD one) (NN person)) (SBAR (S (NP (PRP she)) (VP (MD could) (VP (VB trust) (NP (DT the) (JJS most))))))))) (. .)))', 'lemma': [(u'Jane', u'Jane', u'NNP'), (u'hurt', u'hurt', u'VBP'), (u'her', u'she', u'PRP'), (u'the', u'the', u'DT'), (u'one', u'one', u'CD'), (u'person', u'person', u'NN'), (u'she', u'she', u'PRP'), (u'could', u'could', u'MD'), (u'trust', u'trust', u'VB'), (u'the', u'the', u'DT'), (u'most', u'most', u'JJS'), (u'.', u'.', u'.')]}, 'tokens': ['Jane', 'hurt', 'her', 'the', 'one', 'person', 'she', 'could', 'trust', 'the', 'most', '.']}, {'string': ' Then, Samantha moved, looked at Jane, and a tear came from her eye.', 'parse': {'tree': '(ROOT (S (ADVP (RB Then)) (, ,) (S (NP (NNP Samantha)) (VP (VBD moved) (, ,) (S (VP (VBN looked) (PP (IN at) (NP (NNP Jane))))))) (, ,) (CC and) (S (NP (DT a) (NN tear)) (VP (VBD came) (PP (IN from) (NP (PRP$ her) (NN eye))))) (. .)))', 'lemma': [(u'Then', u'then', u'RB'), (u',', u',', u','), (u'Samantha', u'Samantha', u'NNP'), (u'moved', u'move', u'VBD'), (u',', u',', u','), (u'looked', u'look', u'VBN'), (u'at', u'at', u'IN'), (u'Jane', u'Jane', u'NNP'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'a', u'a', u'DT'), (u'tear', u'tear', u'NN'), (u'came', u'come', u'VBD'), (u'from', u'from', u'IN'), (u'her', u'she', u'PRP$'), (u'eye', u'eye', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Then', ',', 'Samantha', 'moved', ',', 'looked', 'at', 'Jane', ',', 'and', 'a', 'tear', 'came', 'from', 'her', 'eye', '.']}, {'string': " Samantha 's eyes closed, and she was without life.", 'parse': {'tree': "(ROOT (S (S (NP (NP (NNP Samantha) (POS 's)) (NNS eyes)) (VP (VBD closed))) (, ,) (CC and) (S (NP (PRP she)) (VP (VBD was) (PP (IN without) (NP (NN life))))) (. .)))", 'lemma': [(u'Samantha', u'Samantha', u'NNP'), (u"'s", u"'s", u'POS'), (u'eyes', u'eye', u'NNS'), (u'closed', u'close', u'VBD'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'she', u'she', u'PRP'), (u'was', u'be', u'VBD'), (u'without', u'without', u'IN'), (u'life', u'life', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Samantha', "'s", 'eyes', 'closed', ',', 'and', 'she', 'was', 'without', 'life', '.']}, {'string': ' She cried no more.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBD cried) (ADVP (DT no) (RBR more))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'cried', u'cry', u'VBD'), (u'no', u'no', u'DT'), (u'more', u'more', u'RBR'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'cried', 'no', 'more', '.']}], 'questions': [{'question': {'string': ' How did Jane get to Samantha?', 'parse': {'tree': '(ROOT (SBARQ (WHADVP (WRB How)) (SQ (VBD did) (NP (NNP Jane)) (VP (VB get) (PP (TO to) (NP (NNP Samantha))))) (. ?)))', 'lemma': [(u'How', u'how', u'WRB'), (u'did', u'do', u'VBD'), (u'Jane', u'Jane', u'NNP'), (u'get', u'get', u'VB'), (u'to', u'to', u'TO'), (u'Samantha', u'Samantha', u'NNP'), (u'?', u'?', u'.')]}, 'tokens': ['How', 'did', 'Jane', 'get', 'to', 'Samantha', '?']}, 'answers': [{'string': ' Kitchen table', 'parse': {'tree': '(ROOT (NP (NN Kitchen) (NN table)))', 'lemma': [(u'Kitchen', u'kitchen', u'NN'), (u'table', u'table', u'NN')]}, 'tokens': ['Kitchen', 'table']}, {'string': ' stool', 'parse': {'tree': '(ROOT (NP (NN stool)))', 'lemma': [(u'stool', u'stool', u'NN')]}, 'tokens': ['stool']}, {'string': ' chair', 'parse': {'tree': '(ROOT (NP (NN chair)))', 'lemma': [(u'chair', u'chair', u'NN')]}, 'tokens': ['chair']}, {'string': ' ladder', 'parse': {'tree': '(ROOT (NP (NN ladder)))', 'lemma': [(u'ladder', u'ladder', u'NN')]}, 'tokens': ['ladder']}], 'mode': 0}, {'question': {'string': " What was the name of Jane 's doll?", 'parse': {'tree': "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD was) (NP (NP (DT the) (NN name)) (PP (IN of) (NP (NP (NNP Jane) (POS 's)) (NN doll))))) (. ?)))", 'lemma': [(u'What', u'what', u'WP'), (u'was', u'be', u'VBD'), (u'the', u'the', u'DT'), (u'name', u'name', u'NN'), (u'of', u'of', u'IN'), (u'Jane', u'Jane', u'NNP'), (u"'s", u"'s", u'POS'), (u'doll', u'doll', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'was', 'the', 'name', 'of', 'Jane', "'s", 'doll', '?']}, 'answers': [{'string': ' Samantha', 'parse': {'tree': '(ROOT (NP (NNP Samantha)))', 'lemma': [(u'Samantha', u'Samantha', u'NNP')]}, 'tokens': ['Samantha']}, {'string': ' Ruth', 'parse': {'tree': '(ROOT (NP (NNP Ruth)))', 'lemma': [(u'Ruth', u'Ruth', u'NNP')]}, 'tokens': ['Ruth']}, {'string': ' Wanda', 'parse': {'tree': '(ROOT (NP (NNP Wanda)))', 'lemma': [(u'Wanda', u'Wanda', u'NNP')]}, 'tokens': ['Wanda']}, {'string': ' Julie', 'parse': {'tree': '(ROOT (NP (NNP Julie)))', 'lemma': [(u'Julie', u'Julie', u'NNP')]}, 'tokens': ['Julie']}], 'mode': 1}, {'question': {'string': ' What did Samantha do after Jane dropped her?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD did) (NP (NNP Samantha)) (VP (VB do) (SBAR (IN after) (S (NP (NNP Jane)) (VP (VBD dropped) (NP (PRP her))))))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'did', u'do', u'VBD'), (u'Samantha', u'Samantha', u'NNP'), (u'do', u'do', u'VB'), (u'after', u'after', u'IN'), (u'Jane', u'Jane', u'NNP'), (u'dropped', u'drop', u'VBD'), (u'her', u'she', u'PRP'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'did', 'Samantha', 'do', 'after', 'Jane', 'dropped', 'her', '?']}, 'answers': [{'string': ' Cry', 'parse': {'tree': '(ROOT (NP (NNP Cry)))', 'lemma': [(u'Cry', u'Cry', u'NNP')]}, 'tokens': ['Cry']}, {'string': ' Talk', 'parse': {'tree': '(ROOT (NP (NN Talk)))', 'lemma': [(u'Talk', u'talk', u'NN')]}, 'tokens': ['Talk']}, {'string': ' Run', 'parse': {'tree': '(ROOT (NP (NNP Run)))', 'lemma': [(u'Run', u'Run', u'NNP')]}, 'tokens': ['Run']}, {'string': ' Listen', 'parse': {'tree': '(ROOT (S (VP (VB Listen))))', 'lemma': [(u'Listen', u'listen', u'VB')]}, 'tokens': ['Listen']}], 'mode': 0}, {'question': {'string': ' Who did Jane lie to?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP Who)) (SQ (VBD did) (NP (NNP Jane)) (VP (VB lie) (PP (TO to)))) (. ?)))', 'lemma': [(u'Who', u'who', u'WP'), (u'did', u'do', u'VBD'), (u'Jane', u'Jane', u'NNP'), (u'lie', u'lie', u'VB'), (u'to', u'to', u'TO'), (u'?', u'?', u'.')]}, 'tokens': ['Who', 'did', 'Jane', 'lie', 'to', '?']}, 'answers': [{'string': ' Her Mother', 'parse': {'tree': '(ROOT (NP (NNP Her) (NNP Mother)))', 'lemma': [(u'Her', u'Her', u'NNP'), (u'Mother', u'Mother', u'NNP')]}, 'tokens': ['Her', 'Mother']}, {'string': ' Ruth', 'parse': {'tree': '(ROOT (NP (NNP Ruth)))', 'lemma': [(u'Ruth', u'Ruth', u'NNP')]}, 'tokens': ['Ruth']}, {'string': ' Wanda', 'parse': {'tree': '(ROOT (NP (NNP Wanda)))', 'lemma': [(u'Wanda', u'Wanda', u'NNP')]}, 'tokens': ['Wanda']}, {'string': ' Samantha', 'parse': {'tree': '(ROOT (NP (NNP Samantha)))', 'lemma': [(u'Samantha', u'Samantha', u'NNP')]}, 'tokens': ['Samantha']}], 'mode': 1}]}
{'sentences': [{'string': ' It was a cold day when John made up his mind to go outside and check the fence.', 'parse': {'tree': '(ROOT (S (NP (PRP It)) (VP (VBD was) (NP (NP (DT a) (JJ cold) (NN day)) (SBAR (WHADVP (WRB when)) (S (NP (NNP John)) (VP (VBD made) (PRT (RP up)) (NP (PRP$ his) (NN mind) (S (VP (TO to) (VP (VP (VB go) (ADVP (RB outside))) (CC and) (VP (VB check) (NP (DT the) (NN fence)))))))))))) (. .)))', 'lemma': [(u'It', u'it', u'PRP'), (u'was', u'be', u'VBD'), (u'a', u'a', u'DT'), (u'cold', u'cold', u'JJ'), (u'day', u'day', u'NN'), (u'when', u'when', u'WRB'), (u'John', u'John', u'NNP'), (u'made', u'make', u'VBD'), (u'up', u'up', u'RP'), (u'his', u'he', u'PRP$'), (u'mind', u'mind', u'NN'), (u'to', u'to', u'TO'), (u'go', u'go', u'VB'), (u'outside', u'outside', u'RB'), (u'and', u'and', u'CC'), (u'check', u'check', u'VB'), (u'the', u'the', u'DT'), (u'fence', u'fence', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['It', 'was', 'a', 'cold', 'day', 'when', 'John', 'made', 'up', 'his', 'mind', 'to', 'go', 'outside', 'and', 'check', 'the', 'fence', '.']}, {'string': ' There had been things missing from the back yard, and he was starting to think there was a criminal at work.', 'parse': {'tree': '(ROOT (S (S (NP (EX There)) (VP (VBD had) (VP (VBN been) (NP (NP (NNS things)) (VP (VBG missing) (PP (IN from) (NP (DT the) (JJ back) (NN yard)))))))) (, ,) (CC and) (S (NP (PRP he)) (VP (VBD was) (VP (VBG starting) (S (VP (TO to) (VP (VB think) (SBAR (S (NP (EX there)) (VP (VBD was) (NP (NP (DT a) (NN criminal)) (PP (IN at) (NP (NN work))))))))))))) (. .)))', 'lemma': [(u'There', u'there', u'EX'), (u'had', u'have', u'VBD'), (u'been', u'be', u'VBN'), (u'things', u'thing', u'NNS'), (u'missing', u'miss', u'VBG'), (u'from', u'from', u'IN'), (u'the', u'the', u'DT'), (u'back', u'back', u'JJ'), (u'yard', u'yard', u'NN'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'he', u'he', u'PRP'), (u'was', u'be', u'VBD'), (u'starting', u'start', u'VBG'), (u'to', u'to', u'TO'), (u'think', u'think', u'VB'), (u'there', u'there', u'EX'), (u'was', u'be', u'VBD'), (u'a', u'a', u'DT'), (u'criminal', u'criminal', u'NN'), (u'at', u'at', u'IN'), (u'work', u'work', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['There', 'had', 'been', 'things', 'missing', 'from', 'the', 'back', 'yard', ',', 'and', 'he', 'was', 'starting', 'to', 'think', 'there', 'was', 'a', 'criminal', 'at', 'work', '.']}, {'string': ' He put on his coat and started walking through the snow back to the long metal fence at the back of the yard.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VP (VBD put) (PP (IN on) (NP (PRP$ his) (NN coat)))) (CC and) (VP (VBD started) (S (VP (VBG walking) (PP (IN through) (NP (DT the) (NN snow))))) (ADVP (RB back) (PP (TO to) (NP (DT the) (JJ long) (NN metal) (NN fence)))) (PP (IN at) (NP (NP (DT the) (NN back)) (PP (IN of) (NP (DT the) (NN yard))))))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'put', u'put', u'VBD'), (u'on', u'on', u'IN'), (u'his', u'he', u'PRP$'), (u'coat', u'coat', u'NN'), (u'and', u'and', u'CC'), (u'started', u'start', u'VBD'), (u'walking', u'walk', u'VBG'), (u'through', u'through', u'IN'), (u'the', u'the', u'DT'), (u'snow', u'snow', u'NN'), (u'back', u'back', u'RB'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'long', u'long', u'JJ'), (u'metal', u'metal', u'NN'), (u'fence', u'fence', u'NN'), (u'at', u'at', u'IN'), (u'the', u'the', u'DT'), (u'back', u'back', u'NN'), (u'of', u'of', u'IN'), (u'the', u'the', u'DT'), (u'yard', u'yard', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'put', 'on', 'his', 'coat', 'and', 'started', 'walking', 'through', 'the', 'snow', 'back', 'to', 'the', 'long', 'metal', 'fence', 'at', 'the', 'back', 'of', 'the', 'yard', '.']}, {'string': ' It seemed like a lot longer walk than last summer when it was hot.', 'parse': {'tree': '(ROOT (S (NP (PRP It)) (VP (VBD seemed) (PP (IN like) (NP (NP (DT a) (ADJP (RB lot) (JJR longer)) (NN walk)) (PP (IN than) (NP (JJ last) (NN summer))))) (SBAR (WHADVP (WRB when)) (S (NP (PRP it)) (VP (VBD was) (ADJP (JJ hot)))))) (. .)))', 'lemma': [(u'It', u'it', u'PRP'), (u'seemed', u'seem', u'VBD'), (u'like', u'like', u'IN'), (u'a', u'a', u'DT'), (u'lot', u'lot', u'RB'), (u'longer', u'longer', u'JJR'), (u'walk', u'walk', u'NN'), (u'than', u'than', u'IN'), (u'last', u'last', u'JJ'), (u'summer', u'summer', u'NN'), (u'when', u'when', u'WRB'), (u'it', u'it', u'PRP'), (u'was', u'be', u'VBD'), (u'hot', u'hot', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['It', 'seemed', 'like', 'a', 'lot', 'longer', 'walk', 'than', 'last', 'summer', 'when', 'it', 'was', 'hot', '.']}, {'string': ' Sure enough, he found how the crook had gotten in.', 'parse': {'tree': '(ROOT (S (ADVP (RB Sure) (RB enough)) (, ,) (NP (PRP he)) (VP (VBD found) (SBAR (WHADVP (WRB how)) (S (NP (DT the) (NN crook)) (VP (VBD had) (VP (VBN gotten) (PP (IN in))))))) (. .)))', 'lemma': [(u'Sure', u'sure', u'RB'), (u'enough', u'enough', u'RB'), (u',', u',', u','), (u'he', u'he', u'PRP'), (u'found', u'find', u'VBD'), (u'how', u'how', u'WRB'), (u'the', u'the', u'DT'), (u'crook', u'crook', u'NN'), (u'had', u'have', u'VBD'), (u'gotten', u'get', u'VBN'), (u'in', u'in', u'IN'), (u'.', u'.', u'.')]}, 'tokens': ['Sure', 'enough', ',', 'he', 'found', 'how', 'the', 'crook', 'had', 'gotten', 'in', '.']}, {'string': ' A tree, weighted down by the snow, had fallen on the fence on a windy day and broken a section.', 'parse': {'tree': '(ROOT (S (NP (NP (DT A) (NN tree)) (, ,) (VP (VBN weighted) (PRT (RP down)) (PP (IN by) (NP (DT the) (NN snow)))) (, ,)) (VP (VBD had) (VP (VP (VBN fallen) (PP (IN on) (NP (NP (DT the) (NN fence)) (PP (IN on) (NP (DT a) (JJ windy) (NN day)))))) (CC and) (VP (VBN broken) (NP (DT a) (NN section))))) (. .)))', 'lemma': [(u'A', u'a', u'DT'), (u'tree', u'tree', u'NN'), (u',', u',', u','), (u'weighted', u'weight', u'VBN'), (u'down', u'down', u'RP'), (u'by', u'by', u'IN'), (u'the', u'the', u'DT'), (u'snow', u'snow', u'NN'), (u',', u',', u','), (u'had', u'have', u'VBD'), (u'fallen', u'fall', u'VBN'), (u'on', u'on', u'IN'), (u'the', u'the', u'DT'), (u'fence', u'fence', u'NN'), (u'on', u'on', u'IN'), (u'a', u'a', u'DT'), (u'windy', u'windy', u'JJ'), (u'day', u'day', u'NN'), (u'and', u'and', u'CC'), (u'broken', u'break', u'VBN'), (u'a', u'a', u'DT'), (u'section', u'section', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['A', 'tree', ',', 'weighted', 'down', 'by', 'the', 'snow', ',', 'had', 'fallen', 'on', 'the', 'fence', 'on', 'a', 'windy', 'day', 'and', 'broken', 'a', 'section', '.']}, {'string': ' He got out his toolbox, and with a tool, cut some sections of wire.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VP (VBD got) (PRT (RP out)) (NP (PRP$ his) (NN toolbox))) (, ,) (CC and) (VP (PP (IN with) (NP (DT a) (NN tool))) (, ,) (VBD cut) (NP (NP (DT some) (NNS sections)) (PP (IN of) (NP (NN wire)))))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'got', u'get', u'VBD'), (u'out', u'out', u'RP'), (u'his', u'he', u'PRP$'), (u'toolbox', u'toolbox', u'NN'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'with', u'with', u'IN'), (u'a', u'a', u'DT'), (u'tool', u'tool', u'NN'), (u',', u',', u','), (u'cut', u'cut', u'VBD'), (u'some', u'some', u'DT'), (u'sections', u'section', u'NNS'), (u'of', u'of', u'IN'), (u'wire', u'wire', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'got', 'out', 'his', 'toolbox', ',', 'and', 'with', 'a', 'tool', ',', 'cut', 'some', 'sections', 'of', 'wire', '.']}, {'string': ' He used the wires to fix the fence.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD used) (NP (DT the) (NNS wires)) (S (VP (TO to) (VP (VB fix) (NP (DT the) (NN fence)))))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'used', u'use', u'VBD'), (u'the', u'the', u'DT'), (u'wires', u'wire', u'NNS'), (u'to', u'to', u'TO'), (u'fix', u'fix', u'VB'), (u'the', u'the', u'DT'), (u'fence', u'fence', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'used', 'the', 'wires', 'to', 'fix', 'the', 'fence', '.']}, {'string': ' Now, it was time to catch the crook.', 'parse': {'tree': '(ROOT (S (ADVP (RB Now)) (, ,) (NP (PRP it)) (VP (VBD was) (VP (NN time) (S (VP (TO to) (VP (VB catch) (NP (DT the) (NN crook))))))) (. .)))', 'lemma': [(u'Now', u'now', u'RB'), (u',', u',', u','), (u'it', u'it', u'PRP'), (u'was', u'be', u'VBD'), (u'time', u'time', u'NN'), (u'to', u'to', u'TO'), (u'catch', u'catch', u'VB'), (u'the', u'the', u'DT'), (u'crook', u'crook', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Now', ',', 'it', 'was', 'time', 'to', 'catch', 'the', 'crook', '.']}, {'string': ' Sure enough, he saw tracks heading to and from the fence.', 'parse': {'tree': '(ROOT (S (ADVP (RB Sure) (RB enough)) (, ,) (NP (PRP he)) (VP (VBD saw) (NP (NP (NNS tracks)) (VP (VBG heading) (PP (TO to) (CC and) (IN from) (NP (DT the) (NN fence)))))) (. .)))', 'lemma': [(u'Sure', u'sure', u'RB'), (u'enough', u'enough', u'RB'), (u',', u',', u','), (u'he', u'he', u'PRP'), (u'saw', u'see', u'VBD'), (u'tracks', u'track', u'NNS'), (u'heading', u'head', u'VBG'), (u'to', u'to', u'TO'), (u'and', u'and', u'CC'), (u'from', u'from', u'IN'), (u'the', u'the', u'DT'), (u'fence', u'fence', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Sure', 'enough', ',', 'he', 'saw', 'tracks', 'heading', 'to', 'and', 'from', 'the', 'fence', '.']}, {'string': " But they were n't a crook 's footprints.", 'parse': {'tree': "(ROOT (S (CC But) (NP (PRP they)) (VP (VBD were) (RB n't) (NP (NP (DT a) (NN crook) (POS 's)) (NNS footprints))) (. .)))", 'lemma': [(u'But', u'but', u'CC'), (u'they', u'they', u'PRP'), (u'were', u'be', u'VBD'), (u"n't", u'not', u'RB'), (u'a', u'a', u'DT'), (u'crook', u'crook', u'NN'), (u"'s", u"'s", u'POS'), (u'footprints', u'footprint', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['But', 'they', 'were', "n't", 'a', 'crook', "'s", 'footprints', '.']}, {'string': ' It had been a raccoon that had been stealing things from his yard.', 'parse': {'tree': '(ROOT (S (NP (PRP It)) (VP (VBD had) (VP (VBN been) (NP (NP (DT a) (NN raccoon)) (SBAR (WHNP (WDT that)) (S (VP (VBD had) (VP (VBN been) (VP (VBG stealing) (NP (NNS things)) (PP (IN from) (NP (PRP$ his) (NN yard))))))))))) (. .)))', 'lemma': [(u'It', u'it', u'PRP'), (u'had', u'have', u'VBD'), (u'been', u'be', u'VBN'), (u'a', u'a', u'DT'), (u'raccoon', u'raccoon', u'NN'), (u'that', u'that', u'WDT'), (u'had', u'have', u'VBD'), (u'been', u'be', u'VBN'), (u'stealing', u'steal', u'VBG'), (u'things', u'thing', u'NNS'), (u'from', u'from', u'IN'), (u'his', u'he', u'PRP$'), (u'yard', u'yard', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['It', 'had', 'been', 'a', 'raccoon', 'that', 'had', 'been', 'stealing', 'things', 'from', 'his', 'yard', '.']}], 'questions': [{'question': {'string': ' What broke the fence?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VP (VBD broke) (NP (DT the) (NN fence)))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'broke', u'break', u'VBD'), (u'the', u'the', u'DT'), (u'fence', u'fence', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'broke', 'the', 'fence', '?']}, 'answers': [{'string': ' A tree.', 'parse': {'tree': '(ROOT (NP (DT A) (NN tree) (. .)))', 'lemma': [(u'A', u'a', u'DT'), (u'tree', u'tree', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['A', 'tree', '.']}, {'string': ' A raccoon.', 'parse': {'tree': '(ROOT (NP (DT A) (NN raccoon) (. .)))', 'lemma': [(u'A', u'a', u'DT'), (u'raccoon', u'raccoon', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['A', 'raccoon', '.']}, {'string': ' John.', 'parse': {'tree': '(ROOT (FRAG (NP (NNP John)) (. .)))', 'lemma': [(u'John', u'John', u'NNP'), (u'.', u'.', u'.')]}, 'tokens': ['John', '.']}, {'string': ' The things that were missing from the back yard.', 'parse': {'tree': '(ROOT (S (NP (NP (DT The) (NNS things)) (NP (DT that))) (VP (VBD were) (VP (VBG missing) (PP (IN from) (NP (DT the) (JJ back) (NN yard))))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'things', u'thing', u'NNS'), (u'that', u'that', u'DT'), (u'were', u'be', u'VBD'), (u'missing', u'miss', u'VBG'), (u'from', u'from', u'IN'), (u'the', u'the', u'DT'), (u'back', u'back', u'JJ'), (u'yard', u'yard', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'things', 'that', 'were', 'missing', 'from', 'the', 'back', 'yard', '.']}], 'mode': 1}, {'question': {'string': ' Who was the criminal?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP Who)) (SQ (VBD was) (NP (DT the) (NN criminal))) (. ?)))', 'lemma': [(u'Who', u'who', u'WP'), (u'was', u'be', u'VBD'), (u'the', u'the', u'DT'), (u'criminal', u'criminal', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['Who', 'was', 'the', 'criminal', '?']}, 'answers': [{'string': ' A fox.', 'parse': {'tree': '(ROOT (NP (DT A) (NN fox) (. .)))', 'lemma': [(u'A', u'a', u'DT'), (u'fox', u'fox', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['A', 'fox', '.']}, {'string': ' A crook.', 'parse': {'tree': '(ROOT (NP (DT A) (NN crook) (. .)))', 'lemma': [(u'A', u'a', u'DT'), (u'crook', u'crook', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['A', 'crook', '.']}, {'string': ' A raccoon.', 'parse': {'tree': '(ROOT (NP (DT A) (NN raccoon) (. .)))', 'lemma': [(u'A', u'a', u'DT'), (u'raccoon', u'raccoon', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['A', 'raccoon', '.']}, {'string': " One of John 's neighbors.", 'parse': {'tree': "(ROOT (NP (NP (CD One)) (PP (IN of) (NP (NP (NNP John) (POS 's)) (NNS neighbors))) (. .)))", 'lemma': [(u'One', u'one', u'CD'), (u'of', u'of', u'IN'), (u'John', u'John', u'NNP'), (u"'s", u"'s", u'POS'), (u'neighbors', u'neighbor', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['One', 'of', 'John', "'s", 'neighbors', '.']}], 'mode': 1}, {'question': {'string': ' Why did John need a tool?', 'parse': {'tree': '(ROOT (SBARQ (WHADVP (WRB Why)) (SQ (VBD did) (NP (NNP John)) (VP (VB need) (NP (DT a) (NN tool)))) (. ?)))', 'lemma': [(u'Why', u'why', u'WRB'), (u'did', u'do', u'VBD'), (u'John', u'John', u'NNP'), (u'need', u'need', u'VB'), (u'a', u'a', u'DT'), (u'tool', u'tool', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['Why', 'did', 'John', 'need', 'a', 'tool', '?']}, 'answers': [{'string': ' To scare away the raccoon.', 'parse': {'tree': '(ROOT (S (VP (TO To) (VP (VB scare) (PRT (RP away)) (NP (DT the) (NN raccoon)))) (. .)))', 'lemma': [(u'To', u'to', u'TO'), (u'scare', u'scare', u'VB'), (u'away', u'away', u'RP'), (u'the', u'the', u'DT'), (u'raccoon', u'raccoon', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['To', 'scare', 'away', 'the', 'raccoon', '.']}, {'string': ' To fix the fence.', 'parse': {'tree': '(ROOT (S (VP (TO To) (VP (VB fix) (NP (DT the) (NN fence)))) (. .)))', 'lemma': [(u'To', u'to', u'TO'), (u'fix', u'fix', u'VB'), (u'the', u'the', u'DT'), (u'fence', u'fence', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['To', 'fix', 'the', 'fence', '.']}, {'string': ' To fix his snow shovel.', 'parse': {'tree': '(ROOT (S (VP (TO To) (VP (VB fix) (NP (PRP$ his) (NN snow) (NN shovel)))) (. .)))', 'lemma': [(u'To', u'to', u'TO'), (u'fix', u'fix', u'VB'), (u'his', u'he', u'PRP$'), (u'snow', u'snow', u'NN'), (u'shovel', u'shovel', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['To', 'fix', 'his', 'snow', 'shovel', '.']}, {'string': ' To tear down the fence.', 'parse': {'tree': '(ROOT (S (VP (TO To) (VP (VB tear) (PRT (RP down)) (NP (DT the) (NN fence)))) (. .)))', 'lemma': [(u'To', u'to', u'TO'), (u'tear', u'tear', u'VB'), (u'down', u'down', u'RP'), (u'the', u'the', u'DT'), (u'fence', u'fence', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['To', 'tear', 'down', 'the', 'fence', '.']}], 'mode': 0}, {'question': {'string': ' What was the weather like when John fixed the fence?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD was) (NP (NP (DT the) (NN weather)) (PP (IN like) (SBAR (WHADVP (WRB when)) (S (NP (NNP John)) (VP (VBD fixed) (NP (DT the) (NN fence)))))))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'was', u'be', u'VBD'), (u'the', u'the', u'DT'), (u'weather', u'weather', u'NN'), (u'like', u'like', u'IN'), (u'when', u'when', u'WRB'), (u'John', u'John', u'NNP'), (u'fixed', u'fix', u'VBD'), (u'the', u'the', u'DT'), (u'fence', u'fence', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'was', 'the', 'weather', 'like', 'when', 'John', 'fixed', 'the', 'fence', '?']}, 'answers': [{'string': ' Hot', 'parse': {'tree': '(ROOT (NP (NNP Hot)))', 'lemma': [(u'Hot', u'Hot', u'NNP')]}, 'tokens': ['Hot']}, {'string': ' Windy', 'parse': {'tree': '(ROOT (NP (NNP Windy)))', 'lemma': [(u'Windy', u'Windy', u'NNP')]}, 'tokens': ['Windy']}, {'string': ' Cold', 'parse': {'tree': '(ROOT (NP (NNP Cold)))', 'lemma': [(u'Cold', u'Cold', u'NNP')]}, 'tokens': ['Cold']}, {'string': ' Rainy', 'parse': {'tree': '(ROOT (ADVP (RB Rainy)))', 'lemma': [(u'Rainy', u'rainy', u'RB')]}, 'tokens': ['Rainy']}], 'mode': 0}]}
{'sentences': [{'string': ' I am going to get a hamster in a few weeks, or maybe a month!', 'parse': {'tree': '(ROOT (S (NP (PRP I)) (VP (VBP am) (VP (VBG going) (S (VP (TO to) (VP (VB get) (NP (DT a) (NN hamster)) (PP (IN in) (NP (NP (DT a) (JJ few) (NNS weeks)) (, ,) (CC or) (RB maybe) (NP (DT a) (NN month))))))))) (. !)))', 'lemma': [(u'I', u'I', u'PRP'), (u'am', u'be', u'VBP'), (u'going', u'go', u'VBG'), (u'to', u'to', u'TO'), (u'get', u'get', u'VB'), (u'a', u'a', u'DT'), (u'hamster', u'hamster', u'NN'), (u'in', u'in', u'IN'), (u'a', u'a', u'DT'), (u'few', u'few', u'JJ'), (u'weeks', u'week', u'NNS'), (u',', u',', u','), (u'or', u'or', u'CC'), (u'maybe', u'maybe', u'RB'), (u'a', u'a', u'DT'), (u'month', u'month', u'NN'), (u'!', u'!', u'.')]}, 'tokens': ['I', 'am', 'going', 'to', 'get', 'a', 'hamster', 'in', 'a', 'few', 'weeks', ',', 'or', 'maybe', 'a', 'month', '!']}, {'string': " I have been waiting for a hamster for years, so I do n't want to wait another day!", 'parse': {'tree': "(ROOT (S (S (NP (PRP I)) (VP (VBP have) (VP (VBN been) (VP (VBG waiting) (PP (IN for) (NP (NP (DT a) (NN hamster)) (PP (IN for) (NP (NNS years))))))))) (, ,) (IN so) (S (NP (PRP I)) (VP (VBP do) (RB n't) (VP (VB want) (S (VP (TO to) (VP (VB wait) (NP (DT another) (NN day)))))))) (. !)))", 'lemma': [(u'I', u'I', u'PRP'), (u'have', u'have', u'VBP'), (u'been', u'be', u'VBN'), (u'waiting', u'wait', u'VBG'), (u'for', u'for', u'IN'), (u'a', u'a', u'DT'), (u'hamster', u'hamster', u'NN'), (u'for', u'for', u'IN'), (u'years', u'year', u'NNS'), (u',', u',', u','), (u'so', u'so', u'IN'), (u'I', u'I', u'PRP'), (u'do', u'do', u'VBP'), (u"n't", u'not', u'RB'), (u'want', u'want', u'VB'), (u'to', u'to', u'TO'), (u'wait', u'wait', u'VB'), (u'another', u'another', u'DT'), (u'day', u'day', u'NN'), (u'!', u'!', u'.')]}, 'tokens': ['I', 'have', 'been', 'waiting', 'for', 'a', 'hamster', 'for', 'years', ',', 'so', 'I', 'do', "n't", 'want', 'to', 'wait', 'another', 'day', '!']}, {'string': " She 's going to have a big home with lots of paper towel rolls to eat, or even sleep in.", 'parse': {'tree': "(ROOT (S (NP (PRP She)) (VP (VBZ 's) (VP (VBG going) (S (VP (TO to) (VP (VB have) (NP (DT a) (JJ big) (NN home)) (PP (IN with) (NP (NP (NNS lots)) (PP (IN of) (NP (NN paper) (NN towel) (NNS rolls))))) (S (VP (TO to) (VP (VP (VB eat)) (, ,) (CC or) (ADVP (RB even)) (VP (VB sleep) (PRT (RP in))))))))))) (. .)))", 'lemma': [(u'She', u'she', u'PRP'), (u"'s", u'be', u'VBZ'), (u'going', u'go', u'VBG'), (u'to', u'to', u'TO'), (u'have', u'have', u'VB'), (u'a', u'a', u'DT'), (u'big', u'big', u'JJ'), (u'home', u'home', u'NN'), (u'with', u'with', u'IN'), (u'lots', u'lot', u'NNS'), (u'of', u'of', u'IN'), (u'paper', u'paper', u'NN'), (u'towel', u'towel', u'NN'), (u'rolls', u'roll', u'NNS'), (u'to', u'to', u'TO'), (u'eat', u'eat', u'VB'), (u',', u',', u','), (u'or', u'or', u'CC'), (u'even', u'even', u'RB'), (u'sleep', u'sleep', u'VB'), (u'in', u'in', u'RP'), (u'.', u'.', u'.')]}, 'tokens': ['She', "'s", 'going', 'to', 'have', 'a', 'big', 'home', 'with', 'lots', 'of', 'paper', 'towel', 'rolls', 'to', 'eat', ',', 'or', 'even', 'sleep', 'in', '.']}, {'string': " My little hamster is going to bite me in the beginning, as hamsters are nervous, but we 're going to end up being best friends.", 'parse': {'tree': "(ROOT (S (S (NP (PRP$ My) (JJ little) (NN hamster)) (VP (VBZ is) (VP (VBG going) (S (VP (TO to) (VP (VB bite) (NP (PRP me)) (PP (IN in) (NP (DT the) (NN beginning))) (, ,) (SBAR (IN as) (S (NP (NNS hamsters)) (VP (VBP are) (ADJP (JJ nervous))))))))))) (, ,) (CC but) (S (NP (PRP we)) (VP (VBP 're) (VP (VBG going) (S (VP (TO to) (VP (VB end) (PRT (RP up)) (S (VP (VBG being) (NP (JJS best) (NNS friends)))))))))) (. .)))", 'lemma': [(u'My', u'my', u'PRP$'), (u'little', u'little', u'JJ'), (u'hamster', u'hamster', u'NN'), (u'is', u'be', u'VBZ'), (u'going', u'go', u'VBG'), (u'to', u'to', u'TO'), (u'bite', u'bite', u'VB'), (u'me', u'I', u'PRP'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'beginning', u'beginning', u'NN'), (u',', u',', u','), (u'as', u'as', u'IN'), (u'hamsters', u'hamster', u'NNS'), (u'are', u'be', u'VBP'), (u'nervous', u'nervous', u'JJ'), (u',', u',', u','), (u'but', u'but', u'CC'), (u'we', u'we', u'PRP'), (u"'re", u'be', u'VBP'), (u'going', u'go', u'VBG'), (u'to', u'to', u'TO'), (u'end', u'end', u'VB'), (u'up', u'up', u'RP'), (u'being', u'be', u'VBG'), (u'best', u'best', u'JJS'), (u'friends', u'friend', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['My', 'little', 'hamster', 'is', 'going', 'to', 'bite', 'me', 'in', 'the', 'beginning', ',', 'as', 'hamsters', 'are', 'nervous', ',', 'but', 'we', "'re", 'going', 'to', 'end', 'up', 'being', 'best', 'friends', '.']}, {'string': " She 's going to sit on my shoulder as I do the dishes or do my homework.", 'parse': {'tree': "(ROOT (S (NP (PRP She)) (VP (VBZ 's) (VP (VBG going) (S (VP (TO to) (VP (VP (VB sit) (PP (IN on) (NP (PRP$ my) (NN shoulder))) (SBAR (IN as) (S (NP (PRP I)) (VP (VBP do) (NP (DT the) (NNS dishes)))))) (CC or) (VP (VB do) (NP (PRP$ my) (NN homework)))))))) (. .)))", 'lemma': [(u'She', u'she', u'PRP'), (u"'s", u'be', u'VBZ'), (u'going', u'go', u'VBG'), (u'to', u'to', u'TO'), (u'sit', u'sit', u'VB'), (u'on', u'on', u'IN'), (u'my', u'my', u'PRP$'), (u'shoulder', u'shoulder', u'NN'), (u'as', u'as', u'IN'), (u'I', u'I', u'PRP'), (u'do', u'do', u'VBP'), (u'the', u'the', u'DT'), (u'dishes', u'dish', u'NNS'), (u'or', u'or', u'CC'), (u'do', u'do', u'VB'), (u'my', u'my', u'PRP$'), (u'homework', u'homework', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['She', "'s", 'going', 'to', 'sit', 'on', 'my', 'shoulder', 'as', 'I', 'do', 'the', 'dishes', 'or', 'do', 'my', 'homework', '.']}, {'string': " When I 'm reading my favorite book, sleeping, or when I 'm showering, my hamster needs to go back to her home.", 'parse': {'tree': "(ROOT (S (SBAR (WHADVP (WRB When)) (S (NP (PRP I)) (VP (VBP 'm) (VP (VBG reading) (NP (NP (PRP$ my) (JJ favorite) (NN book)) (, ,) (NP (VBG sleeping)) (, ,) (CC or) (SBAR (WHADVP (WRB when)) (S (NP (PRP I)) (VP (VBP 'm) (VP (VBG showering)))))))))) (, ,) (NP (PRP$ my) (NN hamster)) (VP (VBZ needs) (S (VP (TO to) (VP (VB go) (PRT (RP back)) (PP (TO to) (NP (PRP$ her) (NN home))))))) (. .)))", 'lemma': [(u'When', u'when', u'WRB'), (u'I', u'I', u'PRP'), (u"'m", u'be', u'VBP'), (u'reading', u'read', u'VBG'), (u'my', u'my', u'PRP$'), (u'favorite', u'favorite', u'JJ'), (u'book', u'book', u'NN'), (u',', u',', u','), (u'sleeping', u'sleep', u'VBG'), (u',', u',', u','), (u'or', u'or', u'CC'), (u'when', u'when', u'WRB'), (u'I', u'I', u'PRP'), (u"'m", u'be', u'VBP'), (u'showering', u'shower', u'VBG'), (u',', u',', u','), (u'my', u'my', u'PRP$'), (u'hamster', u'hamster', u'NN'), (u'needs', u'need', u'VBZ'), (u'to', u'to', u'TO'), (u'go', u'go', u'VB'), (u'back', u'back', u'RP'), (u'to', u'to', u'TO'), (u'her', u'she', u'PRP$'), (u'home', u'home', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['When', 'I', "'m", 'reading', 'my', 'favorite', 'book', ',', 'sleeping', ',', 'or', 'when', 'I', "'m", 'showering', ',', 'my', 'hamster', 'needs', 'to', 'go', 'back', 'to', 'her', 'home', '.']}, {'string': ' I think that she is going to pee without warning and at the worst times, I am going to scratch her little belly and love her all the more when she pushes carrots into her mouth.', 'parse': {'tree': '(ROOT (S (S (NP (PRP I)) (VP (VBP think) (SBAR (IN that) (S (NP (PRP she)) (VP (VBZ is) (VP (VBG going) (S (VP (TO to) (VP (VB pee) (PP (PP (IN without) (NP (NN warning))) (CC and) (PP (IN at) (NP (DT the) (JJS worst) (NNS times))))))))))))) (, ,) (NP (PRP I)) (VP (VBP am) (VP (VBG going) (S (VP (TO to) (VP (VP (VB scratch) (NP (PRP$ her) (JJ little) (NN belly))) (CC and) (VP (VB love) (S (NP (PRP her)) (NP (NP (PDT all) (DT the) (JJR more)) (SBAR (WHADVP (WRB when)) (S (NP (PRP she)) (VP (VBZ pushes) (NP (NNS carrots)) (PP (IN into) (NP (PRP$ her) (NN mouth)))))))))))))) (. .)))', 'lemma': [(u'I', u'I', u'PRP'), (u'think', u'think', u'VBP'), (u'that', u'that', u'IN'), (u'she', u'she', u'PRP'), (u'is', u'be', u'VBZ'), (u'going', u'go', u'VBG'), (u'to', u'to', u'TO'), (u'pee', u'pee', u'VB'), (u'without', u'without', u'IN'), (u'warning', u'warning', u'NN'), (u'and', u'and', u'CC'), (u'at', u'at', u'IN'), (u'the', u'the', u'DT'), (u'worst', u'worst', u'JJS'), (u'times', u'time', u'NNS'), (u',', u',', u','), (u'I', u'I', u'PRP'), (u'am', u'be', u'VBP'), (u'going', u'go', u'VBG'), (u'to', u'to', u'TO'), (u'scratch', u'scratch', u'VB'), (u'her', u'she', u'PRP$'), (u'little', u'little', u'JJ'), (u'belly', u'belly', u'NN'), (u'and', u'and', u'CC'), (u'love', u'love', u'VB'), (u'her', u'she', u'PRP'), (u'all', u'all', u'PDT'), (u'the', u'the', u'DT'), (u'more', u'more', u'JJR'), (u'when', u'when', u'WRB'), (u'she', u'she', u'PRP'), (u'pushes', u'push', u'VBZ'), (u'carrots', u'carrot', u'NNS'), (u'into', u'into', u'IN'), (u'her', u'she', u'PRP$'), (u'mouth', u'mouth', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['I', 'think', 'that', 'she', 'is', 'going', 'to', 'pee', 'without', 'warning', 'and', 'at', 'the', 'worst', 'times', ',', 'I', 'am', 'going', 'to', 'scratch', 'her', 'little', 'belly', 'and', 'love', 'her', 'all', 'the', 'more', 'when', 'she', 'pushes', 'carrots', 'into', 'her', 'mouth', '.']}, {'string': ' I am sure that my little hamster is going to get into a lot more trouble, too.', 'parse': {'tree': '(ROOT (S (NP (PRP I)) (VP (VBP am) (ADJP (JJ sure) (SBAR (IN that) (S (NP (PRP$ my) (JJ little) (NN hamster)) (VP (VBZ is) (VP (VBG going) (S (VP (TO to) (VP (VB get) (PP (IN into) (NP (ADJP (NP (DT a) (RB lot)) (JJR more)) (NN trouble))) (, ,) (ADVP (RB too))))))))))) (. .)))', 'lemma': [(u'I', u'I', u'PRP'), (u'am', u'be', u'VBP'), (u'sure', u'sure', u'JJ'), (u'that', u'that', u'IN'), (u'my', u'my', u'PRP$'), (u'little', u'little', u'JJ'), (u'hamster', u'hamster', u'NN'), (u'is', u'be', u'VBZ'), (u'going', u'go', u'VBG'), (u'to', u'to', u'TO'), (u'get', u'get', u'VB'), (u'into', u'into', u'IN'), (u'a', u'a', u'DT'), (u'lot', u'lot', u'RB'), (u'more', u'more', u'JJR'), (u'trouble', u'trouble', u'NN'), (u',', u',', u','), (u'too', u'too', u'RB'), (u'.', u'.', u'.')]}, 'tokens': ['I', 'am', 'sure', 'that', 'my', 'little', 'hamster', 'is', 'going', 'to', 'get', 'into', 'a', 'lot', 'more', 'trouble', ',', 'too', '.']}, {'string': " Maybe she 'll be scared of thunder and try to run away.", 'parse': {'tree': "(ROOT (S (ADVP (RB Maybe)) (NP (PRP she)) (VP (MD 'll) (VP (VP (VB be) (VP (VBN scared) (PP (IN of) (NP (NN thunder))))) (CC and) (VP (VB try) (S (VP (TO to) (VP (VB run) (PRT (RP away)))))))) (. .)))", 'lemma': [(u'Maybe', u'maybe', u'RB'), (u'she', u'she', u'PRP'), (u"'ll", u"'ll", u'MD'), (u'be', u'be', u'VB'), (u'scared', u'scare', u'VBN'), (u'of', u'of', u'IN'), (u'thunder', u'thunder', u'NN'), (u'and', u'and', u'CC'), (u'try', u'try', u'VB'), (u'to', u'to', u'TO'), (u'run', u'run', u'VB'), (u'away', u'away', u'RP'), (u'.', u'.', u'.')]}, 'tokens': ['Maybe', 'she', "'ll", 'be', 'scared', 'of', 'thunder', 'and', 'try', 'to', 'run', 'away', '.']}, {'string': " Or maybe she 'll be so curious about going outside to the street that she might get hurt.", 'parse': {'tree': "(ROOT (S (CC Or) (ADVP (RB maybe)) (NP (PRP she)) (VP (MD 'll) (VP (VB be) (ADJP (RB so) (JJ curious) (PP (IN about) (S (VP (VBG going) (ADVP (IN outside) (PP (TO to) (NP (DT the) (NN street)))) (SBAR (IN that) (S (NP (PRP she)) (VP (MD might) (VP (VB get) (VP (VBN hurt)))))))))))) (. .)))", 'lemma': [(u'Or', u'or', u'CC'), (u'maybe', u'maybe', u'RB'), (u'she', u'she', u'PRP'), (u"'ll", u"'ll", u'MD'), (u'be', u'be', u'VB'), (u'so', u'so', u'RB'), (u'curious', u'curious', u'JJ'), (u'about', u'about', u'IN'), (u'going', u'go', u'VBG'), (u'outside', u'outside', u'IN'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'street', u'street', u'NN'), (u'that', u'that', u'IN'), (u'she', u'she', u'PRP'), (u'might', u'might', u'MD'), (u'get', u'get', u'VB'), (u'hurt', u'hurt', u'VBN'), (u'.', u'.', u'.')]}, 'tokens': ['Or', 'maybe', 'she', "'ll", 'be', 'so', 'curious', 'about', 'going', 'outside', 'to', 'the', 'street', 'that', 'she', 'might', 'get', 'hurt', '.']}, {'string': " I do not care about the amount of trouble that my little hamster gets into I 'll always make sure she has water to drink, food to eat, and love from my heart.", 'parse': {'tree': "(ROOT (S (NP (PRP I)) (VP (VBP do) (RB not) (VP (VB care) (PP (IN about) (NP (NP (DT the) (NN amount)) (PP (IN of) (NP (NN trouble))))) (SBAR (IN that) (S (NP (PRP$ my) (JJ little) (NN hamster)) (VP (VBZ gets) (PP (IN into) (S (NP (PRP I)) (VP (MD 'll) (ADVP (RB always)) (VP (VB make) (ADJP (JJ sure) (SBAR (S (NP (PRP she)) (VP (VBZ has) (NP (NP (NN water) (S (VP (TO to) (VP (VB drink))))) (, ,) (NP (NN food) (S (VP (TO to) (VP (VB eat))))) (, ,) (CC and) (NP (NP (NN love)) (PP (IN from) (NP (PRP$ my) (NN heart)))))))))))))))))) (. .)))", 'lemma': [(u'I', u'I', u'PRP'), (u'do', u'do', u'VBP'), (u'not', u'not', u'RB'), (u'care', u'care', u'VB'), (u'about', u'about', u'IN'), (u'the', u'the', u'DT'), (u'amount', u'amount', u'NN'), (u'of', u'of', u'IN'), (u'trouble', u'trouble', u'NN'), (u'that', u'that', u'IN'), (u'my', u'my', u'PRP$'), (u'little', u'little', u'JJ'), (u'hamster', u'hamster', u'NN'), (u'gets', u'get', u'VBZ'), (u'into', u'into', u'IN'), (u'I', u'I', u'PRP'), (u"'ll", u"'ll", u'MD'), (u'always', u'always', u'RB'), (u'make', u'make', u'VB'), (u'sure', u'sure', u'JJ'), (u'she', u'she', u'PRP'), (u'has', u'have', u'VBZ'), (u'water', u'water', u'NN'), (u'to', u'to', u'TO'), (u'drink', u'drink', u'VB'), (u',', u',', u','), (u'food', u'food', u'NN'), (u'to', u'to', u'TO'), (u'eat', u'eat', u'VB'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'love', u'love', u'NN'), (u'from', u'from', u'IN'), (u'my', u'my', u'PRP$'), (u'heart', u'heart', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['I', 'do', 'not', 'care', 'about', 'the', 'amount', 'of', 'trouble', 'that', 'my', 'little', 'hamster', 'gets', 'into', 'I', "'ll", 'always', 'make', 'sure', 'she', 'has', 'water', 'to', 'drink', ',', 'food', 'to', 'eat', ',', 'and', 'love', 'from', 'my', 'heart', '.']}], 'questions': [{'question': {'string': ' When am I going to get a hamster?', 'parse': {'tree': '(ROOT (SBARQ (WHADVP (WRB When)) (SQ (VBP am) (NP (PRP I)) (VP (VBG going) (S (VP (TO to) (VP (VB get) (NP (DT a) (NN hamster))))))) (. ?)))', 'lemma': [(u'When', u'when', u'WRB'), (u'am', u'be', u'VBP'), (u'I', u'I', u'PRP'), (u'going', u'go', u'VBG'), (u'to', u'to', u'TO'), (u'get', u'get', u'VB'), (u'a', u'a', u'DT'), (u'hamster', u'hamster', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['When', 'am', 'I', 'going', 'to', 'get', 'a', 'hamster', '?']}, 'answers': [{'string': ' Today', 'parse': {'tree': '(ROOT (NP (NNP Today)))', 'lemma': [(u'Today', u'Today', u'NNP')]}, 'tokens': ['Today']}, {'string': ' In a day', 'parse': {'tree': '(ROOT (PP (IN In) (NP (DT a) (NN day))))', 'lemma': [(u'In', u'in', u'IN'), (u'a', u'a', u'DT'), (u'day', u'day', u'NN')]}, 'tokens': ['In', 'a', 'day']}, {'string': ' In a few weeks, or maybe a month', 'parse': {'tree': '(ROOT (PP (IN In) (NP (NP (DT a) (JJ few) (NNS weeks)) (, ,) (CC or) (RB maybe) (NP (DT a) (NN month)))))', 'lemma': [(u'In', u'in', u'IN'), (u'a', u'a', u'DT'), (u'few', u'few', u'JJ'), (u'weeks', u'week', u'NNS'), (u',', u',', u','), (u'or', u'or', u'CC'), (u'maybe', u'maybe', u'RB'), (u'a', u'a', u'DT'), (u'month', u'month', u'NN')]}, 'tokens': ['In', 'a', 'few', 'weeks', ',', 'or', 'maybe', 'a', 'month']}, {'string': ' In a month or maybe a year', 'parse': {'tree': '(ROOT (PP (IN In) (NP (NP (DT a) (NN month)) (CC or) (NP (RB maybe) (DT a) (NN year)))))', 'lemma': [(u'In', u'in', u'IN'), (u'a', u'a', u'DT'), (u'month', u'month', u'NN'), (u'or', u'or', u'CC'), (u'maybe', u'maybe', u'RB'), (u'a', u'a', u'DT'), (u'year', u'year', u'NN')]}, 'tokens': ['In', 'a', 'month', 'or', 'maybe', 'a', 'year']}], 'mode': 1}, {'question': {'string': ' What does my hamster need to be happy?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ does) (NP (PRP$ my) (NN hamster)) (VP (VB need) (S (VP (TO to) (VP (VB be) (ADJP (JJ happy))))))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'does', u'do', u'VBZ'), (u'my', u'my', u'PRP$'), (u'hamster', u'hamster', u'NN'), (u'need', u'need', u'VB'), (u'to', u'to', u'TO'), (u'be', u'be', u'VB'), (u'happy', u'happy', u'JJ'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'does', 'my', 'hamster', 'need', 'to', 'be', 'happy', '?']}, 'answers': [{'string': ' Love from my heart, a big home, cookies, and another home.', 'parse': {'tree': '(ROOT (NP (NP (NN Love)) (PP (IN from) (NP (NP (PRP$ my) (NN heart)) (, ,) (NP (DT a) (JJ big) (NN home)) (, ,) (NP (NNS cookies)) (, ,) (CC and) (NP (DT another) (NN home)))) (. .)))', 'lemma': [(u'Love', u'love', u'NN'), (u'from', u'from', u'IN'), (u'my', u'my', u'PRP$'), (u'heart', u'heart', u'NN'), (u',', u',', u','), (u'a', u'a', u'DT'), (u'big', u'big', u'JJ'), (u'home', u'home', u'NN'), (u',', u',', u','), (u'cookies', u'cookie', u'NNS'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'another', u'another', u'DT'), (u'home', u'home', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Love', 'from', 'my', 'heart', ',', 'a', 'big', 'home', ',', 'cookies', ',', 'and', 'another', 'home', '.']}, {'string': ' A big home, water, food, and love from my heart.', 'parse': {'tree': '(ROOT (NP (NP (DT A) (JJ big) (NN home)) (, ,) (NP (NP (NN water) (, ,) (NN food) (, ,) (CC and) (NN love)) (PP (IN from) (NP (PRP$ my) (NN heart)))) (. .)))', 'lemma': [(u'A', u'a', u'DT'), (u'big', u'big', u'JJ'), (u'home', u'home', u'NN'), (u',', u',', u','), (u'water', u'water', u'NN'), (u',', u',', u','), (u'food', u'food', u'NN'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'love', u'love', u'NN'), (u'from', u'from', u'IN'), (u'my', u'my', u'PRP$'), (u'heart', u'heart', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['A', 'big', 'home', ',', 'water', ',', 'food', ',', 'and', 'love', 'from', 'my', 'heart', '.']}, {'string': ' A tiny home, Coke, food, and love from my heart.', 'parse': {'tree': '(ROOT (NP (NP (DT A) (JJ tiny) (NN home)) (, ,) (NP (NP (NN Coke) (, ,) (NN food) (, ,) (CC and) (NN love)) (PP (IN from) (NP (PRP$ my) (NN heart)))) (. .)))', 'lemma': [(u'A', u'a', u'DT'), (u'tiny', u'tiny', u'JJ'), (u'home', u'home', u'NN'), (u',', u',', u','), (u'Coke', u'coke', u'NN'), (u',', u',', u','), (u'food', u'food', u'NN'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'love', u'love', u'NN'), (u'from', u'from', u'IN'), (u'my', u'my', u'PRP$'), (u'heart', u'heart', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['A', 'tiny', 'home', ',', 'Coke', ',', 'food', ',', 'and', 'love', 'from', 'my', 'heart', '.']}, {'string': ' Water, food, love from my heart, and a tiny home.', 'parse': {'tree': '(ROOT (S (NP (NP (NNP Water)) (, ,) (NP (NN food)) (, ,)) (VP (VBP love) (PP (IN from) (NP (NP (PRP$ my) (NN heart)) (, ,) (CC and) (NP (DT a) (JJ tiny) (NN home))))) (. .)))', 'lemma': [(u'Water', u'Water', u'NNP'), (u',', u',', u','), (u'food', u'food', u'NN'), (u',', u',', u','), (u'love', u'love', u'VBP'), (u'from', u'from', u'IN'), (u'my', u'my', u'PRP$'), (u'heart', u'heart', u'NN'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'a', u'a', u'DT'), (u'tiny', u'tiny', u'JJ'), (u'home', u'home', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Water', ',', 'food', ',', 'love', 'from', 'my', 'heart', ',', 'and', 'a', 'tiny', 'home', '.']}], 'mode': 0}, {'question': {'string': ' When is my hamster sitting on my shoulder?', 'parse': {'tree': '(ROOT (SBARQ (WHADVP (WRB When)) (SQ (VBZ is) (NP (PRP$ my) (NN hamster)) (VP (VBG sitting) (PP (IN on) (NP (PRP$ my) (NN shoulder))))) (. ?)))', 'lemma': [(u'When', u'when', u'WRB'), (u'is', u'be', u'VBZ'), (u'my', u'my', u'PRP$'), (u'hamster', u'hamster', u'NN'), (u'sitting', u'sit', u'VBG'), (u'on', u'on', u'IN'), (u'my', u'my', u'PRP$'), (u'shoulder', u'shoulder', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['When', 'is', 'my', 'hamster', 'sitting', 'on', 'my', 'shoulder', '?']}, 'answers': [{'string': " When I 'm reading my favorite book or sleeping.", 'parse': {'tree': "(ROOT (FRAG (SBAR (WHADVP (WRB When)) (S (NP (PRP I)) (VP (VBP 'm) (VP (VP (VBG reading) (NP (PRP$ my) (JJ favorite) (NN book))) (CC or) (VP (VBG sleeping)))))) (. .)))", 'lemma': [(u'When', u'when', u'WRB'), (u'I', u'I', u'PRP'), (u"'m", u'be', u'VBP'), (u'reading', u'read', u'VBG'), (u'my', u'my', u'PRP$'), (u'favorite', u'favorite', u'JJ'), (u'book', u'book', u'NN'), (u'or', u'or', u'CC'), (u'sleeping', u'sleep', u'VBG'), (u'.', u'.', u'.')]}, 'tokens': ['When', 'I', "'m", 'reading', 'my', 'favorite', 'book', 'or', 'sleeping', '.']}, {'string': " When I 'm doing the dishes or my homework.", 'parse': {'tree': "(ROOT (FRAG (SBAR (WHADVP (WRB When)) (S (NP (PRP I)) (VP (VBP 'm) (VP (VBG doing) (NP (NP (DT the) (NNS dishes)) (CC or) (NP (PRP$ my) (NN homework))))))) (. .)))", 'lemma': [(u'When', u'when', u'WRB'), (u'I', u'I', u'PRP'), (u"'m", u'be', u'VBP'), (u'doing', u'do', u'VBG'), (u'the', u'the', u'DT'), (u'dishes', u'dish', u'NNS'), (u'or', u'or', u'CC'), (u'my', u'my', u'PRP$'), (u'homework', u'homework', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['When', 'I', "'m", 'doing', 'the', 'dishes', 'or', 'my', 'homework', '.']}, {'string': " When I 'm sleeping or doing the dishes", 'parse': {'tree': "(ROOT (SBAR (WHADVP (WRB When)) (S (NP (PRP I)) (VP (VBP 'm) (VP (VBG sleeping) (CC or) (VBG doing) (NP (DT the) (NNS dishes)))))))", 'lemma': [(u'When', u'when', u'WRB'), (u'I', u'I', u'PRP'), (u"'m", u'be', u'VBP'), (u'sleeping', u'sleep', u'VBG'), (u'or', u'or', u'CC'), (u'doing', u'do', u'VBG'), (u'the', u'the', u'DT'), (u'dishes', u'dish', u'NNS')]}, 'tokens': ['When', 'I', "'m", 'sleeping', 'or', 'doing', 'the', 'dishes']}, {'string': " When I 'm taking a shower or eating.", 'parse': {'tree': "(ROOT (FRAG (SBAR (WHADVP (WRB When)) (S (NP (PRP I)) (VP (VBP 'm) (VP (VP (VBG taking) (NP (DT a) (NN shower))) (CC or) (VP (VBG eating)))))) (. .)))", 'lemma': [(u'When', u'when', u'WRB'), (u'I', u'I', u'PRP'), (u"'m", u'be', u'VBP'), (u'taking', u'take', u'VBG'), (u'a', u'a', u'DT'), (u'shower', u'shower', u'NN'), (u'or', u'or', u'CC'), (u'eating', u'eat', u'VBG'), (u'.', u'.', u'.')]}, 'tokens': ['When', 'I', "'m", 'taking', 'a', 'shower', 'or', 'eating', '.']}], 'mode': 1}, {'question': {'string': " What 'll my hamster do that is bad?", 'parse': {'tree': "(ROOT (SBARQ (WHNP (WP What)) (SQ (VP (MD 'll)) (NP (PRP$ my) (NN hamster)) (VP (VB do) (SBAR (IN that) (S (VP (VBZ is) (ADJP (JJ bad))))))) (. ?)))", 'lemma': [(u'What', u'what', u'WP'), (u"'ll", u"'ll", u'MD'), (u'my', u'my', u'PRP$'), (u'hamster', u'hamster', u'NN'), (u'do', u'do', u'VB'), (u'that', u'that', u'IN'), (u'is', u'be', u'VBZ'), (u'bad', u'bad', u'JJ'), (u'?', u'?', u'.')]}, 'tokens': ['What', "'ll", 'my', 'hamster', 'do', 'that', 'is', 'bad', '?']}, 'answers': [{'string': ' Bite me, run away, eat candy, try to go outside.', 'parse': {'tree': '(ROOT (S (VP (VP (VB Bite) (NP (PRP me))) (, ,) (VP (VB run) (PRT (RP away)) (, ,) (VB eat) (NP (NN candy))) (, ,) (VP (VB try) (S (VP (TO to) (VP (VB go) (ADVP (RB outside))))))) (. .)))', 'lemma': [(u'Bite', u'bite', u'VB'), (u'me', u'I', u'PRP'), (u',', u',', u','), (u'run', u'run', u'VB'), (u'away', u'away', u'RP'), (u',', u',', u','), (u'eat', u'eat', u'VB'), (u'candy', u'candy', u'NN'), (u',', u',', u','), (u'try', u'try', u'VB'), (u'to', u'to', u'TO'), (u'go', u'go', u'VB'), (u'outside', u'outside', u'RB'), (u'.', u'.', u'.')]}, 'tokens': ['Bite', 'me', ',', 'run', 'away', ',', 'eat', 'candy', ',', 'try', 'to', 'go', 'outside', '.']}, {'string': ' Run away, play a lot, eat too much, try to go outside.', 'parse': {'tree': '(ROOT (S (ADVP (RB Run) (RB away)) (, ,) (VP (VP (VB play) (NP (DT a) (NN lot))) (, ,) (VP (VB eat) (ADVP (RB too) (RB much))) (, ,) (VP (VB try) (S (VP (TO to) (VP (VB go) (ADVP (RB outside))))))) (. .)))', 'lemma': [(u'Run', u'run', u'RB'), (u'away', u'away', u'RB'), (u',', u',', u','), (u'play', u'play', u'VB'), (u'a', u'a', u'DT'), (u'lot', u'lot', u'NN'), (u',', u',', u','), (u'eat', u'eat', u'VB'), (u'too', u'too', u'RB'), (u'much', u'much', u'RB'), (u',', u',', u','), (u'try', u'try', u'VB'), (u'to', u'to', u'TO'), (u'go', u'go', u'VB'), (u'outside', u'outside', u'RB'), (u'.', u'.', u'.')]}, 'tokens': ['Run', 'away', ',', 'play', 'a', 'lot', ',', 'eat', 'too', 'much', ',', 'try', 'to', 'go', 'outside', '.']}, {'string': ' Bite me, pee on me, run away, try to go outside.', 'parse': {'tree': '(ROOT (S (S (VP (VB Bite) (NP (PRP me)))) (, ,) (NP (NP (NN pee)) (PP (IN on) (NP (PRP me))) (, ,) (VP (VBN run) (PRT (RP away))) (, ,)) (VP (VBP try) (S (VP (TO to) (VP (VB go) (ADVP (RB outside)))))) (. .)))', 'lemma': [(u'Bite', u'bite', u'VB'), (u'me', u'I', u'PRP'), (u',', u',', u','), (u'pee', u'pee', u'NN'), (u'on', u'on', u'IN'), (u'me', u'I', u'PRP'), (u',', u',', u','), (u'run', u'run', u'VBN'), (u'away', u'away', u'RP'), (u',', u',', u','), (u'try', u'try', u'VBP'), (u'to', u'to', u'TO'), (u'go', u'go', u'VB'), (u'outside', u'outside', u'RB'), (u'.', u'.', u'.')]}, 'tokens': ['Bite', 'me', ',', 'pee', 'on', 'me', ',', 'run', 'away', ',', 'try', 'to', 'go', 'outside', '.']}, {'string': ' Try to go outside, pee on me, bite me, sleep too much.', 'parse': {'tree': '(ROOT (S (VP (VB Try) (S (VP (TO to) (VP (VP (VB go) (ADVP (RB outside))) (, ,) (VP (VB pee) (PP (IN on) (NP (PRP me)))) (, ,) (VP (VB bite) (NP (PRP me))) (, ,) (VP (VB sleep) (ADVP (RB too) (RB much))))))) (. .)))', 'lemma': [(u'Try', u'try', u'VB'), (u'to', u'to', u'TO'), (u'go', u'go', u'VB'), (u'outside', u'outside', u'RB'), (u',', u',', u','), (u'pee', u'pee', u'VB'), (u'on', u'on', u'IN'), (u'me', u'I', u'PRP'), (u',', u',', u','), (u'bite', u'bite', u'VB'), (u'me', u'I', u'PRP'), (u',', u',', u','), (u'sleep', u'sleep', u'VB'), (u'too', u'too', u'RB'), (u'much', u'much', u'RB'), (u'.', u'.', u'.')]}, 'tokens': ['Try', 'to', 'go', 'outside', ',', 'pee', 'on', 'me', ',', 'bite', 'me', ',', 'sleep', 'too', 'much', '.']}], 'mode': 0}]}
{'sentences': [{'string': ' Jenny was standing on a rock.', 'parse': {'tree': '(ROOT (S (NP (NNP Jenny)) (VP (VBD was) (VP (VBG standing) (PP (IN on) (NP (DT a) (NN rock))))) (. .)))', 'lemma': [(u'Jenny', u'Jenny', u'NNP'), (u'was', u'be', u'VBD'), (u'standing', u'stand', u'VBG'), (u'on', u'on', u'IN'), (u'a', u'a', u'DT'), (u'rock', u'rock', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Jenny', 'was', 'standing', 'on', 'a', 'rock', '.']}, {'string': ' Suddenly, she had to sneeze.', 'parse': {'tree': '(ROOT (S (ADVP (RB Suddenly)) (, ,) (NP (PRP she)) (VP (VBD had) (S (VP (TO to) (VP (VB sneeze))))) (. .)))', 'lemma': [(u'Suddenly', u'suddenly', u'RB'), (u',', u',', u','), (u'she', u'she', u'PRP'), (u'had', u'have', u'VBD'), (u'to', u'to', u'TO'), (u'sneeze', u'sneeze', u'VB'), (u'.', u'.', u'.')]}, 'tokens': ['Suddenly', ',', 'she', 'had', 'to', 'sneeze', '.']}, {'string': ' After she sneezed, she walked away.', 'parse': {'tree': '(ROOT (S (SBAR (IN After) (S (NP (PRP she)) (VP (VBD sneezed)))) (, ,) (NP (PRP she)) (VP (VBD walked) (PRT (RP away))) (. .)))', 'lemma': [(u'After', u'after', u'IN'), (u'she', u'she', u'PRP'), (u'sneezed', u'sneeze', u'VBD'), (u',', u',', u','), (u'she', u'she', u'PRP'), (u'walked', u'walk', u'VBD'), (u'away', u'away', u'RP'), (u'.', u'.', u'.')]}, 'tokens': ['After', 'she', 'sneezed', ',', 'she', 'walked', 'away', '.']}, {'string': ' She finally got to the park and saw her daddy.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (ADVP (RB finally)) (VP (VP (VBD got) (PP (TO to) (NP (DT the) (NN park)))) (CC and) (VP (VBD saw) (NP (PRP$ her) (NN daddy)))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'finally', u'finally', u'RB'), (u'got', u'get', u'VBD'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'park', u'park', u'NN'), (u'and', u'and', u'CC'), (u'saw', u'see', u'VBD'), (u'her', u'she', u'PRP$'), (u'daddy', u'daddy', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'finally', 'got', 'to', 'the', 'park', 'and', 'saw', 'her', 'daddy', '.']}, {'string': ' Her daddy gave her some milk.', 'parse': {'tree': '(ROOT (S (NP (PRP$ Her) (NN daddy)) (VP (VBD gave) (NP (PRP her)) (NP (DT some) (NN milk))) (. .)))', 'lemma': [(u'Her', u'she', u'PRP$'), (u'daddy', u'daddy', u'NN'), (u'gave', u'give', u'VBD'), (u'her', u'she', u'PRP'), (u'some', u'some', u'DT'), (u'milk', u'milk', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Her', 'daddy', 'gave', 'her', 'some', 'milk', '.']}, {'string': ' Jenny drank the milk in a big hurry.', 'parse': {'tree': '(ROOT (S (NP (NNP Jenny)) (VP (VBD drank) (NP (DT the) (NN milk)) (PP (IN in) (NP (DT a) (JJ big) (NN hurry)))) (. .)))', 'lemma': [(u'Jenny', u'Jenny', u'NNP'), (u'drank', u'drink', u'VBD'), (u'the', u'the', u'DT'), (u'milk', u'milk', u'NN'), (u'in', u'in', u'IN'), (u'a', u'a', u'DT'), (u'big', u'big', u'JJ'), (u'hurry', u'hurry', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Jenny', 'drank', 'the', 'milk', 'in', 'a', 'big', 'hurry', '.']}, {'string': ' She loved milk.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBD loved) (NP (NN milk))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'loved', u'love', u'VBD'), (u'milk', u'milk', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'loved', 'milk', '.']}, {'string': ' She walked over and turned a switch.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VP (VBD walked) (PRT (RP over))) (CC and) (VP (VBD turned) (NP (DT a) (NN switch)))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'walked', u'walk', u'VBD'), (u'over', u'over', u'RP'), (u'and', u'and', u'CC'), (u'turned', u'turn', u'VBD'), (u'a', u'a', u'DT'), (u'switch', u'switch', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'walked', 'over', 'and', 'turned', 'a', 'switch', '.']}, {'string': ' She walked to the lake.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBD walked) (PP (TO to) (NP (DT the) (NN lake)))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'walked', u'walk', u'VBD'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'lake', u'lake', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'walked', 'to', 'the', 'lake', '.']}, {'string': ' Jenny was in a big hurry and went really fast.', 'parse': {'tree': '(ROOT (S (NP (NNP Jenny)) (VP (VP (VBD was) (PP (IN in) (NP (DT a) (JJ big) (NN hurry)))) (CC and) (VP (VBD went) (ADJP (RB really) (JJ fast)))) (. .)))', 'lemma': [(u'Jenny', u'Jenny', u'NNP'), (u'was', u'be', u'VBD'), (u'in', u'in', u'IN'), (u'a', u'a', u'DT'), (u'big', u'big', u'JJ'), (u'hurry', u'hurry', u'NN'), (u'and', u'and', u'CC'), (u'went', u'go', u'VBD'), (u'really', u'really', u'RB'), (u'fast', u'fast', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['Jenny', 'was', 'in', 'a', 'big', 'hurry', 'and', 'went', 'really', 'fast', '.']}, {'string': ' She got to the lake and sat down.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VP (VBD got) (PP (TO to) (NP (DT the) (NN lake)))) (CC and) (VP (VBD sat) (PRT (RP down)))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'got', u'get', u'VBD'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'lake', u'lake', u'NN'), (u'and', u'and', u'CC'), (u'sat', u'sit', u'VBD'), (u'down', u'down', u'RP'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'got', 'to', 'the', 'lake', 'and', 'sat', 'down', '.']}, {'string': ' Jenny began thinking.', 'parse': {'tree': '(ROOT (S (NP (NNP Jenny)) (VP (VBD began) (S (VP (VBG thinking)))) (. .)))', 'lemma': [(u'Jenny', u'Jenny', u'NNP'), (u'began', u'begin', u'VBD'), (u'thinking', u'think', u'VBG'), (u'.', u'.', u'.')]}, 'tokens': ['Jenny', 'began', 'thinking', '.']}, {'string': ' Jenny wanted to go on a trip to Florida.', 'parse': {'tree': '(ROOT (S (NP (NNP Jenny)) (VP (VBD wanted) (S (VP (TO to) (VP (VB go) (PP (IN on) (NP (DT a) (NN trip))) (PP (TO to) (NP (NNP Florida))))))) (. .)))', 'lemma': [(u'Jenny', u'Jenny', u'NNP'), (u'wanted', u'want', u'VBD'), (u'to', u'to', u'TO'), (u'go', u'go', u'VB'), (u'on', u'on', u'IN'), (u'a', u'a', u'DT'), (u'trip', u'trip', u'NN'), (u'to', u'to', u'TO'), (u'Florida', u'Florida', u'NNP'), (u'.', u'.', u'.')]}, 'tokens': ['Jenny', 'wanted', 'to', 'go', 'on', 'a', 'trip', 'to', 'Florida', '.']}, {'string': ' Jenny did not want to go someplace cold.', 'parse': {'tree': '(ROOT (S (NP (NNP Jenny)) (VP (VBD did) (RB not) (VP (VB want) (S (VP (TO to) (VP (VB go) (NP (JJ someplace) (NN cold))))))) (. .)))', 'lemma': [(u'Jenny', u'Jenny', u'NNP'), (u'did', u'do', u'VBD'), (u'not', u'not', u'RB'), (u'want', u'want', u'VB'), (u'to', u'to', u'TO'), (u'go', u'go', u'VB'), (u'someplace', u'someplace', u'JJ'), (u'cold', u'cold', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Jenny', 'did', 'not', 'want', 'to', 'go', 'someplace', 'cold', '.']}, {'string': ' Jenny did not want to go to the moon.', 'parse': {'tree': '(ROOT (S (NP (NNP Jenny)) (VP (VBD did) (RB not) (VP (VB want) (S (VP (TO to) (VP (VB go) (PP (TO to) (NP (DT the) (NN moon)))))))) (. .)))', 'lemma': [(u'Jenny', u'Jenny', u'NNP'), (u'did', u'do', u'VBD'), (u'not', u'not', u'RB'), (u'want', u'want', u'VB'), (u'to', u'to', u'TO'), (u'go', u'go', u'VB'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'moon', u'moon', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Jenny', 'did', 'not', 'want', 'to', 'go', 'to', 'the', 'moon', '.']}, {'string': ' Jenny did not want to go to France.', 'parse': {'tree': '(ROOT (S (NP (NNP Jenny)) (VP (VBD did) (RB not) (VP (VB want) (S (VP (TO to) (VP (VB go) (PP (TO to) (NP (NNP France)))))))) (. .)))', 'lemma': [(u'Jenny', u'Jenny', u'NNP'), (u'did', u'do', u'VBD'), (u'not', u'not', u'RB'), (u'want', u'want', u'VB'), (u'to', u'to', u'TO'), (u'go', u'go', u'VB'), (u'to', u'to', u'TO'), (u'France', u'France', u'NNP'), (u'.', u'.', u'.')]}, 'tokens': ['Jenny', 'did', 'not', 'want', 'to', 'go', 'to', 'France', '.']}, {'string': ' Jenny stood up to fold her towel.', 'parse': {'tree': '(ROOT (S (NP (NNP Jenny)) (VP (VBD stood) (PRT (RP up)) (S (VP (TO to) (VP (VB fold) (NP (PRP$ her) (NN towel)))))) (. .)))', 'lemma': [(u'Jenny', u'Jenny', u'NNP'), (u'stood', u'stand', u'VBD'), (u'up', u'up', u'RP'), (u'to', u'to', u'TO'), (u'fold', u'fold', u'VB'), (u'her', u'she', u'PRP$'), (u'towel', u'towel', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Jenny', 'stood', 'up', 'to', 'fold', 'her', 'towel', '.']}, {'string': ' She never folded her shirts or pants.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (ADVP (RB never)) (VP (VBD folded) (NP (PRP$ her) (NNS shirts) (CC or) (NNS pants))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'never', u'never', u'RB'), (u'folded', u'fold', u'VBD'), (u'her', u'she', u'PRP$'), (u'shirts', u'shirt', u'NNS'), (u'or', u'or', u'CC'), (u'pants', u'pants', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'never', 'folded', 'her', 'shirts', 'or', 'pants', '.']}, {'string': ' Jenny would start her art for her aunt in a few hours.', 'parse': {'tree': '(ROOT (S (NP (NNP Jenny)) (VP (MD would) (VP (VB start) (NP (PRP$ her) (NN art)) (PP (IN for) (NP (NP (PRP$ her) (NN aunt)) (PP (IN in) (NP (DT a) (JJ few) (NNS hours))))))) (. .)))', 'lemma': [(u'Jenny', u'Jenny', u'NNP'), (u'would', u'would', u'MD'), (u'start', u'start', u'VB'), (u'her', u'she', u'PRP$'), (u'art', u'art', u'NN'), (u'for', u'for', u'IN'), (u'her', u'she', u'PRP$'), (u'aunt', u'aunt', u'NN'), (u'in', u'in', u'IN'), (u'a', u'a', u'DT'), (u'few', u'few', u'JJ'), (u'hours', u'hour', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['Jenny', 'would', 'start', 'her', 'art', 'for', 'her', 'aunt', 'in', 'a', 'few', 'hours', '.']}, {'string': ' She knew she would use a lot of time making that art.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBD knew) (SBAR (S (NP (PRP she)) (VP (MD would) (VP (VB use) (NP (NP (DT a) (NN lot)) (PP (IN of) (NP (NN time)))) (S (VP (VBG making) (NP (DT that) (NN art))))))))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'knew', u'know', u'VBD'), (u'she', u'she', u'PRP'), (u'would', u'would', u'MD'), (u'use', u'use', u'VB'), (u'a', u'a', u'DT'), (u'lot', u'lot', u'NN'), (u'of', u'of', u'IN'), (u'time', u'time', u'NN'), (u'making', u'make', u'VBG'), (u'that', u'that', u'DT'), (u'art', u'art', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'knew', 'she', 'would', 'use', 'a', 'lot', 'of', 'time', 'making', 'that', 'art', '.']}, {'string': ' Her aunt would love the art.', 'parse': {'tree': '(ROOT (S (NP (PRP$ Her) (NN aunt)) (VP (MD would) (VP (VB love) (NP (DT the) (NN art)))) (. .)))', 'lemma': [(u'Her', u'she', u'PRP$'), (u'aunt', u'aunt', u'NN'), (u'would', u'would', u'MD'), (u'love', u'love', u'VB'), (u'the', u'the', u'DT'), (u'art', u'art', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Her', 'aunt', 'would', 'love', 'the', 'art', '.']}], 'questions': [{'question': {'string': ' Where did Jenny want to go on a trip to?', 'parse': {'tree': '(ROOT (SBARQ (WHADVP (WRB Where)) (SQ (VBD did) (NP (NNP Jenny)) (VP (VB want) (S (VP (TO to) (VP (VB go) (PP (IN on) (NP (DT a) (NN trip))) (PP (TO to))))))) (. ?)))', 'lemma': [(u'Where', u'where', u'WRB'), (u'did', u'do', u'VBD'), (u'Jenny', u'Jenny', u'NNP'), (u'want', u'want', u'VB'), (u'to', u'to', u'TO'), (u'go', u'go', u'VB'), (u'on', u'on', u'IN'), (u'a', u'a', u'DT'), (u'trip', u'trip', u'NN'), (u'to', u'to', u'TO'), (u'?', u'?', u'.')]}, 'tokens': ['Where', 'did', 'Jenny', 'want', 'to', 'go', 'on', 'a', 'trip', 'to', '?']}, 'answers': [{'string': ' the moon', 'parse': {'tree': '(ROOT (FRAG (NP (DT the) (NN moon))))', 'lemma': [(u'the', u'the', u'DT'), (u'moon', u'moon', u'NN')]}, 'tokens': ['the', 'moon']}, {'string': ' France', 'parse': {'tree': '(ROOT (NP (NNP France)))', 'lemma': [(u'France', u'France', u'NNP')]}, 'tokens': ['France']}, {'string': ' someplace cold', 'parse': {'tree': '(ROOT (S (VP (VB someplace) (ADJP (JJ cold)))))', 'lemma': [(u'someplace', u'someplace', u'VB'), (u'cold', u'cold', u'JJ')]}, 'tokens': ['someplace', 'cold']}, {'string': ' Florida', 'parse': {'tree': '(ROOT (NP (NNP Florida)))', 'lemma': [(u'Florida', u'Florida', u'NNP')]}, 'tokens': ['Florida']}], 'mode': 1}, {'question': {'string': ' Where was Jenny when her daddy gave her milk?', 'parse': {'tree': '(ROOT (SBARQ (WHADVP (WRB Where)) (SQ (VBD was) (NP (NNP Jenny)) (SBAR (WHADVP (WRB when)) (S (NP (PRP$ her) (NN daddy)) (VP (VBD gave) (NP (PRP$ her) (NN milk)))))) (. ?)))', 'lemma': [(u'Where', u'where', u'WRB'), (u'was', u'be', u'VBD'), (u'Jenny', u'Jenny', u'NNP'), (u'when', u'when', u'WRB'), (u'her', u'she', u'PRP$'), (u'daddy', u'daddy', u'NN'), (u'gave', u'give', u'VBD'), (u'her', u'she', u'PRP$'), (u'milk', u'milk', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['Where', 'was', 'Jenny', 'when', 'her', 'daddy', 'gave', 'her', 'milk', '?']}, 'answers': [{'string': ' The park', 'parse': {'tree': '(ROOT (FRAG (NP (DT The) (NN park))))', 'lemma': [(u'The', u'the', u'DT'), (u'park', u'park', u'NN')]}, 'tokens': ['The', 'park']}, {'string': ' Standing on a rock', 'parse': {'tree': '(ROOT (S (VP (VBG Standing) (PP (IN on) (NP (DT a) (NN rock))))))', 'lemma': [(u'Standing', u'stand', u'VBG'), (u'on', u'on', u'IN'), (u'a', u'a', u'DT'), (u'rock', u'rock', u'NN')]}, 'tokens': ['Standing', 'on', 'a', 'rock']}, {'string': ' France', 'parse': {'tree': '(ROOT (NP (NNP France)))', 'lemma': [(u'France', u'France', u'NNP')]}, 'tokens': ['France']}, {'string': ' the lake', 'parse': {'tree': '(ROOT (FRAG (NP (DT the) (NN lake))))', 'lemma': [(u'the', u'the', u'DT'), (u'lake', u'lake', u'NN')]}, 'tokens': ['the', 'lake']}], 'mode': 0}, {'question': {'string': ' Where was Jenny when she had to sneeze?', 'parse': {'tree': '(ROOT (SBARQ (WHADVP (WRB Where)) (SQ (VBD was) (NP (NNP Jenny)) (SBAR (WHADVP (WRB when)) (S (NP (PRP she)) (VP (VBD had) (S (VP (TO to) (VP (VB sneeze)))))))) (. ?)))', 'lemma': [(u'Where', u'where', u'WRB'), (u'was', u'be', u'VBD'), (u'Jenny', u'Jenny', u'NNP'), (u'when', u'when', u'WRB'), (u'she', u'she', u'PRP'), (u'had', u'have', u'VBD'), (u'to', u'to', u'TO'), (u'sneeze', u'sneeze', u'VB'), (u'?', u'?', u'.')]}, 'tokens': ['Where', 'was', 'Jenny', 'when', 'she', 'had', 'to', 'sneeze', '?']}, 'answers': [{'string': ' Standing on a rock', 'parse': {'tree': '(ROOT (S (VP (VBG Standing) (PP (IN on) (NP (DT a) (NN rock))))))', 'lemma': [(u'Standing', u'stand', u'VBG'), (u'on', u'on', u'IN'), (u'a', u'a', u'DT'), (u'rock', u'rock', u'NN')]}, 'tokens': ['Standing', 'on', 'a', 'rock']}, {'string': ' France', 'parse': {'tree': '(ROOT (NP (NNP France)))', 'lemma': [(u'France', u'France', u'NNP')]}, 'tokens': ['France']}, {'string': ' Florida', 'parse': {'tree': '(ROOT (NP (NNP Florida)))', 'lemma': [(u'Florida', u'Florida', u'NNP')]}, 'tokens': ['Florida']}, {'string': ' the park', 'parse': {'tree': '(ROOT (FRAG (NP (DT the) (NN park))))', 'lemma': [(u'the', u'the', u'DT'), (u'park', u'park', u'NN')]}, 'tokens': ['the', 'park']}], 'mode': 0}, {'question': {'string': ' What did Jenny fold?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD did) (NP (NNP Jenny)) (VP (VB fold))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'did', u'do', u'VBD'), (u'Jenny', u'Jenny', u'NNP'), (u'fold', u'fold', u'VB'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'did', 'Jenny', 'fold', '?']}, 'answers': [{'string': ' towel', 'parse': {'tree': '(ROOT (NP (NN towel)))', 'lemma': [(u'towel', u'towel', u'NN')]}, 'tokens': ['towel']}, {'string': ' rock', 'parse': {'tree': '(ROOT (NP (NN rock)))', 'lemma': [(u'rock', u'rock', u'NN')]}, 'tokens': ['rock']}, {'string': ' shirt', 'parse': {'tree': '(ROOT (NP (NN shirt)))', 'lemma': [(u'shirt', u'shirt', u'NN')]}, 'tokens': ['shirt']}, {'string': ' pants', 'parse': {'tree': '(ROOT (NP (NNS pants)))', 'lemma': [(u'pants', u'pants', u'NNS')]}, 'tokens': ['pants']}], 'mode': 1}]}
{'sentences': [{'string': ' Jen put on her favorite dress.', 'parse': {'tree': '(ROOT (S (NP (NNP Jen)) (VP (VBD put) (PP (IN on) (NP (PRP$ her) (JJ favorite) (NN dress)))) (. .)))', 'lemma': [(u'Jen', u'Jen', u'NNP'), (u'put', u'put', u'VBD'), (u'on', u'on', u'IN'), (u'her', u'she', u'PRP$'), (u'favorite', u'favorite', u'JJ'), (u'dress', u'dress', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Jen', 'put', 'on', 'her', 'favorite', 'dress', '.']}, {'string': ' She liked it because it had cats on it.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBD liked) (NP (PRP it)) (SBAR (IN because) (S (NP (PRP it)) (VP (VBD had) (NP (NP (NNS cats)) (PP (IN on) (NP (PRP it)))))))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'liked', u'like', u'VBD'), (u'it', u'it', u'PRP'), (u'because', u'because', u'IN'), (u'it', u'it', u'PRP'), (u'had', u'have', u'VBD'), (u'cats', u'cat', u'NNS'), (u'on', u'on', u'IN'), (u'it', u'it', u'PRP'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'liked', 'it', 'because', 'it', 'had', 'cats', 'on', 'it', '.']}, {'string': ' She was very excited about her birthday cake.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBD was) (ADJP (RB very) (JJ excited)) (PP (IN about) (NP (PRP$ her) (NN birthday) (NN cake)))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'was', u'be', u'VBD'), (u'very', u'very', u'RB'), (u'excited', u'excited', u'JJ'), (u'about', u'about', u'IN'), (u'her', u'she', u'PRP$'), (u'birthday', u'birthday', u'NN'), (u'cake', u'cake', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'was', 'very', 'excited', 'about', 'her', 'birthday', 'cake', '.']}, {'string': ' Maybe the cake would have a turtle on it.', 'parse': {'tree': '(ROOT (S (ADVP (RB Maybe)) (NP (DT the) (NN cake)) (VP (MD would) (VP (VB have) (NP (NP (DT a) (NN turtle)) (PP (IN on) (NP (PRP it)))))) (. .)))', 'lemma': [(u'Maybe', u'maybe', u'RB'), (u'the', u'the', u'DT'), (u'cake', u'cake', u'NN'), (u'would', u'would', u'MD'), (u'have', u'have', u'VB'), (u'a', u'a', u'DT'), (u'turtle', u'turtle', u'NN'), (u'on', u'on', u'IN'), (u'it', u'it', u'PRP'), (u'.', u'.', u'.')]}, 'tokens': ['Maybe', 'the', 'cake', 'would', 'have', 'a', 'turtle', 'on', 'it', '.']}, {'string': ' Jen was going to have turkey.', 'parse': {'tree': '(ROOT (S (NP (NNP Jen)) (VP (VBD was) (VP (VBG going) (S (VP (TO to) (VP (VB have) (NP (NN turkey))))))) (. .)))', 'lemma': [(u'Jen', u'Jen', u'NNP'), (u'was', u'be', u'VBD'), (u'going', u'go', u'VBG'), (u'to', u'to', u'TO'), (u'have', u'have', u'VB'), (u'turkey', u'turkey', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Jen', 'was', 'going', 'to', 'have', 'turkey', '.']}, {'string': ' She had no gravy, so she had chicken for dinner instead.', 'parse': {'tree': '(ROOT (S (S (NP (PRP She)) (VP (VBD had) (NP (DT no) (NN gravy)))) (, ,) (IN so) (S (NP (PRP she)) (VP (VBD had) (NP (NP (NN chicken)) (PP (IN for) (NP (NN dinner)))) (ADVP (RB instead)))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'had', u'have', u'VBD'), (u'no', u'no', u'DT'), (u'gravy', u'gravy', u'NN'), (u',', u',', u','), (u'so', u'so', u'IN'), (u'she', u'she', u'PRP'), (u'had', u'have', u'VBD'), (u'chicken', u'chicken', u'NN'), (u'for', u'for', u'IN'), (u'dinner', u'dinner', u'NN'), (u'instead', u'instead', u'RB'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'had', 'no', 'gravy', ',', 'so', 'she', 'had', 'chicken', 'for', 'dinner', 'instead', '.']}, {'string': ' After eating the chicken, she remembered she was late for the dance!', 'parse': {'tree': '(ROOT (S (PP (IN After) (S (VP (VBG eating) (NP (DT the) (NN chicken))))) (, ,) (NP (PRP she)) (VP (VBD remembered) (SBAR (S (NP (PRP she)) (VP (VBD was) (ADVP (RB late)) (PP (IN for) (NP (DT the) (NN dance))))))) (. !)))', 'lemma': [(u'After', u'after', u'IN'), (u'eating', u'eat', u'VBG'), (u'the', u'the', u'DT'), (u'chicken', u'chicken', u'NN'), (u',', u',', u','), (u'she', u'she', u'PRP'), (u'remembered', u'remember', u'VBD'), (u'she', u'she', u'PRP'), (u'was', u'be', u'VBD'), (u'late', u'late', u'RB'), (u'for', u'for', u'IN'), (u'the', u'the', u'DT'), (u'dance', u'dance', u'NN'), (u'!', u'!', u'.')]}, 'tokens': ['After', 'eating', 'the', 'chicken', ',', 'she', 'remembered', 'she', 'was', 'late', 'for', 'the', 'dance', '!']}, {'string': ' She ran up the stairs.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBD ran) (PRT (RP up)) (NP (DT the) (NNS stairs))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'ran', u'run', u'VBD'), (u'up', u'up', u'RP'), (u'the', u'the', u'DT'), (u'stairs', u'stair', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'ran', 'up', 'the', 'stairs', '.']}, {'string': ' She put on a coat and ran out the door.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VP (VBD put) (PP (IN on) (NP (DT a) (NN coat)))) (CC and) (VP (VBD ran) (PRT (RP out)) (NP (DT the) (NN door)))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'put', u'put', u'VBD'), (u'on', u'on', u'IN'), (u'a', u'a', u'DT'), (u'coat', u'coat', u'NN'), (u'and', u'and', u'CC'), (u'ran', u'run', u'VBD'), (u'out', u'out', u'RP'), (u'the', u'the', u'DT'), (u'door', u'door', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'put', 'on', 'a', 'coat', 'and', 'ran', 'out', 'the', 'door', '.']}, {'string': ' She walked past some ice cream.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBD walked) (PP (IN past) (NP (DT some) (NN ice) (NN cream)))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'walked', u'walk', u'VBD'), (u'past', u'past', u'IN'), (u'some', u'some', u'DT'), (u'ice', u'ice', u'NN'), (u'cream', u'cream', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'walked', 'past', 'some', 'ice', 'cream', '.']}, {'string': ' She did not have time to stop and eat any of the ice cream.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBD did) (RB not) (VP (VB have) (NP (NN time)) (S (VP (TO to) (VP (VB stop) (CC and) (VB eat) (NP (NP (DT any)) (PP (IN of) (NP (DT the) (NN ice) (NN cream))))))))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'did', u'do', u'VBD'), (u'not', u'not', u'RB'), (u'have', u'have', u'VB'), (u'time', u'time', u'NN'), (u'to', u'to', u'TO'), (u'stop', u'stop', u'VB'), (u'and', u'and', u'CC'), (u'eat', u'eat', u'VB'), (u'any', u'any', u'DT'), (u'of', u'of', u'IN'), (u'the', u'the', u'DT'), (u'ice', u'ice', u'NN'), (u'cream', u'cream', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'did', 'not', 'have', 'time', 'to', 'stop', 'and', 'eat', 'any', 'of', 'the', 'ice', 'cream', '.']}, {'string': ' She walked past some sprinkles.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBD walked) (PP (IN past) (NP (DT some) (NN sprinkles)))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'walked', u'walk', u'VBD'), (u'past', u'past', u'IN'), (u'some', u'some', u'DT'), (u'sprinkles', u'sprinkle', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'walked', 'past', 'some', 'sprinkles', '.']}, {'string': ' She did not have time to eat the sprinkles.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBD did) (RB not) (VP (VB have) (NP (NN time)) (S (VP (TO to) (VP (VB eat) (NP (DT the) (NN sprinkles))))))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'did', u'do', u'VBD'), (u'not', u'not', u'RB'), (u'have', u'have', u'VB'), (u'time', u'time', u'NN'), (u'to', u'to', u'TO'), (u'eat', u'eat', u'VB'), (u'the', u'the', u'DT'), (u'sprinkles', u'sprinkle', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'did', 'not', 'have', 'time', 'to', 'eat', 'the', 'sprinkles', '.']}, {'string': ' Jen walked past the yogurt.', 'parse': {'tree': '(ROOT (S (NP (NNP Jen)) (VP (VBD walked) (PP (IN past) (NP (DT the) (NN yogurt)))) (. .)))', 'lemma': [(u'Jen', u'Jen', u'NNP'), (u'walked', u'walk', u'VBD'), (u'past', u'past', u'IN'), (u'the', u'the', u'DT'), (u'yogurt', u'yogurt', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Jen', 'walked', 'past', 'the', 'yogurt', '.']}, {'string': ' She did not have time to get the yogurt.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBD did) (RB not) (VP (VB have) (NP (NN time)) (S (VP (TO to) (VP (VB get) (NP (DT the) (NN yogurt))))))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'did', u'do', u'VBD'), (u'not', u'not', u'RB'), (u'have', u'have', u'VB'), (u'time', u'time', u'NN'), (u'to', u'to', u'TO'), (u'get', u'get', u'VB'), (u'the', u'the', u'DT'), (u'yogurt', u'yogurt', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'did', 'not', 'have', 'time', 'to', 'get', 'the', 'yogurt', '.']}, {'string': ' Jen got to where she had to go.', 'parse': {'tree': '(ROOT (S (NP (NNP Jen)) (VP (VBD got) (PP (TO to) (SBAR (WHADVP (WRB where)) (S (NP (PRP she)) (VP (VBD had) (S (VP (TO to) (VP (VB go))))))))) (. .)))', 'lemma': [(u'Jen', u'Jen', u'NNP'), (u'got', u'get', u'VBD'), (u'to', u'to', u'TO'), (u'where', u'where', u'WRB'), (u'she', u'she', u'PRP'), (u'had', u'have', u'VBD'), (u'to', u'to', u'TO'), (u'go', u'go', u'VB'), (u'.', u'.', u'.')]}, 'tokens': ['Jen', 'got', 'to', 'where', 'she', 'had', 'to', 'go', '.']}, {'string': ' Soon after, she turned around and started the long walk back home.', 'parse': {'tree': '(ROOT (S (PP (RB Soon) (PP (IN after))) (, ,) (NP (PRP she)) (VP (VP (VBD turned) (PRT (RP around))) (CC and) (VP (VBD started) (NP (DT the) (JJ long) (NN walk)) (ADVP (RB back) (NN home)))) (. .)))', 'lemma': [(u'Soon', u'soon', u'RB'), (u'after', u'after', u'IN'), (u',', u',', u','), (u'she', u'she', u'PRP'), (u'turned', u'turn', u'VBD'), (u'around', u'around', u'RP'), (u'and', u'and', u'CC'), (u'started', u'start', u'VBD'), (u'the', u'the', u'DT'), (u'long', u'long', u'JJ'), (u'walk', u'walk', u'NN'), (u'back', u'back', u'RB'), (u'home', u'home', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Soon', 'after', ',', 'she', 'turned', 'around', 'and', 'started', 'the', 'long', 'walk', 'back', 'home', '.']}, {'string': ' She got home at last.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBD got) (NP (NN home)) (PP (IN at) (NP (JJ last)))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'got', u'get', u'VBD'), (u'home', u'home', u'NN'), (u'at', u'at', u'IN'), (u'last', u'last', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'got', 'home', 'at', 'last', '.']}, {'string': ' She saw her huge cake.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBD saw) (NP (PRP$ her) (JJ huge) (NN cake))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'saw', u'see', u'VBD'), (u'her', u'she', u'PRP$'), (u'huge', u'huge', u'JJ'), (u'cake', u'cake', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'saw', 'her', 'huge', 'cake', '.']}, {'string': ' It had chocolate on it.', 'parse': {'tree': '(ROOT (S (NP (PRP It)) (VP (VBD had) (NP (NP (NN chocolate)) (PP (IN on) (NP (PRP it))))) (. .)))', 'lemma': [(u'It', u'it', u'PRP'), (u'had', u'have', u'VBD'), (u'chocolate', u'chocolate', u'NN'), (u'on', u'on', u'IN'), (u'it', u'it', u'PRP'), (u'.', u'.', u'.')]}, 'tokens': ['It', 'had', 'chocolate', 'on', 'it', '.']}, {'string': ' Jen was very happy.', 'parse': {'tree': '(ROOT (S (NP (NNP Jen)) (VP (VBD was) (ADJP (RB very) (JJ happy))) (. .)))', 'lemma': [(u'Jen', u'Jen', u'NNP'), (u'was', u'be', u'VBD'), (u'very', u'very', u'RB'), (u'happy', u'happy', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['Jen', 'was', 'very', 'happy', '.']}, {'string': ' She was ready to enjoy the cake.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBD was) (ADJP (JJ ready) (S (VP (TO to) (VP (VB enjoy) (NP (DT the) (NN cake))))))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'was', u'be', u'VBD'), (u'ready', u'ready', u'JJ'), (u'to', u'to', u'TO'), (u'enjoy', u'enjoy', u'VB'), (u'the', u'the', u'DT'), (u'cake', u'cake', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'was', 'ready', 'to', 'enjoy', 'the', 'cake', '.']}], 'questions': [{'question': {'string': ' What was Jen late for?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD was) (NP (NNP Jen)) (PP (ADVP (RB late)) (IN for))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'was', u'be', u'VBD'), (u'Jen', u'Jen', u'NNP'), (u'late', u'late', u'RB'), (u'for', u'for', u'IN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'was', 'Jen', 'late', 'for', '?']}, 'answers': [{'string': ' dinner', 'parse': {'tree': '(ROOT (NP (NN dinner)))', 'lemma': [(u'dinner', u'dinner', u'NN')]}, 'tokens': ['dinner']}, {'string': ' the dance', 'parse': {'tree': '(ROOT (FRAG (NP (DT the) (NN dance))))', 'lemma': [(u'the', u'the', u'DT'), (u'dance', u'dance', u'NN')]}, 'tokens': ['the', 'dance']}, {'string': ' cake', 'parse': {'tree': '(ROOT (NP (NN cake)))', 'lemma': [(u'cake', u'cake', u'NN')]}, 'tokens': ['cake']}, {'string': ' ice cream', 'parse': {'tree': '(ROOT (NP (NN ice) (NN cream)))', 'lemma': [(u'ice', u'ice', u'NN'), (u'cream', u'cream', u'NN')]}, 'tokens': ['ice', 'cream']}], 'mode': 1}, {'question': {'string': " Why did n't Jen have turkey?", 'parse': {'tree': "(ROOT (SBARQ (WHADVP (WRB Why)) (SQ (VBD did) (RB n't) (NP (NNP Jen)) (VP (VB have) (NP (NN turkey)))) (. ?)))", 'lemma': [(u'Why', u'why', u'WRB'), (u'did', u'do', u'VBD'), (u"n't", u'not', u'RB'), (u'Jen', u'Jen', u'NNP'), (u'have', u'have', u'VB'), (u'turkey', u'turkey', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['Why', 'did', "n't", 'Jen', 'have', 'turkey', '?']}, 'answers': [{'string': ' She was very excited about her birthday cake.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBD was) (ADJP (RB very) (JJ excited)) (PP (IN about) (NP (PRP$ her) (NN birthday) (NN cake)))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'was', u'be', u'VBD'), (u'very', u'very', u'RB'), (u'excited', u'excited', u'JJ'), (u'about', u'about', u'IN'), (u'her', u'she', u'PRP$'), (u'birthday', u'birthday', u'NN'), (u'cake', u'cake', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'was', 'very', 'excited', 'about', 'her', 'birthday', 'cake', '.']}, {'string': ' She had no gravy.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBD had) (NP (DT no) (NN gravy))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'had', u'have', u'VBD'), (u'no', u'no', u'DT'), (u'gravy', u'gravy', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'had', 'no', 'gravy', '.']}, {'string': ' She saw some ice cream.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBD saw) (NP (DT some) (NN ice) (NN cream))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'saw', u'see', u'VBD'), (u'some', u'some', u'DT'), (u'ice', u'ice', u'NN'), (u'cream', u'cream', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'saw', 'some', 'ice', 'cream', '.']}, {'string': ' She remembered she was late.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBD remembered) (SBAR (S (NP (PRP she)) (VP (VBD was) (ADJP (JJ late)))))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'remembered', u'remember', u'VBD'), (u'she', u'she', u'PRP'), (u'was', u'be', u'VBD'), (u'late', u'late', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'remembered', 'she', 'was', 'late', '.']}], 'mode': 0}, {'question': {'string': " What was on Jen 's dress?", 'parse': {'tree': "(ROOT (SBARQ (WHNP (WP What)) (SQ (VP (VBD was) (PP (IN on) (NP (NP (NNP Jen) (POS 's)) (NN dress))))) (. ?)))", 'lemma': [(u'What', u'what', u'WP'), (u'was', u'be', u'VBD'), (u'on', u'on', u'IN'), (u'Jen', u'Jen', u'NNP'), (u"'s", u"'s", u'POS'), (u'dress', u'dress', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'was', 'on', 'Jen', "'s", 'dress', '?']}, 'answers': [{'string': ' turtle', 'parse': {'tree': '(ROOT (NP (NN turtle)))', 'lemma': [(u'turtle', u'turtle', u'NN')]}, 'tokens': ['turtle']}, {'string': ' ice cream', 'parse': {'tree': '(ROOT (NP (NN ice) (NN cream)))', 'lemma': [(u'ice', u'ice', u'NN'), (u'cream', u'cream', u'NN')]}, 'tokens': ['ice', 'cream']}, {'string': ' cake', 'parse': {'tree': '(ROOT (NP (NN cake)))', 'lemma': [(u'cake', u'cake', u'NN')]}, 'tokens': ['cake']}, {'string': ' cats', 'parse': {'tree': '(ROOT (NP (NNS cats)))', 'lemma': [(u'cats', u'cat', u'NNS')]}, 'tokens': ['cats']}], 'mode': 0}, {'question': {'string': ' What was on the cake?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD was) (PP (IN on) (NP (DT the) (NN cake)))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'was', u'be', u'VBD'), (u'on', u'on', u'IN'), (u'the', u'the', u'DT'), (u'cake', u'cake', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'was', 'on', 'the', 'cake', '?']}, 'answers': [{'string': ' yogurt', 'parse': {'tree': '(ROOT (NP (NN yogurt)))', 'lemma': [(u'yogurt', u'yogurt', u'NN')]}, 'tokens': ['yogurt']}, {'string': ' sprinkles', 'parse': {'tree': '(ROOT (INTJ (UH sprinkles)))', 'lemma': [(u'sprinkles', u'sprinkles', u'UH')]}, 'tokens': ['sprinkles']}, {'string': ' chocolate', 'parse': {'tree': '(ROOT (NP (NN chocolate)))', 'lemma': [(u'chocolate', u'chocolate', u'NN')]}, 'tokens': ['chocolate']}, {'string': ' ice cream', 'parse': {'tree': '(ROOT (NP (NN ice) (NN cream)))', 'lemma': [(u'ice', u'ice', u'NN'), (u'cream', u'cream', u'NN')]}, 'tokens': ['ice', 'cream']}], 'mode': 0}]}
{'sentences': [{'string': " Today is Tommy 's birthday!", 'parse': {'tree': "(ROOT (S (NP (NNP Today)) (VP (VBZ is) (NP (NP (NNP Tommy) (POS 's)) (NN birthday))) (. !)))", 'lemma': [(u'Today', u'Today', u'NNP'), (u'is', u'be', u'VBZ'), (u'Tommy', u'Tommy', u'NNP'), (u"'s", u"'s", u'POS'), (u'birthday', u'birthday', u'NN'), (u'!', u'!', u'.')]}, 'tokens': ['Today', 'is', 'Tommy', "'s", 'birthday', '!']}, {'string': ' Everyone is getting ready for his great birthday party.', 'parse': {'tree': '(ROOT (S (NP (NN Everyone)) (VP (VBZ is) (VP (VBG getting) (ADJP (JJ ready) (PP (IN for) (NP (PRP$ his) (JJ great) (NN birthday) (NN party)))))) (. .)))', 'lemma': [(u'Everyone', u'everyone', u'NN'), (u'is', u'be', u'VBZ'), (u'getting', u'get', u'VBG'), (u'ready', u'ready', u'JJ'), (u'for', u'for', u'IN'), (u'his', u'he', u'PRP$'), (u'great', u'great', u'JJ'), (u'birthday', u'birthday', u'NN'), (u'party', u'party', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Everyone', 'is', 'getting', 'ready', 'for', 'his', 'great', 'birthday', 'party', '.']}, {'string': " He 's been waiting all week for this day.", 'parse': {'tree': "(ROOT (S (NP (PRP He)) (VP (VBZ 's) (VP (VBN been) (VP (VBG waiting) (NP (NP (DT all) (NN week)) (PP (IN for) (NP (DT this) (NN day))))))) (. .)))", 'lemma': [(u'He', u'he', u'PRP'), (u"'s", u'be', u'VBZ'), (u'been', u'be', u'VBN'), (u'waiting', u'wait', u'VBG'), (u'all', u'all', u'DT'), (u'week', u'week', u'NN'), (u'for', u'for', u'IN'), (u'this', u'this', u'DT'), (u'day', u'day', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['He', "'s", 'been', 'waiting', 'all', 'week', 'for', 'this', 'day', '.']}, {'string': ' His friends start to arrive at his house.', 'parse': {'tree': '(ROOT (S (NP (PRP$ His) (NNS friends)) (VP (VBP start) (S (VP (TO to) (VP (VB arrive) (PP (IN at) (NP (PRP$ his) (NN house))))))) (. .)))', 'lemma': [(u'His', u'he', u'PRP$'), (u'friends', u'friend', u'NNS'), (u'start', u'start', u'VBP'), (u'to', u'to', u'TO'), (u'arrive', u'arrive', u'VB'), (u'at', u'at', u'IN'), (u'his', u'he', u'PRP$'), (u'house', u'house', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['His', 'friends', 'start', 'to', 'arrive', 'at', 'his', 'house', '.']}, {'string': ' All he wants is a new bike and the time to open presents is getting closer.', 'parse': {'tree': '(ROOT (S (NP (NP (DT All)) (SBAR (S (NP (PRP he)) (VP (VBZ wants))))) (VP (VBZ is) (NP (NP (DT a) (JJ new) (NN bike)) (CC and) (NP (DT the) (NN time) (S (VP (TO to) (VP (VB open) (SBAR (S (NP (NNS presents)) (VP (VBZ is) (VP (VBG getting) (ADVP (RBR closer)))))))))))) (. .)))', 'lemma': [(u'All', u'all', u'DT'), (u'he', u'he', u'PRP'), (u'wants', u'want', u'VBZ'), (u'is', u'be', u'VBZ'), (u'a', u'a', u'DT'), (u'new', u'new', u'JJ'), (u'bike', u'bike', u'NN'), (u'and', u'and', u'CC'), (u'the', u'the', u'DT'), (u'time', u'time', u'NN'), (u'to', u'to', u'TO'), (u'open', u'open', u'VB'), (u'presents', u'present', u'NNS'), (u'is', u'be', u'VBZ'), (u'getting', u'get', u'VBG'), (u'closer', u'closer', u'RBR'), (u'.', u'.', u'.')]}, 'tokens': ['All', 'he', 'wants', 'is', 'a', 'new', 'bike', 'and', 'the', 'time', 'to', 'open', 'presents', 'is', 'getting', 'closer', '.']}, {'string': " After cake and games, his father yells, `` Time for presents ''.", 'parse': {'tree': "(ROOT (S (PP (IN After) (NP (NN cake) (CC and) (NNS games))) (, ,) (NP (PRP$ his) (NN father)) (VP (VBZ yells) (, ,) (`` ``) (NP (NP (NNP Time)) (PP (IN for) (NP (NNS presents))))) ('' '') (. .)))", 'lemma': [(u'After', u'after', u'IN'), (u'cake', u'cake', u'NN'), (u'and', u'and', u'CC'), (u'games', u'game', u'NNS'), (u',', u',', u','), (u'his', u'he', u'PRP$'), (u'father', u'father', u'NN'), (u'yells', u'yell', u'VBZ'), (u',', u',', u','), (u'``', u'``', u'``'), (u'Time', u'Time', u'NNP'), (u'for', u'for', u'IN'), (u'presents', u'present', u'NNS'), (u"''", u"''", u"''"), (u'.', u'.', u'.')]}, 'tokens': ['After', 'cake', 'and', 'games', ',', 'his', 'father', 'yells', ',', '``', 'Time', 'for', 'presents', "''", '.']}, {'string': ' One after another, he sees they are all great presents, fire trucks, coloring books, toys, but there is no bike.', 'parse': {'tree': '(ROOT (S (S (PP (NP (CD One)) (IN after) (NP (DT another))) (, ,) (NP (PRP he)) (VP (VBZ sees) (SBAR (S (NP (PRP they)) (VP (VBP are) (NP (NP (DT all) (JJ great) (NNS presents)) (, ,) (NP (NP (NN fire) (NNS trucks)) (, ,) (NP (VBG coloring) (NNS books)) (, ,) (NP (NNS toys))))))))) (, ,) (CC but) (S (NP (EX there)) (VP (VBZ is) (NP (DT no) (NN bike)))) (. .)))', 'lemma': [(u'One', u'one', u'CD'), (u'after', u'after', u'IN'), (u'another', u'another', u'DT'), (u',', u',', u','), (u'he', u'he', u'PRP'), (u'sees', u'see', u'VBZ'), (u'they', u'they', u'PRP'), (u'are', u'be', u'VBP'), (u'all', u'all', u'DT'), (u'great', u'great', u'JJ'), (u'presents', u'present', u'NNS'), (u',', u',', u','), (u'fire', u'fire', u'NN'), (u'trucks', u'truck', u'NNS'), (u',', u',', u','), (u'coloring', u'color', u'VBG'), (u'books', u'book', u'NNS'), (u',', u',', u','), (u'toys', u'toy', u'NNS'), (u',', u',', u','), (u'but', u'but', u'CC'), (u'there', u'there', u'EX'), (u'is', u'be', u'VBZ'), (u'no', u'no', u'DT'), (u'bike', u'bike', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['One', 'after', 'another', ',', 'he', 'sees', 'they', 'are', 'all', 'great', 'presents', ',', 'fire', 'trucks', ',', 'coloring', 'books', ',', 'toys', ',', 'but', 'there', 'is', 'no', 'bike', '.']}, {'string': ' Tommy starts to get upset when he sees that he opened all his presents and he still has no bike.', 'parse': {'tree': '(ROOT (S (S (NP (NNP Tommy)) (VP (VBZ starts) (S (VP (TO to) (VP (VB get) (ADJP (JJ upset)) (SBAR (WHADVP (WRB when)) (S (NP (PRP he)) (VP (VBZ sees) (SBAR (IN that) (S (NP (PRP he)) (VP (VBD opened) (NP (PDT all) (PRP$ his) (NNS presents))))))))))))) (CC and) (S (NP (PRP he)) (ADVP (RB still)) (VP (VBZ has) (NP (DT no) (NN bike)))) (. .)))', 'lemma': [(u'Tommy', u'Tommy', u'NNP'), (u'starts', u'start', u'VBZ'), (u'to', u'to', u'TO'), (u'get', u'get', u'VB'), (u'upset', u'upset', u'JJ'), (u'when', u'when', u'WRB'), (u'he', u'he', u'PRP'), (u'sees', u'see', u'VBZ'), (u'that', u'that', u'IN'), (u'he', u'he', u'PRP'), (u'opened', u'open', u'VBD'), (u'all', u'all', u'PDT'), (u'his', u'he', u'PRP$'), (u'presents', u'present', u'NNS'), (u'and', u'and', u'CC'), (u'he', u'he', u'PRP'), (u'still', u'still', u'RB'), (u'has', u'have', u'VBZ'), (u'no', u'no', u'DT'), (u'bike', u'bike', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Tommy', 'starts', 'to', 'get', 'upset', 'when', 'he', 'sees', 'that', 'he', 'opened', 'all', 'his', 'presents', 'and', 'he', 'still', 'has', 'no', 'bike', '.']}, {'string': ' But right then he sees his mother wheeling a bike through the kitchen into the living room where we are.', 'parse': {'tree': '(ROOT (S (CC But) (ADVP (RB right) (RB then)) (NP (PRP he)) (VP (VBZ sees) (SBAR (S (NP (PRP$ his) (NN mother)) (VP (VBD wheeling) (NP (DT a) (NN bike)) (PP (IN through) (NP (DT the) (NN kitchen))) (PP (IN into) (NP (NP (DT the) (VBG living) (NN room)) (SBAR (WHADVP (WRB where)) (S (NP (PRP we)) (VP (VBP are)))))))))) (. .)))', 'lemma': [(u'But', u'but', u'CC'), (u'right', u'right', u'RB'), (u'then', u'then', u'RB'), (u'he', u'he', u'PRP'), (u'sees', u'see', u'VBZ'), (u'his', u'he', u'PRP$'), (u'mother', u'mother', u'NN'), (u'wheeling', u'wheel', u'VBD'), (u'a', u'a', u'DT'), (u'bike', u'bike', u'NN'), (u'through', u'through', u'IN'), (u'the', u'the', u'DT'), (u'kitchen', u'kitchen', u'NN'), (u'into', u'into', u'IN'), (u'the', u'the', u'DT'), (u'living', u'live', u'VBG'), (u'room', u'room', u'NN'), (u'where', u'where', u'WRB'), (u'we', u'we', u'PRP'), (u'are', u'be', u'VBP'), (u'.', u'.', u'.')]}, 'tokens': ['But', 'right', 'then', 'he', 'sees', 'his', 'mother', 'wheeling', 'a', 'bike', 'through', 'the', 'kitchen', 'into', 'the', 'living', 'room', 'where', 'we', 'are', '.']}, {'string': ' He jumps in the air with all the excitement.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBZ jumps) (PP (IN in) (NP (NP (DT the) (NN air)) (PP (IN with) (NP (PDT all) (DT the) (NN excitement)))))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'jumps', u'jump', u'VBZ'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'air', u'air', u'NN'), (u'with', u'with', u'IN'), (u'all', u'all', u'PDT'), (u'the', u'the', u'DT'), (u'excitement', u'excitement', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'jumps', 'in', 'the', 'air', 'with', 'all', 'the', 'excitement', '.']}, {'string': ' He actually got it!', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (ADVP (RB actually)) (VP (VBD got) (NP (PRP it))) (. !)))', 'lemma': [(u'He', u'he', u'PRP'), (u'actually', u'actually', u'RB'), (u'got', u'get', u'VBD'), (u'it', u'it', u'PRP'), (u'!', u'!', u'.')]}, 'tokens': ['He', 'actually', 'got', 'it', '!']}, {'string': ' He then runs outside and rides his new bike down the street.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (ADVP (RB then)) (VP (VBZ runs) (NP (NN outside) (CC and) (NNS rides)) (NP (NP (PRP$ his) (JJ new) (NN bike)) (ADVP (RB down) (NP (DT the) (NN street))))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'then', u'then', u'RB'), (u'runs', u'run', u'VBZ'), (u'outside', u'outside', u'NN'), (u'and', u'and', u'CC'), (u'rides', u'ride', u'NNS'), (u'his', u'he', u'PRP$'), (u'new', u'new', u'JJ'), (u'bike', u'bike', u'NN'), (u'down', u'down', u'RB'), (u'the', u'the', u'DT'), (u'street', u'street', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'then', 'runs', 'outside', 'and', 'rides', 'his', 'new', 'bike', 'down', 'the', 'street', '.']}], 'questions': [{'question': {'string': ' why was he getting presents?', 'parse': {'tree': '(ROOT (SBARQ (WHADVP (WRB why)) (SQ (VBD was) (NP (PRP he)) (VP (VBG getting) (NP (NNS presents)))) (. ?)))', 'lemma': [(u'why', u'why', u'WRB'), (u'was', u'be', u'VBD'), (u'he', u'he', u'PRP'), (u'getting', u'get', u'VBG'), (u'presents', u'present', u'NNS'), (u'?', u'?', u'.')]}, 'tokens': ['why', 'was', 'he', 'getting', 'presents', '?']}, 'answers': [{'string': ' christmas', 'parse': {'tree': '(ROOT (NP (NNS christmas)))', 'lemma': [(u'christmas', u'christmas', u'NNS')]}, 'tokens': ['christmas']}, {'string': " his mother 's birthday", 'parse': {'tree': "(ROOT (NP (NP (PRP$ his) (NN mother) (POS 's)) (NN birthday)))", 'lemma': [(u'his', u'he', u'PRP$'), (u'mother', u'mother', u'NN'), (u"'s", u"'s", u'POS'), (u'birthday', u'birthday', u'NN')]}, 'tokens': ['his', 'mother', "'s", 'birthday']}, {'string': ' his birthday', 'parse': {'tree': '(ROOT (FRAG (NP (PRP$ his) (NN birthday))))', 'lemma': [(u'his', u'he', u'PRP$'), (u'birthday', u'birthday', u'NN')]}, 'tokens': ['his', 'birthday']}, {'string': ' he won the games', 'parse': {'tree': '(ROOT (S (NP (PRP he)) (VP (VBD won) (NP (DT the) (NNS games)))))', 'lemma': [(u'he', u'he', u'PRP'), (u'won', u'win', u'VBD'), (u'the', u'the', u'DT'), (u'games', u'game', u'NNS')]}, 'tokens': ['he', 'won', 'the', 'games']}], 'mode': 1}, {'question': {'string': ' who brings the bike out?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP who)) (SQ (VP (VBZ brings) (NP (DT the) (NN bike)) (PRT (RP out)))) (. ?)))', 'lemma': [(u'who', u'who', u'WP'), (u'brings', u'bring', u'VBZ'), (u'the', u'the', u'DT'), (u'bike', u'bike', u'NN'), (u'out', u'out', u'RP'), (u'?', u'?', u'.')]}, 'tokens': ['who', 'brings', 'the', 'bike', 'out', '?']}, 'answers': [{'string': ' father', 'parse': {'tree': '(ROOT (NP (NN father)))', 'lemma': [(u'father', u'father', u'NN')]}, 'tokens': ['father']}, {'string': ' grandmother', 'parse': {'tree': '(ROOT (NP (NN grandmother)))', 'lemma': [(u'grandmother', u'grandmother', u'NN')]}, 'tokens': ['grandmother']}, {'string': ' friends', 'parse': {'tree': '(ROOT (NP (NNS friends)))', 'lemma': [(u'friends', u'friend', u'NNS')]}, 'tokens': ['friends']}, {'string': ' mother', 'parse': {'tree': '(ROOT (NP (NN mother)))', 'lemma': [(u'mother', u'mother', u'NN')]}, 'tokens': ['mother']}], 'mode': 0}, {'question': {'string': ' where did he ride the bike?', 'parse': {'tree': '(ROOT (SBARQ (WHADVP (WRB where)) (SQ (VBD did) (NP (PRP he)) (VP (VB ride) (NP (DT the) (NN bike)))) (. ?)))', 'lemma': [(u'where', u'where', u'WRB'), (u'did', u'do', u'VBD'), (u'he', u'he', u'PRP'), (u'ride', u'ride', u'VB'), (u'the', u'the', u'DT'), (u'bike', u'bike', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['where', 'did', 'he', 'ride', 'the', 'bike', '?']}, 'answers': [{'string': ' down the street', 'parse': {'tree': '(ROOT (ADVP (RB down) (NP (DT the) (NN street))))', 'lemma': [(u'down', u'down', u'RB'), (u'the', u'the', u'DT'), (u'street', u'street', u'NN')]}, 'tokens': ['down', 'the', 'street']}, {'string': ' living room', 'parse': {'tree': '(ROOT (NP (NN living) (NN room)))', 'lemma': [(u'living', u'living', u'NN'), (u'room', u'room', u'NN')]}, 'tokens': ['living', 'room']}, {'string': ' garage', 'parse': {'tree': '(ROOT (NP (NN garage)))', 'lemma': [(u'garage', u'garage', u'NN')]}, 'tokens': ['garage']}, {'string': ' in the kitchen', 'parse': {'tree': '(ROOT (PP (IN in) (NP (DT the) (NN kitchen))))', 'lemma': [(u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'kitchen', u'kitchen', u'NN')]}, 'tokens': ['in', 'the', 'kitchen']}], 'mode': 1}, {'question': {'string': ' what does he want more than anything?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP what)) (SQ (VBZ does) (NP (PRP he)) (VP (VB want) (NP (JJR more)) (PP (IN than) (NP (NN anything))))) (. ?)))', 'lemma': [(u'what', u'what', u'WP'), (u'does', u'do', u'VBZ'), (u'he', u'he', u'PRP'), (u'want', u'want', u'VB'), (u'more', u'more', u'JJR'), (u'than', u'than', u'IN'), (u'anything', u'anything', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['what', 'does', 'he', 'want', 'more', 'than', 'anything', '?']}, 'answers': [{'string': ' A bike', 'parse': {'tree': '(ROOT (FRAG (NP (DT A) (NN bike))))', 'lemma': [(u'A', u'a', u'DT'), (u'bike', u'bike', u'NN')]}, 'tokens': ['A', 'bike']}, {'string': ' coloring book', 'parse': {'tree': '(ROOT (NP (JJ coloring) (NN book)))', 'lemma': [(u'coloring', u'coloring', u'JJ'), (u'book', u'book', u'NN')]}, 'tokens': ['coloring', 'book']}, {'string': ' a car', 'parse': {'tree': '(ROOT (FRAG (NP (DT a) (NN car))))', 'lemma': [(u'a', u'a', u'DT'), (u'car', u'car', u'NN')]}, 'tokens': ['a', 'car']}, {'string': ' toys', 'parse': {'tree': '(ROOT (NP (NNS toys)))', 'lemma': [(u'toys', u'toy', u'NNS')]}, 'tokens': ['toys']}], 'mode': 0}]}
{'sentences': [{'string': ' Thunder can move a seesaw.', 'parse': {'tree': '(ROOT (S (NP (NNP Thunder)) (VP (MD can) (VP (VB move) (NP (DT a) (NN seesaw)))) (. .)))', 'lemma': [(u'Thunder', u'Thunder', u'NNP'), (u'can', u'can', u'MD'), (u'move', u'move', u'VB'), (u'a', u'a', u'DT'), (u'seesaw', u'seesaw', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Thunder', 'can', 'move', 'a', 'seesaw', '.']}, {'string': ' This is very important to know if you ever see what I saw.', 'parse': {'tree': '(ROOT (S (NP (DT This)) (VP (VBZ is) (ADJP (RB very) (JJ important)) (S (VP (TO to) (VP (VB know) (SBAR (IN if) (S (NP (PRP you)) (ADVP (RB ever)) (VP (VBP see) (SBAR (WHNP (WP what)) (S (NP (PRP I)) (VP (VBD saw))))))))))) (. .)))', 'lemma': [(u'This', u'this', u'DT'), (u'is', u'be', u'VBZ'), (u'very', u'very', u'RB'), (u'important', u'important', u'JJ'), (u'to', u'to', u'TO'), (u'know', u'know', u'VB'), (u'if', u'if', u'IN'), (u'you', u'you', u'PRP'), (u'ever', u'ever', u'RB'), (u'see', u'see', u'VBP'), (u'what', u'what', u'WP'), (u'I', u'I', u'PRP'), (u'saw', u'see', u'VBD'), (u'.', u'.', u'.')]}, 'tokens': ['This', 'is', 'very', 'important', 'to', 'know', 'if', 'you', 'ever', 'see', 'what', 'I', 'saw', '.']}, {'string': ' One day, I was walking home when I saw a squirrel on a seesaw near my house.', 'parse': {'tree': '(ROOT (S (NP (CD One) (NN day)) (, ,) (NP (PRP I)) (VP (VBD was) (VP (VBG walking) (NP (NN home)) (SBAR (WHADVP (WRB when)) (S (NP (PRP I)) (VP (VBD saw) (NP (DT a) (NN squirrel)) (PP (IN on) (NP (NP (DT a) (NN seesaw)) (PP (IN near) (NP (PRP$ my) (NN house)))))))))) (. .)))', 'lemma': [(u'One', u'one', u'CD'), (u'day', u'day', u'NN'), (u',', u',', u','), (u'I', u'I', u'PRP'), (u'was', u'be', u'VBD'), (u'walking', u'walk', u'VBG'), (u'home', u'home', u'NN'), (u'when', u'when', u'WRB'), (u'I', u'I', u'PRP'), (u'saw', u'see', u'VBD'), (u'a', u'a', u'DT'), (u'squirrel', u'squirrel', u'NN'), (u'on', u'on', u'IN'), (u'a', u'a', u'DT'), (u'seesaw', u'seesaw', u'NN'), (u'near', u'near', u'IN'), (u'my', u'my', u'PRP$'), (u'house', u'house', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['One', 'day', ',', 'I', 'was', 'walking', 'home', 'when', 'I', 'saw', 'a', 'squirrel', 'on', 'a', 'seesaw', 'near', 'my', 'house', '.']}, {'string': ' It was running up and down, and all around, playing by itself.', 'parse': {'tree': '(ROOT (S (NP (PRP It)) (VP (VBD was) (VP (VP (VBG running) (PRT (RP up))) (CC and) (VP (ADVP (ADVP (RB down)) (, ,) (CC and) (ADVP (RB all) (RB around)) (, ,)) (VBG playing) (PP (IN by) (NP (PRP itself)))))) (. .)))', 'lemma': [(u'It', u'it', u'PRP'), (u'was', u'be', u'VBD'), (u'running', u'run', u'VBG'), (u'up', u'up', u'RP'), (u'and', u'and', u'CC'), (u'down', u'down', u'RB'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'all', u'all', u'RB'), (u'around', u'around', u'RB'), (u',', u',', u','), (u'playing', u'play', u'VBG'), (u'by', u'by', u'IN'), (u'itself', u'itself', u'PRP'), (u'.', u'.', u'.')]}, 'tokens': ['It', 'was', 'running', 'up', 'and', 'down', ',', 'and', 'all', 'around', ',', 'playing', 'by', 'itself', '.']}, {'string': ' Suddenly, an ox appeared from nowhere.', 'parse': {'tree': '(ROOT (S (ADVP (RB Suddenly)) (, ,) (NP (DT an) (NN ox)) (VP (VBD appeared) (PP (IN from) (NP (RB nowhere)))) (. .)))', 'lemma': [(u'Suddenly', u'suddenly', u'RB'), (u',', u',', u','), (u'an', u'a', u'DT'), (u'ox', u'ox', u'NN'), (u'appeared', u'appear', u'VBD'), (u'from', u'from', u'IN'), (u'nowhere', u'nowhere', u'RB'), (u'.', u'.', u'.')]}, 'tokens': ['Suddenly', ',', 'an', 'ox', 'appeared', 'from', 'nowhere', '.']}, {'string': ' It came up to the squirrel, walked around the seesaw for a bit, then sat down on one end.', 'parse': {'tree': '(ROOT (S (NP (PRP It)) (VP (VP (VBD came) (PRT (RP up)) (PP (TO to) (NP (DT the) (NN squirrel)))) (, ,) (VP (VBD walked) (PRT (RP around)) (NP (NP (DT the) (NN seesaw)) (PP (IN for) (NP (DT a) (NN bit))))) (, ,) (ADVP (RB then)) (VP (VBD sat) (PRT (RP down)) (PP (IN on) (NP (CD one) (NN end))))) (. .)))', 'lemma': [(u'It', u'it', u'PRP'), (u'came', u'come', u'VBD'), (u'up', u'up', u'RP'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'squirrel', u'squirrel', u'NN'), (u',', u',', u','), (u'walked', u'walk', u'VBD'), (u'around', u'around', u'RP'), (u'the', u'the', u'DT'), (u'seesaw', u'seesaw', u'NN'), (u'for', u'for', u'IN'), (u'a', u'a', u'DT'), (u'bit', u'bit', u'NN'), (u',', u',', u','), (u'then', u'then', u'RB'), (u'sat', u'sit', u'VBD'), (u'down', u'down', u'RP'), (u'on', u'on', u'IN'), (u'one', u'one', u'CD'), (u'end', u'end', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['It', 'came', 'up', 'to', 'the', 'squirrel', ',', 'walked', 'around', 'the', 'seesaw', 'for', 'a', 'bit', ',', 'then', 'sat', 'down', 'on', 'one', 'end', '.']}, {'string': ' As you know, an ox is a very big animal, so the seesaw threw the squirrel off and high into the air!', 'parse': {'tree': '(ROOT (S (SBAR (IN As) (S (NP (PRP you)) (VP (VBP know)))) (, ,) (NP (DT an) (NN ox)) (VP (VBZ is) (NP (DT a) (ADJP (RB very) (JJ big)) (NN animal)) (, ,) (SBAR (IN so) (S (NP (DT the) (NN seesaw)) (VP (VBD threw) (NP (DT the) (NN squirrel)) (ADVP (RB off) (CC and) (RB high)) (PP (IN into) (NP (DT the) (NN air))))))) (. !)))', 'lemma': [(u'As', u'as', u'IN'), (u'you', u'you', u'PRP'), (u'know', u'know', u'VBP'), (u',', u',', u','), (u'an', u'a', u'DT'), (u'ox', u'ox', u'NN'), (u'is', u'be', u'VBZ'), (u'a', u'a', u'DT'), (u'very', u'very', u'RB'), (u'big', u'big', u'JJ'), (u'animal', u'animal', u'NN'), (u',', u',', u','), (u'so', u'so', u'IN'), (u'the', u'the', u'DT'), (u'seesaw', u'seesaw', u'NN'), (u'threw', u'throw', u'VBD'), (u'the', u'the', u'DT'), (u'squirrel', u'squirrel', u'NN'), (u'off', u'off', u'RB'), (u'and', u'and', u'CC'), (u'high', u'high', u'RB'), (u'into', u'into', u'IN'), (u'the', u'the', u'DT'), (u'air', u'air', u'NN'), (u'!', u'!', u'.')]}, 'tokens': ['As', 'you', 'know', ',', 'an', 'ox', 'is', 'a', 'very', 'big', 'animal', ',', 'so', 'the', 'seesaw', 'threw', 'the', 'squirrel', 'off', 'and', 'high', 'into', 'the', 'air', '!']}, {'string': ' The squirrel flew so high that it passed the buildings.', 'parse': {'tree': '(ROOT (S (NP (DT The) (NN squirrel)) (VP (VBD flew) (ADJP (RB so) (JJ high)) (SBAR (IN that) (S (NP (PRP it)) (VP (VBD passed) (NP (DT the) (NNS buildings)))))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'squirrel', u'squirrel', u'NN'), (u'flew', u'fly', u'VBD'), (u'so', u'so', u'RB'), (u'high', u'high', u'JJ'), (u'that', u'that', u'IN'), (u'it', u'it', u'PRP'), (u'passed', u'pass', u'VBD'), (u'the', u'the', u'DT'), (u'buildings', u'building', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'squirrel', 'flew', 'so', 'high', 'that', 'it', 'passed', 'the', 'buildings', '.']}, {'string': ' It passed the birds, it passed the planes and stopped in the clouds.', 'parse': {'tree': '(ROOT (S (S (NP (PRP It)) (VP (VBD passed) (NP (DT the) (NNS birds)))) (, ,) (NP (PRP it)) (VP (VP (VBD passed) (NP (DT the) (NNS planes))) (CC and) (VP (VBD stopped) (PP (IN in) (NP (DT the) (NNS clouds))))) (. .)))', 'lemma': [(u'It', u'it', u'PRP'), (u'passed', u'pass', u'VBD'), (u'the', u'the', u'DT'), (u'birds', u'bird', u'NNS'), (u',', u',', u','), (u'it', u'it', u'PRP'), (u'passed', u'pass', u'VBD'), (u'the', u'the', u'DT'), (u'planes', u'plane', u'NNS'), (u'and', u'and', u'CC'), (u'stopped', u'stop', u'VBD'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'clouds', u'cloud', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['It', 'passed', 'the', 'birds', ',', 'it', 'passed', 'the', 'planes', 'and', 'stopped', 'in', 'the', 'clouds', '.']}, {'string': ' When it was there, it made friends with the clouds and asked one of the clouds a secret question.', 'parse': {'tree': '(ROOT (S (SBAR (WHADVP (WRB When)) (S (NP (PRP it)) (VP (VBD was) (ADVP (RB there))))) (, ,) (NP (PRP it)) (VP (VP (VBD made) (NP (NNS friends)) (PP (IN with) (NP (DT the) (NNS clouds)))) (CC and) (VP (VBD asked) (NP (NP (CD one)) (PP (IN of) (NP (DT the) (NNS clouds))))) (NP (DT a) (JJ secret) (NN question))) (. .)))', 'lemma': [(u'When', u'when', u'WRB'), (u'it', u'it', u'PRP'), (u'was', u'be', u'VBD'), (u'there', u'there', u'RB'), (u',', u',', u','), (u'it', u'it', u'PRP'), (u'made', u'make', u'VBD'), (u'friends', u'friend', u'NNS'), (u'with', u'with', u'IN'), (u'the', u'the', u'DT'), (u'clouds', u'cloud', u'NNS'), (u'and', u'and', u'CC'), (u'asked', u'ask', u'VBD'), (u'one', u'one', u'CD'), (u'of', u'of', u'IN'), (u'the', u'the', u'DT'), (u'clouds', u'cloud', u'NNS'), (u'a', u'a', u'DT'), (u'secret', u'secret', u'JJ'), (u'question', u'question', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['When', 'it', 'was', 'there', ',', 'it', 'made', 'friends', 'with', 'the', 'clouds', 'and', 'asked', 'one', 'of', 'the', 'clouds', 'a', 'secret', 'question', '.']}, {'string': ' The cloud said okay, and sent the squirrel back to the ground.', 'parse': {'tree': '(ROOT (S (NP (DT The) (NN cloud)) (VP (VP (VBD said) (S (ADJP (JJ okay)))) (, ,) (CC and) (VP (VBD sent) (NP (DT the) (NN squirrel)) (PRT (RP back)) (PP (TO to) (NP (DT the) (NN ground))))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'cloud', u'cloud', u'NN'), (u'said', u'say', u'VBD'), (u'okay', u'okay', u'JJ'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'sent', u'send', u'VBD'), (u'the', u'the', u'DT'), (u'squirrel', u'squirrel', u'NN'), (u'back', u'back', u'RP'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'ground', u'ground', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'cloud', 'said', 'okay', ',', 'and', 'sent', 'the', 'squirrel', 'back', 'to', 'the', 'ground', '.']}, {'string': ' The squirrel fell and fell for a long time.', 'parse': {'tree': '(ROOT (S (NP (DT The) (NN squirrel)) (VP (VBD fell) (CC and) (VBD fell) (PP (IN for) (NP (DT a) (JJ long) (NN time)))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'squirrel', u'squirrel', u'NN'), (u'fell', u'fall', u'VBD'), (u'and', u'and', u'CC'), (u'fell', u'fall', u'VBD'), (u'for', u'for', u'IN'), (u'a', u'a', u'DT'), (u'long', u'long', u'JJ'), (u'time', u'time', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'squirrel', 'fell', 'and', 'fell', 'for', 'a', 'long', 'time', '.']}, {'string': " Finally he landed on the seesaw, but the ox did n't move.", 'parse': {'tree': "(ROOT (S (S (ADVP (RB Finally)) (NP (PRP he)) (VP (VBD landed) (PP (IN on) (NP (DT the) (NN seesaw))))) (, ,) (CC but) (S (NP (DT the) (NN ox)) (VP (VBD did) (RB n't) (VP (VB move)))) (. .)))", 'lemma': [(u'Finally', u'finally', u'RB'), (u'he', u'he', u'PRP'), (u'landed', u'land', u'VBD'), (u'on', u'on', u'IN'), (u'the', u'the', u'DT'), (u'seesaw', u'seesaw', u'NN'), (u',', u',', u','), (u'but', u'but', u'CC'), (u'the', u'the', u'DT'), (u'ox', u'ox', u'NN'), (u'did', u'do', u'VBD'), (u"n't", u'not', u'RB'), (u'move', u'move', u'VB'), (u'.', u'.', u'.')]}, 'tokens': ['Finally', 'he', 'landed', 'on', 'the', 'seesaw', ',', 'but', 'the', 'ox', 'did', "n't", 'move', '.']}, {'string': " `` Where were you? ''", 'parse': {'tree': "(ROOT (SBARQ (`` ``) (WHADVP (WRB Where)) (SQ (VBD were) (NP (PRP you))) (. ?) ('' '')))", 'lemma': [(u'``', u'``', u'``'), (u'Where', u'where', u'WRB'), (u'were', u'be', u'VBD'), (u'you', u'you', u'PRP'), (u'?', u'?', u'.'), (u"''", u"''", u"''")]}, 'tokens': ['``', 'Where', 'were', 'you', '?', "''"]}, {'string': " the ox asked, `` Just talking with a friend, '' answered the mouse.", 'parse': {'tree': "(ROOT (S (NP (NP (NP (DT the) (NN ox)) (VP (VBN asked))) (, ,) (`` ``) (NP (NP (RB Just) (VBG talking)) (PP (IN with) (NP (DT a) (NN friend)))) (, ,) ('' '')) (VP (VBD answered) (NP (DT the) (NN mouse))) (. .)))", 'lemma': [(u'the', u'the', u'DT'), (u'ox', u'ox', u'NN'), (u'asked', u'ask', u'VBN'), (u',', u',', u','), (u'``', u'``', u'``'), (u'Just', u'just', u'RB'), (u'talking', u'talk', u'VBG'), (u'with', u'with', u'IN'), (u'a', u'a', u'DT'), (u'friend', u'friend', u'NN'), (u',', u',', u','), (u"''", u"''", u"''"), (u'answered', u'answer', u'VBD'), (u'the', u'the', u'DT'), (u'mouse', u'mouse', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['the', 'ox', 'asked', ',', '``', 'Just', 'talking', 'with', 'a', 'friend', ',', "''", 'answered', 'the', 'mouse', '.']}, {'string': ' I was watching and listening to everything, so I stayed, waiting.', 'parse': {'tree': '(ROOT (S (S (NP (PRP I)) (VP (VBD was) (VP (VBG watching) (CC and) (VBG listening) (PP (TO to) (NP (NN everything)))))) (, ,) (IN so) (S (NP (PRP I)) (VP (VBD stayed) (, ,) (S (VP (VBG waiting))))) (. .)))', 'lemma': [(u'I', u'I', u'PRP'), (u'was', u'be', u'VBD'), (u'watching', u'watch', u'VBG'), (u'and', u'and', u'CC'), (u'listening', u'listen', u'VBG'), (u'to', u'to', u'TO'), (u'everything', u'everything', u'NN'), (u',', u',', u','), (u'so', u'so', u'IN'), (u'I', u'I', u'PRP'), (u'stayed', u'stay', u'VBD'), (u',', u',', u','), (u'waiting', u'wait', u'VBG'), (u'.', u'.', u'.')]}, 'tokens': ['I', 'was', 'watching', 'and', 'listening', 'to', 'everything', ',', 'so', 'I', 'stayed', ',', 'waiting', '.']}, {'string': ' Soon enough, a loud CLAP of thunder came from the clouds and threw the ox off of the seesaw and far, far away.', 'parse': {'tree': '(ROOT (S (ADVP (RB Soon) (RB enough)) (, ,) (NP (NP (DT a) (JJ loud) (NN CLAP)) (PP (IN of) (NP (NN thunder)))) (VP (VP (VBD came) (PP (IN from) (NP (DT the) (NNS clouds)))) (CC and) (VP (VBD threw) (NP (DT the) (NN ox)) (PRT (RP off)) (PP (IN of) (NP (DT the) (NN seesaw) (CC and) (RB far))) (, ,) (ADVP (RB far) (RB away)))) (. .)))', 'lemma': [(u'Soon', u'soon', u'RB'), (u'enough', u'enough', u'RB'), (u',', u',', u','), (u'a', u'a', u'DT'), (u'loud', u'loud', u'JJ'), (u'CLAP', u'clap', u'NN'), (u'of', u'of', u'IN'), (u'thunder', u'thunder', u'NN'), (u'came', u'come', u'VBD'), (u'from', u'from', u'IN'), (u'the', u'the', u'DT'), (u'clouds', u'cloud', u'NNS'), (u'and', u'and', u'CC'), (u'threw', u'throw', u'VBD'), (u'the', u'the', u'DT'), (u'ox', u'ox', u'NN'), (u'off', u'off', u'RP'), (u'of', u'of', u'IN'), (u'the', u'the', u'DT'), (u'seesaw', u'seesaw', u'NN'), (u'and', u'and', u'CC'), (u'far', u'far', u'RB'), (u',', u',', u','), (u'far', u'far', u'RB'), (u'away', u'away', u'RB'), (u'.', u'.', u'.')]}, 'tokens': ['Soon', 'enough', ',', 'a', 'loud', 'CLAP', 'of', 'thunder', 'came', 'from', 'the', 'clouds', 'and', 'threw', 'the', 'ox', 'off', 'of', 'the', 'seesaw', 'and', 'far', ',', 'far', 'away', '.']}, {'string': ' So, you see, thunder can move a seesaw.', 'parse': {'tree': '(ROOT (S (ADVP (RB So)) (PRN (, ,) (S (NP (PRP you)) (VP (VBP see))) (, ,)) (NP (NN thunder)) (VP (MD can) (VP (VB move) (NP (DT a) (NN seesaw)))) (. .)))', 'lemma': [(u'So', u'so', u'RB'), (u',', u',', u','), (u'you', u'you', u'PRP'), (u'see', u'see', u'VBP'), (u',', u',', u','), (u'thunder', u'thunder', u'NN'), (u'can', u'can', u'MD'), (u'move', u'move', u'VB'), (u'a', u'a', u'DT'), (u'seesaw', u'seesaw', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['So', ',', 'you', 'see', ',', 'thunder', 'can', 'move', 'a', 'seesaw', '.']}], 'questions': [{'question': {'string': ' What was the second thing the squirrel passed?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD was) (NP (NP (DT the) (JJ second) (NN thing)) (SBAR (S (NP (DT the) (NN squirrel)) (VP (VBD passed)))))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'was', u'be', u'VBD'), (u'the', u'the', u'DT'), (u'second', u'second', u'JJ'), (u'thing', u'thing', u'NN'), (u'the', u'the', u'DT'), (u'squirrel', u'squirrel', u'NN'), (u'passed', u'pass', u'VBD'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'was', 'the', 'second', 'thing', 'the', 'squirrel', 'passed', '?']}, 'answers': [{'string': ' the buildings', 'parse': {'tree': '(ROOT (FRAG (NP (DT the) (NNS buildings))))', 'lemma': [(u'the', u'the', u'DT'), (u'buildings', u'building', u'NNS')]}, 'tokens': ['the', 'buildings']}, {'string': ' the clouds', 'parse': {'tree': '(ROOT (FRAG (NP (DT the) (NNS clouds))))', 'lemma': [(u'the', u'the', u'DT'), (u'clouds', u'cloud', u'NNS')]}, 'tokens': ['the', 'clouds']}, {'string': ' the birds', 'parse': {'tree': '(ROOT (FRAG (NP (DT the) (NNS birds))))', 'lemma': [(u'the', u'the', u'DT'), (u'birds', u'bird', u'NNS')]}, 'tokens': ['the', 'birds']}, {'string': ' the planes', 'parse': {'tree': '(ROOT (FRAG (NP (DT the) (NNS planes))))', 'lemma': [(u'the', u'the', u'DT'), (u'planes', u'plane', u'NNS')]}, 'tokens': ['the', 'planes']}], 'mode': 0}, {'question': {'string': ' Where was the squirrel playing?', 'parse': {'tree': '(ROOT (SBARQ (WHADVP (WRB Where)) (SQ (VBD was) (NP (DT the) (JJ squirrel) (NN playing))) (. ?)))', 'lemma': [(u'Where', u'where', u'WRB'), (u'was', u'be', u'VBD'), (u'the', u'the', u'DT'), (u'squirrel', u'squirrel', u'JJ'), (u'playing', u'playing', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['Where', 'was', 'the', 'squirrel', 'playing', '?']}, 'answers': [{'string': ' in the clouds', 'parse': {'tree': '(ROOT (PP (IN in) (NP (DT the) (NNS clouds))))', 'lemma': [(u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'clouds', u'cloud', u'NNS')]}, 'tokens': ['in', 'the', 'clouds']}, {'string': ' on an ox', 'parse': {'tree': '(ROOT (PP (IN on) (NP (DT an) (NN ox))))', 'lemma': [(u'on', u'on', u'IN'), (u'an', u'a', u'DT'), (u'ox', u'ox', u'NN')]}, 'tokens': ['on', 'an', 'ox']}, {'string': ' a seesaw', 'parse': {'tree': '(ROOT (FRAG (DT a) (JJ seesaw)))', 'lemma': [(u'a', u'a', u'DT'), (u'seesaw', u'seesaw', u'JJ')]}, 'tokens': ['a', 'seesaw']}, {'string': ' at night', 'parse': {'tree': '(ROOT (PP (IN at) (NP (NN night))))', 'lemma': [(u'at', u'at', u'IN'), (u'night', u'night', u'NN')]}, 'tokens': ['at', 'night']}], 'mode': 1}, {'question': {'string': ' What do you think the squirrel said to the clouds?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBP do) (NP (PRP you)) (VP (VB think) (SBAR (S (NP (DT the) (NN squirrel)) (VP (VBD said) (PP (TO to) (NP (DT the) (NNS clouds)))))))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'do', u'do', u'VBP'), (u'you', u'you', u'PRP'), (u'think', u'think', u'VB'), (u'the', u'the', u'DT'), (u'squirrel', u'squirrel', u'NN'), (u'said', u'say', u'VBD'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'clouds', u'cloud', u'NNS'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'do', 'you', 'think', 'the', 'squirrel', 'said', 'to', 'the', 'clouds', '?']}, 'answers': [{'string': ' make rain for me', 'parse': {'tree': '(ROOT (S (VP (VB make) (NP (NN rain)) (PP (IN for) (NP (PRP me))))))', 'lemma': [(u'make', u'make', u'VB'), (u'rain', u'rain', u'NN'), (u'for', u'for', u'IN'), (u'me', u'I', u'PRP')]}, 'tokens': ['make', 'rain', 'for', 'me']}, {'string': ' send me to the tops of the buildings', 'parse': {'tree': '(ROOT (S (VP (VB send) (NP (PRP me)) (PP (TO to) (NP (NP (DT the) (NNS tops)) (PP (IN of) (NP (DT the) (NNS buildings))))))))', 'lemma': [(u'send', u'send', u'VB'), (u'me', u'I', u'PRP'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'tops', u'top', u'NNS'), (u'of', u'of', u'IN'), (u'the', u'the', u'DT'), (u'buildings', u'building', u'NNS')]}, 'tokens': ['send', 'me', 'to', 'the', 'tops', 'of', 'the', 'buildings']}, {'string': ' move the ox from the seesaw', 'parse': {'tree': '(ROOT (S (VP (VB move) (NP (DT the) (NN ox)) (PP (IN from) (NP (DT the) (NN seesaw))))))', 'lemma': [(u'move', u'move', u'VB'), (u'the', u'the', u'DT'), (u'ox', u'ox', u'NN'), (u'from', u'from', u'IN'), (u'the', u'the', u'DT'), (u'seesaw', u'seesaw', u'NN')]}, 'tokens': ['move', 'the', 'ox', 'from', 'the', 'seesaw']}, {'string': ' let me fly like a bird', 'parse': {'tree': '(ROOT (S (VP (VB let) (S (NP (PRP me)) (VP (VB fly) (PP (IN like) (NP (DT a) (NN bird))))))))', 'lemma': [(u'let', u'let', u'VB'), (u'me', u'I', u'PRP'), (u'fly', u'fly', u'VB'), (u'like', u'like', u'IN'), (u'a', u'a', u'DT'), (u'bird', u'bird', u'NN')]}, 'tokens': ['let', 'me', 'fly', 'like', 'a', 'bird']}], 'mode': 0}, {'question': {'string': ' What threw the squirrel into the air?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VP (VBD threw) (NP (DT the) (NN squirrel)) (PP (IN into) (NP (DT the) (NN air))))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'threw', u'throw', u'VBD'), (u'the', u'the', u'DT'), (u'squirrel', u'squirrel', u'NN'), (u'into', u'into', u'IN'), (u'the', u'the', u'DT'), (u'air', u'air', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'threw', 'the', 'squirrel', 'into', 'the', 'air', '?']}, 'answers': [{'string': ' the building', 'parse': {'tree': '(ROOT (FRAG (NP (DT the) (NN building))))', 'lemma': [(u'the', u'the', u'DT'), (u'building', u'building', u'NN')]}, 'tokens': ['the', 'building']}, {'string': ' the birds', 'parse': {'tree': '(ROOT (FRAG (NP (DT the) (NNS birds))))', 'lemma': [(u'the', u'the', u'DT'), (u'birds', u'bird', u'NNS')]}, 'tokens': ['the', 'birds']}, {'string': ' the cloud', 'parse': {'tree': '(ROOT (FRAG (NP (DT the) (NN cloud))))', 'lemma': [(u'the', u'the', u'DT'), (u'cloud', u'cloud', u'NN')]}, 'tokens': ['the', 'cloud']}, {'string': ' the ox', 'parse': {'tree': '(ROOT (FRAG (NP (DT the) (NN ox))))', 'lemma': [(u'the', u'the', u'DT'), (u'ox', u'ox', u'NN')]}, 'tokens': ['the', 'ox']}], 'mode': 1}]}
{'sentences': [{'string': ' Pester came running into the room.', 'parse': {'tree': '(ROOT (S (NP (NNP Pester)) (VP (VBD came) (S (VP (VBG running) (PP (IN into) (NP (DT the) (NN room)))))) (. .)))', 'lemma': [(u'Pester', u'Pester', u'NNP'), (u'came', u'come', u'VBD'), (u'running', u'run', u'VBG'), (u'into', u'into', u'IN'), (u'the', u'the', u'DT'), (u'room', u'room', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Pester', 'came', 'running', 'into', 'the', 'room', '.']}, {'string': ' He came to a fast stop when he saw the dog.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD came) (PP (TO to) (NP (DT a) (JJ fast) (NN stop))) (SBAR (WHADVP (WRB when)) (S (NP (PRP he)) (VP (VBD saw) (NP (DT the) (NN dog)))))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'came', u'come', u'VBD'), (u'to', u'to', u'TO'), (u'a', u'a', u'DT'), (u'fast', u'fast', u'JJ'), (u'stop', u'stop', u'NN'), (u'when', u'when', u'WRB'), (u'he', u'he', u'PRP'), (u'saw', u'see', u'VBD'), (u'the', u'the', u'DT'), (u'dog', u'dog', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'came', 'to', 'a', 'fast', 'stop', 'when', 'he', 'saw', 'the', 'dog', '.']}, {'string': " He 'd seen a dog before, every cat has, and he used to live with a black dog named Henry, but he 'd never seen a brown one before.", 'parse': {'tree': "(ROOT (S (S (S (NP (PRP He)) (VP (VBD 'd) (VP (VBN seen) (NP (DT a) (NN dog)) (SBAR (IN before) (, ,) (S (NP (DT every) (NN cat)) (VP (VBZ has))))))) (, ,) (CC and) (S (NP (PRP he)) (VP (VBD used) (S (VP (TO to) (VP (VB live) (PP (IN with) (NP (NP (DT a) (JJ black) (NN dog)) (VP (VBN named) (NP (NNP Henry))))))))))) (, ,) (CC but) (S (NP (PRP he)) (VP (VBD 'd) (ADVP (RB never)) (VP (VBN seen) (NP (DT a) (JJ brown) (NN one)) (ADVP (RB before))))) (. .)))", 'lemma': [(u'He', u'he', u'PRP'), (u"'d", u'have', u'VBD'), (u'seen', u'see', u'VBN'), (u'a', u'a', u'DT'), (u'dog', u'dog', u'NN'), (u'before', u'before', u'IN'), (u',', u',', u','), (u'every', u'every', u'DT'), (u'cat', u'cat', u'NN'), (u'has', u'have', u'VBZ'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'he', u'he', u'PRP'), (u'used', u'use', u'VBD'), (u'to', u'to', u'TO'), (u'live', u'live', u'VB'), (u'with', u'with', u'IN'), (u'a', u'a', u'DT'), (u'black', u'black', u'JJ'), (u'dog', u'dog', u'NN'), (u'named', u'name', u'VBN'), (u'Henry', u'Henry', u'NNP'), (u',', u',', u','), (u'but', u'but', u'CC'), (u'he', u'he', u'PRP'), (u"'d", u'have', u'VBD'), (u'never', u'never', u'RB'), (u'seen', u'see', u'VBN'), (u'a', u'a', u'DT'), (u'brown', u'brown', u'JJ'), (u'one', u'one', u'NN'), (u'before', u'before', u'RB'), (u'.', u'.', u'.')]}, 'tokens': ['He', "'d", 'seen', 'a', 'dog', 'before', ',', 'every', 'cat', 'has', ',', 'and', 'he', 'used', 'to', 'live', 'with', 'a', 'black', 'dog', 'named', 'Henry', ',', 'but', 'he', "'d", 'never', 'seen', 'a', 'brown', 'one', 'before', '.']}, {'string': ' It seemed strange to him, but not as strange as it was to see Linda the brown chicken in the living room last spring.', 'parse': {'tree': '(ROOT (S (NP (PRP It)) (VP (VBD seemed) (ADJP (ADJP (JJ strange) (PP (TO to) (NP (PRP him)))) (, ,) (CC but) (ADJP (RB not) (RB as) (JJ strange))) (SBAR (IN as) (S (NP (PRP it)) (VP (VBD was) (S (VP (TO to) (VP (VB see) (S (NP (NNP Linda)) (NP (NP (DT the) (JJ brown) (NN chicken)) (PP (IN in) (NP (DT the) (VBG living) (NN room)))))))) (NP (JJ last) (NN spring)))))) (. .)))', 'lemma': [(u'It', u'it', u'PRP'), (u'seemed', u'seem', u'VBD'), (u'strange', u'strange', u'JJ'), (u'to', u'to', u'TO'), (u'him', u'he', u'PRP'), (u',', u',', u','), (u'but', u'but', u'CC'), (u'not', u'not', u'RB'), (u'as', u'as', u'RB'), (u'strange', u'strange', u'JJ'), (u'as', u'as', u'IN'), (u'it', u'it', u'PRP'), (u'was', u'be', u'VBD'), (u'to', u'to', u'TO'), (u'see', u'see', u'VB'), (u'Linda', u'Linda', u'NNP'), (u'the', u'the', u'DT'), (u'brown', u'brown', u'JJ'), (u'chicken', u'chicken', u'NN'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'living', u'live', u'VBG'), (u'room', u'room', u'NN'), (u'last', u'last', u'JJ'), (u'spring', u'spring', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['It', 'seemed', 'strange', 'to', 'him', ',', 'but', 'not', 'as', 'strange', 'as', 'it', 'was', 'to', 'see', 'Linda', 'the', 'brown', 'chicken', 'in', 'the', 'living', 'room', 'last', 'spring', '.']}, {'string': ' That still confused him.', 'parse': {'tree': '(ROOT (S (NP (DT That)) (ADVP (RB still)) (VP (VBD confused) (NP (PRP him))) (. .)))', 'lemma': [(u'That', u'that', u'DT'), (u'still', u'still', u'RB'), (u'confused', u'confuse', u'VBD'), (u'him', u'he', u'PRP'), (u'.', u'.', u'.')]}, 'tokens': ['That', 'still', 'confused', 'him', '.']}, {'string': ' He thought he liked this dog, not because of the color, but because it was small.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD thought) (SBAR (S (NP (PRP he)) (VP (VBD liked) (NP (NP (DT this) (NN dog)) (, ,) (UCP (RB not) (PP (RB because) (IN of) (NP (DT the) (NN color))) (, ,) (CC but) (SBAR (IN because) (S (NP (PRP it)) (VP (VBD was) (ADJP (JJ small))))))))))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'thought', u'think', u'VBD'), (u'he', u'he', u'PRP'), (u'liked', u'like', u'VBD'), (u'this', u'this', u'DT'), (u'dog', u'dog', u'NN'), (u',', u',', u','), (u'not', u'not', u'RB'), (u'because', u'because', u'RB'), (u'of', u'of', u'IN'), (u'the', u'the', u'DT'), (u'color', u'color', u'NN'), (u',', u',', u','), (u'but', u'but', u'CC'), (u'because', u'because', u'IN'), (u'it', u'it', u'PRP'), (u'was', u'be', u'VBD'), (u'small', u'small', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'thought', 'he', 'liked', 'this', 'dog', ',', 'not', 'because', 'of', 'the', 'color', ',', 'but', 'because', 'it', 'was', 'small', '.']}, {'string': ' And it was so hairy.', 'parse': {'tree': '(ROOT (S (CC And) (NP (PRP it)) (VP (VBD was) (ADJP (RB so) (JJ hairy))) (. .)))', 'lemma': [(u'And', u'and', u'CC'), (u'it', u'it', u'PRP'), (u'was', u'be', u'VBD'), (u'so', u'so', u'RB'), (u'hairy', u'hairy', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['And', 'it', 'was', 'so', 'hairy', '.']}, {'string': ' It was a like a mop that could run around.', 'parse': {'tree': '(ROOT (S (NP (PRP It)) (VP (VBD was) (NP (NP (SYM a)) (PP (IN like) (NP (NP (DT a) (NN mop)) (SBAR (WHNP (WDT that)) (S (VP (MD could) (VP (VB run) (PRT (RP around)))))))))) (. .)))', 'lemma': [(u'It', u'it', u'PRP'), (u'was', u'be', u'VBD'), (u'a', u'a', u'SYM'), (u'like', u'like', u'IN'), (u'a', u'a', u'DT'), (u'mop', u'mop', u'NN'), (u'that', u'that', u'WDT'), (u'could', u'could', u'MD'), (u'run', u'run', u'VB'), (u'around', u'around', u'RP'), (u'.', u'.', u'.')]}, 'tokens': ['It', 'was', 'a', 'like', 'a', 'mop', 'that', 'could', 'run', 'around', '.']}, {'string': ' He jumped on his favorite chair and looked down as Maggie ran under it.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VP (VBD jumped) (PP (IN on) (NP (PRP$ his) (JJ favorite) (NN chair)))) (CC and) (VP (VBD looked) (ADVP (RB down)) (SBAR (IN as) (S (NP (NNP Maggie)) (VP (VBD ran) (PP (IN under) (NP (PRP it)))))))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'jumped', u'jump', u'VBD'), (u'on', u'on', u'IN'), (u'his', u'he', u'PRP$'), (u'favorite', u'favorite', u'JJ'), (u'chair', u'chair', u'NN'), (u'and', u'and', u'CC'), (u'looked', u'look', u'VBD'), (u'down', u'down', u'RB'), (u'as', u'as', u'IN'), (u'Maggie', u'Maggie', u'NNP'), (u'ran', u'run', u'VBD'), (u'under', u'under', u'IN'), (u'it', u'it', u'PRP'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'jumped', 'on', 'his', 'favorite', 'chair', 'and', 'looked', 'down', 'as', 'Maggie', 'ran', 'under', 'it', '.']}, {'string': ' She was kind of cute for a dog, Pester thought to himself.', 'parse': {'tree': '(ROOT (S (S (NP (PRP She)) (VP (VBD was) (ADJP (ADVP (NN kind) (IN of)) (JJ cute) (PP (IN for) (NP (DT a) (NN dog)))))) (, ,) (NP (NNP Pester)) (VP (VBD thought) (PP (TO to) (NP (PRP himself)))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'was', u'be', u'VBD'), (u'kind', u'kind', u'NN'), (u'of', u'of', u'IN'), (u'cute', u'cute', u'JJ'), (u'for', u'for', u'IN'), (u'a', u'a', u'DT'), (u'dog', u'dog', u'NN'), (u',', u',', u','), (u'Pester', u'Pester', u'NNP'), (u'thought', u'think', u'VBD'), (u'to', u'to', u'TO'), (u'himself', u'himself', u'PRP'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'was', 'kind', 'of', 'cute', 'for', 'a', 'dog', ',', 'Pester', 'thought', 'to', 'himself', '.']}, {'string': ' He layed down on the chair and pawed at her as she ran in a circle under it.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VP (VBD layed) (PRT (RP down)) (PP (IN on) (NP (DT the) (NN chair)))) (CC and) (VP (VBD pawed) (PP (IN at) (NP (PRP her))) (SBAR (IN as) (S (NP (PRP she)) (VP (VBD ran) (PP (IN in) (NP (DT a) (NN circle))) (PP (IN under) (NP (PRP it)))))))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'layed', u'lay', u'VBD'), (u'down', u'down', u'RP'), (u'on', u'on', u'IN'), (u'the', u'the', u'DT'), (u'chair', u'chair', u'NN'), (u'and', u'and', u'CC'), (u'pawed', u'paw', u'VBD'), (u'at', u'at', u'IN'), (u'her', u'she', u'PRP'), (u'as', u'as', u'IN'), (u'she', u'she', u'PRP'), (u'ran', u'run', u'VBD'), (u'in', u'in', u'IN'), (u'a', u'a', u'DT'), (u'circle', u'circle', u'NN'), (u'under', u'under', u'IN'), (u'it', u'it', u'PRP'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'layed', 'down', 'on', 'the', 'chair', 'and', 'pawed', 'at', 'her', 'as', 'she', 'ran', 'in', 'a', 'circle', 'under', 'it', '.']}, {'string': ' He tapped her ears as she went by, and waved his tail like a flag trying to get her attention.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD tapped) (NP (PRP$ her) (NNS ears)) (SBAR (IN as) (S (NP (PRP she)) (VP (VP (VBD went) (PP (IN by))) (, ,) (CC and) (VP (VBD waved) (NP (PRP$ his) (NN tail)) (PP (IN like) (NP (NP (DT a) (NN flag)) (VP (VBG trying) (S (VP (TO to) (VP (VB get) (NP (PRP$ her) (NN attention))))))))))))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'tapped', u'tap', u'VBD'), (u'her', u'she', u'PRP$'), (u'ears', u'ear', u'NNS'), (u'as', u'as', u'IN'), (u'she', u'she', u'PRP'), (u'went', u'go', u'VBD'), (u'by', u'by', u'IN'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'waved', u'wave', u'VBD'), (u'his', u'he', u'PRP$'), (u'tail', u'tail', u'NN'), (u'like', u'like', u'IN'), (u'a', u'a', u'DT'), (u'flag', u'flag', u'NN'), (u'trying', u'try', u'VBG'), (u'to', u'to', u'TO'), (u'get', u'get', u'VB'), (u'her', u'she', u'PRP$'), (u'attention', u'attention', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'tapped', 'her', 'ears', 'as', 'she', 'went', 'by', ',', 'and', 'waved', 'his', 'tail', 'like', 'a', 'flag', 'trying', 'to', 'get', 'her', 'attention', '.']}, {'string': ' After a little more of this, Pester curled up in a ball on the chair and took a nap.', 'parse': {'tree': '(ROOT (S (PP (IN After) (NP (NP (DT a) (JJ little) (JJR more)) (PP (IN of) (NP (DT this))))) (, ,) (NP (NNP Pester)) (VP (VP (VBD curled) (PRT (RP up)) (PP (IN in) (NP (NP (DT a) (NN ball)) (PP (IN on) (NP (DT the) (NN chair)))))) (CC and) (VP (VBD took) (NP (DT a) (NN nap)))) (. .)))', 'lemma': [(u'After', u'after', u'IN'), (u'a', u'a', u'DT'), (u'little', u'little', u'JJ'), (u'more', u'more', u'JJR'), (u'of', u'of', u'IN'), (u'this', u'this', u'DT'), (u',', u',', u','), (u'Pester', u'Pester', u'NNP'), (u'curled', u'curl', u'VBD'), (u'up', u'up', u'RP'), (u'in', u'in', u'IN'), (u'a', u'a', u'DT'), (u'ball', u'ball', u'NN'), (u'on', u'on', u'IN'), (u'the', u'the', u'DT'), (u'chair', u'chair', u'NN'), (u'and', u'and', u'CC'), (u'took', u'take', u'VBD'), (u'a', u'a', u'DT'), (u'nap', u'nap', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['After', 'a', 'little', 'more', 'of', 'this', ',', 'Pester', 'curled', 'up', 'in', 'a', 'ball', 'on', 'the', 'chair', 'and', 'took', 'a', 'nap', '.']}], 'questions': [{'question': {'string': " What was the dog 's name?", 'parse': {'tree': "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD was) (NP (NP (DT the) (NN dog) (POS 's)) (NN name))) (. ?)))", 'lemma': [(u'What', u'what', u'WP'), (u'was', u'be', u'VBD'), (u'the', u'the', u'DT'), (u'dog', u'dog', u'NN'), (u"'s", u"'s", u'POS'), (u'name', u'name', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'was', 'the', 'dog', "'s", 'name', '?']}, 'answers': [{'string': ' Maggie', 'parse': {'tree': '(ROOT (NP (NNP Maggie)))', 'lemma': [(u'Maggie', u'Maggie', u'NNP')]}, 'tokens': ['Maggie']}, {'string': ' Henry', 'parse': {'tree': '(ROOT (NP (NNP Henry)))', 'lemma': [(u'Henry', u'Henry', u'NNP')]}, 'tokens': ['Henry']}, {'string': ' Pester', 'parse': {'tree': '(ROOT (NP (NNP Pester)))', 'lemma': [(u'Pester', u'Pester', u'NNP')]}, 'tokens': ['Pester']}, {'string': ' Linda', 'parse': {'tree': '(ROOT (NP (NNP Linda)))', 'lemma': [(u'Linda', u'Linda', u'NNP')]}, 'tokens': ['Linda']}], 'mode': 0}, {'question': {'string': " What was the cat 's name?", 'parse': {'tree': "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD was) (NP (NP (DT the) (NN cat) (POS 's)) (NN name))) (. ?)))", 'lemma': [(u'What', u'what', u'WP'), (u'was', u'be', u'VBD'), (u'the', u'the', u'DT'), (u'cat', u'cat', u'NN'), (u"'s", u"'s", u'POS'), (u'name', u'name', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'was', 'the', 'cat', "'s", 'name', '?']}, 'answers': [{'string': ' Maggie', 'parse': {'tree': '(ROOT (NP (NNP Maggie)))', 'lemma': [(u'Maggie', u'Maggie', u'NNP')]}, 'tokens': ['Maggie']}, {'string': ' Pester', 'parse': {'tree': '(ROOT (NP (NNP Pester)))', 'lemma': [(u'Pester', u'Pester', u'NNP')]}, 'tokens': ['Pester']}, {'string': ' Linda', 'parse': {'tree': '(ROOT (NP (NNP Linda)))', 'lemma': [(u'Linda', u'Linda', u'NNP')]}, 'tokens': ['Linda']}, {'string': ' Henry', 'parse': {'tree': '(ROOT (NP (NNP Henry)))', 'lemma': [(u'Henry', u'Henry', u'NNP')]}, 'tokens': ['Henry']}], 'mode': 0}, {'question': {'string': ' What did Pester think Maggie looked like?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD did) (NP (NNP Pester)) (VP (VB think) (NP (NP (NNP Maggie)) (VP (VBN looked) (PP (IN like)))))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'did', u'do', u'VBD'), (u'Pester', u'Pester', u'NNP'), (u'think', u'think', u'VB'), (u'Maggie', u'Maggie', u'NNP'), (u'looked', u'look', u'VBN'), (u'like', u'like', u'IN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'did', 'Pester', 'think', 'Maggie', 'looked', 'like', '?']}, 'answers': [{'string': ' a chair', 'parse': {'tree': '(ROOT (FRAG (NP (DT a) (NN chair))))', 'lemma': [(u'a', u'a', u'DT'), (u'chair', u'chair', u'NN')]}, 'tokens': ['a', 'chair']}, {'string': ' a brown chicken', 'parse': {'tree': '(ROOT (FRAG (NP (DT a) (JJ brown) (NN chicken))))', 'lemma': [(u'a', u'a', u'DT'), (u'brown', u'brown', u'JJ'), (u'chicken', u'chicken', u'NN')]}, 'tokens': ['a', 'brown', 'chicken']}, {'string': ' a flag', 'parse': {'tree': '(ROOT (FRAG (NP (DT a) (NN flag))))', 'lemma': [(u'a', u'a', u'DT'), (u'flag', u'flag', u'NN')]}, 'tokens': ['a', 'flag']}, {'string': ' a mop', 'parse': {'tree': '(ROOT (FRAG (DT a) (JJ mop)))', 'lemma': [(u'a', u'a', u'DT'), (u'mop', u'mop', u'JJ')]}, 'tokens': ['a', 'mop']}], 'mode': 1}, {'question': {'string': " What did Pester wave to get Maggie 's attention?", 'parse': {'tree': "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD did) (NP (NNP Pester)) (VP (VB wave) (S (VP (TO to) (VP (VB get) (NP (NP (NNP Maggie) (POS 's)) (NN attention))))))) (. ?)))", 'lemma': [(u'What', u'what', u'WP'), (u'did', u'do', u'VBD'), (u'Pester', u'Pester', u'NNP'), (u'wave', u'wave', u'VB'), (u'to', u'to', u'TO'), (u'get', u'get', u'VB'), (u'Maggie', u'Maggie', u'NNP'), (u"'s", u"'s", u'POS'), (u'attention', u'attention', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'did', 'Pester', 'wave', 'to', 'get', 'Maggie', "'s", 'attention', '?']}, 'answers': [{'string': ' his paw', 'parse': {'tree': '(ROOT (FRAG (NP (PRP$ his) (NN paw))))', 'lemma': [(u'his', u'he', u'PRP$'), (u'paw', u'paw', u'NN')]}, 'tokens': ['his', 'paw']}, {'string': ' a flag', 'parse': {'tree': '(ROOT (FRAG (NP (DT a) (NN flag))))', 'lemma': [(u'a', u'a', u'DT'), (u'flag', u'flag', u'NN')]}, 'tokens': ['a', 'flag']}, {'string': ' his tail', 'parse': {'tree': '(ROOT (FRAG (NP (PRP$ his) (NN tail))))', 'lemma': [(u'his', u'he', u'PRP$'), (u'tail', u'tail', u'NN')]}, 'tokens': ['his', 'tail']}, {'string': ' an ear', 'parse': {'tree': '(ROOT (FRAG (NP (DT an) (NN ear))))', 'lemma': [(u'an', u'a', u'DT'), (u'ear', u'ear', u'NN')]}, 'tokens': ['an', 'ear']}], 'mode': 1}]}
{'sentences': [{'string': ' Jimmy swam around the pond.', 'parse': {'tree': '(ROOT (S (NP (NNP Jimmy)) (VP (VBP swam) (PP (IN around) (NP (DT the) (NN pond)))) (. .)))', 'lemma': [(u'Jimmy', u'Jimmy', u'NNP'), (u'swam', u'swim', u'VBP'), (u'around', u'around', u'IN'), (u'the', u'the', u'DT'), (u'pond', u'pond', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Jimmy', 'swam', 'around', 'the', 'pond', '.']}, {'string': ' He was a duck.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD was) (NP (DT a) (NN duck))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'was', u'be', u'VBD'), (u'a', u'a', u'DT'), (u'duck', u'duck', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'was', 'a', 'duck', '.']}, {'string': " He was wet, but he was a duck and did n't care.", 'parse': {'tree': "(ROOT (S (S (NP (PRP He)) (VP (VBD was) (ADJP (JJ wet)))) (, ,) (CC but) (S (NP (PRP he)) (VP (VP (VBD was) (NP (DT a) (NN duck))) (CC and) (VP (VBD did) (RB n't) (VP (VB care))))) (. .)))", 'lemma': [(u'He', u'he', u'PRP'), (u'was', u'be', u'VBD'), (u'wet', u'wet', u'JJ'), (u',', u',', u','), (u'but', u'but', u'CC'), (u'he', u'he', u'PRP'), (u'was', u'be', u'VBD'), (u'a', u'a', u'DT'), (u'duck', u'duck', u'NN'), (u'and', u'and', u'CC'), (u'did', u'do', u'VBD'), (u"n't", u'not', u'RB'), (u'care', u'care', u'VB'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'was', 'wet', ',', 'but', 'he', 'was', 'a', 'duck', 'and', 'did', "n't", 'care', '.']}, {'string': ' He ate some bugs.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD ate) (NP (DT some) (NNS bugs))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'ate', u'eat', u'VBD'), (u'some', u'some', u'DT'), (u'bugs', u'bug', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'ate', 'some', 'bugs', '.']}, {'string': " He saw some worms on the bottom, but was n't interested in them, or in the bread crumbs, or the hot dog the boy had dropped.", 'parse': {'tree': "(ROOT (S (NP (PRP He)) (VP (VP (VBD saw) (NP (DT some) (NNS worms)) (PP (IN on) (NP (DT the) (NN bottom)))) (, ,) (CC but) (VP (VBD was) (RB n't) (ADJP (JJ interested)) (PP (PP (IN in) (NP (PRP them))) (, ,) (CC or) (PP (IN in) (NP (NP (DT the) (NN bread) (NNS crumbs)) (, ,) (CC or) (NP (NP (DT the) (JJ hot) (NN dog)) (SBAR (S (NP (DT the) (NN boy)) (VP (VBD had) (VP (VBN dropped))))))))))) (. .)))", 'lemma': [(u'He', u'he', u'PRP'), (u'saw', u'see', u'VBD'), (u'some', u'some', u'DT'), (u'worms', u'worm', u'NNS'), (u'on', u'on', u'IN'), (u'the', u'the', u'DT'), (u'bottom', u'bottom', u'NN'), (u',', u',', u','), (u'but', u'but', u'CC'), (u'was', u'be', u'VBD'), (u"n't", u'not', u'RB'), (u'interested', u'interested', u'JJ'), (u'in', u'in', u'IN'), (u'them', u'they', u'PRP'), (u',', u',', u','), (u'or', u'or', u'CC'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'bread', u'bread', u'NN'), (u'crumbs', u'crumb', u'NNS'), (u',', u',', u','), (u'or', u'or', u'CC'), (u'the', u'the', u'DT'), (u'hot', u'hot', u'JJ'), (u'dog', u'dog', u'NN'), (u'the', u'the', u'DT'), (u'boy', u'boy', u'NN'), (u'had', u'have', u'VBD'), (u'dropped', u'drop', u'VBN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'saw', 'some', 'worms', 'on', 'the', 'bottom', ',', 'but', 'was', "n't", 'interested', 'in', 'them', ',', 'or', 'in', 'the', 'bread', 'crumbs', ',', 'or', 'the', 'hot', 'dog', 'the', 'boy', 'had', 'dropped', '.']}, {'string': ' He kept on swimming and swimming.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD kept) (PP (IN on) (NP (VBG swimming) (CC and) (VBG swimming)))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'kept', u'keep', u'VBD'), (u'on', u'on', u'IN'), (u'swimming', u'swim', u'VBG'), (u'and', u'and', u'CC'), (u'swimming', u'swim', u'VBG'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'kept', 'on', 'swimming', 'and', 'swimming', '.']}, {'string': ' He was a mess.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD was) (NP (DT a) (NN mess))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'was', u'be', u'VBD'), (u'a', u'a', u'DT'), (u'mess', u'mess', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'was', 'a', 'mess', '.']}, {'string': ' After he had eaten his food, it was afternoon.', 'parse': {'tree': '(ROOT (S (SBAR (IN After) (S (NP (PRP he)) (VP (VBD had) (VP (VBN eaten) (NP (PRP$ his) (NN food)))))) (, ,) (NP (PRP it)) (VP (VBD was) (NP (NN afternoon))) (. .)))', 'lemma': [(u'After', u'after', u'IN'), (u'he', u'he', u'PRP'), (u'had', u'have', u'VBD'), (u'eaten', u'eat', u'VBN'), (u'his', u'he', u'PRP$'), (u'food', u'food', u'NN'), (u',', u',', u','), (u'it', u'it', u'PRP'), (u'was', u'be', u'VBD'), (u'afternoon', u'afternoon', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['After', 'he', 'had', 'eaten', 'his', 'food', ',', 'it', 'was', 'afternoon', '.']}, {'string': ' The sun was setting, and Jimmy wanted to rest in the sun, and sleep.', 'parse': {'tree': '(ROOT (S (S (NP (DT The) (NN sun)) (VP (VBD was) (VP (VBG setting)))) (, ,) (CC and) (S (NP (NNP Jimmy)) (VP (VBD wanted) (S (VP (TO to) (VP (VP (VB rest) (PP (IN in) (NP (DT the) (NN sun)))) (, ,) (CC and) (VP (VB sleep))))))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'sun', u'sun', u'NN'), (u'was', u'be', u'VBD'), (u'setting', u'set', u'VBG'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'Jimmy', u'Jimmy', u'NNP'), (u'wanted', u'want', u'VBD'), (u'to', u'to', u'TO'), (u'rest', u'rest', u'VB'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'sun', u'sun', u'NN'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'sleep', u'sleep', u'VB'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'sun', 'was', 'setting', ',', 'and', 'Jimmy', 'wanted', 'to', 'rest', 'in', 'the', 'sun', ',', 'and', 'sleep', '.']}, {'string': ' He found a nice place to sit, and began to rest.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VP (VBD found) (NP (DT a) (JJ nice) (NN place)) (S (VP (TO to) (VP (VB sit))))) (, ,) (CC and) (VP (VBD began) (S (VP (TO to) (VP (VB rest)))))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'found', u'find', u'VBD'), (u'a', u'a', u'DT'), (u'nice', u'nice', u'JJ'), (u'place', u'place', u'NN'), (u'to', u'to', u'TO'), (u'sit', u'sit', u'VB'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'began', u'begin', u'VBD'), (u'to', u'to', u'TO'), (u'rest', u'rest', u'VB'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'found', 'a', 'nice', 'place', 'to', 'sit', ',', 'and', 'began', 'to', 'rest', '.']}, {'string': ' Falling asleep quickly, he slept for a few hours.', 'parse': {'tree': '(ROOT (S (S (VP (VBG Falling) (ADJP (RB asleep)) (ADVP (RB quickly)))) (, ,) (NP (PRP he)) (VP (VBD slept) (PP (IN for) (NP (DT a) (JJ few) (NNS hours)))) (. .)))', 'lemma': [(u'Falling', u'fall', u'VBG'), (u'asleep', u'asleep', u'RB'), (u'quickly', u'quickly', u'RB'), (u',', u',', u','), (u'he', u'he', u'PRP'), (u'slept', u'sleep', u'VBD'), (u'for', u'for', u'IN'), (u'a', u'a', u'DT'), (u'few', u'few', u'JJ'), (u'hours', u'hour', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['Falling', 'asleep', 'quickly', ',', 'he', 'slept', 'for', 'a', 'few', 'hours', '.']}, {'string': ' When he woke up it was dark outside.', 'parse': {'tree': '(ROOT (S (SBAR (WHADVP (WRB When)) (S (NP (PRP he)) (VP (VBD woke) (PRT (RP up))))) (NP (PRP it)) (VP (VBD was) (ADJP (JJ dark) (PP (IN outside)))) (. .)))', 'lemma': [(u'When', u'when', u'WRB'), (u'he', u'he', u'PRP'), (u'woke', u'wake', u'VBD'), (u'up', u'up', u'RP'), (u'it', u'it', u'PRP'), (u'was', u'be', u'VBD'), (u'dark', u'dark', u'JJ'), (u'outside', u'outside', u'IN'), (u'.', u'.', u'.')]}, 'tokens': ['When', 'he', 'woke', 'up', 'it', 'was', 'dark', 'outside', '.']}, {'string': ' He had missed dinnertime, but there were always those worms at the bottom of the pond.', 'parse': {'tree': '(ROOT (S (S (NP (PRP He)) (VP (VBD had) (VP (VBN missed) (S (ADJP (JJ dinnertime)))))) (, ,) (CC but) (S (NP (EX there)) (VP (VBD were) (ADVP (RB always)) (NP (DT those) (NNS worms)) (PP (IN at) (NP (NP (DT the) (NN bottom)) (PP (IN of) (NP (DT the) (NN pond))))))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'had', u'have', u'VBD'), (u'missed', u'miss', u'VBN'), (u'dinnertime', u'dinnertime', u'JJ'), (u',', u',', u','), (u'but', u'but', u'CC'), (u'there', u'there', u'EX'), (u'were', u'be', u'VBD'), (u'always', u'always', u'RB'), (u'those', u'those', u'DT'), (u'worms', u'worm', u'NNS'), (u'at', u'at', u'IN'), (u'the', u'the', u'DT'), (u'bottom', u'bottom', u'NN'), (u'of', u'of', u'IN'), (u'the', u'the', u'DT'), (u'pond', u'pond', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'had', 'missed', 'dinnertime', ',', 'but', 'there', 'were', 'always', 'those', 'worms', 'at', 'the', 'bottom', 'of', 'the', 'pond', '.']}, {'string': ' Jimmy ate quickly, and was soon ready to swim more.', 'parse': {'tree': '(ROOT (S (NP (NNP Jimmy)) (VP (VP (VBD ate) (ADVP (RB quickly))) (, ,) (CC and) (VP (VBD was) (ADVP (RB soon)) (ADJP (JJ ready) (PP (TO to) (ADVP (NP (CD swim)) (RBR more)))))) (. .)))', 'lemma': [(u'Jimmy', u'Jimmy', u'NNP'), (u'ate', u'eat', u'VBD'), (u'quickly', u'quickly', u'RB'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'was', u'be', u'VBD'), (u'soon', u'soon', u'RB'), (u'ready', u'ready', u'JJ'), (u'to', u'to', u'TO'), (u'swim', u'swim', u'CD'), (u'more', u'more', u'RBR'), (u'.', u'.', u'.')]}, 'tokens': ['Jimmy', 'ate', 'quickly', ',', 'and', 'was', 'soon', 'ready', 'to', 'swim', 'more', '.']}, {'string': ' The pond was small, not a lake, or a river or a stream.', 'parse': {'tree': '(ROOT (S (NP (DT The) (NN pond)) (VP (VBD was) (NP (NP (JJ small)) (, ,) (NP (RB not) (DT a) (NN lake)) (, ,) (CC or) (NP (NP (DT a) (NN river)) (CC or) (NP (DT a) (NN stream))))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'pond', u'pond', u'NN'), (u'was', u'be', u'VBD'), (u'small', u'small', u'JJ'), (u',', u',', u','), (u'not', u'not', u'RB'), (u'a', u'a', u'DT'), (u'lake', u'lake', u'NN'), (u',', u',', u','), (u'or', u'or', u'CC'), (u'a', u'a', u'DT'), (u'river', u'river', u'NN'), (u'or', u'or', u'CC'), (u'a', u'a', u'DT'), (u'stream', u'stream', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'pond', 'was', 'small', ',', 'not', 'a', 'lake', ',', 'or', 'a', 'river', 'or', 'a', 'stream', '.']}, {'string': ' He swam around for a little longer, and soon it was ready for bed in the nest, where he slept with his family Billy, Susie, and Doug.', 'parse': {'tree': '(ROOT (S (S (NP (PRP He)) (VP (VBP swam) (PRT (RP around)) (PP (IN for) (ADVP (NP (DT a) (RB little)) (JJR longer))))) (, ,) (CC and) (S (ADVP (RB soon)) (NP (PRP it)) (VP (VBD was) (ADJP (JJ ready) (PP (IN for) (NP (NN bed)))) (PP (IN in) (NP (DT the) (NN nest))) (, ,) (SBAR (WHADVP (WRB where)) (S (NP (PRP he)) (VP (VBD slept) (PP (IN with) (NP (PRP$ his) (NN family))) (NP (NNP Billy) (, ,) (NNP Susie) (, ,) (CC and) (NNP Doug))))))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'swam', u'swim', u'VBP'), (u'around', u'around', u'RP'), (u'for', u'for', u'IN'), (u'a', u'a', u'DT'), (u'little', u'little', u'RB'), (u'longer', u'longer', u'JJR'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'soon', u'soon', u'RB'), (u'it', u'it', u'PRP'), (u'was', u'be', u'VBD'), (u'ready', u'ready', u'JJ'), (u'for', u'for', u'IN'), (u'bed', u'bed', u'NN'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'nest', u'nest', u'NN'), (u',', u',', u','), (u'where', u'where', u'WRB'), (u'he', u'he', u'PRP'), (u'slept', u'sleep', u'VBD'), (u'with', u'with', u'IN'), (u'his', u'he', u'PRP$'), (u'family', u'family', u'NN'), (u'Billy', u'Billy', u'NNP'), (u',', u',', u','), (u'Susie', u'Susie', u'NNP'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'Doug', u'Doug', u'NNP'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'swam', 'around', 'for', 'a', 'little', 'longer', ',', 'and', 'soon', 'it', 'was', 'ready', 'for', 'bed', 'in', 'the', 'nest', ',', 'where', 'he', 'slept', 'with', 'his', 'family', 'Billy', ',', 'Susie', ',', 'and', 'Doug', '.']}, {'string': ' The other animals were sleeping as well, the dog and the cat on the porch.', 'parse': {'tree': '(ROOT (S (NP (DT The) (JJ other) (NNS animals)) (VP (VBD were) (VP (VBG sleeping) (PP (IN as) (NP (NP (NN well)) (, ,) (NP (DT the) (NN dog)) (CC and) (NP (DT the) (NN cat)))) (PP (IN on) (NP (DT the) (NN porch))))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'other', u'other', u'JJ'), (u'animals', u'animal', u'NNS'), (u'were', u'be', u'VBD'), (u'sleeping', u'sleep', u'VBG'), (u'as', u'as', u'IN'), (u'well', u'well', u'NN'), (u',', u',', u','), (u'the', u'the', u'DT'), (u'dog', u'dog', u'NN'), (u'and', u'and', u'CC'), (u'the', u'the', u'DT'), (u'cat', u'cat', u'NN'), (u'on', u'on', u'IN'), (u'the', u'the', u'DT'), (u'porch', u'porch', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'other', 'animals', 'were', 'sleeping', 'as', 'well', ',', 'the', 'dog', 'and', 'the', 'cat', 'on', 'the', 'porch', '.']}, {'string': ' The cow was sleeping in the barn.', 'parse': {'tree': '(ROOT (S (NP (DT The) (NN cow)) (VP (VBD was) (VP (VBG sleeping) (PP (IN in) (NP (DT the) (NN barn))))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'cow', u'cow', u'NN'), (u'was', u'be', u'VBD'), (u'sleeping', u'sleep', u'VBG'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'barn', u'barn', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'cow', 'was', 'sleeping', 'in', 'the', 'barn', '.']}, {'string': ' And last the kittens in their box.', 'parse': {'tree': '(ROOT (S (CC And) (VP (VB last) (NP (DT the) (NNS kittens)) (PP (IN in) (NP (PRP$ their) (NN box)))) (. .)))', 'lemma': [(u'And', u'and', u'CC'), (u'last', u'last', u'VB'), (u'the', u'the', u'DT'), (u'kittens', u'kitten', u'NNS'), (u'in', u'in', u'IN'), (u'their', u'they', u'PRP$'), (u'box', u'box', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['And', 'last', 'the', 'kittens', 'in', 'their', 'box', '.']}, {'string': ' Jimmy was ready for bed, it had been a long day, and the next day was going to be the same.', 'parse': {'tree': '(ROOT (S (S (NP (NNP Jimmy)) (VP (VBD was) (ADJP (JJ ready) (PP (IN for) (NP (NN bed)))))) (PRN (, ,) (S (NP (PRP it)) (VP (VBD had) (VP (VBN been) (NP (DT a) (JJ long) (NN day))))) (, ,)) (CC and) (S (NP (DT the) (JJ next) (NN day)) (VP (VBD was) (VP (VBG going) (S (VP (TO to) (VP (VB be) (NP (DT the) (JJ same)))))))) (. .)))', 'lemma': [(u'Jimmy', u'Jimmy', u'NNP'), (u'was', u'be', u'VBD'), (u'ready', u'ready', u'JJ'), (u'for', u'for', u'IN'), (u'bed', u'bed', u'NN'), (u',', u',', u','), (u'it', u'it', u'PRP'), (u'had', u'have', u'VBD'), (u'been', u'be', u'VBN'), (u'a', u'a', u'DT'), (u'long', u'long', u'JJ'), (u'day', u'day', u'NN'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'the', u'the', u'DT'), (u'next', u'next', u'JJ'), (u'day', u'day', u'NN'), (u'was', u'be', u'VBD'), (u'going', u'go', u'VBG'), (u'to', u'to', u'TO'), (u'be', u'be', u'VB'), (u'the', u'the', u'DT'), (u'same', u'same', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['Jimmy', 'was', 'ready', 'for', 'bed', ',', 'it', 'had', 'been', 'a', 'long', 'day', ',', 'and', 'the', 'next', 'day', 'was', 'going', 'to', 'be', 'the', 'same', '.']}, {'string': ' But Jimmy did not care.', 'parse': {'tree': '(ROOT (S (CC But) (NP (NNP Jimmy)) (VP (VBD did) (RB not) (VP (VB care))) (. .)))', 'lemma': [(u'But', u'but', u'CC'), (u'Jimmy', u'Jimmy', u'NNP'), (u'did', u'do', u'VBD'), (u'not', u'not', u'RB'), (u'care', u'care', u'VB'), (u'.', u'.', u'.')]}, 'tokens': ['But', 'Jimmy', 'did', 'not', 'care', '.']}, {'string': ' He loved being a duck.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD loved) (S (VP (VBG being) (NP (DT a) (NN duck))))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'loved', u'love', u'VBD'), (u'being', u'be', u'VBG'), (u'a', u'a', u'DT'), (u'duck', u'duck', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'loved', 'being', 'a', 'duck', '.']}, {'string': ' Jimmy was one happy duck.', 'parse': {'tree': '(ROOT (S (NP (NNP Jimmy)) (VP (VBD was) (NP (ADJP (NP (CD one)) (JJ happy)) (NN duck))) (. .)))', 'lemma': [(u'Jimmy', u'Jimmy', u'NNP'), (u'was', u'be', u'VBD'), (u'one', u'one', u'CD'), (u'happy', u'happy', u'JJ'), (u'duck', u'duck', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Jimmy', 'was', 'one', 'happy', 'duck', '.']}], 'questions': [{'question': {'string': ' What did Jimmy eat?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD did) (NP (NNP Jimmy)) (VP (VB eat))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'did', u'do', u'VBD'), (u'Jimmy', u'Jimmy', u'NNP'), (u'eat', u'eat', u'VB'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'did', 'Jimmy', 'eat', '?']}, 'answers': [{'string': ' Hot Dog', 'parse': {'tree': '(ROOT (NP (NNP Hot) (NNP Dog)))', 'lemma': [(u'Hot', u'Hot', u'NNP'), (u'Dog', u'Dog', u'NNP')]}, 'tokens': ['Hot', 'Dog']}, {'string': ' Bugs', 'parse': {'tree': '(ROOT (NP (NNS Bugs)))', 'lemma': [(u'Bugs', u'bug', u'NNS')]}, 'tokens': ['Bugs']}, {'string': ' Worms', 'parse': {'tree': '(ROOT (INTJ (UH Worms)))', 'lemma': [(u'Worms', u'worms', u'UH')]}, 'tokens': ['Worms']}, {'string': ' Bread Crumbs', 'parse': {'tree': '(ROOT (NP (NNP Bread) (NNPS Crumbs)))', 'lemma': [(u'Bread', u'Bread', u'NNP'), (u'Crumbs', u'Crumbs', u'NNPS')]}, 'tokens': ['Bread', 'Crumbs']}], 'mode': 0}, {'question': {'string': ' Where did Jimmy swim?', 'parse': {'tree': '(ROOT (SBARQ (WHADVP (WRB Where)) (SQ (VBD did) (NP (NNP Jimmy)) (VP (VBP swim))) (. ?)))', 'lemma': [(u'Where', u'where', u'WRB'), (u'did', u'do', u'VBD'), (u'Jimmy', u'Jimmy', u'NNP'), (u'swim', u'swim', u'VBP'), (u'?', u'?', u'.')]}, 'tokens': ['Where', 'did', 'Jimmy', 'swim', '?']}, 'answers': [{'string': ' Lake', 'parse': {'tree': '(ROOT (NP (NNP Lake)))', 'lemma': [(u'Lake', u'Lake', u'NNP')]}, 'tokens': ['Lake']}, {'string': ' Stream', 'parse': {'tree': '(ROOT (NP (NNP Stream)))', 'lemma': [(u'Stream', u'Stream', u'NNP')]}, 'tokens': ['Stream']}, {'string': ' Pond', 'parse': {'tree': '(ROOT (NP (NNP Pond)))', 'lemma': [(u'Pond', u'Pond', u'NNP')]}, 'tokens': ['Pond']}, {'string': ' River', 'parse': {'tree': '(ROOT (NP (NNP River)))', 'lemma': [(u'River', u'River', u'NNP')]}, 'tokens': ['River']}], 'mode': 1}, {'question': {'string': ' Where did Jimmy sleep?', 'parse': {'tree': '(ROOT (SBARQ (WHADVP (WRB Where)) (SQ (VBD did) (NP (NNP Jimmy)) (VP (VB sleep))) (. ?)))', 'lemma': [(u'Where', u'where', u'WRB'), (u'did', u'do', u'VBD'), (u'Jimmy', u'Jimmy', u'NNP'), (u'sleep', u'sleep', u'VB'), (u'?', u'?', u'.')]}, 'tokens': ['Where', 'did', 'Jimmy', 'sleep', '?']}, 'answers': [{'string': ' Barn', 'parse': {'tree': '(ROOT (NP (NNP Barn)))', 'lemma': [(u'Barn', u'Barn', u'NNP')]}, 'tokens': ['Barn']}, {'string': ' Box', 'parse': {'tree': '(ROOT (NP (NNP Box)))', 'lemma': [(u'Box', u'Box', u'NNP')]}, 'tokens': ['Box']}, {'string': ' Nest', 'parse': {'tree': '(ROOT (NP (NNP Nest)))', 'lemma': [(u'Nest', u'Nest', u'NNP')]}, 'tokens': ['Nest']}, {'string': ' Porch', 'parse': {'tree': '(ROOT (NP (NNP Porch)))', 'lemma': [(u'Porch', u'Porch', u'NNP')]}, 'tokens': ['Porch']}], 'mode': 0}, {'question': {'string': ' What was the name of the duck?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD was) (NP (NP (DT the) (NN name)) (PP (IN of) (NP (DT the) (NN duck))))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'was', u'be', u'VBD'), (u'the', u'the', u'DT'), (u'name', u'name', u'NN'), (u'of', u'of', u'IN'), (u'the', u'the', u'DT'), (u'duck', u'duck', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'was', 'the', 'name', 'of', 'the', 'duck', '?']}, 'answers': [{'string': ' Doug', 'parse': {'tree': '(ROOT (NP (NNP Doug)))', 'lemma': [(u'Doug', u'Doug', u'NNP')]}, 'tokens': ['Doug']}, {'string': ' Susie', 'parse': {'tree': '(ROOT (NP (NNP Susie)))', 'lemma': [(u'Susie', u'Susie', u'NNP')]}, 'tokens': ['Susie']}, {'string': ' Billy', 'parse': {'tree': '(ROOT (NP (NNP Billy)))', 'lemma': [(u'Billy', u'Billy', u'NNP')]}, 'tokens': ['Billy']}, {'string': ' Jimmy', 'parse': {'tree': '(ROOT (NP (NNP Jimmy)))', 'lemma': [(u'Jimmy', u'Jimmy', u'NNP')]}, 'tokens': ['Jimmy']}], 'mode': 0}]}
{'sentences': [{'string': ' Once upon a time there was a little boy who had a rock.', 'parse': {'tree': '(ROOT (S (ADVP (RB Once) (PP (IN upon) (NP (DT a) (NN time)))) (NP (EX there)) (VP (VBD was) (NP (NP (DT a) (JJ little) (NN boy)) (SBAR (WHNP (WP who)) (S (VP (VBD had) (NP (DT a) (NN rock))))))) (. .)))', 'lemma': [(u'Once', u'once', u'RB'), (u'upon', u'upon', u'IN'), (u'a', u'a', u'DT'), (u'time', u'time', u'NN'), (u'there', u'there', u'EX'), (u'was', u'be', u'VBD'), (u'a', u'a', u'DT'), (u'little', u'little', u'JJ'), (u'boy', u'boy', u'NN'), (u'who', u'who', u'WP'), (u'had', u'have', u'VBD'), (u'a', u'a', u'DT'), (u'rock', u'rock', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Once', 'upon', 'a', 'time', 'there', 'was', 'a', 'little', 'boy', 'who', 'had', 'a', 'rock', '.']}, {'string': ' The rock was his favorite toy.', 'parse': {'tree': '(ROOT (S (NP (DT The) (NN rock)) (VP (VBD was) (NP (PRP$ his) (JJ favorite) (NN toy))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'rock', u'rock', u'NN'), (u'was', u'be', u'VBD'), (u'his', u'he', u'PRP$'), (u'favorite', u'favorite', u'JJ'), (u'toy', u'toy', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'rock', 'was', 'his', 'favorite', 'toy', '.']}, {'string': ' He would throw his rock at trees, or roll his rock down hills.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (MD would) (VP (VP (VB throw) (NP (PRP$ his) (NN rock)) (PP (IN at) (NP (NNS trees)))) (, ,) (CC or) (VP (VB roll) (NP (PRP$ his) (NN rock)) (PP (IN down) (NP (NNS hills)))))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'would', u'would', u'MD'), (u'throw', u'throw', u'VB'), (u'his', u'he', u'PRP$'), (u'rock', u'rock', u'NN'), (u'at', u'at', u'IN'), (u'trees', u'tree', u'NNS'), (u',', u',', u','), (u'or', u'or', u'CC'), (u'roll', u'roll', u'VB'), (u'his', u'he', u'PRP$'), (u'rock', u'rock', u'NN'), (u'down', u'down', u'IN'), (u'hills', u'hill', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'would', 'throw', 'his', 'rock', 'at', 'trees', ',', 'or', 'roll', 'his', 'rock', 'down', 'hills', '.']}, {'string': ' Sometimes he would stand at the river shore, dropping his rock in the water.', 'parse': {'tree': '(ROOT (S (ADVP (RB Sometimes)) (NP (PRP he)) (VP (MD would) (VP (VB stand) (PP (IN at) (NP (DT the) (NN river) (NN shore))) (, ,) (S (VP (VBG dropping) (NP (PRP$ his) (NN rock)) (PP (IN in) (NP (DT the) (NN water))))))) (. .)))', 'lemma': [(u'Sometimes', u'sometimes', u'RB'), (u'he', u'he', u'PRP'), (u'would', u'would', u'MD'), (u'stand', u'stand', u'VB'), (u'at', u'at', u'IN'), (u'the', u'the', u'DT'), (u'river', u'river', u'NN'), (u'shore', u'shore', u'NN'), (u',', u',', u','), (u'dropping', u'drop', u'VBG'), (u'his', u'he', u'PRP$'), (u'rock', u'rock', u'NN'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'water', u'water', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Sometimes', 'he', 'would', 'stand', 'at', 'the', 'river', 'shore', ',', 'dropping', 'his', 'rock', 'in', 'the', 'water', '.']}, {'string': ' He thought it was great fun to listen to the rock splash.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD thought) (SBAR (S (NP (PRP it)) (VP (VBD was) (NP (JJ great) (NN fun) (S (VP (TO to) (VP (VB listen) (PP (TO to) (NP (DT the) (NN rock) (NN splash))))))))))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'thought', u'think', u'VBD'), (u'it', u'it', u'PRP'), (u'was', u'be', u'VBD'), (u'great', u'great', u'JJ'), (u'fun', u'fun', u'NN'), (u'to', u'to', u'TO'), (u'listen', u'listen', u'VB'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'rock', u'rock', u'NN'), (u'splash', u'splash', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'thought', 'it', 'was', 'great', 'fun', 'to', 'listen', 'to', 'the', 'rock', 'splash', '.']}, {'string': ' One day, the little boy met a brown cow.', 'parse': {'tree': '(ROOT (S (NP (CD One) (NN day)) (, ,) (NP (DT the) (JJ little) (NN boy)) (VP (VBD met) (NP (DT a) (JJ brown) (NN cow))) (. .)))', 'lemma': [(u'One', u'one', u'CD'), (u'day', u'day', u'NN'), (u',', u',', u','), (u'the', u'the', u'DT'), (u'little', u'little', u'JJ'), (u'boy', u'boy', u'NN'), (u'met', u'meet', u'VBD'), (u'a', u'a', u'DT'), (u'brown', u'brown', u'JJ'), (u'cow', u'cow', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['One', 'day', ',', 'the', 'little', 'boy', 'met', 'a', 'brown', 'cow', '.']}, {'string': " `` Moo! ''", 'parse': {'tree': "(ROOT (S (`` ``) (VP (VB Moo)) (. !) ('' '')))", 'lemma': [(u'``', u'``', u'``'), (u'Moo', u'moo', u'VB'), (u'!', u'!', u'.'), (u"''", u"''", u"''")]}, 'tokens': ['``', 'Moo', '!', "''"]}, {'string': ' said the cow.', 'parse': {'tree': '(ROOT (S (VP (VBD said) (NP (DT the) (NN cow))) (. .)))', 'lemma': [(u'said', u'say', u'VBD'), (u'the', u'the', u'DT'), (u'cow', u'cow', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['said', 'the', 'cow', '.']}, {'string': " `` Hello, '' said the boy.", 'parse': {'tree': "(ROOT (SINV (`` ``) (FRAG (INTJ (UH Hello))) (, ,) ('' '') (VP (VBD said)) (NP (DT the) (NN boy)) (. .)))", 'lemma': [(u'``', u'``', u'``'), (u'Hello', u'hello', u'UH'), (u',', u',', u','), (u"''", u"''", u"''"), (u'said', u'say', u'VBD'), (u'the', u'the', u'DT'), (u'boy', u'boy', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['``', 'Hello', ',', "''", 'said', 'the', 'boy', '.']}, {'string': " `` Would you like to see my rock? ''", 'parse': {'tree': "(ROOT (S (`` ``) (ADVP (RB Would)) (NP (PRP you)) (VP (VBP like) (S (VP (TO to) (VP (VB see) (NP (PRP$ my) (NN rock)))))) (. ?) ('' '')))", 'lemma': [(u'``', u'``', u'``'), (u'Would', u'would', u'RB'), (u'you', u'you', u'PRP'), (u'like', u'like', u'VBP'), (u'to', u'to', u'TO'), (u'see', u'see', u'VB'), (u'my', u'my', u'PRP$'), (u'rock', u'rock', u'NN'), (u'?', u'?', u'.'), (u"''", u"''", u"''")]}, 'tokens': ['``', 'Would', 'you', 'like', 'to', 'see', 'my', 'rock', '?', "''"]}, {'string': ' The boy held out his rock for the cow to see.', 'parse': {'tree': '(ROOT (S (NP (DT The) (NN boy)) (VP (VBD held) (PRT (RP out)) (NP (PRP$ his) (NN rock)) (PP (IN for) (NP (DT the) (NN cow) (S (VP (TO to) (VP (VB see))))))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'boy', u'boy', u'NN'), (u'held', u'hold', u'VBD'), (u'out', u'out', u'RP'), (u'his', u'he', u'PRP$'), (u'rock', u'rock', u'NN'), (u'for', u'for', u'IN'), (u'the', u'the', u'DT'), (u'cow', u'cow', u'NN'), (u'to', u'to', u'TO'), (u'see', u'see', u'VB'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'boy', 'held', 'out', 'his', 'rock', 'for', 'the', 'cow', 'to', 'see', '.']}, {'string': ' The cow looked at it.', 'parse': {'tree': '(ROOT (S (NP (DT The) (NN cow)) (VP (VBD looked) (PP (IN at) (NP (PRP it)))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'cow', u'cow', u'NN'), (u'looked', u'look', u'VBD'), (u'at', u'at', u'IN'), (u'it', u'it', u'PRP'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'cow', 'looked', 'at', 'it', '.']}, {'string': ' Then it picked it up in its mouth.', 'parse': {'tree': '(ROOT (S (RB Then) (NP (PRP it)) (VP (VBD picked) (NP (PRP it)) (PRT (RP up)) (PP (IN in) (NP (PRP$ its) (NN mouth)))) (. .)))', 'lemma': [(u'Then', u'then', u'RB'), (u'it', u'it', u'PRP'), (u'picked', u'pick', u'VBD'), (u'it', u'it', u'PRP'), (u'up', u'up', u'RP'), (u'in', u'in', u'IN'), (u'its', u'its', u'PRP$'), (u'mouth', u'mouth', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Then', 'it', 'picked', 'it', 'up', 'in', 'its', 'mouth', '.']}, {'string': " `` Moo, '' said the cow.", 'parse': {'tree': "(ROOT (SINV (`` ``) (FRAG (NP (NNP Moo))) (, ,) ('' '') (VP (VBD said)) (NP (DT the) (NN cow)) (. .)))", 'lemma': [(u'``', u'``', u'``'), (u'Moo', u'Moo', u'NNP'), (u',', u',', u','), (u"''", u"''", u"''"), (u'said', u'say', u'VBD'), (u'the', u'the', u'DT'), (u'cow', u'cow', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['``', 'Moo', ',', "''", 'said', 'the', 'cow', '.']}, {'string': " `` Hey, '' the boy said.", 'parse': {'tree': "(ROOT (S (`` ``) (FRAG (INTJ (UH Hey))) (, ,) ('' '') (NP (DT the) (NN boy)) (VP (VBD said)) (. .)))", 'lemma': [(u'``', u'``', u'``'), (u'Hey', u'hey', u'UH'), (u',', u',', u','), (u"''", u"''", u"''"), (u'the', u'the', u'DT'), (u'boy', u'boy', u'NN'), (u'said', u'say', u'VBD'), (u'.', u'.', u'.')]}, 'tokens': ['``', 'Hey', ',', "''", 'the', 'boy', 'said', '.']}, {'string': " `` Give me back my rock! ''", 'parse': {'tree': "(ROOT (S (`` ``) (VP (VB Give) (S (NP (PRP me)) (VP (VB back) (NP (PRP$ my) (NN rock))))) (. !) ('' '')))", 'lemma': [(u'``', u'``', u'``'), (u'Give', u'give', u'VB'), (u'me', u'I', u'PRP'), (u'back', u'back', u'VB'), (u'my', u'my', u'PRP$'), (u'rock', u'rock', u'NN'), (u'!', u'!', u'.'), (u"''", u"''", u"''")]}, 'tokens': ['``', 'Give', 'me', 'back', 'my', 'rock', '!', "''"]}, {'string': " The boy tried to pull open the cow 's mouth.", 'parse': {'tree': "(ROOT (S (NP (DT The) (NN boy)) (VP (VBD tried) (S (VP (TO to) (VP (VB pull) (PRT (RP open)) (NP (NP (DT the) (NN cow) (POS 's)) (NN mouth)))))) (. .)))", 'lemma': [(u'The', u'the', u'DT'), (u'boy', u'boy', u'NN'), (u'tried', u'try', u'VBD'), (u'to', u'to', u'TO'), (u'pull', u'pull', u'VB'), (u'open', u'open', u'RP'), (u'the', u'the', u'DT'), (u'cow', u'cow', u'NN'), (u"'s", u"'s", u'POS'), (u'mouth', u'mouth', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'boy', 'tried', 'to', 'pull', 'open', 'the', 'cow', "'s", 'mouth', '.']}, {'string': " Then he tried sticking his fingers in the cow 's nose, so it would open its mouth to breathe.", 'parse': {'tree': "(ROOT (S (S (ADVP (RB Then)) (NP (PRP he)) (VP (VBD tried) (S (VP (VBG sticking) (NP (PRP$ his) (NNS fingers)) (PP (IN in) (NP (NP (DT the) (NN cow) (POS 's)) (NN nose))))))) (, ,) (IN so) (S (NP (PRP it)) (VP (MD would) (VP (VB open) (NP (PRP$ its) (NN mouth) (S (VP (TO to) (VP (VB breathe)))))))) (. .)))", 'lemma': [(u'Then', u'then', u'RB'), (u'he', u'he', u'PRP'), (u'tried', u'try', u'VBD'), (u'sticking', u'stick', u'VBG'), (u'his', u'he', u'PRP$'), (u'fingers', u'finger', u'NNS'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'cow', u'cow', u'NN'), (u"'s", u"'s", u'POS'), (u'nose', u'nose', u'NN'), (u',', u',', u','), (u'so', u'so', u'IN'), (u'it', u'it', u'PRP'), (u'would', u'would', u'MD'), (u'open', u'open', u'VB'), (u'its', u'its', u'PRP$'), (u'mouth', u'mouth', u'NN'), (u'to', u'to', u'TO'), (u'breathe', u'breathe', u'VB'), (u'.', u'.', u'.')]}, 'tokens': ['Then', 'he', 'tried', 'sticking', 'his', 'fingers', 'in', 'the', 'cow', "'s", 'nose', ',', 'so', 'it', 'would', 'open', 'its', 'mouth', 'to', 'breathe', '.']}, {'string': " Then he tried tickling the cow, but it would n't open its mouth.", 'parse': {'tree': "(ROOT (S (S (ADVP (RB Then)) (NP (PRP he)) (VP (VBD tried) (S (VP (VBG tickling) (NP (DT the) (NN cow)))))) (, ,) (CC but) (S (NP (PRP it)) (VP (MD would) (RB n't) (VP (VB open) (NP (PRP$ its) (NN mouth))))) (. .)))", 'lemma': [(u'Then', u'then', u'RB'), (u'he', u'he', u'PRP'), (u'tried', u'try', u'VBD'), (u'tickling', u'tickle', u'VBG'), (u'the', u'the', u'DT'), (u'cow', u'cow', u'NN'), (u',', u',', u','), (u'but', u'but', u'CC'), (u'it', u'it', u'PRP'), (u'would', u'would', u'MD'), (u"n't", u'not', u'RB'), (u'open', u'open', u'VB'), (u'its', u'its', u'PRP$'), (u'mouth', u'mouth', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Then', 'he', 'tried', 'tickling', 'the', 'cow', ',', 'but', 'it', 'would', "n't", 'open', 'its', 'mouth', '.']}, {'string': " `` Moo, '' it said.", 'parse': {'tree': "(ROOT (S (`` ``) (FRAG (NP (NNP Moo))) (, ,) ('' '') (NP (PRP it)) (VP (VBD said)) (. .)))", 'lemma': [(u'``', u'``', u'``'), (u'Moo', u'Moo', u'NNP'), (u',', u',', u','), (u"''", u"''", u"''"), (u'it', u'it', u'PRP'), (u'said', u'say', u'VBD'), (u'.', u'.', u'.')]}, 'tokens': ['``', 'Moo', ',', "''", 'it', 'said', '.']}, {'string': ' Then it swallowed the rock, and the little boy went home and cried.', 'parse': {'tree': '(ROOT (S (RB Then) (S (NP (PRP it)) (VP (VBN swallowed) (NP (DT the) (NN rock)))) (, ,) (CC and) (S (NP (DT the) (JJ little) (NN boy)) (VP (VP (VBD went) (NP (NN home))) (CC and) (VP (VBD cried)))) (. .)))', 'lemma': [(u'Then', u'then', u'RB'), (u'it', u'it', u'PRP'), (u'swallowed', u'swallow', u'VBN'), (u'the', u'the', u'DT'), (u'rock', u'rock', u'NN'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'the', u'the', u'DT'), (u'little', u'little', u'JJ'), (u'boy', u'boy', u'NN'), (u'went', u'go', u'VBD'), (u'home', u'home', u'NN'), (u'and', u'and', u'CC'), (u'cried', u'cry', u'VBD'), (u'.', u'.', u'.')]}, 'tokens': ['Then', 'it', 'swallowed', 'the', 'rock', ',', 'and', 'the', 'little', 'boy', 'went', 'home', 'and', 'cried', '.']}], 'questions': [{'question': {'string': ' What did the little boy not do with his rock?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD did) (NP (DT the) (JJ little) (NN boy)) (ADVP (RB not)) (VP (VB do) (PP (IN with) (NP (PRP$ his) (NN rock))))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'did', u'do', u'VBD'), (u'the', u'the', u'DT'), (u'little', u'little', u'JJ'), (u'boy', u'boy', u'NN'), (u'not', u'not', u'RB'), (u'do', u'do', u'VB'), (u'with', u'with', u'IN'), (u'his', u'he', u'PRP$'), (u'rock', u'rock', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'did', 'the', 'little', 'boy', 'not', 'do', 'with', 'his', 'rock', '?']}, 'answers': [{'string': ' roll it down the hill.', 'parse': {'tree': '(ROOT (S (VP (VB roll) (NP (PRP it)) (ADVP (RB down) (NP (DT the) (NN hill)))) (. .)))', 'lemma': [(u'roll', u'roll', u'VB'), (u'it', u'it', u'PRP'), (u'down', u'down', u'RB'), (u'the', u'the', u'DT'), (u'hill', u'hill', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['roll', 'it', 'down', 'the', 'hill', '.']}, {'string': ' eat it.', 'parse': {'tree': '(ROOT (S (VP (VB eat) (NP (PRP it))) (. .)))', 'lemma': [(u'eat', u'eat', u'VB'), (u'it', u'it', u'PRP'), (u'.', u'.', u'.')]}, 'tokens': ['eat', 'it', '.']}, {'string': ' throw it at trees.', 'parse': {'tree': '(ROOT (S (VP (VB throw) (NP (PRP it)) (PP (IN at) (NP (NNS trees)))) (. .)))', 'lemma': [(u'throw', u'throw', u'VB'), (u'it', u'it', u'PRP'), (u'at', u'at', u'IN'), (u'trees', u'tree', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['throw', 'it', 'at', 'trees', '.']}, {'string': ' throw it in the river.', 'parse': {'tree': '(ROOT (S (VP (VB throw) (NP (PRP it)) (PP (IN in) (NP (DT the) (NN river)))) (. .)))', 'lemma': [(u'throw', u'throw', u'VB'), (u'it', u'it', u'PRP'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'river', u'river', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['throw', 'it', 'in', 'the', 'river', '.']}], 'mode': 0}, {'question': {'string': ' How many times did the cow moo in the story?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WHADJP (WRB How) (JJ many)) (NNS times)) (SQ (VBD did) (NP (DT the) (NN cow)) (VP (VB moo) (PP (IN in) (NP (DT the) (NN story))))) (. ?)))', 'lemma': [(u'How', u'how', u'WRB'), (u'many', u'many', u'JJ'), (u'times', u'time', u'NNS'), (u'did', u'do', u'VBD'), (u'the', u'the', u'DT'), (u'cow', u'cow', u'NN'), (u'moo', u'moo', u'VB'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'story', u'story', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['How', 'many', 'times', 'did', 'the', 'cow', 'moo', 'in', 'the', 'story', '?']}, 'answers': [{'string': ' four', 'parse': {'tree': '(ROOT (FRAG (NP (CD four))))', 'lemma': [(u'four', u'four', u'CD')]}, 'tokens': ['four']}, {'string': ' two', 'parse': {'tree': '(ROOT (FRAG (NP (CD two))))', 'lemma': [(u'two', u'two', u'CD')]}, 'tokens': ['two']}, {'string': ' three', 'parse': {'tree': '(ROOT (FRAG (NP (CD three))))', 'lemma': [(u'three', u'three', u'CD')]}, 'tokens': ['three']}, {'string': ' one', 'parse': {'tree': '(ROOT (NP (NN one)))', 'lemma': [(u'one', u'one', u'NN')]}, 'tokens': ['one']}], 'mode': 0}, {'question': {'string': ' What did the boy do when he lost his rock?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD did) (NP (DT the) (NN boy)) (VP (VB do) (SBAR (WHADVP (WRB when)) (S (NP (PRP he)) (VP (VBD lost) (NP (PRP$ his) (NN rock))))))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'did', u'do', u'VBD'), (u'the', u'the', u'DT'), (u'boy', u'boy', u'NN'), (u'do', u'do', u'VB'), (u'when', u'when', u'WRB'), (u'he', u'he', u'PRP'), (u'lost', u'lose', u'VBD'), (u'his', u'he', u'PRP$'), (u'rock', u'rock', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'did', 'the', 'boy', 'do', 'when', 'he', 'lost', 'his', 'rock', '?']}, 'answers': [{'string': ' look in the river', 'parse': {'tree': '(ROOT (S (VP (VB look) (PP (IN in) (NP (DT the) (NN river))))))', 'lemma': [(u'look', u'look', u'VB'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'river', u'river', u'NN')]}, 'tokens': ['look', 'in', 'the', 'river']}, {'string': ' throw things at trees', 'parse': {'tree': '(ROOT (S (VP (VB throw) (NP (NNS things)) (PP (IN at) (NP (NNS trees))))))', 'lemma': [(u'throw', u'throw', u'VB'), (u'things', u'thing', u'NNS'), (u'at', u'at', u'IN'), (u'trees', u'tree', u'NNS')]}, 'tokens': ['throw', 'things', 'at', 'trees']}, {'string': ' go home and cry', 'parse': {'tree': '(ROOT (S (VP (VB go) (NP (NN home) (CC and) (NN cry)))))', 'lemma': [(u'go', u'go', u'VB'), (u'home', u'home', u'NN'), (u'and', u'and', u'CC'), (u'cry', u'cry', u'NN')]}, 'tokens': ['go', 'home', 'and', 'cry']}, {'string': ' roll down a hill', 'parse': {'tree': '(ROOT (S (VP (VB roll) (PRT (RP down)) (NP (DT a) (NN hill)))))', 'lemma': [(u'roll', u'roll', u'VB'), (u'down', u'down', u'RP'), (u'a', u'a', u'DT'), (u'hill', u'hill', u'NN')]}, 'tokens': ['roll', 'down', 'a', 'hill']}], 'mode': 1}, {'question': {'string': ' What happened to the rock?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VP (VBD happened) (PP (TO to) (NP (DT the) (NN rock))))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'happened', u'happen', u'VBD'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'rock', u'rock', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'happened', 'to', 'the', 'rock', '?']}, 'answers': [{'string': ' It got stuck in a tree.', 'parse': {'tree': '(ROOT (S (NP (PRP It)) (VP (VBD got) (VP (VBN stuck) (PP (IN in) (NP (DT a) (NN tree))))) (. .)))', 'lemma': [(u'It', u'it', u'PRP'), (u'got', u'get', u'VBD'), (u'stuck', u'stick', u'VBN'), (u'in', u'in', u'IN'), (u'a', u'a', u'DT'), (u'tree', u'tree', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['It', 'got', 'stuck', 'in', 'a', 'tree', '.']}, {'string': ' The boy ate it.', 'parse': {'tree': '(ROOT (S (NP (DT The) (NN boy)) (VP (VBD ate) (NP (PRP it))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'boy', u'boy', u'NN'), (u'ate', u'eat', u'VBD'), (u'it', u'it', u'PRP'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'boy', 'ate', 'it', '.']}, {'string': ' The cow ate it.', 'parse': {'tree': '(ROOT (S (NP (DT The) (NN cow)) (VP (VBD ate) (NP (PRP it))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'cow', u'cow', u'NN'), (u'ate', u'eat', u'VBD'), (u'it', u'it', u'PRP'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'cow', 'ate', 'it', '.']}, {'string': ' It fell in the river.', 'parse': {'tree': '(ROOT (S (NP (PRP It)) (VP (VBD fell) (PP (IN in) (NP (DT the) (NN river)))) (. .)))', 'lemma': [(u'It', u'it', u'PRP'), (u'fell', u'fall', u'VBD'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'river', u'river', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['It', 'fell', 'in', 'the', 'river', '.']}], 'mode': 1}]}
{'sentences': [{'string': ' Tammy was a purple tiger.', 'parse': {'tree': '(ROOT (S (NP (NNP Tammy)) (VP (VBD was) (NP (DT a) (JJ purple) (NN tiger))) (. .)))', 'lemma': [(u'Tammy', u'Tammy', u'NNP'), (u'was', u'be', u'VBD'), (u'a', u'a', u'DT'), (u'purple', u'purple', u'JJ'), (u'tiger', u'tiger', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Tammy', 'was', 'a', 'purple', 'tiger', '.']}, {'string': ' She was friends with Bobby the blue bird.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBD was) (NP (NP (NNS friends)) (PP (IN with) (NP (NP (NNP Bobby)) (NP (DT the) (JJ blue) (NN bird)))))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'was', u'be', u'VBD'), (u'friends', u'friend', u'NNS'), (u'with', u'with', u'IN'), (u'Bobby', u'Bobby', u'NNP'), (u'the', u'the', u'DT'), (u'blue', u'blue', u'JJ'), (u'bird', u'bird', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'was', 'friends', 'with', 'Bobby', 'the', 'blue', 'bird', '.']}, {'string': ' They were hungry so they went to the store together.', 'parse': {'tree': '(ROOT (S (NP (PRP They)) (VP (VBD were) (ADJP (JJ hungry)) (SBAR (IN so) (S (NP (PRP they)) (VP (VBD went) (PP (TO to) (NP (DT the) (NN store))) (ADVP (RB together)))))) (. .)))', 'lemma': [(u'They', u'they', u'PRP'), (u'were', u'be', u'VBD'), (u'hungry', u'hungry', u'JJ'), (u'so', u'so', u'IN'), (u'they', u'they', u'PRP'), (u'went', u'go', u'VBD'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'store', u'store', u'NN'), (u'together', u'together', u'RB'), (u'.', u'.', u'.')]}, 'tokens': ['They', 'were', 'hungry', 'so', 'they', 'went', 'to', 'the', 'store', 'together', '.']}, {'string': ' At the store they saw some friends.', 'parse': {'tree': '(ROOT (S (PP (IN At) (NP (DT the) (NN store))) (NP (PRP they)) (VP (VBD saw) (NP (DT some) (NNS friends))) (. .)))', 'lemma': [(u'At', u'at', u'IN'), (u'the', u'the', u'DT'), (u'store', u'store', u'NN'), (u'they', u'they', u'PRP'), (u'saw', u'see', u'VBD'), (u'some', u'some', u'DT'), (u'friends', u'friend', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['At', 'the', 'store', 'they', 'saw', 'some', 'friends', '.']}, {'string': ' They saw Pat the pink panther.', 'parse': {'tree': '(ROOT (S (NP (PRP They)) (VP (VBD saw) (S (VP (VBG Pat) (NP (DT the) (JJ pink) (NN panther))))) (. .)))', 'lemma': [(u'They', u'they', u'PRP'), (u'saw', u'see', u'VBD'), (u'Pat', u'pat', u'VBG'), (u'the', u'the', u'DT'), (u'pink', u'pink', u'JJ'), (u'panther', u'panther', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['They', 'saw', 'Pat', 'the', 'pink', 'panther', '.']}, {'string': ' They also saw Roger the red rabbit.', 'parse': {'tree': '(ROOT (S (NP (PRP They)) (ADVP (RB also)) (VP (VBD saw) (S (NP (NNP Roger)) (NP (DT the) (JJ red) (NN rabbit)))) (. .)))', 'lemma': [(u'They', u'they', u'PRP'), (u'also', u'also', u'RB'), (u'saw', u'see', u'VBD'), (u'Roger', u'Roger', u'NNP'), (u'the', u'the', u'DT'), (u'red', u'red', u'JJ'), (u'rabbit', u'rabbit', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['They', 'also', 'saw', 'Roger', 'the', 'red', 'rabbit', '.']}, {'string': ' Pat bought potatoes and eggs.', 'parse': {'tree': '(ROOT (S (NP (NNP Pat)) (VP (VBD bought) (NP (NNS potatoes) (CC and) (NNS eggs))) (. .)))', 'lemma': [(u'Pat', u'Pat', u'NNP'), (u'bought', u'buy', u'VBD'), (u'potatoes', u'potato', u'NNS'), (u'and', u'and', u'CC'), (u'eggs', u'egg', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['Pat', 'bought', 'potatoes', 'and', 'eggs', '.']}, {'string': ' Roger bought carrots and celery.', 'parse': {'tree': '(ROOT (S (NP (NNP Roger)) (VP (VBD bought) (NP (NNS carrots) (CC and) (NN celery))) (. .)))', 'lemma': [(u'Roger', u'Roger', u'NNP'), (u'bought', u'buy', u'VBD'), (u'carrots', u'carrot', u'NNS'), (u'and', u'and', u'CC'), (u'celery', u'celery', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Roger', 'bought', 'carrots', 'and', 'celery', '.']}, {'string': ' Tammy bought some salad.', 'parse': {'tree': '(ROOT (S (NP (NNP Tammy)) (VP (VBD bought) (NP (DT some) (NN salad))) (. .)))', 'lemma': [(u'Tammy', u'Tammy', u'NNP'), (u'bought', u'buy', u'VBD'), (u'some', u'some', u'DT'), (u'salad', u'salad', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Tammy', 'bought', 'some', 'salad', '.']}, {'string': ' Tammy also bought a pizza.', 'parse': {'tree': '(ROOT (S (NP (NNP Tammy)) (ADVP (RB also)) (VP (VBD bought) (NP (DT a) (NN pizza))) (. .)))', 'lemma': [(u'Tammy', u'Tammy', u'NNP'), (u'also', u'also', u'RB'), (u'bought', u'buy', u'VBD'), (u'a', u'a', u'DT'), (u'pizza', u'pizza', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Tammy', 'also', 'bought', 'a', 'pizza', '.']}, {'string': ' Bobby bought seeds.', 'parse': {'tree': '(ROOT (S (NP (NNP Bobby)) (VP (VBD bought) (NP (NNS seeds))) (. .)))', 'lemma': [(u'Bobby', u'Bobby', u'NNP'), (u'bought', u'buy', u'VBD'), (u'seeds', u'seed', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['Bobby', 'bought', 'seeds', '.']}, {'string': ' They all wanted to eat dinner.', 'parse': {'tree': '(ROOT (S (NP (PRP They)) (ADVP (DT all)) (VP (VBD wanted) (S (VP (TO to) (VP (VB eat) (NP (NN dinner)))))) (. .)))', 'lemma': [(u'They', u'they', u'PRP'), (u'all', u'all', u'DT'), (u'wanted', u'want', u'VBD'), (u'to', u'to', u'TO'), (u'eat', u'eat', u'VB'), (u'dinner', u'dinner', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['They', 'all', 'wanted', 'to', 'eat', 'dinner', '.']}, {'string': " They went back to Tammy 's house to have supper.", 'parse': {'tree': "(ROOT (S (NP (PRP They)) (VP (VBD went) (ADVP (RB back)) (PP (TO to) (NP (NP (NNP Tammy) (POS 's)) (NN house) (S (VP (TO to) (VP (VB have) (NP (NN supper)))))))) (. .)))", 'lemma': [(u'They', u'they', u'PRP'), (u'went', u'go', u'VBD'), (u'back', u'back', u'RB'), (u'to', u'to', u'TO'), (u'Tammy', u'Tammy', u'NNP'), (u"'s", u"'s", u'POS'), (u'house', u'house', u'NN'), (u'to', u'to', u'TO'), (u'have', u'have', u'VB'), (u'supper', u'supper', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['They', 'went', 'back', 'to', 'Tammy', "'s", 'house', 'to', 'have', 'supper', '.']}, {'string': ' Tammy ate salad and seeds.', 'parse': {'tree': '(ROOT (S (NP (NNP Tammy)) (VP (VBD ate) (NP (NN salad) (CC and) (NNS seeds))) (. .)))', 'lemma': [(u'Tammy', u'Tammy', u'NNP'), (u'ate', u'eat', u'VBD'), (u'salad', u'salad', u'NN'), (u'and', u'and', u'CC'), (u'seeds', u'seed', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['Tammy', 'ate', 'salad', 'and', 'seeds', '.']}, {'string': ' Roger ate carrots and celery.', 'parse': {'tree': '(ROOT (S (NP (NNP Roger)) (VP (VBD ate) (NP (NNS carrots) (CC and) (NN celery))) (. .)))', 'lemma': [(u'Roger', u'Roger', u'NNP'), (u'ate', u'eat', u'VBD'), (u'carrots', u'carrot', u'NNS'), (u'and', u'and', u'CC'), (u'celery', u'celery', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Roger', 'ate', 'carrots', 'and', 'celery', '.']}, {'string': ' Bobby ate potatoes.', 'parse': {'tree': '(ROOT (S (NP (NNP Bobby)) (VP (VBD ate) (NP (NNS potatoes))) (. .)))', 'lemma': [(u'Bobby', u'Bobby', u'NNP'), (u'ate', u'eat', u'VBD'), (u'potatoes', u'potato', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['Bobby', 'ate', 'potatoes', '.']}, {'string': ' Pat ate eggs and carrots.', 'parse': {'tree': '(ROOT (S (NP (NNP Pat)) (VP (VBD ate) (NP (NNS eggs) (CC and) (NNS carrots))) (. .)))', 'lemma': [(u'Pat', u'Pat', u'NNP'), (u'ate', u'eat', u'VBD'), (u'eggs', u'egg', u'NNS'), (u'and', u'and', u'CC'), (u'carrots', u'carrot', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['Pat', 'ate', 'eggs', 'and', 'carrots', '.']}, {'string': ' Tammy was still hungry, so she ate some pizza too.', 'parse': {'tree': '(ROOT (S (S (NP (NNP Tammy)) (VP (VBD was) (ADVP (RB still)) (ADJP (JJ hungry)))) (, ,) (IN so) (S (NP (PRP she)) (VP (VBD ate) (NP (DT some) (NN pizza)) (ADVP (RB too)))) (. .)))', 'lemma': [(u'Tammy', u'Tammy', u'NNP'), (u'was', u'be', u'VBD'), (u'still', u'still', u'RB'), (u'hungry', u'hungry', u'JJ'), (u',', u',', u','), (u'so', u'so', u'IN'), (u'she', u'she', u'PRP'), (u'ate', u'eat', u'VBD'), (u'some', u'some', u'DT'), (u'pizza', u'pizza', u'NN'), (u'too', u'too', u'RB'), (u'.', u'.', u'.')]}, 'tokens': ['Tammy', 'was', 'still', 'hungry', ',', 'so', 'she', 'ate', 'some', 'pizza', 'too', '.']}, {'string': ' They were all very full.', 'parse': {'tree': '(ROOT (S (NP (PRP They)) (VP (VBD were) (RB all) (ADJP (RB very) (JJ full))) (. .)))', 'lemma': [(u'They', u'they', u'PRP'), (u'were', u'be', u'VBD'), (u'all', u'all', u'RB'), (u'very', u'very', u'RB'), (u'full', u'full', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['They', 'were', 'all', 'very', 'full', '.']}, {'string': ' They took a nap.', 'parse': {'tree': '(ROOT (S (NP (PRP They)) (VP (VBD took) (NP (DT a) (NN nap))) (. .)))', 'lemma': [(u'They', u'they', u'PRP'), (u'took', u'take', u'VBD'), (u'a', u'a', u'DT'), (u'nap', u'nap', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['They', 'took', 'a', 'nap', '.']}, {'string': ' After they woke up they played some games.', 'parse': {'tree': '(ROOT (S (SBAR (IN After) (S (NP (PRP they)) (VP (VBD woke) (PRT (RP up))))) (NP (PRP they)) (VP (VBD played) (NP (DT some) (NNS games))) (. .)))', 'lemma': [(u'After', u'after', u'IN'), (u'they', u'they', u'PRP'), (u'woke', u'wake', u'VBD'), (u'up', u'up', u'RP'), (u'they', u'they', u'PRP'), (u'played', u'play', u'VBD'), (u'some', u'some', u'DT'), (u'games', u'game', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['After', 'they', 'woke', 'up', 'they', 'played', 'some', 'games', '.']}, {'string': " Everyone had fun at Tammy 's house.", 'parse': {'tree': "(ROOT (S (NP (NN Everyone)) (VP (VBD had) (NP (NP (NN fun)) (PP (IN at) (NP (NP (NNP Tammy) (POS 's)) (NN house))))) (. .)))", 'lemma': [(u'Everyone', u'everyone', u'NN'), (u'had', u'have', u'VBD'), (u'fun', u'fun', u'NN'), (u'at', u'at', u'IN'), (u'Tammy', u'Tammy', u'NNP'), (u"'s", u"'s", u'POS'), (u'house', u'house', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Everyone', 'had', 'fun', 'at', 'Tammy', "'s", 'house', '.']}, {'string': ' It got late and everyone went home.', 'parse': {'tree': '(ROOT (S (NP (PRP It)) (VP (VBD got) (SBAR (S (NP (JJ late) (CC and) (NN everyone)) (VP (VBD went) (NP (NN home)))))) (. .)))', 'lemma': [(u'It', u'it', u'PRP'), (u'got', u'get', u'VBD'), (u'late', u'late', u'JJ'), (u'and', u'and', u'CC'), (u'everyone', u'everyone', u'NN'), (u'went', u'go', u'VBD'), (u'home', u'home', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['It', 'got', 'late', 'and', 'everyone', 'went', 'home', '.']}, {'string': ' Tammy was pleased with how it turned out.', 'parse': {'tree': '(ROOT (S (NP (NNP Tammy)) (VP (VBD was) (ADJP (JJ pleased) (PP (IN with) (SBAR (WHADVP (WRB how)) (S (NP (PRP it)) (VP (VBD turned) (PRT (RP out)))))))) (. .)))', 'lemma': [(u'Tammy', u'Tammy', u'NNP'), (u'was', u'be', u'VBD'), (u'pleased', u'pleased', u'JJ'), (u'with', u'with', u'IN'), (u'how', u'how', u'WRB'), (u'it', u'it', u'PRP'), (u'turned', u'turn', u'VBD'), (u'out', u'out', u'RP'), (u'.', u'.', u'.')]}, 'tokens': ['Tammy', 'was', 'pleased', 'with', 'how', 'it', 'turned', 'out', '.']}], 'questions': [{'question': {'string': ' Which friends did Tammy see at the store?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WDT Which) (NNS friends)) (SQ (VBD did) (NP (NNP Tammy)) (VP (VB see) (PP (IN at) (NP (DT the) (NN store))))) (. ?)))', 'lemma': [(u'Which', u'which', u'WDT'), (u'friends', u'friend', u'NNS'), (u'did', u'do', u'VBD'), (u'Tammy', u'Tammy', u'NNP'), (u'see', u'see', u'VB'), (u'at', u'at', u'IN'), (u'the', u'the', u'DT'), (u'store', u'store', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['Which', 'friends', 'did', 'Tammy', 'see', 'at', 'the', 'store', '?']}, 'answers': [{'string': ' Pat and Roger', 'parse': {'tree': '(ROOT (NP (NP (NNP Pat)) (CC and) (NP (NNP Roger))))', 'lemma': [(u'Pat', u'Pat', u'NNP'), (u'and', u'and', u'CC'), (u'Roger', u'Roger', u'NNP')]}, 'tokens': ['Pat', 'and', 'Roger']}, {'string': ' Roger and Bobby', 'parse': {'tree': '(ROOT (NP (NP (NNP Roger)) (CC and) (NP (NNP Bobby))))', 'lemma': [(u'Roger', u'Roger', u'NNP'), (u'and', u'and', u'CC'), (u'Bobby', u'Bobby', u'NNP')]}, 'tokens': ['Roger', 'and', 'Bobby']}, {'string': ' Roger and Pat', 'parse': {'tree': '(ROOT (NP (NP (NNP Roger)) (CC and) (NP (NNP Pat))))', 'lemma': [(u'Roger', u'Roger', u'NNP'), (u'and', u'and', u'CC'), (u'Pat', u'Pat', u'NNP')]}, 'tokens': ['Roger', 'and', 'Pat']}, {'string': ' Bobby and Pat', 'parse': {'tree': '(ROOT (NP (NP (NNP Bobby)) (CC and) (NP (NNP Pat))))', 'lemma': [(u'Bobby', u'Bobby', u'NNP'), (u'and', u'and', u'CC'), (u'Pat', u'Pat', u'NNP')]}, 'tokens': ['Bobby', 'and', 'Pat']}], 'mode': 0}, {'question': {'string': ' What color was Bobby?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WDT What) (NN color)) (SQ (VBD was) (NP (NNP Bobby))) (. ?)))', 'lemma': [(u'What', u'what', u'WDT'), (u'color', u'color', u'NN'), (u'was', u'be', u'VBD'), (u'Bobby', u'Bobby', u'NNP'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'color', 'was', 'Bobby', '?']}, 'answers': [{'string': ' Pink', 'parse': {'tree': '(ROOT (NP (NNP Pink)))', 'lemma': [(u'Pink', u'Pink', u'NNP')]}, 'tokens': ['Pink']}, {'string': ' Red', 'parse': {'tree': '(ROOT (NP (NNP Red)))', 'lemma': [(u'Red', u'Red', u'NNP')]}, 'tokens': ['Red']}, {'string': ' Purple', 'parse': {'tree': '(ROOT (NP (NNP Purple)))', 'lemma': [(u'Purple', u'Purple', u'NNP')]}, 'tokens': ['Purple']}, {'string': ' Blue', 'parse': {'tree': '(ROOT (NP (NNP Blue)))', 'lemma': [(u'Blue', u'Blue', u'NNP')]}, 'tokens': ['Blue']}], 'mode': 1}, {'question': {'string': ' What did Pat buy at the store?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD did) (NP (NNP Pat)) (VP (VB buy) (PP (IN at) (NP (DT the) (NN store))))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'did', u'do', u'VBD'), (u'Pat', u'Pat', u'NNP'), (u'buy', u'buy', u'VB'), (u'at', u'at', u'IN'), (u'the', u'the', u'DT'), (u'store', u'store', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'did', 'Pat', 'buy', 'at', 'the', 'store', '?']}, 'answers': [{'string': ' Potatoes and eggs', 'parse': {'tree': '(ROOT (NP (NNS Potatoes) (CC and) (NNS eggs)))', 'lemma': [(u'Potatoes', u'potato', u'NNS'), (u'and', u'and', u'CC'), (u'eggs', u'egg', u'NNS')]}, 'tokens': ['Potatoes', 'and', 'eggs']}, {'string': ' Pizza', 'parse': {'tree': '(ROOT (NP (NNP Pizza)))', 'lemma': [(u'Pizza', u'Pizza', u'NNP')]}, 'tokens': ['Pizza']}, {'string': ' Salad', 'parse': {'tree': '(ROOT (NP (NNP Salad)))', 'lemma': [(u'Salad', u'Salad', u'NNP')]}, 'tokens': ['Salad']}, {'string': ' Celery and carrots', 'parse': {'tree': '(ROOT (NP (NN Celery) (CC and) (NNS carrots)))', 'lemma': [(u'Celery', u'celery', u'NN'), (u'and', u'and', u'CC'), (u'carrots', u'carrot', u'NNS')]}, 'tokens': ['Celery', 'and', 'carrots']}], 'mode': 1}, {'question': {'string': ' What did Tammy eat for supper?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD did) (NP (NNP Tammy)) (VP (VB eat) (PP (IN for) (NP (NN supper))))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'did', u'do', u'VBD'), (u'Tammy', u'Tammy', u'NNP'), (u'eat', u'eat', u'VB'), (u'for', u'for', u'IN'), (u'supper', u'supper', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'did', 'Tammy', 'eat', 'for', 'supper', '?']}, 'answers': [{'string': ' Potatoes and eggs', 'parse': {'tree': '(ROOT (NP (NNS Potatoes) (CC and) (NNS eggs)))', 'lemma': [(u'Potatoes', u'potato', u'NNS'), (u'and', u'and', u'CC'), (u'eggs', u'egg', u'NNS')]}, 'tokens': ['Potatoes', 'and', 'eggs']}, {'string': ' Salad seeds and pizza', 'parse': {'tree': '(ROOT (NP (NP (JJ Salad) (NNS seeds)) (CC and) (NP (NN pizza))))', 'lemma': [(u'Salad', u'salad', u'JJ'), (u'seeds', u'seed', u'NNS'), (u'and', u'and', u'CC'), (u'pizza', u'pizza', u'NN')]}, 'tokens': ['Salad', 'seeds', 'and', 'pizza']}, {'string': ' Pizza and celery', 'parse': {'tree': '(ROOT (NP (NN Pizza) (CC and) (NN celery)))', 'lemma': [(u'Pizza', u'pizza', u'NN'), (u'and', u'and', u'CC'), (u'celery', u'celery', u'NN')]}, 'tokens': ['Pizza', 'and', 'celery']}, {'string': ' Carrots and potatoes', 'parse': {'tree': '(ROOT (NP (NNS Carrots) (CC and) (NNS potatoes)))', 'lemma': [(u'Carrots', u'carrot', u'NNS'), (u'and', u'and', u'CC'), (u'potatoes', u'potato', u'NNS')]}, 'tokens': ['Carrots', 'and', 'potatoes']}], 'mode': 0}]}
{'sentences': [{'string': ' One day Mary took a walk to the park.', 'parse': {'tree': '(ROOT (S (NP (CD One) (NN day)) (NP (NNP Mary)) (VP (VBD took) (NP (DT a) (NN walk)) (PP (TO to) (NP (DT the) (NN park)))) (. .)))', 'lemma': [(u'One', u'one', u'CD'), (u'day', u'day', u'NN'), (u'Mary', u'Mary', u'NNP'), (u'took', u'take', u'VBD'), (u'a', u'a', u'DT'), (u'walk', u'walk', u'NN'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'park', u'park', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['One', 'day', 'Mary', 'took', 'a', 'walk', 'to', 'the', 'park', '.']}, {'string': ' The park was very close to her house.', 'parse': {'tree': '(ROOT (S (NP (DT The) (NN park)) (VP (VBD was) (ADJP (RB very) (JJ close) (PP (TO to) (NP (PRP$ her) (NN house))))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'park', u'park', u'NN'), (u'was', u'be', u'VBD'), (u'very', u'very', u'RB'), (u'close', u'close', u'JJ'), (u'to', u'to', u'TO'), (u'her', u'she', u'PRP$'), (u'house', u'house', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'park', 'was', 'very', 'close', 'to', 'her', 'house', '.']}, {'string': " One her way to the park she passed her friend Kim 's house.", 'parse': {'tree': "(ROOT (NP (NP (NP (CD One)) (NP (NP (PRP$ her) (NN way)) (PP (TO to) (NP (DT the) (NN park))))) (SBAR (S (NP (PRP she)) (VP (VBD passed) (NP (PRP$ her) (NN friend)) (X (NP (NP (NNP Kim) (POS 's)) (NN house)))))) (. .)))", 'lemma': [(u'One', u'one', u'CD'), (u'her', u'she', u'PRP$'), (u'way', u'way', u'NN'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'park', u'park', u'NN'), (u'she', u'she', u'PRP'), (u'passed', u'pass', u'VBD'), (u'her', u'she', u'PRP$'), (u'friend', u'friend', u'NN'), (u'Kim', u'Kim', u'NNP'), (u"'s", u"'s", u'POS'), (u'house', u'house', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['One', 'her', 'way', 'to', 'the', 'park', 'she', 'passed', 'her', 'friend', 'Kim', "'s", 'house', '.']}, {'string': ' Mary stopped by and asked if Kim wanted to play.', 'parse': {'tree': '(ROOT (S (NP (NNP Mary)) (VP (VP (VBD stopped) (PP (IN by))) (CC and) (VP (VBD asked) (SBAR (IN if) (S (NP (NNP Kim)) (VP (VBD wanted) (S (VP (TO to) (VP (VB play))))))))) (. .)))', 'lemma': [(u'Mary', u'Mary', u'NNP'), (u'stopped', u'stop', u'VBD'), (u'by', u'by', u'IN'), (u'and', u'and', u'CC'), (u'asked', u'ask', u'VBD'), (u'if', u'if', u'IN'), (u'Kim', u'Kim', u'NNP'), (u'wanted', u'want', u'VBD'), (u'to', u'to', u'TO'), (u'play', u'play', u'VB'), (u'.', u'.', u'.')]}, 'tokens': ['Mary', 'stopped', 'by', 'and', 'asked', 'if', 'Kim', 'wanted', 'to', 'play', '.']}, {'string': ' Kim said yes.', 'parse': {'tree': '(ROOT (S (NP (NNP Kim)) (VP (VBD said) (INTJ (UH yes))) (. .)))', 'lemma': [(u'Kim', u'Kim', u'NNP'), (u'said', u'say', u'VBD'), (u'yes', u'yes', u'UH'), (u'.', u'.', u'.')]}, 'tokens': ['Kim', 'said', 'yes', '.']}, {'string': ' Mary and Kim walked together to the park.', 'parse': {'tree': '(ROOT (S (NP (NNP Mary) (CC and) (NNP Kim)) (VP (VBD walked) (ADVP (RB together)) (PP (TO to) (NP (DT the) (NN park)))) (. .)))', 'lemma': [(u'Mary', u'Mary', u'NNP'), (u'and', u'and', u'CC'), (u'Kim', u'Kim', u'NNP'), (u'walked', u'walk', u'VBD'), (u'together', u'together', u'RB'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'park', u'park', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Mary', 'and', 'Kim', 'walked', 'together', 'to', 'the', 'park', '.']}, {'string': " John 's house was three houses down.", 'parse': {'tree': "(ROOT (S (NP (NP (NNP John) (POS 's)) (NN house)) (VP (VBD was) (ADVP (NP (CD three) (NNS houses)) (RB down))) (. .)))", 'lemma': [(u'John', u'John', u'NNP'), (u"'s", u"'s", u'POS'), (u'house', u'house', u'NN'), (u'was', u'be', u'VBD'), (u'three', u'three', u'CD'), (u'houses', u'house', u'NNS'), (u'down', u'down', u'RB'), (u'.', u'.', u'.')]}, 'tokens': ['John', "'s", 'house', 'was', 'three', 'houses', 'down', '.']}, {'string': ' Mary and Kim stopped by to ask John if he wanted to play at the park.', 'parse': {'tree': '(ROOT (S (NP (NNP Mary) (CC and) (NNP Kim)) (VP (VBD stopped) (PRT (RP by)) (S (VP (TO to) (VP (VB ask) (NP (NNP John)) (SBAR (IN if) (S (NP (PRP he)) (VP (VBD wanted) (S (VP (TO to) (VP (VB play) (PP (IN at) (NP (DT the) (NN park))))))))))))) (. .)))', 'lemma': [(u'Mary', u'Mary', u'NNP'), (u'and', u'and', u'CC'), (u'Kim', u'Kim', u'NNP'), (u'stopped', u'stop', u'VBD'), (u'by', u'by', u'RP'), (u'to', u'to', u'TO'), (u'ask', u'ask', u'VB'), (u'John', u'John', u'NNP'), (u'if', u'if', u'IN'), (u'he', u'he', u'PRP'), (u'wanted', u'want', u'VBD'), (u'to', u'to', u'TO'), (u'play', u'play', u'VB'), (u'at', u'at', u'IN'), (u'the', u'the', u'DT'), (u'park', u'park', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Mary', 'and', 'Kim', 'stopped', 'by', 'to', 'ask', 'John', 'if', 'he', 'wanted', 'to', 'play', 'at', 'the', 'park', '.']}, {'string': ' John said no.', 'parse': {'tree': '(ROOT (S (NP (NNP John)) (VP (VBD said) (INTJ (UH no))) (. .)))', 'lemma': [(u'John', u'John', u'NNP'), (u'said', u'say', u'VBD'), (u'no', u'no', u'UH'), (u'.', u'.', u'.')]}, 'tokens': ['John', 'said', 'no', '.']}, {'string': ' He was afraid of being chased by a squirrel.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD was) (ADJP (JJ afraid) (PP (IN of) (S (VP (VBG being) (VP (VBD chased) (PP (IN by) (NP (DT a) (NN squirrel))))))))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'was', u'be', u'VBD'), (u'afraid', u'afraid', u'JJ'), (u'of', u'of', u'IN'), (u'being', u'be', u'VBG'), (u'chased', u'chase', u'VBD'), (u'by', u'by', u'IN'), (u'a', u'a', u'DT'), (u'squirrel', u'squirrel', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'was', 'afraid', 'of', 'being', 'chased', 'by', 'a', 'squirrel', '.']}, {'string': " Mary worried that John did n't like her, but John thought she was a good friend.", 'parse': {'tree': "(ROOT (S (S (NP (NNP Mary)) (VP (VBD worried) (SBAR (IN that) (S (NP (NNP John)) (VP (VBD did) (RB n't) (VP (VB like) (NP (PRP her)))))))) (, ,) (CC but) (S (NP (NNP John)) (VP (VBD thought) (SBAR (S (NP (PRP she)) (VP (VBD was) (NP (DT a) (JJ good) (NN friend))))))) (. .)))", 'lemma': [(u'Mary', u'Mary', u'NNP'), (u'worried', u'worry', u'VBD'), (u'that', u'that', u'IN'), (u'John', u'John', u'NNP'), (u'did', u'do', u'VBD'), (u"n't", u'not', u'RB'), (u'like', u'like', u'VB'), (u'her', u'she', u'PRP'), (u',', u',', u','), (u'but', u'but', u'CC'), (u'John', u'John', u'NNP'), (u'thought', u'think', u'VBD'), (u'she', u'she', u'PRP'), (u'was', u'be', u'VBD'), (u'a', u'a', u'DT'), (u'good', u'good', u'JJ'), (u'friend', u'friend', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Mary', 'worried', 'that', 'John', 'did', "n't", 'like', 'her', ',', 'but', 'John', 'thought', 'she', 'was', 'a', 'good', 'friend', '.']}, {'string': ' So Mary and Kim went to the park to play.', 'parse': {'tree': '(ROOT (S (IN So) (NP (NNP Mary) (CC and) (NNP Kim)) (VP (VBD went) (PP (TO to) (NP (DT the) (NN park))) (S (VP (TO to) (VP (VB play))))) (. .)))', 'lemma': [(u'So', u'so', u'IN'), (u'Mary', u'Mary', u'NNP'), (u'and', u'and', u'CC'), (u'Kim', u'Kim', u'NNP'), (u'went', u'go', u'VBD'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'park', u'park', u'NN'), (u'to', u'to', u'TO'), (u'play', u'play', u'VB'), (u'.', u'.', u'.')]}, 'tokens': ['So', 'Mary', 'and', 'Kim', 'went', 'to', 'the', 'park', 'to', 'play', '.']}, {'string': ' They loved the park.', 'parse': {'tree': '(ROOT (S (NP (PRP They)) (VP (VBD loved) (NP (DT the) (NN park))) (. .)))', 'lemma': [(u'They', u'they', u'PRP'), (u'loved', u'love', u'VBD'), (u'the', u'the', u'DT'), (u'park', u'park', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['They', 'loved', 'the', 'park', '.']}, {'string': ' They loved the flowers, and the swings!', 'parse': {'tree': '(ROOT (S (NP (PRP They)) (VP (VBD loved) (NP (NP (DT the) (NNS flowers)) (, ,) (CC and) (NP (DT the) (NNS swings)))) (. !)))', 'lemma': [(u'They', u'they', u'PRP'), (u'loved', u'love', u'VBD'), (u'the', u'the', u'DT'), (u'flowers', u'flower', u'NNS'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'the', u'the', u'DT'), (u'swings', u'swing', u'NNS'), (u'!', u'!', u'.')]}, 'tokens': ['They', 'loved', 'the', 'flowers', ',', 'and', 'the', 'swings', '!']}, {'string': ' Soon it was dinnertime and the girls went home.', 'parse': {'tree': '(ROOT (S (S (ADVP (RB Soon)) (NP (PRP it)) (VP (VBD was) (ADJP (JJ dinnertime)))) (CC and) (S (NP (DT the) (NNS girls)) (VP (VBD went) (NP (NN home)))) (. .)))', 'lemma': [(u'Soon', u'soon', u'RB'), (u'it', u'it', u'PRP'), (u'was', u'be', u'VBD'), (u'dinnertime', u'dinnertime', u'JJ'), (u'and', u'and', u'CC'), (u'the', u'the', u'DT'), (u'girls', u'girl', u'NNS'), (u'went', u'go', u'VBD'), (u'home', u'home', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Soon', 'it', 'was', 'dinnertime', 'and', 'the', 'girls', 'went', 'home', '.']}, {'string': ' What a lovely day at the park.', 'parse': {'tree': '(ROOT (FRAG (WHNP (WDT What)) (PP (NP (DT a) (JJ lovely) (NN day)) (PP (IN at) (NP (DT the) (NN park)))) (. .)))', 'lemma': [(u'What', u'what', u'WDT'), (u'a', u'a', u'DT'), (u'lovely', u'lovely', u'JJ'), (u'day', u'day', u'NN'), (u'at', u'at', u'IN'), (u'the', u'the', u'DT'), (u'park', u'park', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['What', 'a', 'lovely', 'day', 'at', 'the', 'park', '.']}], 'questions': [{'question': {'string': " Why did John say he did n't want to go to the park?", 'parse': {'tree': "(ROOT (SBARQ (WHADVP (WRB Why)) (SQ (VBD did) (NP (NNP John)) (VP (VB say) (SBAR (S (NP (PRP he)) (VP (VBD did) (RB n't) (VP (VB want) (S (VP (TO to) (VP (VB go) (PP (TO to) (NP (DT the) (NN park)))))))))))) (. ?)))", 'lemma': [(u'Why', u'why', u'WRB'), (u'did', u'do', u'VBD'), (u'John', u'John', u'NNP'), (u'say', u'say', u'VB'), (u'he', u'he', u'PRP'), (u'did', u'do', u'VBD'), (u"n't", u'not', u'RB'), (u'want', u'want', u'VB'), (u'to', u'to', u'TO'), (u'go', u'go', u'VB'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'park', u'park', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['Why', 'did', 'John', 'say', 'he', 'did', "n't", 'want', 'to', 'go', 'to', 'the', 'park', '?']}, 'answers': [{'string': " he does n't like the park", 'parse': {'tree': "(ROOT (S (NP (PRP he)) (VP (VBZ does) (RB n't) (VP (VB like) (NP (DT the) (NN park))))))", 'lemma': [(u'he', u'he', u'PRP'), (u'does', u'do', u'VBZ'), (u"n't", u'not', u'RB'), (u'like', u'like', u'VB'), (u'the', u'the', u'DT'), (u'park', u'park', u'NN')]}, 'tokens': ['he', 'does', "n't", 'like', 'the', 'park']}, {'string': ' he was afraid of being chased by a squirrel', 'parse': {'tree': '(ROOT (S (NP (PRP he)) (VP (VBD was) (ADJP (JJ afraid) (PP (IN of) (S (VP (VBG being) (VP (VBD chased) (PP (IN by) (NP (DT a) (NN squirrel)))))))))))', 'lemma': [(u'he', u'he', u'PRP'), (u'was', u'be', u'VBD'), (u'afraid', u'afraid', u'JJ'), (u'of', u'of', u'IN'), (u'being', u'be', u'VBG'), (u'chased', u'chase', u'VBD'), (u'by', u'by', u'IN'), (u'a', u'a', u'DT'), (u'squirrel', u'squirrel', u'NN')]}, 'tokens': ['he', 'was', 'afraid', 'of', 'being', 'chased', 'by', 'a', 'squirrel']}, {'string': " he does n't like Mary", 'parse': {'tree': "(ROOT (S (NP (PRP he)) (VP (VBZ does) (RB n't) (VP (VB like) (NP (NNP Mary))))))", 'lemma': [(u'he', u'he', u'PRP'), (u'does', u'do', u'VBZ'), (u"n't", u'not', u'RB'), (u'like', u'like', u'VB'), (u'Mary', u'Mary', u'NNP')]}, 'tokens': ['he', 'does', "n't", 'like', 'Mary']}, {'string': ' he did want to go to the park', 'parse': {'tree': '(ROOT (S (NP (PRP he)) (VP (VBD did) (SBAR (S (VP (VBP want) (S (VP (TO to) (VP (VB go) (PP (TO to) (NP (DT the) (NN park))))))))))))', 'lemma': [(u'he', u'he', u'PRP'), (u'did', u'do', u'VBD'), (u'want', u'want', u'VBP'), (u'to', u'to', u'TO'), (u'go', u'go', u'VB'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'park', u'park', u'NN')]}, 'tokens': ['he', 'did', 'want', 'to', 'go', 'to', 'the', 'park']}], 'mode': 1}, {'question': {'string': " How many friend 's houses does Mary pass on her way to the park?", 'parse': {'tree': "(ROOT (SBARQ (WHNP (WHADJP (WRB How) (JJ many)) (NP (NN friend) (POS 's)) (NNS houses)) (SQ (VBZ does) (NP (NNP Mary)) (VP (VB pass) (PP (IN on) (NP (PRP$ her) (NN way))) (PP (TO to) (NP (DT the) (NN park))))) (. ?)))", 'lemma': [(u'How', u'how', u'WRB'), (u'many', u'many', u'JJ'), (u'friend', u'friend', u'NN'), (u"'s", u"'s", u'POS'), (u'houses', u'house', u'NNS'), (u'does', u'do', u'VBZ'), (u'Mary', u'Mary', u'NNP'), (u'pass', u'pass', u'VB'), (u'on', u'on', u'IN'), (u'her', u'she', u'PRP$'), (u'way', u'way', u'NN'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'park', u'park', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['How', 'many', 'friend', "'s", 'houses', 'does', 'Mary', 'pass', 'on', 'her', 'way', 'to', 'the', 'park', '?']}, 'answers': [{'string': " one; Kim 's", 'parse': {'tree': "(ROOT (NP (NP (CD one)) (: ;) (NP (NNP Kim) (NNP 's))))", 'lemma': [(u'one', u'one', u'CD'), (u';', u';', u':'), (u'Kim', u'Kim', u'NNP'), (u"'s", u"'s", u'NNP')]}, 'tokens': ['one', ';', 'Kim', "'s"]}, {'string': " one; John 's", 'parse': {'tree': "(ROOT (NP (NP (CD one)) (: ;) (NP (NNP John) (NNP 's))))", 'lemma': [(u'one', u'one', u'CD'), (u';', u';', u':'), (u'John', u'John', u'NNP'), (u"'s", u"'s", u'NNP')]}, 'tokens': ['one', ';', 'John', "'s"]}, {'string': " two; Kim 's and John 's", 'parse': {'tree': "(ROOT (NP (NP (CD two)) (: ;) (NP (NP (NNP Kim) (POS 's)) (CC and) (NP (NNP John) (POS 's)))))", 'lemma': [(u'two', u'two', u'CD'), (u';', u';', u':'), (u'Kim', u'Kim', u'NNP'), (u"'s", u"'s", u'POS'), (u'and', u'and', u'CC'), (u'John', u'John', u'NNP'), (u"'s", u"'s", u'POS')]}, 'tokens': ['two', ';', 'Kim', "'s", 'and', 'John', "'s"]}, {'string': ' None', 'parse': {'tree': '(ROOT (NP (NN None)))', 'lemma': [(u'None', u'none', u'NN')]}, 'tokens': ['None']}], 'mode': 0}, {'question': {'string': ' Who did Mary play with at the park?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP Who)) (SQ (VBD did) (NP (NNP Mary)) (VP (VB play) (PP (IN with) (PP (IN at) (NP (DT the) (NN park)))))) (. ?)))', 'lemma': [(u'Who', u'who', u'WP'), (u'did', u'do', u'VBD'), (u'Mary', u'Mary', u'NNP'), (u'play', u'play', u'VB'), (u'with', u'with', u'IN'), (u'at', u'at', u'IN'), (u'the', u'the', u'DT'), (u'park', u'park', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['Who', 'did', 'Mary', 'play', 'with', 'at', 'the', 'park', '?']}, 'answers': [{'string': ' Kim', 'parse': {'tree': '(ROOT (NP (NNP Kim)))', 'lemma': [(u'Kim', u'Kim', u'NNP')]}, 'tokens': ['Kim']}, {'string': ' She played alone', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBD played) (ADVP (RB alone)))))', 'lemma': [(u'She', u'she', u'PRP'), (u'played', u'play', u'VBD'), (u'alone', u'alone', u'RB')]}, 'tokens': ['She', 'played', 'alone']}, {'string': ' John', 'parse': {'tree': '(ROOT (NP (NNP John)))', 'lemma': [(u'John', u'John', u'NNP')]}, 'tokens': ['John']}, {'string': ' Kim and John', 'parse': {'tree': '(ROOT (NP (NP (NNP Kim)) (CC and) (NP (NNP John))))', 'lemma': [(u'Kim', u'Kim', u'NNP'), (u'and', u'and', u'CC'), (u'John', u'John', u'NNP')]}, 'tokens': ['Kim', 'and', 'John']}], 'mode': 0}, {'question': {'string': ' What did Mary and Kim love about the park?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD did) (NP (NNP Mary) (CC and) (NNP Kim)) (VP (VB love) (PP (IN about) (NP (DT the) (NN park))))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'did', u'do', u'VBD'), (u'Mary', u'Mary', u'NNP'), (u'and', u'and', u'CC'), (u'Kim', u'Kim', u'NNP'), (u'love', u'love', u'VB'), (u'about', u'about', u'IN'), (u'the', u'the', u'DT'), (u'park', u'park', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'did', 'Mary', 'and', 'Kim', 'love', 'about', 'the', 'park', '?']}, 'answers': [{'string': ' only the swings', 'parse': {'tree': '(ROOT (FRAG (ADVP (RB only)) (NP (DT the) (NNS swings))))', 'lemma': [(u'only', u'only', u'RB'), (u'the', u'the', u'DT'), (u'swings', u'swing', u'NNS')]}, 'tokens': ['only', 'the', 'swings']}, {'string': ' the squirrels', 'parse': {'tree': '(ROOT (FRAG (NP (DT the) (NNS squirrels))))', 'lemma': [(u'the', u'the', u'DT'), (u'squirrels', u'squirrel', u'NNS')]}, 'tokens': ['the', 'squirrels']}, {'string': ' only the flowers', 'parse': {'tree': '(ROOT (FRAG (ADVP (RB only)) (NP (DT the) (NNS flowers))))', 'lemma': [(u'only', u'only', u'RB'), (u'the', u'the', u'DT'), (u'flowers', u'flower', u'NNS')]}, 'tokens': ['only', 'the', 'flowers']}, {'string': ' the flowers and the swings!', 'parse': {'tree': '(ROOT (NP (NP (NP (DT the) (NNS flowers)) (CC and) (NP (DT the) (NNS swings))) (. !)))', 'lemma': [(u'the', u'the', u'DT'), (u'flowers', u'flower', u'NNS'), (u'and', u'and', u'CC'), (u'the', u'the', u'DT'), (u'swings', u'swing', u'NNS'), (u'!', u'!', u'.')]}, 'tokens': ['the', 'flowers', 'and', 'the', 'swings', '!']}], 'mode': 1}]}
{'sentences': [{'string': ' Johnny and his class were looking forward to a fun day in art class.', 'parse': {'tree': '(ROOT (S (NP (NP (NNP Johnny)) (CC and) (NP (PRP$ his) (NN class))) (VP (VBD were) (VP (VBG looking) (ADVP (RB forward)) (PP (TO to) (NP (NP (DT a) (NN fun) (NN day)) (PP (IN in) (NP (NN art) (NN class))))))) (. .)))', 'lemma': [(u'Johnny', u'Johnny', u'NNP'), (u'and', u'and', u'CC'), (u'his', u'he', u'PRP$'), (u'class', u'class', u'NN'), (u'were', u'be', u'VBD'), (u'looking', u'look', u'VBG'), (u'forward', u'forward', u'RB'), (u'to', u'to', u'TO'), (u'a', u'a', u'DT'), (u'fun', u'fun', u'NN'), (u'day', u'day', u'NN'), (u'in', u'in', u'IN'), (u'art', u'art', u'NN'), (u'class', u'class', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Johnny', 'and', 'his', 'class', 'were', 'looking', 'forward', 'to', 'a', 'fun', 'day', 'in', 'art', 'class', '.']}, {'string': ' The teacher gave the class paint, brushes and other items to use to make their drawings.', 'parse': {'tree': '(ROOT (S (NP (DT The) (NN teacher)) (VP (VBD gave) (NP (NP (DT the) (NN class) (NN paint)) (, ,) (NP (NNS brushes)) (CC and) (NP (JJ other) (NNS items))) (S (VP (TO to) (VP (VB use) (S (VP (TO to) (VP (VB make) (NP (PRP$ their) (NNS drawings))))))))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'teacher', u'teacher', u'NN'), (u'gave', u'give', u'VBD'), (u'the', u'the', u'DT'), (u'class', u'class', u'NN'), (u'paint', u'paint', u'NN'), (u',', u',', u','), (u'brushes', u'brush', u'NNS'), (u'and', u'and', u'CC'), (u'other', u'other', u'JJ'), (u'items', u'item', u'NNS'), (u'to', u'to', u'TO'), (u'use', u'use', u'VB'), (u'to', u'to', u'TO'), (u'make', u'make', u'VB'), (u'their', u'they', u'PRP$'), (u'drawings', u'drawing', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'teacher', 'gave', 'the', 'class', 'paint', ',', 'brushes', 'and', 'other', 'items', 'to', 'use', 'to', 'make', 'their', 'drawings', '.']}, {'string': " Johnny 's friend Kevin used a straw to blow paint on his paper.", 'parse': {'tree': "(ROOT (S (NP (NP (NNP Johnny) (POS 's)) (NN friend) (NN Kevin)) (VP (VBD used) (NP (DT a) (NN straw)) (PP (TO to) (NP (NN blow) (NN paint))) (PP (IN on) (NP (PRP$ his) (NN paper)))) (. .)))", 'lemma': [(u'Johnny', u'Johnny', u'NNP'), (u"'s", u"'s", u'POS'), (u'friend', u'friend', u'NN'), (u'Kevin', u'kevin', u'NN'), (u'used', u'use', u'VBD'), (u'a', u'a', u'DT'), (u'straw', u'straw', u'NN'), (u'to', u'to', u'TO'), (u'blow', u'blow', u'NN'), (u'paint', u'paint', u'NN'), (u'on', u'on', u'IN'), (u'his', u'he', u'PRP$'), (u'paper', u'paper', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Johnny', "'s", 'friend', 'Kevin', 'used', 'a', 'straw', 'to', 'blow', 'paint', 'on', 'his', 'paper', '.']}, {'string': ' It looked very cool.', 'parse': {'tree': '(ROOT (S (NP (PRP It)) (VP (VBD looked) (ADJP (RB very) (JJ cool))) (. .)))', 'lemma': [(u'It', u'it', u'PRP'), (u'looked', u'look', u'VBD'), (u'very', u'very', u'RB'), (u'cool', u'cool', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['It', 'looked', 'very', 'cool', '.']}, {'string': ' Lisa used markers to make a picture of her and her dog.', 'parse': {'tree': '(ROOT (S (NP (NNP Lisa)) (VP (VBD used) (NP (NNS markers)) (S (VP (TO to) (VP (VB make) (NP (NP (DT a) (NN picture)) (PP (IN of) (NP (ADJP (PRP$ her) (CC and) (PRP$ her)) (NN dog)))))))) (. .)))', 'lemma': [(u'Lisa', u'Lisa', u'NNP'), (u'used', u'use', u'VBD'), (u'markers', u'marker', u'NNS'), (u'to', u'to', u'TO'), (u'make', u'make', u'VB'), (u'a', u'a', u'DT'), (u'picture', u'picture', u'NN'), (u'of', u'of', u'IN'), (u'her', u'she', u'PRP$'), (u'and', u'and', u'CC'), (u'her', u'she', u'PRP$'), (u'dog', u'dog', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Lisa', 'used', 'markers', 'to', 'make', 'a', 'picture', 'of', 'her', 'and', 'her', 'dog', '.']}, {'string': ' Lisa has several pets, but her favorite one is her dog, Ben.', 'parse': {'tree': '(ROOT (S (S (NP (NNP Lisa)) (VP (VBZ has) (NP (JJ several) (NNS pets)))) (, ,) (CC but) (S (NP (PRP$ her) (JJ favorite) (NN one)) (VP (VBZ is) (NP (NP (PRP$ her) (NN dog)) (, ,) (NP (NNP Ben))))) (. .)))', 'lemma': [(u'Lisa', u'Lisa', u'NNP'), (u'has', u'have', u'VBZ'), (u'several', u'several', u'JJ'), (u'pets', u'pet', u'NNS'), (u',', u',', u','), (u'but', u'but', u'CC'), (u'her', u'she', u'PRP$'), (u'favorite', u'favorite', u'JJ'), (u'one', u'one', u'NN'), (u'is', u'be', u'VBZ'), (u'her', u'she', u'PRP$'), (u'dog', u'dog', u'NN'), (u',', u',', u','), (u'Ben', u'Ben', u'NNP'), (u'.', u'.', u'.')]}, 'tokens': ['Lisa', 'has', 'several', 'pets', ',', 'but', 'her', 'favorite', 'one', 'is', 'her', 'dog', ',', 'Ben', '.']}, {'string': ' Tony used a potato to make stars.', 'parse': {'tree': '(ROOT (S (NP (NNP Tony)) (VP (VBD used) (NP (DT a) (NN potato) (S (VP (TO to) (VP (VB make) (NP (NNS stars))))))) (. .)))', 'lemma': [(u'Tony', u'Tony', u'NNP'), (u'used', u'use', u'VBD'), (u'a', u'a', u'DT'), (u'potato', u'potato', u'NN'), (u'to', u'to', u'TO'), (u'make', u'make', u'VB'), (u'stars', u'star', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['Tony', 'used', 'a', 'potato', 'to', 'make', 'stars', '.']}, {'string': ' He then put the potato into different colors of paint and made a nice pattern.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (ADVP (RB then)) (VP (VP (VBD put) (NP (DT the) (NN potato)) (PP (IN into) (NP (NP (JJ different) (NNS colors)) (PP (IN of) (NP (NN paint)))))) (CC and) (VP (VBD made) (NP (DT a) (JJ nice) (NN pattern)))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'then', u'then', u'RB'), (u'put', u'put', u'VBD'), (u'the', u'the', u'DT'), (u'potato', u'potato', u'NN'), (u'into', u'into', u'IN'), (u'different', u'different', u'JJ'), (u'colors', u'color', u'NNS'), (u'of', u'of', u'IN'), (u'paint', u'paint', u'NN'), (u'and', u'and', u'CC'), (u'made', u'make', u'VBD'), (u'a', u'a', u'DT'), (u'nice', u'nice', u'JJ'), (u'pattern', u'pattern', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'then', 'put', 'the', 'potato', 'into', 'different', 'colors', 'of', 'paint', 'and', 'made', 'a', 'nice', 'pattern', '.']}, {'string': ' Johnny used feathers to make his picture.', 'parse': {'tree': '(ROOT (S (NP (NNP Johnny)) (VP (VBD used) (NP (NNS feathers)) (S (VP (TO to) (VP (VB make) (NP (PRP$ his) (NN picture)))))) (. .)))', 'lemma': [(u'Johnny', u'Johnny', u'NNP'), (u'used', u'use', u'VBD'), (u'feathers', u'feather', u'NNS'), (u'to', u'to', u'TO'), (u'make', u'make', u'VB'), (u'his', u'he', u'PRP$'), (u'picture', u'picture', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Johnny', 'used', 'feathers', 'to', 'make', 'his', 'picture', '.']}, {'string': ' When they had finished, the class chose which picture was the best.', 'parse': {'tree': '(ROOT (S (SBAR (WHADVP (WRB When)) (S (NP (PRP they)) (VP (VBD had) (VP (VBN finished))))) (, ,) (NP (DT the) (NN class)) (VP (VBD chose) (SBAR (WHNP (WDT which)) (S (NP (NN picture)) (VP (VBD was) (NP (DT the) (JJS best)))))) (. .)))', 'lemma': [(u'When', u'when', u'WRB'), (u'they', u'they', u'PRP'), (u'had', u'have', u'VBD'), (u'finished', u'finish', u'VBN'), (u',', u',', u','), (u'the', u'the', u'DT'), (u'class', u'class', u'NN'), (u'chose', u'choose', u'VBD'), (u'which', u'which', u'WDT'), (u'picture', u'picture', u'NN'), (u'was', u'be', u'VBD'), (u'the', u'the', u'DT'), (u'best', u'best', u'JJS'), (u'.', u'.', u'.')]}, 'tokens': ['When', 'they', 'had', 'finished', ',', 'the', 'class', 'chose', 'which', 'picture', 'was', 'the', 'best', '.']}, {'string': ' Johnny got second place and was very excited.', 'parse': {'tree': '(ROOT (S (NP (NNP Johnny)) (VP (VP (VBD got) (NP (JJ second) (NN place))) (CC and) (VP (VBD was) (ADJP (RB very) (JJ excited)))) (. .)))', 'lemma': [(u'Johnny', u'Johnny', u'NNP'), (u'got', u'get', u'VBD'), (u'second', u'second', u'JJ'), (u'place', u'place', u'NN'), (u'and', u'and', u'CC'), (u'was', u'be', u'VBD'), (u'very', u'very', u'RB'), (u'excited', u'excited', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['Johnny', 'got', 'second', 'place', 'and', 'was', 'very', 'excited', '.']}, {'string': ' Then it was time for lunch and the class had a party.', 'parse': {'tree': '(ROOT (S (RB Then) (S (NP (PRP it)) (VP (VBD was) (NP (NP (NN time)) (PP (IN for) (NP (NN lunch)))))) (CC and) (S (NP (DT the) (NN class)) (VP (VBD had) (NP (DT a) (NN party)))) (. .)))', 'lemma': [(u'Then', u'then', u'RB'), (u'it', u'it', u'PRP'), (u'was', u'be', u'VBD'), (u'time', u'time', u'NN'), (u'for', u'for', u'IN'), (u'lunch', u'lunch', u'NN'), (u'and', u'and', u'CC'), (u'the', u'the', u'DT'), (u'class', u'class', u'NN'), (u'had', u'have', u'VBD'), (u'a', u'a', u'DT'), (u'party', u'party', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Then', 'it', 'was', 'time', 'for', 'lunch', 'and', 'the', 'class', 'had', 'a', 'party', '.']}, {'string': ' They had hamburgers with ketchup and had cake for dessert.', 'parse': {'tree': '(ROOT (S (NP (PRP They)) (VP (VP (VBD had) (NP (NP (NNS hamburgers)) (PP (IN with) (NP (NN ketchup))))) (CC and) (VP (VBD had) (NP (NP (NN cake)) (PP (IN for) (NP (NN dessert)))))) (. .)))', 'lemma': [(u'They', u'they', u'PRP'), (u'had', u'have', u'VBD'), (u'hamburgers', u'hamburger', u'NNS'), (u'with', u'with', u'IN'), (u'ketchup', u'ketchup', u'NN'), (u'and', u'and', u'CC'), (u'had', u'have', u'VBD'), (u'cake', u'cake', u'NN'), (u'for', u'for', u'IN'), (u'dessert', u'dessert', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['They', 'had', 'hamburgers', 'with', 'ketchup', 'and', 'had', 'cake', 'for', 'dessert', '.']}, {'string': ' It was a very fun day for the whole class.', 'parse': {'tree': '(ROOT (S (NP (PRP It)) (VP (VBD was) (NP (NP (DT a) (JJ very) (NN fun) (NN day)) (PP (IN for) (NP (DT the) (JJ whole) (NN class))))) (. .)))', 'lemma': [(u'It', u'it', u'PRP'), (u'was', u'be', u'VBD'), (u'a', u'a', u'DT'), (u'very', u'very', u'JJ'), (u'fun', u'fun', u'NN'), (u'day', u'day', u'NN'), (u'for', u'for', u'IN'), (u'the', u'the', u'DT'), (u'whole', u'whole', u'JJ'), (u'class', u'class', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['It', 'was', 'a', 'very', 'fun', 'day', 'for', 'the', 'whole', 'class', '.']}, {'string': ' They all went home tired and happy.', 'parse': {'tree': '(ROOT (S (NP (PRP They)) (ADVP (DT all)) (VP (VBD went) (NP (NP (NN home)) (ADJP (JJ tired) (CC and) (JJ happy)))) (. .)))', 'lemma': [(u'They', u'they', u'PRP'), (u'all', u'all', u'DT'), (u'went', u'go', u'VBD'), (u'home', u'home', u'NN'), (u'tired', u'tired', u'JJ'), (u'and', u'and', u'CC'), (u'happy', u'happy', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['They', 'all', 'went', 'home', 'tired', 'and', 'happy', '.']}, {'string': ' Johnny took a nap when he went home.', 'parse': {'tree': '(ROOT (S (NP (NNP Johnny)) (VP (VBD took) (NP (DT a) (NN nap)) (SBAR (WHADVP (WRB when)) (S (NP (PRP he)) (VP (VBD went) (NP (NN home)))))) (. .)))', 'lemma': [(u'Johnny', u'Johnny', u'NNP'), (u'took', u'take', u'VBD'), (u'a', u'a', u'DT'), (u'nap', u'nap', u'NN'), (u'when', u'when', u'WRB'), (u'he', u'he', u'PRP'), (u'went', u'go', u'VBD'), (u'home', u'home', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Johnny', 'took', 'a', 'nap', 'when', 'he', 'went', 'home', '.']}], 'questions': [{'question': {'string': ' Who made a picture of her favorite pet ??', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP Who)) (SQ (VP (VBD made) (NP (NP (DT a) (NN picture)) (PP (IN of) (NP (PRP$ her) (JJ favorite) (JJ pet) (NN ??))))))))', 'lemma': [(u'Who', u'who', u'WP'), (u'made', u'make', u'VBD'), (u'a', u'a', u'DT'), (u'picture', u'picture', u'NN'), (u'of', u'of', u'IN'), (u'her', u'she', u'PRP$'), (u'favorite', u'favorite', u'JJ'), (u'pet', u'pet', u'JJ'), (u'??', u'??', u'NN')]}, 'tokens': ['Who', 'made', 'a', 'picture', 'of', 'her', 'favorite', 'pet', '??']}, 'answers': [{'string': ' Lisa made a picture of her and her dog.', 'parse': {'tree': '(ROOT (S (NP (NNP Lisa)) (VP (VBD made) (NP (NP (DT a) (NN picture)) (PP (IN of) (NP (ADJP (PRP$ her) (CC and) (PRP$ her)) (NN dog))))) (. .)))', 'lemma': [(u'Lisa', u'Lisa', u'NNP'), (u'made', u'make', u'VBD'), (u'a', u'a', u'DT'), (u'picture', u'picture', u'NN'), (u'of', u'of', u'IN'), (u'her', u'she', u'PRP$'), (u'and', u'and', u'CC'), (u'her', u'she', u'PRP$'), (u'dog', u'dog', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Lisa', 'made', 'a', 'picture', 'of', 'her', 'and', 'her', 'dog', '.']}, {'string': ' Kevin drew a picture of his bird.', 'parse': {'tree': '(ROOT (S (NP (NNP Kevin)) (VP (VBD drew) (NP (NP (DT a) (NN picture)) (PP (IN of) (NP (PRP$ his) (NN bird))))) (. .)))', 'lemma': [(u'Kevin', u'Kevin', u'NNP'), (u'drew', u'draw', u'VBD'), (u'a', u'a', u'DT'), (u'picture', u'picture', u'NN'), (u'of', u'of', u'IN'), (u'his', u'he', u'PRP$'), (u'bird', u'bird', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Kevin', 'drew', 'a', 'picture', 'of', 'his', 'bird', '.']}, {'string': ' Tony drew his cat.', 'parse': {'tree': '(ROOT (S (NP (NNP Tony)) (VP (VBD drew) (NP (PRP$ his) (NN cat))) (. .)))', 'lemma': [(u'Tony', u'Tony', u'NNP'), (u'drew', u'draw', u'VBD'), (u'his', u'he', u'PRP$'), (u'cat', u'cat', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Tony', 'drew', 'his', 'cat', '.']}, {'string': ' Lisa made a picture of her and her cat.', 'parse': {'tree': '(ROOT (S (NP (NNP Lisa)) (VP (VBD made) (NP (NP (DT a) (NN picture)) (PP (IN of) (NP (ADJP (PRP$ her) (CC and) (PRP$ her)) (NN cat))))) (. .)))', 'lemma': [(u'Lisa', u'Lisa', u'NNP'), (u'made', u'make', u'VBD'), (u'a', u'a', u'DT'), (u'picture', u'picture', u'NN'), (u'of', u'of', u'IN'), (u'her', u'she', u'PRP$'), (u'and', u'and', u'CC'), (u'her', u'she', u'PRP$'), (u'cat', u'cat', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Lisa', 'made', 'a', 'picture', 'of', 'her', 'and', 'her', 'cat', '.']}], 'mode': 0}, {'question': {'string': ' What did the class do after they made their pictures?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD did) (NP (DT the) (NN class)) (VP (VB do) (SBAR (IN after) (S (NP (PRP they)) (VP (VBD made) (NP (PRP$ their) (NNS pictures))))))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'did', u'do', u'VBD'), (u'the', u'the', u'DT'), (u'class', u'class', u'NN'), (u'do', u'do', u'VB'), (u'after', u'after', u'IN'), (u'they', u'they', u'PRP'), (u'made', u'make', u'VBD'), (u'their', u'they', u'PRP$'), (u'pictures', u'picture', u'NNS'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'did', 'the', 'class', 'do', 'after', 'they', 'made', 'their', 'pictures', '?']}, 'answers': [{'string': ' They went home.', 'parse': {'tree': '(ROOT (S (NP (PRP They)) (VP (VBD went) (NP (NN home))) (. .)))', 'lemma': [(u'They', u'they', u'PRP'), (u'went', u'go', u'VBD'), (u'home', u'home', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['They', 'went', 'home', '.']}, {'string': ' They took a nap.', 'parse': {'tree': '(ROOT (S (NP (PRP They)) (VP (VBD took) (NP (DT a) (NN nap))) (. .)))', 'lemma': [(u'They', u'they', u'PRP'), (u'took', u'take', u'VBD'), (u'a', u'a', u'DT'), (u'nap', u'nap', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['They', 'took', 'a', 'nap', '.']}, {'string': ' They had lunch and a party.', 'parse': {'tree': '(ROOT (S (NP (PRP They)) (VP (VBD had) (NP (NP (NN lunch)) (CC and) (NP (DT a) (NN party)))) (. .)))', 'lemma': [(u'They', u'they', u'PRP'), (u'had', u'have', u'VBD'), (u'lunch', u'lunch', u'NN'), (u'and', u'and', u'CC'), (u'a', u'a', u'DT'), (u'party', u'party', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['They', 'had', 'lunch', 'and', 'a', 'party', '.']}, {'string': ' They had recess.', 'parse': {'tree': '(ROOT (S (NP (PRP They)) (VP (VBD had) (NP (NN recess))) (. .)))', 'lemma': [(u'They', u'they', u'PRP'), (u'had', u'have', u'VBD'), (u'recess', u'recess', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['They', 'had', 'recess', '.']}], 'mode': 1}, {'question': {'string': ' What did Johnny use to make his picture?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD did) (NP (NNP Johnny)) (VP (VB use) (S (VP (TO to) (VP (VB make) (NP (PRP$ his) (NN picture))))))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'did', u'do', u'VBD'), (u'Johnny', u'Johnny', u'NNP'), (u'use', u'use', u'VB'), (u'to', u'to', u'TO'), (u'make', u'make', u'VB'), (u'his', u'he', u'PRP$'), (u'picture', u'picture', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'did', 'Johnny', 'use', 'to', 'make', 'his', 'picture', '?']}, 'answers': [{'string': ' He used ketchup to make his picture.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD used) (NP (NN ketchup)) (S (VP (TO to) (VP (VB make) (NP (PRP$ his) (NN picture)))))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'used', u'use', u'VBD'), (u'ketchup', u'ketchup', u'NN'), (u'to', u'to', u'TO'), (u'make', u'make', u'VB'), (u'his', u'he', u'PRP$'), (u'picture', u'picture', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'used', 'ketchup', 'to', 'make', 'his', 'picture', '.']}, {'string': ' Johnny used a potato.', 'parse': {'tree': '(ROOT (S (NP (NNP Johnny)) (VP (VBD used) (NP (DT a) (NN potato))) (. .)))', 'lemma': [(u'Johnny', u'Johnny', u'NNP'), (u'used', u'use', u'VBD'), (u'a', u'a', u'DT'), (u'potato', u'potato', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Johnny', 'used', 'a', 'potato', '.']}, {'string': ' Johnny made his picture with markers.', 'parse': {'tree': '(ROOT (S (NP (NNP Johnny)) (VP (VBD made) (NP (PRP$ his) (NN picture)) (PP (IN with) (NP (NNS markers)))) (. .)))', 'lemma': [(u'Johnny', u'Johnny', u'NNP'), (u'made', u'make', u'VBD'), (u'his', u'he', u'PRP$'), (u'picture', u'picture', u'NN'), (u'with', u'with', u'IN'), (u'markers', u'marker', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['Johnny', 'made', 'his', 'picture', 'with', 'markers', '.']}, {'string': ' Johnny used feathers to make his picture.', 'parse': {'tree': '(ROOT (S (NP (NNP Johnny)) (VP (VBD used) (NP (NNS feathers)) (S (VP (TO to) (VP (VB make) (NP (PRP$ his) (NN picture)))))) (. .)))', 'lemma': [(u'Johnny', u'Johnny', u'NNP'), (u'used', u'use', u'VBD'), (u'feathers', u'feather', u'NNS'), (u'to', u'to', u'TO'), (u'make', u'make', u'VB'), (u'his', u'he', u'PRP$'), (u'picture', u'picture', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Johnny', 'used', 'feathers', 'to', 'make', 'his', 'picture', '.']}], 'mode': 1}, {'question': {'string': ' Did the class have cake for dessert after lunch?', 'parse': {'tree': '(ROOT (SQ (VBD Did) (NP (DT the) (NN class)) (VP (VB have) (NP (NP (NN cake)) (PP (IN for) (NP (NN dessert)))) (PP (IN after) (NP (NN lunch)))) (. ?)))', 'lemma': [(u'Did', u'do', u'VBD'), (u'the', u'the', u'DT'), (u'class', u'class', u'NN'), (u'have', u'have', u'VB'), (u'cake', u'cake', u'NN'), (u'for', u'for', u'IN'), (u'dessert', u'dessert', u'NN'), (u'after', u'after', u'IN'), (u'lunch', u'lunch', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['Did', 'the', 'class', 'have', 'cake', 'for', 'dessert', 'after', 'lunch', '?']}, 'answers': [{'string': ' No, they had ice cream.', 'parse': {'tree': '(ROOT (S (INTJ (UH No)) (, ,) (NP (PRP they)) (VP (VBD had) (NP (NN ice) (NN cream))) (. .)))', 'lemma': [(u'No', u'no', u'UH'), (u',', u',', u','), (u'they', u'they', u'PRP'), (u'had', u'have', u'VBD'), (u'ice', u'ice', u'NN'), (u'cream', u'cream', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['No', ',', 'they', 'had', 'ice', 'cream', '.']}, {'string': ' Yes, they had hamburgers with ketchup and cake for dessert.', 'parse': {'tree': '(ROOT (S (INTJ (UH Yes)) (, ,) (NP (PRP they)) (VP (VBD had) (NP (NP (NNS hamburgers)) (PP (IN with) (NP (NN ketchup) (CC and) (NN cake)))) (PP (IN for) (NP (NN dessert)))) (. .)))', 'lemma': [(u'Yes', u'yes', u'UH'), (u',', u',', u','), (u'they', u'they', u'PRP'), (u'had', u'have', u'VBD'), (u'hamburgers', u'hamburger', u'NNS'), (u'with', u'with', u'IN'), (u'ketchup', u'ketchup', u'NN'), (u'and', u'and', u'CC'), (u'cake', u'cake', u'NN'), (u'for', u'for', u'IN'), (u'dessert', u'dessert', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Yes', ',', 'they', 'had', 'hamburgers', 'with', 'ketchup', 'and', 'cake', 'for', 'dessert', '.']}, {'string': ' No, they had cookies.', 'parse': {'tree': '(ROOT (S (INTJ (UH No)) (, ,) (NP (PRP they)) (VP (VBD had) (NP (NNS cookies))) (. .)))', 'lemma': [(u'No', u'no', u'UH'), (u',', u',', u','), (u'they', u'they', u'PRP'), (u'had', u'have', u'VBD'), (u'cookies', u'cookie', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['No', ',', 'they', 'had', 'cookies', '.']}, {'string': ' No, they only had hamburgers.', 'parse': {'tree': '(ROOT (S (INTJ (UH No)) (, ,) (NP (PRP they)) (ADVP (RB only)) (VP (VBD had) (NP (NNS hamburgers))) (. .)))', 'lemma': [(u'No', u'no', u'UH'), (u',', u',', u','), (u'they', u'they', u'PRP'), (u'only', u'only', u'RB'), (u'had', u'have', u'VBD'), (u'hamburgers', u'hamburger', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['No', ',', 'they', 'only', 'had', 'hamburgers', '.']}], 'mode': 0}]}
{'sentences': [{'string': ' There once was a guy named Kevin and girl named Erin.', 'parse': {'tree': '(ROOT (S (NP (EX There)) (ADVP (RB once)) (VP (VBD was) (NP (NP (DT a) (NN guy)) (VP (VBN named) (NP (NP (NNP Kevin)) (CC and) (NP (NP (NN girl)) (VP (VBN named) (NP (NNP Erin)))))))) (. .)))', 'lemma': [(u'There', u'there', u'EX'), (u'once', u'once', u'RB'), (u'was', u'be', u'VBD'), (u'a', u'a', u'DT'), (u'guy', u'guy', u'NN'), (u'named', u'name', u'VBN'), (u'Kevin', u'Kevin', u'NNP'), (u'and', u'and', u'CC'), (u'girl', u'girl', u'NN'), (u'named', u'name', u'VBN'), (u'Erin', u'Erin', u'NNP'), (u'.', u'.', u'.')]}, 'tokens': ['There', 'once', 'was', 'a', 'guy', 'named', 'Kevin', 'and', 'girl', 'named', 'Erin', '.']}, {'string': ' They really liked spending time together.', 'parse': {'tree': '(ROOT (S (NP (PRP They)) (ADVP (RB really)) (VP (VBD liked) (NP (NN spending) (NN time)) (ADVP (RB together))) (. .)))', 'lemma': [(u'They', u'they', u'PRP'), (u'really', u'really', u'RB'), (u'liked', u'like', u'VBD'), (u'spending', u'spending', u'NN'), (u'time', u'time', u'NN'), (u'together', u'together', u'RB'), (u'.', u'.', u'.')]}, 'tokens': ['They', 'really', 'liked', 'spending', 'time', 'together', '.']}, {'string': " One day, Kevin traveled from his home in the United States of America to Erin 's house in England.", 'parse': {'tree': "(ROOT (S (NP (CD One) (NN day)) (, ,) (NP (NNP Kevin)) (VP (VBD traveled) (PP (IN from) (NP (NP (PRP$ his) (NN home)) (PP (IN in) (NP (NP (DT the) (NNP United) (NNPS States)) (PP (IN of) (NP (NNP America))))))) (PP (TO to) (NP (NP (NP (NNP Erin) (POS 's)) (NN house)) (PP (IN in) (NP (NNP England)))))) (. .)))", 'lemma': [(u'One', u'one', u'CD'), (u'day', u'day', u'NN'), (u',', u',', u','), (u'Kevin', u'Kevin', u'NNP'), (u'traveled', u'travel', u'VBD'), (u'from', u'from', u'IN'), (u'his', u'he', u'PRP$'), (u'home', u'home', u'NN'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'United', u'United', u'NNP'), (u'States', u'States', u'NNPS'), (u'of', u'of', u'IN'), (u'America', u'America', u'NNP'), (u'to', u'to', u'TO'), (u'Erin', u'Erin', u'NNP'), (u"'s", u"'s", u'POS'), (u'house', u'house', u'NN'), (u'in', u'in', u'IN'), (u'England', u'England', u'NNP'), (u'.', u'.', u'.')]}, 'tokens': ['One', 'day', ',', 'Kevin', 'traveled', 'from', 'his', 'home', 'in', 'the', 'United', 'States', 'of', 'America', 'to', 'Erin', "'s", 'house', 'in', 'England', '.']}, {'string': ' They then thought to take a sudden trip around the world.', 'parse': {'tree': '(ROOT (S (NP (PRP They)) (ADVP (RB then)) (VP (VBD thought) (S (VP (TO to) (VP (VB take) (NP (DT a) (JJ sudden) (NN trip)) (PP (IN around) (NP (DT the) (NN world))))))) (. .)))', 'lemma': [(u'They', u'they', u'PRP'), (u'then', u'then', u'RB'), (u'thought', u'think', u'VBD'), (u'to', u'to', u'TO'), (u'take', u'take', u'VB'), (u'a', u'a', u'DT'), (u'sudden', u'sudden', u'JJ'), (u'trip', u'trip', u'NN'), (u'around', u'around', u'IN'), (u'the', u'the', u'DT'), (u'world', u'world', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['They', 'then', 'thought', 'to', 'take', 'a', 'sudden', 'trip', 'around', 'the', 'world', '.']}, {'string': ' They first traveled by plane around Europe, where they saw many different people and sights.', 'parse': {'tree': '(ROOT (S (NP (PRP They)) (ADVP (RB first)) (VP (VBD traveled) (PP (IN by) (NP (NN plane))) (PP (IN around) (NP (NNP Europe))) (, ,) (SBAR (WHADVP (WRB where)) (S (NP (PRP they)) (VP (VBD saw) (NP (JJ many) (JJ different) (NNS people) (CC and) (NNS sights)))))) (. .)))', 'lemma': [(u'They', u'they', u'PRP'), (u'first', u'first', u'RB'), (u'traveled', u'travel', u'VBD'), (u'by', u'by', u'IN'), (u'plane', u'plane', u'NN'), (u'around', u'around', u'IN'), (u'Europe', u'Europe', u'NNP'), (u',', u',', u','), (u'where', u'where', u'WRB'), (u'they', u'they', u'PRP'), (u'saw', u'see', u'VBD'), (u'many', u'many', u'JJ'), (u'different', u'different', u'JJ'), (u'people', u'people', u'NNS'), (u'and', u'and', u'CC'), (u'sights', u'sight', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['They', 'first', 'traveled', 'by', 'plane', 'around', 'Europe', ',', 'where', 'they', 'saw', 'many', 'different', 'people', 'and', 'sights', '.']}, {'string': ' They then took a boat to Africa and Asia, where they went on a trip through the mountains.', 'parse': {'tree': '(ROOT (S (NP (PRP They)) (ADVP (RB then)) (VP (VBD took) (NP (DT a) (NN boat)) (PP (TO to) (NP (NNP Africa) (CC and) (NNP Asia))) (, ,) (SBAR (WHADVP (WRB where)) (S (NP (PRP they)) (VP (VBD went) (PP (IN on) (NP (DT a) (NN trip))) (PP (IN through) (NP (DT the) (NNS mountains))))))) (. .)))', 'lemma': [(u'They', u'they', u'PRP'), (u'then', u'then', u'RB'), (u'took', u'take', u'VBD'), (u'a', u'a', u'DT'), (u'boat', u'boat', u'NN'), (u'to', u'to', u'TO'), (u'Africa', u'Africa', u'NNP'), (u'and', u'and', u'CC'), (u'Asia', u'Asia', u'NNP'), (u',', u',', u','), (u'where', u'where', u'WRB'), (u'they', u'they', u'PRP'), (u'went', u'go', u'VBD'), (u'on', u'on', u'IN'), (u'a', u'a', u'DT'), (u'trip', u'trip', u'NN'), (u'through', u'through', u'IN'), (u'the', u'the', u'DT'), (u'mountains', u'mountain', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['They', 'then', 'took', 'a', 'boat', 'to', 'Africa', 'and', 'Asia', ',', 'where', 'they', 'went', 'on', 'a', 'trip', 'through', 'the', 'mountains', '.']}, {'string': ' Later in the month, they traveled to China by train and were allowed to see how different life was over there.', 'parse': {'tree': '(ROOT (S (PP (ADVP (RB Later)) (IN in) (NP (DT the) (NN month))) (, ,) (NP (PRP they)) (VP (VP (VBD traveled) (PP (TO to) (NP (NNP China))) (PP (IN by) (NP (NN train)))) (CC and) (VP (VBD were) (VP (VBN allowed) (S (VP (TO to) (VP (VB see) (SBAR (WHADVP (WRB how)) (S (NP (JJ different) (NN life)) (VP (VBD was) (PP (IN over) (NP (RB there)))))))))))) (. .)))', 'lemma': [(u'Later', u'later', u'RB'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'month', u'month', u'NN'), (u',', u',', u','), (u'they', u'they', u'PRP'), (u'traveled', u'travel', u'VBD'), (u'to', u'to', u'TO'), (u'China', u'China', u'NNP'), (u'by', u'by', u'IN'), (u'train', u'train', u'NN'), (u'and', u'and', u'CC'), (u'were', u'be', u'VBD'), (u'allowed', u'allow', u'VBN'), (u'to', u'to', u'TO'), (u'see', u'see', u'VB'), (u'how', u'how', u'WRB'), (u'different', u'different', u'JJ'), (u'life', u'life', u'NN'), (u'was', u'be', u'VBD'), (u'over', u'over', u'IN'), (u'there', u'there', u'RB'), (u'.', u'.', u'.')]}, 'tokens': ['Later', 'in', 'the', 'month', ',', 'they', 'traveled', 'to', 'China', 'by', 'train', 'and', 'were', 'allowed', 'to', 'see', 'how', 'different', 'life', 'was', 'over', 'there', '.']}, {'string': ' Next they took another plane to Australia, where they had a lot of fun seeing kangaroos and a different type of English speaking people.', 'parse': {'tree': '(ROOT (S (ADVP (RB Next)) (NP (PRP they)) (VP (VBD took) (NP (DT another) (NN plane)) (PP (TO to) (NP (NNP Australia))) (, ,) (SBAR (WHADVP (WRB where)) (S (NP (PRP they)) (VP (VBD had) (NP (NP (DT a) (NN lot)) (PP (IN of) (NP (NP (NN fun)) (VP (VBG seeing) (NP (NP (NNS kangaroos)) (CC and) (NP (NP (DT a) (JJ different) (NN type)) (PP (IN of) (NP (JJ English) (NN speaking) (NNS people))))))))))))) (. .)))', 'lemma': [(u'Next', u'next', u'RB'), (u'they', u'they', u'PRP'), (u'took', u'take', u'VBD'), (u'another', u'another', u'DT'), (u'plane', u'plane', u'NN'), (u'to', u'to', u'TO'), (u'Australia', u'Australia', u'NNP'), (u',', u',', u','), (u'where', u'where', u'WRB'), (u'they', u'they', u'PRP'), (u'had', u'have', u'VBD'), (u'a', u'a', u'DT'), (u'lot', u'lot', u'NN'), (u'of', u'of', u'IN'), (u'fun', u'fun', u'NN'), (u'seeing', u'see', u'VBG'), (u'kangaroos', u'kangaroo', u'NNS'), (u'and', u'and', u'CC'), (u'a', u'a', u'DT'), (u'different', u'different', u'JJ'), (u'type', u'type', u'NN'), (u'of', u'of', u'IN'), (u'English', u'english', u'JJ'), (u'speaking', u'speaking', u'NN'), (u'people', u'people', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['Next', 'they', 'took', 'another', 'plane', 'to', 'Australia', ',', 'where', 'they', 'had', 'a', 'lot', 'of', 'fun', 'seeing', 'kangaroos', 'and', 'a', 'different', 'type', 'of', 'English', 'speaking', 'people', '.']}, {'string': ' After spending a week in Australia, Kevin and Erin took a really long plane ride to North America, where they drove across the land.', 'parse': {'tree': '(ROOT (S (PP (IN After) (S (VP (VBG spending) (NP (DT a) (NN week)) (PP (IN in) (NP (NNP Australia)))))) (, ,) (NP (NNP Kevin) (CC and) (NNP Erin)) (VP (VBD took) (NP (DT a) (ADJP (RB really) (JJ long)) (NN plane) (NN ride)) (PP (TO to) (NP (NNP North) (NNP America))) (, ,) (SBAR (WHADVP (WRB where)) (S (NP (PRP they)) (VP (VBD drove) (PP (IN across) (NP (DT the) (NN land))))))) (. .)))', 'lemma': [(u'After', u'after', u'IN'), (u'spending', u'spend', u'VBG'), (u'a', u'a', u'DT'), (u'week', u'week', u'NN'), (u'in', u'in', u'IN'), (u'Australia', u'Australia', u'NNP'), (u',', u',', u','), (u'Kevin', u'Kevin', u'NNP'), (u'and', u'and', u'CC'), (u'Erin', u'Erin', u'NNP'), (u'took', u'take', u'VBD'), (u'a', u'a', u'DT'), (u'really', u'really', u'RB'), (u'long', u'long', u'JJ'), (u'plane', u'plane', u'NN'), (u'ride', u'ride', u'NN'), (u'to', u'to', u'TO'), (u'North', u'North', u'NNP'), (u'America', u'America', u'NNP'), (u',', u',', u','), (u'where', u'where', u'WRB'), (u'they', u'they', u'PRP'), (u'drove', u'drive', u'VBD'), (u'across', u'across', u'IN'), (u'the', u'the', u'DT'), (u'land', u'land', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['After', 'spending', 'a', 'week', 'in', 'Australia', ',', 'Kevin', 'and', 'Erin', 'took', 'a', 'really', 'long', 'plane', 'ride', 'to', 'North', 'America', ',', 'where', 'they', 'drove', 'across', 'the', 'land', '.']}, {'string': ' They saw everything from the mountains to forests.', 'parse': {'tree': '(ROOT (S (NP (PRP They)) (VP (VBD saw) (NP (NN everything)) (PP (IN from) (NP (DT the) (NNS mountains))) (PP (TO to) (NP (NNS forests)))) (. .)))', 'lemma': [(u'They', u'they', u'PRP'), (u'saw', u'see', u'VBD'), (u'everything', u'everything', u'NN'), (u'from', u'from', u'IN'), (u'the', u'the', u'DT'), (u'mountains', u'mountain', u'NNS'), (u'to', u'to', u'TO'), (u'forests', u'forest', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['They', 'saw', 'everything', 'from', 'the', 'mountains', 'to', 'forests', '.']}, {'string': ' They even got to visit the beach!', 'parse': {'tree': '(ROOT (S (NP (PRP They)) (ADVP (RB even)) (VP (VBD got) (S (VP (TO to) (VP (VB visit) (NP (DT the) (NN beach)))))) (. !)))', 'lemma': [(u'They', u'they', u'PRP'), (u'even', u'even', u'RB'), (u'got', u'get', u'VBD'), (u'to', u'to', u'TO'), (u'visit', u'visit', u'VB'), (u'the', u'the', u'DT'), (u'beach', u'beach', u'NN'), (u'!', u'!', u'.')]}, 'tokens': ['They', 'even', 'got', 'to', 'visit', 'the', 'beach', '!']}, {'string': ' Because they had so much fun, Kevin returned home with Erin to England where they hung out and spent the next few days and months talking about all of the neat things they saw and did on their trip.', 'parse': {'tree': '(ROOT (S (SBAR (IN Because) (S (NP (PRP they)) (VP (VBD had) (NP (ADJP (RB so) (JJ much)) (NN fun))))) (, ,) (NP (NNP Kevin)) (VP (VBD returned) (NP (NN home)) (PP (IN with) (NP (NNP Erin))) (PP (TO to) (NP (NNP England))) (SBAR (WHADVP (WRB where)) (S (NP (PRP they)) (VP (VP (VBD hung) (PRT (RP out))) (CC and) (VP (VBD spent) (NP (DT the) (JJ next) (JJ few) (NNS days) (CC and) (NNS months)) (S (VP (VBG talking) (NP (NP (QP (RB about) (DT all))) (PP (IN of) (NP (DT the) (JJ neat) (NNS things))) (SBAR (S (NP (PRP they)) (VP (VBD saw) (CC and) (VBD did) (PP (IN on) (NP (PRP$ their) (NN trip)))))))))))))) (. .)))', 'lemma': [(u'Because', u'because', u'IN'), (u'they', u'they', u'PRP'), (u'had', u'have', u'VBD'), (u'so', u'so', u'RB'), (u'much', u'much', u'JJ'), (u'fun', u'fun', u'NN'), (u',', u',', u','), (u'Kevin', u'Kevin', u'NNP'), (u'returned', u'return', u'VBD'), (u'home', u'home', u'NN'), (u'with', u'with', u'IN'), (u'Erin', u'Erin', u'NNP'), (u'to', u'to', u'TO'), (u'England', u'England', u'NNP'), (u'where', u'where', u'WRB'), (u'they', u'they', u'PRP'), (u'hung', u'hang', u'VBD'), (u'out', u'out', u'RP'), (u'and', u'and', u'CC'), (u'spent', u'spend', u'VBD'), (u'the', u'the', u'DT'), (u'next', u'next', u'JJ'), (u'few', u'few', u'JJ'), (u'days', u'day', u'NNS'), (u'and', u'and', u'CC'), (u'months', u'month', u'NNS'), (u'talking', u'talk', u'VBG'), (u'about', u'about', u'RB'), (u'all', u'all', u'DT'), (u'of', u'of', u'IN'), (u'the', u'the', u'DT'), (u'neat', u'neat', u'JJ'), (u'things', u'thing', u'NNS'), (u'they', u'they', u'PRP'), (u'saw', u'see', u'VBD'), (u'and', u'and', u'CC'), (u'did', u'do', u'VBD'), (u'on', u'on', u'IN'), (u'their', u'they', u'PRP$'), (u'trip', u'trip', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Because', 'they', 'had', 'so', 'much', 'fun', ',', 'Kevin', 'returned', 'home', 'with', 'Erin', 'to', 'England', 'where', 'they', 'hung', 'out', 'and', 'spent', 'the', 'next', 'few', 'days', 'and', 'months', 'talking', 'about', 'all', 'of', 'the', 'neat', 'things', 'they', 'saw', 'and', 'did', 'on', 'their', 'trip', '.']}], 'questions': [{'question': {'string': ' Where did Kevin and Erin NOT visit?', 'parse': {'tree': '(ROOT (SBARQ (WHADVP (WRB Where)) (SQ (VBD did) (NP (NNP Kevin) (CC and) (NNP Erin)) (VP (VB NOT) (NP (NN visit)))) (. ?)))', 'lemma': [(u'Where', u'where', u'WRB'), (u'did', u'do', u'VBD'), (u'Kevin', u'Kevin', u'NNP'), (u'and', u'and', u'CC'), (u'Erin', u'Erin', u'NNP'), (u'NOT', u'not', u'VB'), (u'visit', u'visit', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['Where', 'did', 'Kevin', 'and', 'Erin', 'NOT', 'visit', '?']}, 'answers': [{'string': ' Australia', 'parse': {'tree': '(ROOT (NP (NNP Australia)))', 'lemma': [(u'Australia', u'Australia', u'NNP')]}, 'tokens': ['Australia']}, {'string': ' Europe', 'parse': {'tree': '(ROOT (NP (NNP Europe)))', 'lemma': [(u'Europe', u'Europe', u'NNP')]}, 'tokens': ['Europe']}, {'string': ' North America', 'parse': {'tree': '(ROOT (NP (NNP North) (NNP America)))', 'lemma': [(u'North', u'North', u'NNP'), (u'America', u'America', u'NNP')]}, 'tokens': ['North', 'America']}, {'string': ' South America', 'parse': {'tree': '(ROOT (NP (NNP South) (NNP America)))', 'lemma': [(u'South', u'South', u'NNP'), (u'America', u'America', u'NNP')]}, 'tokens': ['South', 'America']}], 'mode': 0}, {'question': {'string': ' What did Kevin and Erin NOT take to travel?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD did) (NP (NP (NNP Kevin)) (CC and) (NP (NNP Erin) (NNP NOT))) (VP (VB take) (S (VP (TO to) (VP (VB travel)))))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'did', u'do', u'VBD'), (u'Kevin', u'Kevin', u'NNP'), (u'and', u'and', u'CC'), (u'Erin', u'Erin', u'NNP'), (u'NOT', u'NOT', u'NNP'), (u'take', u'take', u'VB'), (u'to', u'to', u'TO'), (u'travel', u'travel', u'VB'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'did', 'Kevin', 'and', 'Erin', 'NOT', 'take', 'to', 'travel', '?']}, 'answers': [{'string': ' Bus', 'parse': {'tree': '(ROOT (NP (NNP Bus)))', 'lemma': [(u'Bus', u'Bus', u'NNP')]}, 'tokens': ['Bus']}, {'string': ' Train', 'parse': {'tree': '(ROOT (NP (NNP Train)))', 'lemma': [(u'Train', u'Train', u'NNP')]}, 'tokens': ['Train']}, {'string': ' Boat', 'parse': {'tree': '(ROOT (NP (NNP Boat)))', 'lemma': [(u'Boat', u'Boat', u'NNP')]}, 'tokens': ['Boat']}, {'string': ' Plane', 'parse': {'tree': '(ROOT (NP (NNP Plane)))', 'lemma': [(u'Plane', u'Plane', u'NNP')]}, 'tokens': ['Plane']}], 'mode': 0}, {'question': {'string': ' What did Kevin and Erin NOT see in North America?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD did) (NP (NP (NNP Kevin)) (CC and) (NP (NNP Erin) (NNP NOT))) (VP (VB see) (PP (IN in) (NP (NNP North) (NNP America))))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'did', u'do', u'VBD'), (u'Kevin', u'Kevin', u'NNP'), (u'and', u'and', u'CC'), (u'Erin', u'Erin', u'NNP'), (u'NOT', u'NOT', u'NNP'), (u'see', u'see', u'VB'), (u'in', u'in', u'IN'), (u'North', u'North', u'NNP'), (u'America', u'America', u'NNP'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'did', 'Kevin', 'and', 'Erin', 'NOT', 'see', 'in', 'North', 'America', '?']}, 'answers': [{'string': ' Farmlands', 'parse': {'tree': '(ROOT (NP (NNS Farmlands)))', 'lemma': [(u'Farmlands', u'farmland', u'NNS')]}, 'tokens': ['Farmlands']}, {'string': ' Beach', 'parse': {'tree': '(ROOT (NP (NNP Beach)))', 'lemma': [(u'Beach', u'Beach', u'NNP')]}, 'tokens': ['Beach']}, {'string': ' Forest', 'parse': {'tree': '(ROOT (NP (NNP Forest)))', 'lemma': [(u'Forest', u'Forest', u'NNP')]}, 'tokens': ['Forest']}, {'string': ' Mountains', 'parse': {'tree': '(ROOT (NP (NNS Mountains)))', 'lemma': [(u'Mountains', u'mountain', u'NNS')]}, 'tokens': ['Mountains']}], 'mode': 0}, {'question': {'string': ' Which of these places did Kevin and Erin visit first', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WHNP (WDT Which)) (PP (IN of) (NP (DT these) (NNS places)))) (SQ (VBD did) (NP (NNP Kevin) (CC and) (NNP Erin)) (VP (VB visit) (ADVP (RB first))))))', 'lemma': [(u'Which', u'which', u'WDT'), (u'of', u'of', u'IN'), (u'these', u'these', u'DT'), (u'places', u'place', u'NNS'), (u'did', u'do', u'VBD'), (u'Kevin', u'Kevin', u'NNP'), (u'and', u'and', u'CC'), (u'Erin', u'Erin', u'NNP'), (u'visit', u'visit', u'VB'), (u'first', u'first', u'RB')]}, 'tokens': ['Which', 'of', 'these', 'places', 'did', 'Kevin', 'and', 'Erin', 'visit', 'first']}, 'answers': [{'string': ' Australia', 'parse': {'tree': '(ROOT (NP (NNP Australia)))', 'lemma': [(u'Australia', u'Australia', u'NNP')]}, 'tokens': ['Australia']}, {'string': ' North America', 'parse': {'tree': '(ROOT (NP (NNP North) (NNP America)))', 'lemma': [(u'North', u'North', u'NNP'), (u'America', u'America', u'NNP')]}, 'tokens': ['North', 'America']}, {'string': ' Africa', 'parse': {'tree': '(ROOT (NP (NNP Africa)))', 'lemma': [(u'Africa', u'Africa', u'NNP')]}, 'tokens': ['Africa']}, {'string': ' Europe', 'parse': {'tree': '(ROOT (NP (NNP Europe)))', 'lemma': [(u'Europe', u'Europe', u'NNP')]}, 'tokens': ['Europe']}], 'mode': 1}]}
{'sentences': [{'string': ' Tommy and Suzy -LRB- brother and sister -RRB- went to the playground one afternoon with their mom and dad, Jan and Dean.', 'parse': {'tree': '(ROOT (S (NP (NP (NNP Tommy) (CC and) (NNP Suzy)) (PRN (-LRB- -LRB-) (NP (NP (NN brother)) (CC and) (NP (NN sister))) (-RRB- -RRB-))) (VP (VBD went) (PP (TO to) (NP (DT the) (NN playground))) (NP (CD one) (NN afternoon)) (PP (IN with) (NP (PRP$ their) (NN mom) (CC and) (NNP dad) (, ,) (NNP Jan) (CC and) (NNP Dean)))) (. .)))', 'lemma': [(u'Tommy', u'Tommy', u'NNP'), (u'and', u'and', u'CC'), (u'Suzy', u'Suzy', u'NNP'), (u'-LRB-', u'-lrb-', u'-LRB-'), (u'brother', u'brother', u'NN'), (u'and', u'and', u'CC'), (u'sister', u'sister', u'NN'), (u'-RRB-', u'-rrb-', u'-RRB-'), (u'went', u'go', u'VBD'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'playground', u'playground', u'NN'), (u'one', u'one', u'CD'), (u'afternoon', u'afternoon', u'NN'), (u'with', u'with', u'IN'), (u'their', u'they', u'PRP$'), (u'mom', u'mom', u'NN'), (u'and', u'and', u'CC'), (u'dad', u'dad', u'NNP'), (u',', u',', u','), (u'Jan', u'Jan', u'NNP'), (u'and', u'and', u'CC'), (u'Dean', u'Dean', u'NNP'), (u'.', u'.', u'.')]}, 'tokens': ['Tommy', 'and', 'Suzy', '-LRB-', 'brother', 'and', 'sister', '-RRB-', 'went', 'to', 'the', 'playground', 'one', 'afternoon', 'with', 'their', 'mom', 'and', 'dad', ',', 'Jan', 'and', 'Dean', '.']}, {'string': ' They were playing a game of tag and having the best time ever running after each other and laughing.', 'parse': {'tree': '(ROOT (S (NP (PRP They)) (VP (VBD were) (VP (VP (VBG playing) (NP (NP (DT a) (NN game)) (PP (IN of) (NP (NN tag))))) (CC and) (VP (VBG having) (NP (DT the) (JJS best) (NN time)) (S (VP (VP (ADVP (RB ever)) (VBG running) (PP (IN after) (NP (DT each) (JJ other)))) (CC and) (VP (VBG laughing))))))) (. .)))', 'lemma': [(u'They', u'they', u'PRP'), (u'were', u'be', u'VBD'), (u'playing', u'play', u'VBG'), (u'a', u'a', u'DT'), (u'game', u'game', u'NN'), (u'of', u'of', u'IN'), (u'tag', u'tag', u'NN'), (u'and', u'and', u'CC'), (u'having', u'have', u'VBG'), (u'the', u'the', u'DT'), (u'best', u'best', u'JJS'), (u'time', u'time', u'NN'), (u'ever', u'ever', u'RB'), (u'running', u'run', u'VBG'), (u'after', u'after', u'IN'), (u'each', u'each', u'DT'), (u'other', u'other', u'JJ'), (u'and', u'and', u'CC'), (u'laughing', u'laugh', u'VBG'), (u'.', u'.', u'.')]}, 'tokens': ['They', 'were', 'playing', 'a', 'game', 'of', 'tag', 'and', 'having', 'the', 'best', 'time', 'ever', 'running', 'after', 'each', 'other', 'and', 'laughing', '.']}, {'string': ' They liked to play tag instead of building sandcastles or swinging.', 'parse': {'tree': '(ROOT (S (NP (PRP They)) (VP (VBD liked) (S (VP (TO to) (VP (VB play) (NP (NN tag)) (PP (RB instead) (IN of) (S (VP (VBG building) (NP (NNS sandcastles) (CC or) (VBG swinging))))))))) (. .)))', 'lemma': [(u'They', u'they', u'PRP'), (u'liked', u'like', u'VBD'), (u'to', u'to', u'TO'), (u'play', u'play', u'VB'), (u'tag', u'tag', u'NN'), (u'instead', u'instead', u'RB'), (u'of', u'of', u'IN'), (u'building', u'build', u'VBG'), (u'sandcastles', u'sandcastle', u'NNS'), (u'or', u'or', u'CC'), (u'swinging', u'swing', u'VBG'), (u'.', u'.', u'.')]}, 'tokens': ['They', 'liked', 'to', 'play', 'tag', 'instead', 'of', 'building', 'sandcastles', 'or', 'swinging', '.']}, {'string': ' They liked tag because they liked to run.', 'parse': {'tree': '(ROOT (S (NP (PRP They)) (VP (VBD liked) (NP (NN tag)) (SBAR (IN because) (S (NP (PRP they)) (VP (VBD liked) (S (VP (TO to) (VP (VB run)))))))) (. .)))', 'lemma': [(u'They', u'they', u'PRP'), (u'liked', u'like', u'VBD'), (u'tag', u'tag', u'NN'), (u'because', u'because', u'IN'), (u'they', u'they', u'PRP'), (u'liked', u'like', u'VBD'), (u'to', u'to', u'TO'), (u'run', u'run', u'VB'), (u'.', u'.', u'.')]}, 'tokens': ['They', 'liked', 'tag', 'because', 'they', 'liked', 'to', 'run', '.']}, {'string': ' They like to play hopscotch or jump rope but that day they wanted to play tag.', 'parse': {'tree': '(ROOT (S (NP (PRP They)) (VP (VBP like) (SBAR (SBAR (S (VP (TO to) (VP (VB play) (NP (NN hopscotch) (CC or) (NN jump) (NN rope)))))) (CC but) (SBAR (IN that) (S (NP (NN day)) (NP (PRP they)) (VP (VBD wanted) (S (VP (TO to) (VP (VB play) (NP (NN tag)))))))))) (. .)))', 'lemma': [(u'They', u'they', u'PRP'), (u'like', u'like', u'VBP'), (u'to', u'to', u'TO'), (u'play', u'play', u'VB'), (u'hopscotch', u'hopscotch', u'NN'), (u'or', u'or', u'CC'), (u'jump', u'jump', u'NN'), (u'rope', u'rope', u'NN'), (u'but', u'but', u'CC'), (u'that', u'that', u'IN'), (u'day', u'day', u'NN'), (u'they', u'they', u'PRP'), (u'wanted', u'want', u'VBD'), (u'to', u'to', u'TO'), (u'play', u'play', u'VB'), (u'tag', u'tag', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['They', 'like', 'to', 'play', 'hopscotch', 'or', 'jump', 'rope', 'but', 'that', 'day', 'they', 'wanted', 'to', 'play', 'tag', '.']}, {'string': " Other games are n't as fun.", 'parse': {'tree': "(ROOT (S (NP (JJ Other) (NNS games)) (VP (VBP are) (RB n't) (PP (IN as) (NP (NN fun)))) (. .)))", 'lemma': [(u'Other', u'other', u'JJ'), (u'games', u'game', u'NNS'), (u'are', u'be', u'VBP'), (u"n't", u'not', u'RB'), (u'as', u'as', u'IN'), (u'fun', u'fun', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Other', 'games', 'are', "n't", 'as', 'fun', '.']}, {'string': ' They met Tony and Ally -LRB- who are best friends -RRB- and invited them to play tag too.', 'parse': {'tree': '(ROOT (S (NP (PRP They)) (VP (VP (VBD met) (NP (NP (NNP Tony) (CC and) (NNP Ally)) (PRN (-LRB- -LRB-) (SBAR (WHNP (WP who)) (S (VP (VBP are) (NP (JJS best) (NNS friends))))) (-RRB- -RRB-)))) (CC and) (VP (VBD invited) (S (NP (PRP them)) (VP (TO to) (VP (VB play) (NP (NN tag)) (ADVP (RB too))))))) (. .)))', 'lemma': [(u'They', u'they', u'PRP'), (u'met', u'meet', u'VBD'), (u'Tony', u'Tony', u'NNP'), (u'and', u'and', u'CC'), (u'Ally', u'Ally', u'NNP'), (u'-LRB-', u'-lrb-', u'-LRB-'), (u'who', u'who', u'WP'), (u'are', u'be', u'VBP'), (u'best', u'best', u'JJS'), (u'friends', u'friend', u'NNS'), (u'-RRB-', u'-rrb-', u'-RRB-'), (u'and', u'and', u'CC'), (u'invited', u'invite', u'VBD'), (u'them', u'they', u'PRP'), (u'to', u'to', u'TO'), (u'play', u'play', u'VB'), (u'tag', u'tag', u'NN'), (u'too', u'too', u'RB'), (u'.', u'.', u'.')]}, 'tokens': ['They', 'met', 'Tony', 'and', 'Ally', '-LRB-', 'who', 'are', 'best', 'friends', '-RRB-', 'and', 'invited', 'them', 'to', 'play', 'tag', 'too', '.']}, {'string': ' Tony and Ally like to play other games like hopscotch or jump rope but that day they joined the game of tag.', 'parse': {'tree': '(ROOT (S (NP (NNP Tony) (CC and) (NNP Ally)) (VP (VBP like) (SBAR (SBAR (S (VP (TO to) (VP (VB play) (NP (JJ other) (NNS games)) (PP (IN like) (NP (NN hopscotch) (CC or) (NN jump) (NN rope))))))) (CC but) (SBAR (IN that) (S (NP (NN day)) (NP (PRP they)) (VP (VBD joined) (NP (NP (DT the) (NN game)) (PP (IN of) (NP (NN tag))))))))) (. .)))', 'lemma': [(u'Tony', u'Tony', u'NNP'), (u'and', u'and', u'CC'), (u'Ally', u'Ally', u'NNP'), (u'like', u'like', u'VBP'), (u'to', u'to', u'TO'), (u'play', u'play', u'VB'), (u'other', u'other', u'JJ'), (u'games', u'game', u'NNS'), (u'like', u'like', u'IN'), (u'hopscotch', u'hopscotch', u'NN'), (u'or', u'or', u'CC'), (u'jump', u'jump', u'NN'), (u'rope', u'rope', u'NN'), (u'but', u'but', u'CC'), (u'that', u'that', u'IN'), (u'day', u'day', u'NN'), (u'they', u'they', u'PRP'), (u'joined', u'join', u'VBD'), (u'the', u'the', u'DT'), (u'game', u'game', u'NN'), (u'of', u'of', u'IN'), (u'tag', u'tag', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Tony', 'and', 'Ally', 'like', 'to', 'play', 'other', 'games', 'like', 'hopscotch', 'or', 'jump', 'rope', 'but', 'that', 'day', 'they', 'joined', 'the', 'game', 'of', 'tag', '.']}, {'string': ' Making new friends is important.', 'parse': {'tree': '(ROOT (S (S (VP (VBG Making) (NP (JJ new) (NNS friends)))) (VP (VBZ is) (ADJP (JJ important))) (. .)))', 'lemma': [(u'Making', u'make', u'VBG'), (u'new', u'new', u'JJ'), (u'friends', u'friend', u'NNS'), (u'is', u'be', u'VBZ'), (u'important', u'important', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['Making', 'new', 'friends', 'is', 'important', '.']}, {'string': ' Tony and Ally would rather make friends than play their favorite games.', 'parse': {'tree': '(ROOT (S (NP (NNP Tony) (CC and) (NNP Ally)) (VP (MD would) (VP (RB rather) (VP (VB make) (NP (NNS friends))) (IN than) (VP (VB play) (NP (PRP$ their) (JJ favorite) (NNS games))))) (. .)))', 'lemma': [(u'Tony', u'Tony', u'NNP'), (u'and', u'and', u'CC'), (u'Ally', u'Ally', u'NNP'), (u'would', u'would', u'MD'), (u'rather', u'rather', u'RB'), (u'make', u'make', u'VB'), (u'friends', u'friend', u'NNS'), (u'than', u'than', u'IN'), (u'play', u'play', u'VB'), (u'their', u'they', u'PRP$'), (u'favorite', u'favorite', u'JJ'), (u'games', u'game', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['Tony', 'and', 'Ally', 'would', 'rather', 'make', 'friends', 'than', 'play', 'their', 'favorite', 'games', '.']}], 'questions': [{'question': {'string': ' What would Tony and Ally rather do?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (MD would) (NP (NNP Tony) (CC and) (NNP Ally)) (VP (ADVP (RB rather)) (VB do))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'would', u'would', u'MD'), (u'Tony', u'Tony', u'NNP'), (u'and', u'and', u'CC'), (u'Ally', u'Ally', u'NNP'), (u'rather', u'rather', u'RB'), (u'do', u'do', u'VB'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'would', 'Tony', 'and', 'Ally', 'rather', 'do', '?']}, 'answers': [{'string': ' Make friends', 'parse': {'tree': '(ROOT (S (VP (VB Make) (NP (NNS friends)))))', 'lemma': [(u'Make', u'make', u'VB'), (u'friends', u'friend', u'NNS')]}, 'tokens': ['Make', 'friends']}, {'string': ' Play hopscotch', 'parse': {'tree': '(ROOT (S (VP (VB Play) (NP (NN hopscotch)))))', 'lemma': [(u'Play', u'play', u'VB'), (u'hopscotch', u'hopscotch', u'NN')]}, 'tokens': ['Play', 'hopscotch']}, {'string': ' Swing', 'parse': {'tree': '(ROOT (INTJ (UH Swing)))', 'lemma': [(u'Swing', u'swing', u'UH')]}, 'tokens': ['Swing']}, {'string': ' Run', 'parse': {'tree': '(ROOT (NP (NNP Run)))', 'lemma': [(u'Run', u'Run', u'NNP')]}, 'tokens': ['Run']}], 'mode': 0}, {'question': {'string': ' Why do Tommy and Suzy like to play tag?', 'parse': {'tree': '(ROOT (SBARQ (WHADVP (WRB Why)) (SQ (VBP do) (NP (NNP Tommy) (CC and) (NNP Suzy)) (VP (VB like) (S (VP (TO to) (VP (VB play) (NP (NN tag))))))) (. ?)))', 'lemma': [(u'Why', u'why', u'WRB'), (u'do', u'do', u'VBP'), (u'Tommy', u'Tommy', u'NNP'), (u'and', u'and', u'CC'), (u'Suzy', u'Suzy', u'NNP'), (u'like', u'like', u'VB'), (u'to', u'to', u'TO'), (u'play', u'play', u'VB'), (u'tag', u'tag', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['Why', 'do', 'Tommy', 'and', 'Suzy', 'like', 'to', 'play', 'tag', '?']}, 'answers': [{'string': ' The like making friends', 'parse': {'tree': '(ROOT (FRAG (NP (DT The) (JJ like) (NN making) (NNS friends))))', 'lemma': [(u'The', u'the', u'DT'), (u'like', u'like', u'JJ'), (u'making', u'making', u'NN'), (u'friends', u'friend', u'NNS')]}, 'tokens': ['The', 'like', 'making', 'friends']}, {'string': " They 'd rather jump rope", 'parse': {'tree': "(ROOT (S (NP (PRP They)) (VP (MD 'd) (RB rather) (VP (VB jump) (NP (NN rope))))))", 'lemma': [(u'They', u'they', u'PRP'), (u"'d", u'would', u'MD'), (u'rather', u'rather', u'RB'), (u'jump', u'jump', u'VB'), (u'rope', u'rope', u'NN')]}, 'tokens': ['They', "'d", 'rather', 'jump', 'rope']}, {'string': ' They like running.', 'parse': {'tree': '(ROOT (S (NP (PRP They)) (VP (VBP like) (S (VP (VBG running)))) (. .)))', 'lemma': [(u'They', u'they', u'PRP'), (u'like', u'like', u'VBP'), (u'running', u'run', u'VBG'), (u'.', u'.', u'.')]}, 'tokens': ['They', 'like', 'running', '.']}, {'string': ' They prefer hopscotch', 'parse': {'tree': '(ROOT (S (NP (PRP They)) (VP (VBP prefer) (NP (NN hopscotch)))))', 'lemma': [(u'They', u'they', u'PRP'), (u'prefer', u'prefer', u'VBP'), (u'hopscotch', u'hopscotch', u'NN')]}, 'tokens': ['They', 'prefer', 'hopscotch']}], 'mode': 1}, {'question': {'string': ' What is the name of the Dad', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (DT the) (NN name)) (PP (IN of) (NP (DT the) (NNP Dad)))))))', 'lemma': [(u'What', u'what', u'WP'), (u'is', u'be', u'VBZ'), (u'the', u'the', u'DT'), (u'name', u'name', u'NN'), (u'of', u'of', u'IN'), (u'the', u'the', u'DT'), (u'Dad', u'Dad', u'NNP')]}, 'tokens': ['What', 'is', 'the', 'name', 'of', 'the', 'Dad']}, 'answers': [{'string': ' Tony', 'parse': {'tree': '(ROOT (NP (NNP Tony)))', 'lemma': [(u'Tony', u'Tony', u'NNP')]}, 'tokens': ['Tony']}, {'string': ' Suzy', 'parse': {'tree': '(ROOT (ADVP (RB Suzy)))', 'lemma': [(u'Suzy', u'suzy', u'RB')]}, 'tokens': ['Suzy']}, {'string': ' Dean', 'parse': {'tree': '(ROOT (NP (NNP Dean)))', 'lemma': [(u'Dean', u'Dean', u'NNP')]}, 'tokens': ['Dean']}, {'string': ' Tommy', 'parse': {'tree': '(ROOT (NP (NNP Tommy)))', 'lemma': [(u'Tommy', u'Tommy', u'NNP')]}, 'tokens': ['Tommy']}], 'mode': 1}, {'question': {'string': ' What games do Tommy and Suzy not like to play?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WDT What) (NNS games)) (SQ (VBP do) (NP (NNP Tommy) (CC and) (NNP Suzy)) (ADVP (RB not)) (VP (VB like) (S (VP (TO to) (VP (VB play)))))) (. ?)))', 'lemma': [(u'What', u'what', u'WDT'), (u'games', u'game', u'NNS'), (u'do', u'do', u'VBP'), (u'Tommy', u'Tommy', u'NNP'), (u'and', u'and', u'CC'), (u'Suzy', u'Suzy', u'NNP'), (u'not', u'not', u'RB'), (u'like', u'like', u'VB'), (u'to', u'to', u'TO'), (u'play', u'play', u'VB'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'games', 'do', 'Tommy', 'and', 'Suzy', 'not', 'like', 'to', 'play', '?']}, 'answers': [{'string': ' tag', 'parse': {'tree': '(ROOT (NP (NN tag)))', 'lemma': [(u'tag', u'tag', u'NN')]}, 'tokens': ['tag']}, {'string': ' hopscotch', 'parse': {'tree': '(ROOT (S (VP (VB hopscotch))))', 'lemma': [(u'hopscotch', u'hopscotch', u'VB')]}, 'tokens': ['hopscotch']}, {'string': ' building sandcastles and swinging', 'parse': {'tree': '(ROOT (S (VP (VP (VBG building) (NP (NNS sandcastles))) (CC and) (VP (VBG swinging)))))', 'lemma': [(u'building', u'build', u'VBG'), (u'sandcastles', u'sandcastle', u'NNS'), (u'and', u'and', u'CC'), (u'swinging', u'swing', u'VBG')]}, 'tokens': ['building', 'sandcastles', 'and', 'swinging']}, {'string': ' jump rope', 'parse': {'tree': '(ROOT (S (VP (VB jump) (NP (NN rope)))))', 'lemma': [(u'jump', u'jump', u'VB'), (u'rope', u'rope', u'NN')]}, 'tokens': ['jump', 'rope']}], 'mode': 0}]}
{'sentences': [{'string': ' Princess Ellen wanted nothing more than to be a singer when she grew up.', 'parse': {'tree': '(ROOT (S (NP (NNP Princess) (NNP Ellen)) (VP (VBD wanted) (NP (NN nothing)) (ADVP (JJR more) (IN than) (S (VP (TO to) (VP (VB be) (NP (NP (DT a) (NN singer)) (SBAR (WHADVP (WRB when)) (S (NP (PRP she)) (VP (VBD grew) (PRT (RP up))))))))))) (. .)))', 'lemma': [(u'Princess', u'Princess', u'NNP'), (u'Ellen', u'Ellen', u'NNP'), (u'wanted', u'want', u'VBD'), (u'nothing', u'nothing', u'NN'), (u'more', u'more', u'JJR'), (u'than', u'than', u'IN'), (u'to', u'to', u'TO'), (u'be', u'be', u'VB'), (u'a', u'a', u'DT'), (u'singer', u'singer', u'NN'), (u'when', u'when', u'WRB'), (u'she', u'she', u'PRP'), (u'grew', u'grow', u'VBD'), (u'up', u'up', u'RP'), (u'.', u'.', u'.')]}, 'tokens': ['Princess', 'Ellen', 'wanted', 'nothing', 'more', 'than', 'to', 'be', 'a', 'singer', 'when', 'she', 'grew', 'up', '.']}, {'string': ' She had a beautiful voice and everyone who heard it said she was the best singer in the land.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBD had) (NP (NP (DT a) (JJ beautiful) (NN voice) (CC and) (NN everyone)) (SBAR (WHNP (WP who)) (S (VP (VBD heard) (SBAR (S (NP (PRP it)) (VP (VBD said) (SBAR (S (NP (PRP she)) (VP (VBD was) (NP (NP (DT the) (JJS best) (NN singer)) (PP (IN in) (NP (DT the) (NN land))))))))))))))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'had', u'have', u'VBD'), (u'a', u'a', u'DT'), (u'beautiful', u'beautiful', u'JJ'), (u'voice', u'voice', u'NN'), (u'and', u'and', u'CC'), (u'everyone', u'everyone', u'NN'), (u'who', u'who', u'WP'), (u'heard', u'hear', u'VBD'), (u'it', u'it', u'PRP'), (u'said', u'say', u'VBD'), (u'she', u'she', u'PRP'), (u'was', u'be', u'VBD'), (u'the', u'the', u'DT'), (u'best', u'best', u'JJS'), (u'singer', u'singer', u'NN'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'land', u'land', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'had', 'a', 'beautiful', 'voice', 'and', 'everyone', 'who', 'heard', 'it', 'said', 'she', 'was', 'the', 'best', 'singer', 'in', 'the', 'land', '.']}, {'string': " But her uncle believed singing would keep her from her job as princess, so he found a witch and paid her to steal Princess Ellen 's voice.", 'parse': {'tree': "(ROOT (S (CC But) (S (NP (PRP$ her) (NN uncle)) (VP (VBD believed) (SBAR (S (NP (NN singing)) (VP (MD would) (VP (VB keep) (NP (PRP her)) (PP (IN from) (NP (NP (PRP$ her) (NN job)) (PP (IN as) (NP (NNS princess))))))))))) (, ,) (IN so) (S (NP (PRP he)) (VP (VP (VBD found) (NP (DT a) (NN witch))) (CC and) (VP (VBD paid) (S (NP (PRP her)) (VP (TO to) (VP (VB steal) (NP (NP (NNP Princess) (NNP Ellen) (POS 's)) (NN voice)))))))) (. .)))", 'lemma': [(u'But', u'but', u'CC'), (u'her', u'she', u'PRP$'), (u'uncle', u'uncle', u'NN'), (u'believed', u'believe', u'VBD'), (u'singing', u'singing', u'NN'), (u'would', u'would', u'MD'), (u'keep', u'keep', u'VB'), (u'her', u'she', u'PRP'), (u'from', u'from', u'IN'), (u'her', u'she', u'PRP$'), (u'job', u'job', u'NN'), (u'as', u'as', u'IN'), (u'princess', u'princess', u'NNS'), (u',', u',', u','), (u'so', u'so', u'IN'), (u'he', u'he', u'PRP'), (u'found', u'find', u'VBD'), (u'a', u'a', u'DT'), (u'witch', u'witch', u'NN'), (u'and', u'and', u'CC'), (u'paid', u'pay', u'VBD'), (u'her', u'she', u'PRP'), (u'to', u'to', u'TO'), (u'steal', u'steal', u'VB'), (u'Princess', u'Princess', u'NNP'), (u'Ellen', u'Ellen', u'NNP'), (u"'s", u"'s", u'POS'), (u'voice', u'voice', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['But', 'her', 'uncle', 'believed', 'singing', 'would', 'keep', 'her', 'from', 'her', 'job', 'as', 'princess', ',', 'so', 'he', 'found', 'a', 'witch', 'and', 'paid', 'her', 'to', 'steal', 'Princess', 'Ellen', "'s", 'voice', '.']}, {'string': " The witch made a spell which gave Ellen the witch 's voice.", 'parse': {'tree': "(ROOT (S (NP (DT The) (NN witch)) (VP (VBD made) (NP (NP (DT a) (NN spell)) (SBAR (WHNP (WDT which)) (S (VP (VBD gave) (NP (NNP Ellen)) (NP (NP (DT the) (NN witch) (POS 's)) (NN voice))))))) (. .)))", 'lemma': [(u'The', u'the', u'DT'), (u'witch', u'witch', u'NN'), (u'made', u'make', u'VBD'), (u'a', u'a', u'DT'), (u'spell', u'spell', u'NN'), (u'which', u'which', u'WDT'), (u'gave', u'give', u'VBD'), (u'Ellen', u'Ellen', u'NNP'), (u'the', u'the', u'DT'), (u'witch', u'witch', u'NN'), (u"'s", u"'s", u'POS'), (u'voice', u'voice', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'witch', 'made', 'a', 'spell', 'which', 'gave', 'Ellen', 'the', 'witch', "'s", 'voice', '.']}, {'string': " The spell also gave Ellen 's voice to the witch.", 'parse': {'tree': "(ROOT (S (NP (DT The) (NN spell)) (ADVP (RB also)) (VP (VBD gave) (NP (NP (NNP Ellen) (POS 's)) (NN voice)) (PP (TO to) (NP (DT the) (NN witch)))) (. .)))", 'lemma': [(u'The', u'the', u'DT'), (u'spell', u'spell', u'NN'), (u'also', u'also', u'RB'), (u'gave', u'give', u'VBD'), (u'Ellen', u'Ellen', u'NNP'), (u"'s", u"'s", u'POS'), (u'voice', u'voice', u'NN'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'witch', u'witch', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'spell', 'also', 'gave', 'Ellen', "'s", 'voice', 'to', 'the', 'witch', '.']}, {'string': ' The witch went on to become famous as a singer, and Ellen grew up to be Queen.', 'parse': {'tree': '(ROOT (S (S (NP (DT The) (NN witch)) (VP (VBD went) (PRT (RP on)) (S (VP (TO to) (VP (VB become) (ADJP (JJ famous)) (PP (IN as) (NP (DT a) (NN singer)))))))) (, ,) (CC and) (S (NP (NNP Ellen)) (VP (VBD grew) (PRT (RP up)) (S (VP (TO to) (VP (VB be) (NP (NN Queen))))))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'witch', u'witch', u'NN'), (u'went', u'go', u'VBD'), (u'on', u'on', u'RP'), (u'to', u'to', u'TO'), (u'become', u'become', u'VB'), (u'famous', u'famous', u'JJ'), (u'as', u'as', u'IN'), (u'a', u'a', u'DT'), (u'singer', u'singer', u'NN'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'Ellen', u'Ellen', u'NNP'), (u'grew', u'grow', u'VBD'), (u'up', u'up', u'RP'), (u'to', u'to', u'TO'), (u'be', u'be', u'VB'), (u'Queen', u'queen', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'witch', 'went', 'on', 'to', 'become', 'famous', 'as', 'a', 'singer', ',', 'and', 'Ellen', 'grew', 'up', 'to', 'be', 'Queen', '.']}, {'string': ' One day Queen Ellen heard of a singer who was the best in the land.', 'parse': {'tree': '(ROOT (S (NP (CD One) (NN day)) (NP (NNP Queen) (NNP Ellen)) (VP (VBD heard) (PP (IN of) (NP (NP (DT a) (NN singer)) (SBAR (WHNP (WP who)) (S (VP (VBD was) (NP (NP (DT the) (JJS best)) (PP (IN in) (NP (DT the) (NN land)))))))))) (. .)))', 'lemma': [(u'One', u'one', u'CD'), (u'day', u'day', u'NN'), (u'Queen', u'Queen', u'NNP'), (u'Ellen', u'Ellen', u'NNP'), (u'heard', u'hear', u'VBD'), (u'of', u'of', u'IN'), (u'a', u'a', u'DT'), (u'singer', u'singer', u'NN'), (u'who', u'who', u'WP'), (u'was', u'be', u'VBD'), (u'the', u'the', u'DT'), (u'best', u'best', u'JJS'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'land', u'land', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['One', 'day', 'Queen', 'Ellen', 'heard', 'of', 'a', 'singer', 'who', 'was', 'the', 'best', 'in', 'the', 'land', '.']}, {'string': ' She went to hear this singer, and was surprised to hear her own voice coming from the woman on stage.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VP (VBD went) (S (VP (TO to) (VP (VB hear) (NP (DT this) (NN singer)))))) (, ,) (CC and) (VP (VBD was) (ADJP (JJ surprised) (S (VP (TO to) (VP (VB hear) (NP (NP (PRP$ her) (JJ own) (NN voice)) (VP (VBG coming) (PP (IN from) (NP (NP (DT the) (NN woman)) (PP (IN on) (NP (NN stage))))))))))))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'went', u'go', u'VBD'), (u'to', u'to', u'TO'), (u'hear', u'hear', u'VB'), (u'this', u'this', u'DT'), (u'singer', u'singer', u'NN'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'was', u'be', u'VBD'), (u'surprised', u'surprised', u'JJ'), (u'to', u'to', u'TO'), (u'hear', u'hear', u'VB'), (u'her', u'she', u'PRP$'), (u'own', u'own', u'JJ'), (u'voice', u'voice', u'NN'), (u'coming', u'come', u'VBG'), (u'from', u'from', u'IN'), (u'the', u'the', u'DT'), (u'woman', u'woman', u'NN'), (u'on', u'on', u'IN'), (u'stage', u'stage', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'went', 'to', 'hear', 'this', 'singer', ',', 'and', 'was', 'surprised', 'to', 'hear', 'her', 'own', 'voice', 'coming', 'from', 'the', 'woman', 'on', 'stage', '.']}, {'string': ' When the show was over, Ellen found the singer and gave her a penny.', 'parse': {'tree': '(ROOT (S (SBAR (WHADVP (WRB When)) (S (NP (DT the) (NN show)) (VP (VBD was) (ADJP (RP over))))) (, ,) (NP (NNP Ellen)) (VP (VP (VBD found) (NP (DT the) (NN singer))) (CC and) (VP (VBD gave) (NP (PRP her)) (NP (DT a) (NN penny)))) (. .)))', 'lemma': [(u'When', u'when', u'WRB'), (u'the', u'the', u'DT'), (u'show', u'show', u'NN'), (u'was', u'be', u'VBD'), (u'over', u'over', u'RP'), (u',', u',', u','), (u'Ellen', u'Ellen', u'NNP'), (u'found', u'find', u'VBD'), (u'the', u'the', u'DT'), (u'singer', u'singer', u'NN'), (u'and', u'and', u'CC'), (u'gave', u'give', u'VBD'), (u'her', u'she', u'PRP'), (u'a', u'a', u'DT'), (u'penny', u'penny', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['When', 'the', 'show', 'was', 'over', ',', 'Ellen', 'found', 'the', 'singer', 'and', 'gave', 'her', 'a', 'penny', '.']}, {'string': " Ellen told the singer, `` You have a magical voice ''.", 'parse': {'tree': "(ROOT (S (NP (NNP Ellen)) (VP (VBD told) (NP (DT the) (NN singer)) (, ,) (S (`` ``) (NP (PRP You)) (VP (VBP have) (NP (DT a) (JJ magical) (NN voice))) ('' ''))) (. .)))", 'lemma': [(u'Ellen', u'Ellen', u'NNP'), (u'told', u'tell', u'VBD'), (u'the', u'the', u'DT'), (u'singer', u'singer', u'NN'), (u',', u',', u','), (u'``', u'``', u'``'), (u'You', u'you', u'PRP'), (u'have', u'have', u'VBP'), (u'a', u'a', u'DT'), (u'magical', u'magical', u'JJ'), (u'voice', u'voice', u'NN'), (u"''", u"''", u"''"), (u'.', u'.', u'.')]}, 'tokens': ['Ellen', 'told', 'the', 'singer', ',', '``', 'You', 'have', 'a', 'magical', 'voice', "''", '.']}, {'string': " The witch was so touched by Ellen 's kindness, that she gave Ellen her voice back.", 'parse': {'tree': "(ROOT (S (NP (DT The) (NN witch)) (VP (VBD was) (VP (ADVP (RB so)) (VBN touched) (PP (IN by) (NP (NP (NNP Ellen) (POS 's)) (NN kindness))) (, ,) (SBAR (IN that) (S (NP (PRP she)) (VP (VBD gave) (NP (NNP Ellen)) (NP (PRP$ her) (NN voice)) (ADVP (RB back))))))) (. .)))", 'lemma': [(u'The', u'the', u'DT'), (u'witch', u'witch', u'NN'), (u'was', u'be', u'VBD'), (u'so', u'so', u'RB'), (u'touched', u'touch', u'VBN'), (u'by', u'by', u'IN'), (u'Ellen', u'Ellen', u'NNP'), (u"'s", u"'s", u'POS'), (u'kindness', u'kindness', u'NN'), (u',', u',', u','), (u'that', u'that', u'IN'), (u'she', u'she', u'PRP'), (u'gave', u'give', u'VBD'), (u'Ellen', u'Ellen', u'NNP'), (u'her', u'she', u'PRP$'), (u'voice', u'voice', u'NN'), (u'back', u'back', u'RB'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'witch', 'was', 'so', 'touched', 'by', 'Ellen', "'s", 'kindness', ',', 'that', 'she', 'gave', 'Ellen', 'her', 'voice', 'back', '.']}], 'questions': [{'question': {'string': ' Why did the witch give Ellen her voice back?', 'parse': {'tree': '(ROOT (SBARQ (WHADVP (WRB Why)) (SQ (VBD did) (NP (DT the) (NN witch)) (VP (VB give) (NP (NNP Ellen)) (NP (PRP$ her) (NN voice) (NN back)))) (. ?)))', 'lemma': [(u'Why', u'why', u'WRB'), (u'did', u'do', u'VBD'), (u'the', u'the', u'DT'), (u'witch', u'witch', u'NN'), (u'give', u'give', u'VB'), (u'Ellen', u'Ellen', u'NNP'), (u'her', u'she', u'PRP$'), (u'voice', u'voice', u'NN'), (u'back', u'back', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['Why', 'did', 'the', 'witch', 'give', 'Ellen', 'her', 'voice', 'back', '?']}, 'answers': [{'string': " Ellen 's uncle paid the witch to take back the spell.", 'parse': {'tree': "(ROOT (S (NP (NP (NNP Ellen) (POS 's)) (NN uncle)) (VP (VBD paid) (NP (DT the) (NN witch) (S (VP (TO to) (VP (VB take) (PRT (RP back)) (NP (DT the) (NN spell))))))) (. .)))", 'lemma': [(u'Ellen', u'Ellen', u'NNP'), (u"'s", u"'s", u'POS'), (u'uncle', u'uncle', u'NN'), (u'paid', u'pay', u'VBD'), (u'the', u'the', u'DT'), (u'witch', u'witch', u'NN'), (u'to', u'to', u'TO'), (u'take', u'take', u'VB'), (u'back', u'back', u'RP'), (u'the', u'the', u'DT'), (u'spell', u'spell', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Ellen', "'s", 'uncle', 'paid', 'the', 'witch', 'to', 'take', 'back', 'the', 'spell', '.']}, {'string': ' Ellen ordered the witch to give her voice back.', 'parse': {'tree': '(ROOT (S (NP (NNP Ellen)) (VP (VBD ordered) (NP (DT the) (NN witch) (S (VP (TO to) (VP (VB give) (NP (PRP$ her) (NN voice)) (ADVP (RB back))))))) (. .)))', 'lemma': [(u'Ellen', u'Ellen', u'NNP'), (u'ordered', u'order', u'VBD'), (u'the', u'the', u'DT'), (u'witch', u'witch', u'NN'), (u'to', u'to', u'TO'), (u'give', u'give', u'VB'), (u'her', u'she', u'PRP$'), (u'voice', u'voice', u'NN'), (u'back', u'back', u'RB'), (u'.', u'.', u'.')]}, 'tokens': ['Ellen', 'ordered', 'the', 'witch', 'to', 'give', 'her', 'voice', 'back', '.']}, {'string': ' Ellen gave the witch a penny and told the witch her voice was magical.', 'parse': {'tree': '(ROOT (S (NP (NNP Ellen)) (VP (VP (VBD gave) (NP (DT the) (NN witch)) (NP (DT a) (NN penny))) (CC and) (VP (VBD told) (NP (DT the) (NN witch)) (SBAR (S (NP (PRP$ her) (NN voice)) (VP (VBD was) (ADJP (JJ magical))))))) (. .)))', 'lemma': [(u'Ellen', u'Ellen', u'NNP'), (u'gave', u'give', u'VBD'), (u'the', u'the', u'DT'), (u'witch', u'witch', u'NN'), (u'a', u'a', u'DT'), (u'penny', u'penny', u'NN'), (u'and', u'and', u'CC'), (u'told', u'tell', u'VBD'), (u'the', u'the', u'DT'), (u'witch', u'witch', u'NN'), (u'her', u'she', u'PRP$'), (u'voice', u'voice', u'NN'), (u'was', u'be', u'VBD'), (u'magical', u'magical', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['Ellen', 'gave', 'the', 'witch', 'a', 'penny', 'and', 'told', 'the', 'witch', 'her', 'voice', 'was', 'magical', '.']}, {'string': ' The witch grew tired of singing.', 'parse': {'tree': '(ROOT (S (NP (DT The) (NN witch)) (VP (VBD grew) (ADJP (JJ tired)) (PP (IN of) (NP (NN singing)))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'witch', u'witch', u'NN'), (u'grew', u'grow', u'VBD'), (u'tired', u'tired', u'JJ'), (u'of', u'of', u'IN'), (u'singing', u'singing', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'witch', 'grew', 'tired', 'of', 'singing', '.']}], 'mode': 0}, {'question': {'string': " Who paid the witch to steal Princess Ellen 's voice?", 'parse': {'tree': "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VP (VBD paid) (NP (DT the) (NN witch)) (S (VP (TO to) (VP (VB steal) (NP (NP (NNP Princess) (NNP Ellen) (POS 's)) (NN voice))))))) (. ?)))", 'lemma': [(u'Who', u'who', u'WP'), (u'paid', u'pay', u'VBD'), (u'the', u'the', u'DT'), (u'witch', u'witch', u'NN'), (u'to', u'to', u'TO'), (u'steal', u'steal', u'VB'), (u'Princess', u'Princess', u'NNP'), (u'Ellen', u'Ellen', u'NNP'), (u"'s", u"'s", u'POS'), (u'voice', u'voice', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['Who', 'paid', 'the', 'witch', 'to', 'steal', 'Princess', 'Ellen', "'s", 'voice', '?']}, 'answers': [{'string': " Ellen 's mother", 'parse': {'tree': "(ROOT (NP (NP (NNP Ellen) (POS 's)) (NN mother)))", 'lemma': [(u'Ellen', u'Ellen', u'NNP'), (u"'s", u"'s", u'POS'), (u'mother', u'mother', u'NN')]}, 'tokens': ['Ellen', "'s", 'mother']}, {'string': " Ellen 's sister", 'parse': {'tree': "(ROOT (NP (NP (NNP Ellen) (POS 's)) (NN sister)))", 'lemma': [(u'Ellen', u'Ellen', u'NNP'), (u"'s", u"'s", u'POS'), (u'sister', u'sister', u'NN')]}, 'tokens': ['Ellen', "'s", 'sister']}, {'string': " Ellen 's Uncle", 'parse': {'tree': "(ROOT (NP (NP (NNP Ellen) (POS 's)) (NNP Uncle)))", 'lemma': [(u'Ellen', u'Ellen', u'NNP'), (u"'s", u"'s", u'POS'), (u'Uncle', u'Uncle', u'NNP')]}, 'tokens': ['Ellen', "'s", 'Uncle']}, {'string': ' The Queen.', 'parse': {'tree': '(ROOT (NP (DT The) (NN Queen) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'Queen', u'queen', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'Queen', '.']}], 'mode': 1}, {'question': {'string': ' What did the spell do?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD did) (NP (DT the) (NN spell)) (VP (VB do))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'did', u'do', u'VBD'), (u'the', u'the', u'DT'), (u'spell', u'spell', u'NN'), (u'do', u'do', u'VB'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'did', 'the', 'spell', 'do', '?']}, 'answers': [{'string': " Trade Ellen 's voice for the witch 's.", 'parse': {'tree': "(ROOT (S (NP (NP (NP (NNP Trade) (NNP Ellen) (POS 's)) (NN voice)) (PP (IN for) (NP (DT the) (NN witch)))) (VP (VBZ 's)) (. .)))", 'lemma': [(u'Trade', u'Trade', u'NNP'), (u'Ellen', u'Ellen', u'NNP'), (u"'s", u"'s", u'POS'), (u'voice', u'voice', u'NN'), (u'for', u'for', u'IN'), (u'the', u'the', u'DT'), (u'witch', u'witch', u'NN'), (u"'s", u'be', u'VBZ'), (u'.', u'.', u'.')]}, 'tokens': ['Trade', 'Ellen', "'s", 'voice', 'for', 'the', 'witch', "'s", '.']}, {'string': " Give Ellen a frog 's voice", 'parse': {'tree': "(ROOT (VP (VB Give) (NP (NNP Ellen)) (NP (NP (DT a) (NN frog) (POS 's)) (NN voice))))", 'lemma': [(u'Give', u'give', u'VB'), (u'Ellen', u'Ellen', u'NNP'), (u'a', u'a', u'DT'), (u'frog', u'frog', u'NN'), (u"'s", u"'s", u'POS'), (u'voice', u'voice', u'NN')]}, 'tokens': ['Give', 'Ellen', 'a', 'frog', "'s", 'voice']}, {'string': ' Make Ellen a queen', 'parse': {'tree': '(ROOT (SINV (VP (VBP Make) (NP (NNP Ellen))) (NP (DT a) (NN queen))))', 'lemma': [(u'Make', u'make', u'VBP'), (u'Ellen', u'Ellen', u'NNP'), (u'a', u'a', u'DT'), (u'queen', u'queen', u'NN')]}, 'tokens': ['Make', 'Ellen', 'a', 'queen']}, {'string': " Make Ellen 's voice silent", 'parse': {'tree': "(ROOT (S (VP (VB Make) (S (NP (NP (NNP Ellen) (POS 's)) (NN voice)) (ADJP (JJ silent))))))", 'lemma': [(u'Make', u'make', u'VB'), (u'Ellen', u'Ellen', u'NNP'), (u"'s", u"'s", u'POS'), (u'voice', u'voice', u'NN'), (u'silent', u'silent', u'JJ')]}, 'tokens': ['Make', 'Ellen', "'s", 'voice', 'silent']}], 'mode': 0}, {'question': {'string': ' What did Ellen want to be when she grew up?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD did) (NP (NNP Ellen)) (VP (VB want) (S (VP (TO to) (VP (VB be) (SBAR (WHADVP (WRB when)) (S (NP (PRP she)) (VP (VBD grew) (PRT (RP up)))))))))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'did', u'do', u'VBD'), (u'Ellen', u'Ellen', u'NNP'), (u'want', u'want', u'VB'), (u'to', u'to', u'TO'), (u'be', u'be', u'VB'), (u'when', u'when', u'WRB'), (u'she', u'she', u'PRP'), (u'grew', u'grow', u'VBD'), (u'up', u'up', u'RP'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'did', 'Ellen', 'want', 'to', 'be', 'when', 'she', 'grew', 'up', '?']}, 'answers': [{'string': ' A queen', 'parse': {'tree': '(ROOT (FRAG (NP (DT A) (NN queen))))', 'lemma': [(u'A', u'a', u'DT'), (u'queen', u'queen', u'NN')]}, 'tokens': ['A', 'queen']}, {'string': ' A singer', 'parse': {'tree': '(ROOT (FRAG (NP (DT A) (NN singer))))', 'lemma': [(u'A', u'a', u'DT'), (u'singer', u'singer', u'NN')]}, 'tokens': ['A', 'singer']}, {'string': ' An uncle', 'parse': {'tree': '(ROOT (FRAG (NP (DT An) (NN uncle))))', 'lemma': [(u'An', u'a', u'DT'), (u'uncle', u'uncle', u'NN')]}, 'tokens': ['An', 'uncle']}, {'string': ' A witch', 'parse': {'tree': '(ROOT (FRAG (NP (DT A) (NN witch))))', 'lemma': [(u'A', u'a', u'DT'), (u'witch', u'witch', u'NN')]}, 'tokens': ['A', 'witch']}], 'mode': 1}]}
{'sentences': [{'string': ' One day, a pink moon was looking down at an empty sand land.', 'parse': {'tree': '(ROOT (S (NP (CD One) (NN day)) (, ,) (NP (DT a) (JJ pink) (NN moon)) (VP (VBD was) (VP (VBG looking) (PRT (RP down)) (PP (IN at) (NP (DT an) (JJ empty) (NN sand) (NN land))))) (. .)))', 'lemma': [(u'One', u'one', u'CD'), (u'day', u'day', u'NN'), (u',', u',', u','), (u'a', u'a', u'DT'), (u'pink', u'pink', u'JJ'), (u'moon', u'moon', u'NN'), (u'was', u'be', u'VBD'), (u'looking', u'look', u'VBG'), (u'down', u'down', u'RP'), (u'at', u'at', u'IN'), (u'an', u'a', u'DT'), (u'empty', u'empty', u'JJ'), (u'sand', u'sand', u'NN'), (u'land', u'land', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['One', 'day', ',', 'a', 'pink', 'moon', 'was', 'looking', 'down', 'at', 'an', 'empty', 'sand', 'land', '.']}, {'string': ' Although the pink moon could see all the lizards and cacti in the empty sand land, nobody could see the moon!', 'parse': {'tree': '(ROOT (S (SBAR (IN Although) (S (NP (DT the) (JJ pink) (NN moon)) (VP (MD could) (VP (VB see) (NP (PDT all) (DT the) (NNS lizards) (CC and) (NNS cacti)) (PP (IN in) (NP (DT the) (JJ empty) (NN sand) (NN land))))))) (, ,) (NP (NN nobody)) (VP (MD could) (VP (VB see) (NP (DT the) (NN moon)))) (. !)))', 'lemma': [(u'Although', u'although', u'IN'), (u'the', u'the', u'DT'), (u'pink', u'pink', u'JJ'), (u'moon', u'moon', u'NN'), (u'could', u'could', u'MD'), (u'see', u'see', u'VB'), (u'all', u'all', u'PDT'), (u'the', u'the', u'DT'), (u'lizards', u'lizard', u'NNS'), (u'and', u'and', u'CC'), (u'cacti', u'cactus', u'NNS'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'empty', u'empty', u'JJ'), (u'sand', u'sand', u'NN'), (u'land', u'land', u'NN'), (u',', u',', u','), (u'nobody', u'nobody', u'NN'), (u'could', u'could', u'MD'), (u'see', u'see', u'VB'), (u'the', u'the', u'DT'), (u'moon', u'moon', u'NN'), (u'!', u'!', u'.')]}, 'tokens': ['Although', 'the', 'pink', 'moon', 'could', 'see', 'all', 'the', 'lizards', 'and', 'cacti', 'in', 'the', 'empty', 'sand', 'land', ',', 'nobody', 'could', 'see', 'the', 'moon', '!']}, {'string': ' The pink moon felt so lonely.', 'parse': {'tree': '(ROOT (S (NP (DT The) (JJ pink) (NN moon)) (VP (VBD felt) (ADJP (RB so) (JJ lonely))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'pink', u'pink', u'JJ'), (u'moon', u'moon', u'NN'), (u'felt', u'feel', u'VBD'), (u'so', u'so', u'RB'), (u'lonely', u'lonely', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'pink', 'moon', 'felt', 'so', 'lonely', '.']}, {'string': ' So, the pink moon called on the sun for help.', 'parse': {'tree': '(ROOT (S (ADVP (RB So)) (, ,) (NP (DT the) (JJ pink) (NN moon)) (VP (VBD called) (PP (IN on) (NP (DT the) (NN sun))) (PP (IN for) (NP (NN help)))) (. .)))', 'lemma': [(u'So', u'so', u'RB'), (u',', u',', u','), (u'the', u'the', u'DT'), (u'pink', u'pink', u'JJ'), (u'moon', u'moon', u'NN'), (u'called', u'call', u'VBD'), (u'on', u'on', u'IN'), (u'the', u'the', u'DT'), (u'sun', u'sun', u'NN'), (u'for', u'for', u'IN'), (u'help', u'help', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['So', ',', 'the', 'pink', 'moon', 'called', 'on', 'the', 'sun', 'for', 'help', '.']}, {'string': ' The great sun was very busy high in the sky, for it was his job to shine over the sand land, and it was hard to get his attention.', 'parse': {'tree': '(ROOT (S (S (NP (DT The) (JJ great) (NN sun)) (VP (VBD was) (ADJP (RB very) (JJ busy)) (PP (ADVP (JJ high)) (IN in) (NP (DT the) (NN sky))) (, ,) (SBAR (IN for) (S (NP (PRP it)) (VP (VBD was) (NP (PRP$ his) (NN job) (S (VP (TO to) (VP (VB shine) (PP (IN over) (NP (DT the) (NN sand) (NN land)))))))))))) (, ,) (CC and) (S (NP (PRP it)) (VP (VBD was) (ADJP (JJ hard) (S (VP (TO to) (VP (VB get) (NP (PRP$ his) (NN attention)))))))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'great', u'great', u'JJ'), (u'sun', u'sun', u'NN'), (u'was', u'be', u'VBD'), (u'very', u'very', u'RB'), (u'busy', u'busy', u'JJ'), (u'high', u'high', u'JJ'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'sky', u'sky', u'NN'), (u',', u',', u','), (u'for', u'for', u'IN'), (u'it', u'it', u'PRP'), (u'was', u'be', u'VBD'), (u'his', u'he', u'PRP$'), (u'job', u'job', u'NN'), (u'to', u'to', u'TO'), (u'shine', u'shine', u'VB'), (u'over', u'over', u'IN'), (u'the', u'the', u'DT'), (u'sand', u'sand', u'NN'), (u'land', u'land', u'NN'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'it', u'it', u'PRP'), (u'was', u'be', u'VBD'), (u'hard', u'hard', u'JJ'), (u'to', u'to', u'TO'), (u'get', u'get', u'VB'), (u'his', u'he', u'PRP$'), (u'attention', u'attention', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'great', 'sun', 'was', 'very', 'busy', 'high', 'in', 'the', 'sky', ',', 'for', 'it', 'was', 'his', 'job', 'to', 'shine', 'over', 'the', 'sand', 'land', ',', 'and', 'it', 'was', 'hard', 'to', 'get', 'his', 'attention', '.']}, {'string': ' So the moon wiggled closer and closer to the sun every second.', 'parse': {'tree': '(ROOT (S (IN So) (NP (DT the) (NN moon)) (VP (VBD wiggled) (ADVP (RBR closer) (CC and) (RBR closer)) (PP (TO to) (NP (DT the) (NN sun))) (NP (DT every) (NN second))) (. .)))', 'lemma': [(u'So', u'so', u'IN'), (u'the', u'the', u'DT'), (u'moon', u'moon', u'NN'), (u'wiggled', u'wiggle', u'VBD'), (u'closer', u'closer', u'RBR'), (u'and', u'and', u'CC'), (u'closer', u'closer', u'RBR'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'sun', u'sun', u'NN'), (u'every', u'every', u'DT'), (u'second', u'second', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['So', 'the', 'moon', 'wiggled', 'closer', 'and', 'closer', 'to', 'the', 'sun', 'every', 'second', '.']}, {'string': ' The second turned to hours as the pink moon inched toward his friend, slowly moving across the sky.', 'parse': {'tree': '(ROOT (S (NP (DT The) (NN second)) (VP (VBD turned) (PP (TO to) (NP (NNS hours))) (SBAR (IN as) (S (NP (DT the) (JJ pink) (NN moon)) (VP (VBD inched) (PP (IN toward) (NP (PRP$ his) (NN friend))) (, ,) (S (VP (ADVP (RB slowly)) (VBG moving) (PP (IN across) (NP (DT the) (NN sky))))))))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'second', u'second', u'NN'), (u'turned', u'turn', u'VBD'), (u'to', u'to', u'TO'), (u'hours', u'hour', u'NNS'), (u'as', u'as', u'IN'), (u'the', u'the', u'DT'), (u'pink', u'pink', u'JJ'), (u'moon', u'moon', u'NN'), (u'inched', u'inch', u'VBD'), (u'toward', u'toward', u'IN'), (u'his', u'he', u'PRP$'), (u'friend', u'friend', u'NN'), (u',', u',', u','), (u'slowly', u'slowly', u'RB'), (u'moving', u'move', u'VBG'), (u'across', u'across', u'IN'), (u'the', u'the', u'DT'), (u'sky', u'sky', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'second', 'turned', 'to', 'hours', 'as', 'the', 'pink', 'moon', 'inched', 'toward', 'his', 'friend', ',', 'slowly', 'moving', 'across', 'the', 'sky', '.']}, {'string': ' Finally, the sun saw the moon and asked, `` Pink moon!', 'parse': {'tree': '(ROOT (S (ADVP (RB Finally)) (, ,) (NP (DT the) (NN sun)) (VP (VP (VBD saw) (NP (DT the) (NN moon))) (CC and) (VP (VBD asked) (, ,) (`` ``) (SQ (VBP Pink) (NP (NN moon))))) (. !)))', 'lemma': [(u'Finally', u'finally', u'RB'), (u',', u',', u','), (u'the', u'the', u'DT'), (u'sun', u'sun', u'NN'), (u'saw', u'see', u'VBD'), (u'the', u'the', u'DT'), (u'moon', u'moon', u'NN'), (u'and', u'and', u'CC'), (u'asked', u'ask', u'VBD'), (u',', u',', u','), (u'``', u'``', u'``'), (u'Pink', u'pink', u'VBP'), (u'moon', u'moon', u'NN'), (u'!', u'!', u'.')]}, 'tokens': ['Finally', ',', 'the', 'sun', 'saw', 'the', 'moon', 'and', 'asked', ',', '``', 'Pink', 'moon', '!']}, {'string': ' What are you doing here?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBP are) (NP (PRP you)) (VP (VBG doing) (ADVP (RB here)))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'are', u'be', u'VBP'), (u'you', u'you', u'PRP'), (u'doing', u'do', u'VBG'), (u'here', u'here', u'RB'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'are', 'you', 'doing', 'here', '?']}, {'string': " Do n't you know the sky is my home during the day?", 'parse': {'tree': "(ROOT (SQ (MD Do) (RB n't) (NP (PRP you)) (VP (VB know) (SBAR (S (NP (DT the) (NN sky)) (VP (VBZ is) (NP (NP (PRP$ my) (NN home)) (PP (IN during) (NP (DT the) (NN day)))))))) (. ?)))", 'lemma': [(u'Do', u'do', u'MD'), (u"n't", u'not', u'RB'), (u'you', u'you', u'PRP'), (u'know', u'know', u'VB'), (u'the', u'the', u'DT'), (u'sky', u'sky', u'NN'), (u'is', u'be', u'VBZ'), (u'my', u'my', u'PRP$'), (u'home', u'home', u'NN'), (u'during', u'during', u'IN'), (u'the', u'the', u'DT'), (u'day', u'day', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['Do', "n't", 'you', 'know', 'the', 'sky', 'is', 'my', 'home', 'during', 'the', 'day', '?']}, {'string': ' Your time is coming soon enough.', 'parse': {'tree': '(ROOT (S (NP (PRP$ Your) (NN time)) (VP (VBZ is) (VP (VBG coming) (ADVP (RB soon) (RB enough)))) (. .)))', 'lemma': [(u'Your', u'you', u'PRP$'), (u'time', u'time', u'NN'), (u'is', u'be', u'VBZ'), (u'coming', u'come', u'VBG'), (u'soon', u'soon', u'RB'), (u'enough', u'enough', u'RB'), (u'.', u'.', u'.')]}, 'tokens': ['Your', 'time', 'is', 'coming', 'soon', 'enough', '.']}, {'string': " Look, I 'm falling now toward my bed on the end of the earth ... '' But the pink moon could not be stopped and kept moving toward the great sun.", 'parse': {'tree': "(ROOT (S (ADVP (RB Look)) (, ,) (S (NP (PRP I)) (VP (VBP 'm) (VP (VBG falling) (ADVP (RB now)) (PP (IN toward) (NP (NP (PRP$ my) (NN bed)) (PP (IN on) (NP (NP (DT the) (NN end)) (PP (IN of) (NP (DT the) (NN earth)))))))))) (: ...) ('' '') (S (CC But) (NP (DT the) (JJ pink) (NN moon)) (VP (MD could) (RB not) (VP (VB be) (VP (VBN stopped) (CC and) (VBN kept) (S (VP (VBG moving) (PP (IN toward) (NP (DT the) (JJ great) (NN sun))))))))) (. .)))", 'lemma': [(u'Look', u'look', u'RB'), (u',', u',', u','), (u'I', u'I', u'PRP'), (u"'m", u'be', u'VBP'), (u'falling', u'fall', u'VBG'), (u'now', u'now', u'RB'), (u'toward', u'toward', u'IN'), (u'my', u'my', u'PRP$'), (u'bed', u'bed', u'NN'), (u'on', u'on', u'IN'), (u'the', u'the', u'DT'), (u'end', u'end', u'NN'), (u'of', u'of', u'IN'), (u'the', u'the', u'DT'), (u'earth', u'earth', u'NN'), (u'...', u'...', u':'), (u"''", u"''", u"''"), (u'But', u'but', u'CC'), (u'the', u'the', u'DT'), (u'pink', u'pink', u'JJ'), (u'moon', u'moon', u'NN'), (u'could', u'could', u'MD'), (u'not', u'not', u'RB'), (u'be', u'be', u'VB'), (u'stopped', u'stop', u'VBN'), (u'and', u'and', u'CC'), (u'kept', u'keep', u'VBN'), (u'moving', u'move', u'VBG'), (u'toward', u'toward', u'IN'), (u'the', u'the', u'DT'), (u'great', u'great', u'JJ'), (u'sun', u'sun', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Look', ',', 'I', "'m", 'falling', 'now', 'toward', 'my', 'bed', 'on', 'the', 'end', 'of', 'the', 'earth', '...', "''", 'But', 'the', 'pink', 'moon', 'could', 'not', 'be', 'stopped', 'and', 'kept', 'moving', 'toward', 'the', 'great', 'sun', '.']}, {'string': " `` But great sun, I become so lonely during the day when your light is so bright the animals in the sand land ca n't see me.", 'parse': {'tree': "(ROOT (S (`` ``) (CC But) (NP (NP (JJ great) (NN sun)) (PRN (, ,) (S (NP (PRP I)) (VP (VBP become) (ADJP (RB so) (JJ lonely) (PP (IN during) (NP (NP (DT the) (NN day)) (SBAR (WHADVP (WRB when)) (S (NP (PRP$ your) (NN light)) (VP (VBZ is) (ADJP (RB so) (JJ bright)) (NP (NP (DT the) (NNS animals)) (PP (IN in) (NP (DT the) (NN sand) (NN land)))))))))))))) (VP (MD ca) (RB n't) (VP (VB see) (NP (PRP me)))) (. .)))", 'lemma': [(u'``', u'``', u'``'), (u'But', u'but', u'CC'), (u'great', u'great', u'JJ'), (u'sun', u'sun', u'NN'), (u',', u',', u','), (u'I', u'I', u'PRP'), (u'become', u'become', u'VBP'), (u'so', u'so', u'RB'), (u'lonely', u'lonely', u'JJ'), (u'during', u'during', u'IN'), (u'the', u'the', u'DT'), (u'day', u'day', u'NN'), (u'when', u'when', u'WRB'), (u'your', u'you', u'PRP$'), (u'light', u'light', u'NN'), (u'is', u'be', u'VBZ'), (u'so', u'so', u'RB'), (u'bright', u'bright', u'JJ'), (u'the', u'the', u'DT'), (u'animals', u'animal', u'NNS'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'sand', u'sand', u'NN'), (u'land', u'land', u'NN'), (u'ca', u'can', u'MD'), (u"n't", u'not', u'RB'), (u'see', u'see', u'VB'), (u'me', u'I', u'PRP'), (u'.', u'.', u'.')]}, 'tokens': ['``', 'But', 'great', 'sun', ',', 'I', 'become', 'so', 'lonely', 'during', 'the', 'day', 'when', 'your', 'light', 'is', 'so', 'bright', 'the', 'animals', 'in', 'the', 'sand', 'land', 'ca', "n't", 'see', 'me', '.']}, {'string': " Please let me join your light during the day this once! ''", 'parse': {'tree': "(ROOT (S (S (INTJ (VB Please)) (VP (VB let))) (S (NP (PRP me)) (VP (VBP join) (NP (PRP$ your) (NN light)) (PP (IN during) (NP (DT the) (NN day))) (ADVP (DT this) (RB once)))) (. !) ('' '')))", 'lemma': [(u'Please', u'please', u'VB'), (u'let', u'let', u'VB'), (u'me', u'I', u'PRP'), (u'join', u'join', u'VBP'), (u'your', u'you', u'PRP$'), (u'light', u'light', u'NN'), (u'during', u'during', u'IN'), (u'the', u'the', u'DT'), (u'day', u'day', u'NN'), (u'this', u'this', u'DT'), (u'once', u'once', u'RB'), (u'!', u'!', u'.'), (u"''", u"''", u"''")]}, 'tokens': ['Please', 'let', 'me', 'join', 'your', 'light', 'during', 'the', 'day', 'this', 'once', '!', "''"]}, {'string': ' By this time, the great sun and pink moon were only inches apart.', 'parse': {'tree': '(ROOT (S (PP (IN By) (NP (DT this) (NN time))) (, ,) (NP (NP (DT the) (JJ great) (NN sun)) (CC and) (NP (JJ pink) (NN moon))) (VP (VBD were) (NP (JJ only) (NNS inches)) (ADVP (RB apart))) (. .)))', 'lemma': [(u'By', u'by', u'IN'), (u'this', u'this', u'DT'), (u'time', u'time', u'NN'), (u',', u',', u','), (u'the', u'the', u'DT'), (u'great', u'great', u'JJ'), (u'sun', u'sun', u'NN'), (u'and', u'and', u'CC'), (u'pink', u'pink', u'JJ'), (u'moon', u'moon', u'NN'), (u'were', u'be', u'VBD'), (u'only', u'only', u'JJ'), (u'inches', u'inch', u'NNS'), (u'apart', u'apart', u'RB'), (u'.', u'.', u'.')]}, 'tokens': ['By', 'this', 'time', ',', 'the', 'great', 'sun', 'and', 'pink', 'moon', 'were', 'only', 'inches', 'apart', '.']}, {'string': ' The great sun said, `` Though by day you disappear, I always remember you are here.', 'parse': {'tree': '(ROOT (S (NP (DT The) (JJ great) (NN sun)) (VP (VBD said) (, ,) (`` ``) (S (SBAR (IN Though) (S (PP (IN by) (NP (NN day))) (NP (PRP you)) (VP (VBP disappear)))) (, ,) (NP (PRP I)) (ADVP (RB always)) (VP (VBP remember) (SBAR (S (NP (PRP you)) (VP (VBP are) (ADVP (RB here)))))))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'great', u'great', u'JJ'), (u'sun', u'sun', u'NN'), (u'said', u'say', u'VBD'), (u',', u',', u','), (u'``', u'``', u'``'), (u'Though', u'though', u'IN'), (u'by', u'by', u'IN'), (u'day', u'day', u'NN'), (u'you', u'you', u'PRP'), (u'disappear', u'disappear', u'VBP'), (u',', u',', u','), (u'I', u'I', u'PRP'), (u'always', u'always', u'RB'), (u'remember', u'remember', u'VBP'), (u'you', u'you', u'PRP'), (u'are', u'be', u'VBP'), (u'here', u'here', u'RB'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'great', 'sun', 'said', ',', '``', 'Though', 'by', 'day', 'you', 'disappear', ',', 'I', 'always', 'remember', 'you', 'are', 'here', '.']}, {'string': ' Come to me now.', 'parse': {'tree': '(ROOT (S (VP (VB Come) (PP (TO to) (NP (PRP me))) (ADVP (RB now))) (. .)))', 'lemma': [(u'Come', u'come', u'VB'), (u'to', u'to', u'TO'), (u'me', u'I', u'PRP'), (u'now', u'now', u'RB'), (u'.', u'.', u'.')]}, 'tokens': ['Come', 'to', 'me', 'now', '.']}, {'string': " Stand in front of me, and show the sand land your shine! ''", 'parse': {'tree': "(ROOT (S (VP (VP (VB Stand) (PP (IN in) (NP (NP (NN front)) (PP (IN of) (NP (PRP me)))))) (, ,) (CC and) (VP (VB show) (NP (DT the) (NN sand) (NN land)) (NP (PRP$ your) (NN shine)))) (. !) ('' '')))", 'lemma': [(u'Stand', u'stand', u'VB'), (u'in', u'in', u'IN'), (u'front', u'front', u'NN'), (u'of', u'of', u'IN'), (u'me', u'I', u'PRP'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'show', u'show', u'VB'), (u'the', u'the', u'DT'), (u'sand', u'sand', u'NN'), (u'land', u'land', u'NN'), (u'your', u'you', u'PRP$'), (u'shine', u'shine', u'NN'), (u'!', u'!', u'.'), (u"''", u"''", u"''")]}, 'tokens': ['Stand', 'in', 'front', 'of', 'me', ',', 'and', 'show', 'the', 'sand', 'land', 'your', 'shine', '!', "''"]}, {'string': ' So the pink moon inched in front of the great sun.', 'parse': {'tree': '(ROOT (S (IN So) (NP (DT the) (JJ pink) (NN moon)) (VP (VBD inched) (PP (IN in) (NP (NP (NN front)) (PP (IN of) (NP (DT the) (JJ great) (NN sun)))))) (. .)))', 'lemma': [(u'So', u'so', u'IN'), (u'the', u'the', u'DT'), (u'pink', u'pink', u'JJ'), (u'moon', u'moon', u'NN'), (u'inched', u'inch', u'VBD'), (u'in', u'in', u'IN'), (u'front', u'front', u'NN'), (u'of', u'of', u'IN'), (u'the', u'the', u'DT'), (u'great', u'great', u'JJ'), (u'sun', u'sun', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['So', 'the', 'pink', 'moon', 'inched', 'in', 'front', 'of', 'the', 'great', 'sun', '.']}, {'string': " At first, covering part of the sun 's circle, then more, then ... a complete covering of the sun!", 'parse': {'tree': "(ROOT (FRAG (PP (IN At) (NP (NP (JJ first) (, ,) (JJ covering) (NN part)) (PP (IN of) (NP (NP (NP (DT the) (NN sun) (POS 's)) (NN circle)) (, ,) (ADVP (RB then)) (NP (JJR more)) (, ,) (ADVP (RB then)))))) (: ...) (NP (NP (DT a) (JJ complete) (NN covering)) (PP (IN of) (NP (DT the) (NN sun)))) (. !)))", 'lemma': [(u'At', u'at', u'IN'), (u'first', u'first', u'JJ'), (u',', u',', u','), (u'covering', u'covering', u'JJ'), (u'part', u'part', u'NN'), (u'of', u'of', u'IN'), (u'the', u'the', u'DT'), (u'sun', u'sun', u'NN'), (u"'s", u"'s", u'POS'), (u'circle', u'circle', u'NN'), (u',', u',', u','), (u'then', u'then', u'RB'), (u'more', u'more', u'JJR'), (u',', u',', u','), (u'then', u'then', u'RB'), (u'...', u'...', u':'), (u'a', u'a', u'DT'), (u'complete', u'complete', u'JJ'), (u'covering', u'covering', u'NN'), (u'of', u'of', u'IN'), (u'the', u'the', u'DT'), (u'sun', u'sun', u'NN'), (u'!', u'!', u'.')]}, 'tokens': ['At', 'first', ',', 'covering', 'part', 'of', 'the', 'sun', "'s", 'circle', ',', 'then', 'more', ',', 'then', '...', 'a', 'complete', 'covering', 'of', 'the', 'sun', '!']}, {'string': ' The pink moon was shining with the power and light of the sun!', 'parse': {'tree': '(ROOT (S (NP (DT The) (JJ pink) (NN moon)) (VP (VBD was) (VP (VBG shining) (PP (IN with) (NP (NP (DT the) (NN power) (CC and) (NN light)) (PP (IN of) (NP (DT the) (NN sun))))))) (. !)))', 'lemma': [(u'The', u'the', u'DT'), (u'pink', u'pink', u'JJ'), (u'moon', u'moon', u'NN'), (u'was', u'be', u'VBD'), (u'shining', u'shine', u'VBG'), (u'with', u'with', u'IN'), (u'the', u'the', u'DT'), (u'power', u'power', u'NN'), (u'and', u'and', u'CC'), (u'light', u'light', u'NN'), (u'of', u'of', u'IN'), (u'the', u'the', u'DT'), (u'sun', u'sun', u'NN'), (u'!', u'!', u'.')]}, 'tokens': ['The', 'pink', 'moon', 'was', 'shining', 'with', 'the', 'power', 'and', 'light', 'of', 'the', 'sun', '!']}, {'string': ' All the lizards, cacti and every animal stood still in awe of the daytime pink moon!', 'parse': {'tree': '(ROOT (S (NP (NP (PDT All) (DT the) (NNS lizards)) (, ,) (NP (NNS cacti)) (CC and) (NP (DT every) (NN animal))) (VP (VBD stood) (ADVP (RB still)) (PP (IN in) (NP (NP (NN awe)) (PP (IN of) (NP (DT the) (JJ daytime) (JJ pink) (NN moon)))))) (. !)))', 'lemma': [(u'All', u'all', u'PDT'), (u'the', u'the', u'DT'), (u'lizards', u'lizard', u'NNS'), (u',', u',', u','), (u'cacti', u'cactus', u'NNS'), (u'and', u'and', u'CC'), (u'every', u'every', u'DT'), (u'animal', u'animal', u'NN'), (u'stood', u'stand', u'VBD'), (u'still', u'still', u'RB'), (u'in', u'in', u'IN'), (u'awe', u'awe', u'NN'), (u'of', u'of', u'IN'), (u'the', u'the', u'DT'), (u'daytime', u'daytime', u'JJ'), (u'pink', u'pink', u'JJ'), (u'moon', u'moon', u'NN'), (u'!', u'!', u'.')]}, 'tokens': ['All', 'the', 'lizards', ',', 'cacti', 'and', 'every', 'animal', 'stood', 'still', 'in', 'awe', 'of', 'the', 'daytime', 'pink', 'moon', '!']}, {'string': ' But at that time, the sun slipped away, saying `` Farewell, pink moon.', 'parse': {'tree': '(ROOT (S (CC But) (PP (IN at) (NP (DT that) (NN time))) (, ,) (NP (DT the) (NN sun)) (VP (VBD slipped) (ADVP (RB away)) (, ,) (S (VP (VBG saying) (NP (`` ``) (NP (NNP Farewell)) (, ,) (NP (JJ pink) (NN moon)))))) (. .)))', 'lemma': [(u'But', u'but', u'CC'), (u'at', u'at', u'IN'), (u'that', u'that', u'DT'), (u'time', u'time', u'NN'), (u',', u',', u','), (u'the', u'the', u'DT'), (u'sun', u'sun', u'NN'), (u'slipped', u'slip', u'VBD'), (u'away', u'away', u'RB'), (u',', u',', u','), (u'saying', u'say', u'VBG'), (u'``', u'``', u'``'), (u'Farewell', u'Farewell', u'NNP'), (u',', u',', u','), (u'pink', u'pink', u'JJ'), (u'moon', u'moon', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['But', 'at', 'that', 'time', ',', 'the', 'sun', 'slipped', 'away', ',', 'saying', '``', 'Farewell', ',', 'pink', 'moon', '.']}, {'string': " We have to do this again! ''", 'parse': {'tree': "(ROOT (S (NP (PRP We)) (VP (VBP have) (S (VP (TO to) (VP (VB do) (NP (DT this)) (ADVP (RB again)))))) (. !) ('' '')))", 'lemma': [(u'We', u'we', u'PRP'), (u'have', u'have', u'VBP'), (u'to', u'to', u'TO'), (u'do', u'do', u'VB'), (u'this', u'this', u'DT'), (u'again', u'again', u'RB'), (u'!', u'!', u'.'), (u"''", u"''", u"''")]}, 'tokens': ['We', 'have', 'to', 'do', 'this', 'again', '!', "''"]}, {'string': " And so, every few years, the sun and moon come together to show the pink moon 's is always with us, even in the day time.", 'parse': {'tree': "(ROOT (S (CC And) (ADVP (RB so)) (, ,) (NP (NP (DT every) (JJ few) (NNS years)) (, ,) (NP (NP (DT the) (NN sun) (CC and) (NN moon)) (VP (VBN come) (ADVP (RB together)) (S (VP (TO to) (VP (VB show) (NP (DT the) (JJ pink) (NN moon) (POS 's)))))))) (VP (VBZ is) (ADVP (RB always)) (PP (PP (IN with) (NP (PRP us))) (, ,) (RB even) (PP (IN in) (NP (DT the) (NN day) (NN time))))) (. .)))", 'lemma': [(u'And', u'and', u'CC'), (u'so', u'so', u'RB'), (u',', u',', u','), (u'every', u'every', u'DT'), (u'few', u'few', u'JJ'), (u'years', u'year', u'NNS'), (u',', u',', u','), (u'the', u'the', u'DT'), (u'sun', u'sun', u'NN'), (u'and', u'and', u'CC'), (u'moon', u'moon', u'NN'), (u'come', u'come', u'VBN'), (u'together', u'together', u'RB'), (u'to', u'to', u'TO'), (u'show', u'show', u'VB'), (u'the', u'the', u'DT'), (u'pink', u'pink', u'JJ'), (u'moon', u'moon', u'NN'), (u"'s", u"'s", u'POS'), (u'is', u'be', u'VBZ'), (u'always', u'always', u'RB'), (u'with', u'with', u'IN'), (u'us', u'we', u'PRP'), (u',', u',', u','), (u'even', u'even', u'RB'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'day', u'day', u'NN'), (u'time', u'time', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['And', 'so', ',', 'every', 'few', 'years', ',', 'the', 'sun', 'and', 'moon', 'come', 'together', 'to', 'show', 'the', 'pink', 'moon', "'s", 'is', 'always', 'with', 'us', ',', 'even', 'in', 'the', 'day', 'time', '.']}], 'questions': [{'question': {'string': ' What color was the moon?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WDT What) (NN color)) (SQ (VBD was) (NP (DT the) (NN moon))) (. ?)))', 'lemma': [(u'What', u'what', u'WDT'), (u'color', u'color', u'NN'), (u'was', u'be', u'VBD'), (u'the', u'the', u'DT'), (u'moon', u'moon', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'color', 'was', 'the', 'moon', '?']}, 'answers': [{'string': ' cacti', 'parse': {'tree': '(ROOT (NP (NNS cacti)))', 'lemma': [(u'cacti', u'cactus', u'NNS')]}, 'tokens': ['cacti']}, {'string': ' light', 'parse': {'tree': '(ROOT (NP (NN light)))', 'lemma': [(u'light', u'light', u'NN')]}, 'tokens': ['light']}, {'string': ' lizard', 'parse': {'tree': '(ROOT (ADJP (JJ lizard)))', 'lemma': [(u'lizard', u'lizard', u'JJ')]}, 'tokens': ['lizard']}, {'string': ' pink', 'parse': {'tree': '(ROOT (ADJP (JJ pink)))', 'lemma': [(u'pink', u'pink', u'JJ')]}, 'tokens': ['pink']}], 'mode': 1}, {'question': {'string': ' What happened when the moon moved in front of the sun?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VP (VBD happened) (SBAR (WHADVP (WRB when)) (S (NP (DT the) (NN moon)) (VP (VBD moved) (PP (IN in) (NP (NP (NN front)) (PP (IN of) (NP (DT the) (NN sun)))))))))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'happened', u'happen', u'VBD'), (u'when', u'when', u'WRB'), (u'the', u'the', u'DT'), (u'moon', u'moon', u'NN'), (u'moved', u'move', u'VBD'), (u'in', u'in', u'IN'), (u'front', u'front', u'NN'), (u'of', u'of', u'IN'), (u'the', u'the', u'DT'), (u'sun', u'sun', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'happened', 'when', 'the', 'moon', 'moved', 'in', 'front', 'of', 'the', 'sun', '?']}, 'answers': [{'string': ' the moon went shopping', 'parse': {'tree': '(ROOT (S (NP (DT the) (NN moon)) (VP (VBD went) (NP (NN shopping)))))', 'lemma': [(u'the', u'the', u'DT'), (u'moon', u'moon', u'NN'), (u'went', u'go', u'VBD'), (u'shopping', u'shopping', u'NN')]}, 'tokens': ['the', 'moon', 'went', 'shopping']}, {'string': ' the moon stopped shining', 'parse': {'tree': '(ROOT (S (NP (DT the) (NN moon)) (VP (VBD stopped) (S (VP (VBG shining))))))', 'lemma': [(u'the', u'the', u'DT'), (u'moon', u'moon', u'NN'), (u'stopped', u'stop', u'VBD'), (u'shining', u'shine', u'VBG')]}, 'tokens': ['the', 'moon', 'stopped', 'shining']}, {'string': ' the moon went home', 'parse': {'tree': '(ROOT (S (NP (DT the) (NN moon)) (VP (VBD went) (NP (NN home)))))', 'lemma': [(u'the', u'the', u'DT'), (u'moon', u'moon', u'NN'), (u'went', u'go', u'VBD'), (u'home', u'home', u'NN')]}, 'tokens': ['the', 'moon', 'went', 'home']}, {'string': ' The pink moon was shining with the power and light of the sun', 'parse': {'tree': '(ROOT (S (NP (DT The) (JJ pink) (NN moon)) (VP (VBD was) (VP (VBG shining) (PP (IN with) (NP (NP (DT the) (NN power) (CC and) (NN light)) (PP (IN of) (NP (DT the) (NN sun)))))))))', 'lemma': [(u'The', u'the', u'DT'), (u'pink', u'pink', u'JJ'), (u'moon', u'moon', u'NN'), (u'was', u'be', u'VBD'), (u'shining', u'shine', u'VBG'), (u'with', u'with', u'IN'), (u'the', u'the', u'DT'), (u'power', u'power', u'NN'), (u'and', u'and', u'CC'), (u'light', u'light', u'NN'), (u'of', u'of', u'IN'), (u'the', u'the', u'DT'), (u'sun', u'sun', u'NN')]}, 'tokens': ['The', 'pink', 'moon', 'was', 'shining', 'with', 'the', 'power', 'and', 'light', 'of', 'the', 'sun']}], 'mode': 0}, {'question': {'string': ' Why was the pink moon lonely?', 'parse': {'tree': '(ROOT (SBARQ (WHADVP (WRB Why)) (SQ (VBD was) (NP (DT the) (JJ pink) (NN moon)) (ADJP (JJ lonely))) (. ?)))', 'lemma': [(u'Why', u'why', u'WRB'), (u'was', u'be', u'VBD'), (u'the', u'the', u'DT'), (u'pink', u'pink', u'JJ'), (u'moon', u'moon', u'NN'), (u'lonely', u'lonely', u'JJ'), (u'?', u'?', u'.')]}, 'tokens': ['Why', 'was', 'the', 'pink', 'moon', 'lonely', '?']}, 'answers': [{'string': ' he wanted to be with the sun', 'parse': {'tree': '(ROOT (S (NP (PRP he)) (VP (VBD wanted) (S (VP (TO to) (VP (VB be) (PP (IN with) (NP (DT the) (NN sun)))))))))', 'lemma': [(u'he', u'he', u'PRP'), (u'wanted', u'want', u'VBD'), (u'to', u'to', u'TO'), (u'be', u'be', u'VB'), (u'with', u'with', u'IN'), (u'the', u'the', u'DT'), (u'sun', u'sun', u'NN')]}, 'tokens': ['he', 'wanted', 'to', 'be', 'with', 'the', 'sun']}, {'string': ' none of the animals could see him', 'parse': {'tree': '(ROOT (S (NP (NP (NN none)) (PP (IN of) (NP (DT the) (NNS animals)))) (VP (MD could) (VP (VB see) (NP (PRP him))))))', 'lemma': [(u'none', u'none', u'NN'), (u'of', u'of', u'IN'), (u'the', u'the', u'DT'), (u'animals', u'animal', u'NNS'), (u'could', u'could', u'MD'), (u'see', u'see', u'VB'), (u'him', u'he', u'PRP')]}, 'tokens': ['none', 'of', 'the', 'animals', 'could', 'see', 'him']}, {'string': ' he wanted to eat', 'parse': {'tree': '(ROOT (S (NP (PRP he)) (VP (VBD wanted) (S (VP (TO to) (VP (VB eat)))))))', 'lemma': [(u'he', u'he', u'PRP'), (u'wanted', u'want', u'VBD'), (u'to', u'to', u'TO'), (u'eat', u'eat', u'VB')]}, 'tokens': ['he', 'wanted', 'to', 'eat']}, {'string': ' he was bored', 'parse': {'tree': '(ROOT (S (NP (PRP he)) (VP (VBD was) (ADJP (VBN bored)))))', 'lemma': [(u'he', u'he', u'PRP'), (u'was', u'be', u'VBD'), (u'bored', u'bore', u'VBN')]}, 'tokens': ['he', 'was', 'bored']}], 'mode': 0}, {'question': {'string': ' How long did it take the moon to reach the sun?', 'parse': {'tree': '(ROOT (SBARQ (WHADJP (WRB How) (JJ long)) (SQ (VBD did) (NP (PRP it)) (VP (VB take) (NP (DT the) (NN moon) (S (VP (TO to) (VP (VB reach) (NP (DT the) (NN sun)))))))) (. ?)))', 'lemma': [(u'How', u'how', u'WRB'), (u'long', u'long', u'JJ'), (u'did', u'do', u'VBD'), (u'it', u'it', u'PRP'), (u'take', u'take', u'VB'), (u'the', u'the', u'DT'), (u'moon', u'moon', u'NN'), (u'to', u'to', u'TO'), (u'reach', u'reach', u'VB'), (u'the', u'the', u'DT'), (u'sun', u'sun', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['How', 'long', 'did', 'it', 'take', 'the', 'moon', 'to', 'reach', 'the', 'sun', '?']}, 'answers': [{'string': ' seconds', 'parse': {'tree': '(ROOT (NP (NNS seconds)))', 'lemma': [(u'seconds', u'seconds', u'NNS')]}, 'tokens': ['seconds']}, {'string': ' days', 'parse': {'tree': '(ROOT (NP (NNS days)))', 'lemma': [(u'days', u'day', u'NNS')]}, 'tokens': ['days']}, {'string': ' hours', 'parse': {'tree': '(ROOT (NP (NNS hours)))', 'lemma': [(u'hours', u'hour', u'NNS')]}, 'tokens': ['hours']}, {'string': ' weeks', 'parse': {'tree': '(ROOT (NP (NNS weeks)))', 'lemma': [(u'weeks', u'week', u'NNS')]}, 'tokens': ['weeks']}], 'mode': 0}]}
{'sentences': [{'string': ' Three cats named Daisy, Sofia, and Abby wanted to start a band.', 'parse': {'tree': '(ROOT (S (NP (CD Three) (NNS cats)) (VP (VBD named) (SBAR (S (NP (NNP Daisy) (, ,) (NNP Sofia) (, ,) (CC and) (NNP Abby)) (VP (VBD wanted) (S (VP (TO to) (VP (VB start) (NP (DT a) (NN band))))))))) (. .)))', 'lemma': [(u'Three', u'three', u'CD'), (u'cats', u'cat', u'NNS'), (u'named', u'name', u'VBD'), (u'Daisy', u'Daisy', u'NNP'), (u',', u',', u','), (u'Sofia', u'Sofia', u'NNP'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'Abby', u'Abby', u'NNP'), (u'wanted', u'want', u'VBD'), (u'to', u'to', u'TO'), (u'start', u'start', u'VB'), (u'a', u'a', u'DT'), (u'band', u'band', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Three', 'cats', 'named', 'Daisy', ',', 'Sofia', ',', 'and', 'Abby', 'wanted', 'to', 'start', 'a', 'band', '.']}, {'string': ' They put an ad in the newspaper because they needed a drummer.', 'parse': {'tree': '(ROOT (S (NP (PRP They)) (VP (VBD put) (NP (DT an) (NN ad)) (PP (IN in) (NP (DT the) (NN newspaper))) (SBAR (IN because) (S (NP (PRP they)) (VP (VBD needed) (NP (DT a) (NN drummer)))))) (. .)))', 'lemma': [(u'They', u'they', u'PRP'), (u'put', u'put', u'VBD'), (u'an', u'a', u'DT'), (u'ad', u'ad', u'NN'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'newspaper', u'newspaper', u'NN'), (u'because', u'because', u'IN'), (u'they', u'they', u'PRP'), (u'needed', u'need', u'VBD'), (u'a', u'a', u'DT'), (u'drummer', u'drummer', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['They', 'put', 'an', 'ad', 'in', 'the', 'newspaper', 'because', 'they', 'needed', 'a', 'drummer', '.']}, {'string': ' Daisy and Sofia would play guitar and sing.', 'parse': {'tree': '(ROOT (S (NP (NNP Daisy) (CC and) (NNP Sofia)) (VP (MD would) (VP (VP (VB play) (NP (NN guitar))) (CC and) (VP (VB sing)))) (. .)))', 'lemma': [(u'Daisy', u'Daisy', u'NNP'), (u'and', u'and', u'CC'), (u'Sofia', u'Sofia', u'NNP'), (u'would', u'would', u'MD'), (u'play', u'play', u'VB'), (u'guitar', u'guitar', u'NN'), (u'and', u'and', u'CC'), (u'sing', u'sing', u'VB'), (u'.', u'.', u'.')]}, 'tokens': ['Daisy', 'and', 'Sofia', 'would', 'play', 'guitar', 'and', 'sing', '.']}, {'string': ' Bass would be played by Abby.', 'parse': {'tree': '(ROOT (S (NP (NNP Bass)) (VP (MD would) (VP (VB be) (VP (VBN played) (PP (IN by) (NP (NNP Abby)))))) (. .)))', 'lemma': [(u'Bass', u'Bass', u'NNP'), (u'would', u'would', u'MD'), (u'be', u'be', u'VB'), (u'played', u'play', u'VBN'), (u'by', u'by', u'IN'), (u'Abby', u'Abby', u'NNP'), (u'.', u'.', u'.')]}, 'tokens': ['Bass', 'would', 'be', 'played', 'by', 'Abby', '.']}, {'string': ' A few weeks passed and no one called about the ad.', 'parse': {'tree': '(ROOT (S (NP (DT A) (JJ few) (NNS weeks)) (VP (VP (VBD passed)) (CC and) (VP (ADVP (RB no) (NP (CD one))) (VBD called) (PP (IN about) (NP (DT the) (NN ad))))) (. .)))', 'lemma': [(u'A', u'a', u'DT'), (u'few', u'few', u'JJ'), (u'weeks', u'week', u'NNS'), (u'passed', u'pass', u'VBD'), (u'and', u'and', u'CC'), (u'no', u'no', u'RB'), (u'one', u'one', u'CD'), (u'called', u'call', u'VBD'), (u'about', u'about', u'IN'), (u'the', u'the', u'DT'), (u'ad', u'ad', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['A', 'few', 'weeks', 'passed', 'and', 'no', 'one', 'called', 'about', 'the', 'ad', '.']}, {'string': ' Finally, one afternoon the telephone rang.', 'parse': {'tree': '(ROOT (S (ADVP (RB Finally)) (, ,) (NP (CD one) (NN afternoon)) (NP (DT the) (NN telephone)) (VP (VBD rang)) (. .)))', 'lemma': [(u'Finally', u'finally', u'RB'), (u',', u',', u','), (u'one', u'one', u'CD'), (u'afternoon', u'afternoon', u'NN'), (u'the', u'the', u'DT'), (u'telephone', u'telephone', u'NN'), (u'rang', u'ring', u'VBD'), (u'.', u'.', u'.')]}, 'tokens': ['Finally', ',', 'one', 'afternoon', 'the', 'telephone', 'rang', '.']}, {'string': " A deep voice said, `` Do you still need a drummer? ''", 'parse': {'tree': "(ROOT (S (NP (DT A) (JJ deep) (NN voice)) (VP (VBD said) (, ,) (`` ``) (SQ (VBP Do) (NP (PRP you)) (ADVP (RB still)) (VP (VB need) (NP (DT a) (NN drummer))))) (. ?) ('' '')))", 'lemma': [(u'A', u'a', u'DT'), (u'deep', u'deep', u'JJ'), (u'voice', u'voice', u'NN'), (u'said', u'say', u'VBD'), (u',', u',', u','), (u'``', u'``', u'``'), (u'Do', u'do', u'VBP'), (u'you', u'you', u'PRP'), (u'still', u'still', u'RB'), (u'need', u'need', u'VB'), (u'a', u'a', u'DT'), (u'drummer', u'drummer', u'NN'), (u'?', u'?', u'.'), (u"''", u"''", u"''")]}, 'tokens': ['A', 'deep', 'voice', 'said', ',', '``', 'Do', 'you', 'still', 'need', 'a', 'drummer', '?', "''"]}, {'string': " Daisy said, `` Yes, come by this afternoon. ''", 'parse': {'tree': "(ROOT (S (NP (NNP Daisy)) (VP (VBD said) (, ,) (`` ``) (INTJ (UH Yes))) (, ,) (VP (VBN come) (PP (IN by) (NP (DT this) (NN afternoon)))) (. .) ('' '')))", 'lemma': [(u'Daisy', u'Daisy', u'NNP'), (u'said', u'say', u'VBD'), (u',', u',', u','), (u'``', u'``', u'``'), (u'Yes', u'yes', u'UH'), (u',', u',', u','), (u'come', u'come', u'VBN'), (u'by', u'by', u'IN'), (u'this', u'this', u'DT'), (u'afternoon', u'afternoon', u'NN'), (u'.', u'.', u'.'), (u"''", u"''", u"''")]}, 'tokens': ['Daisy', 'said', ',', '``', 'Yes', ',', 'come', 'by', 'this', 'afternoon', '.', "''"]}, {'string': ' Daisy got the other cats together and they set up their instruments and waited for the drummer to show up.', 'parse': {'tree': '(ROOT (S (S (NP (NNP Daisy)) (VP (VBD got) (NP (DT the) (JJ other) (NNS cats)) (ADVP (RB together)))) (CC and) (S (NP (PRP they)) (VP (VP (VBD set) (PRT (RP up)) (NP (PRP$ their) (NNS instruments))) (CC and) (VP (VBD waited) (PP (IN for) (NP (DT the) (NN drummer))) (S (VP (TO to) (VP (VB show) (PRT (RP up)))))))) (. .)))', 'lemma': [(u'Daisy', u'Daisy', u'NNP'), (u'got', u'get', u'VBD'), (u'the', u'the', u'DT'), (u'other', u'other', u'JJ'), (u'cats', u'cat', u'NNS'), (u'together', u'together', u'RB'), (u'and', u'and', u'CC'), (u'they', u'they', u'PRP'), (u'set', u'set', u'VBD'), (u'up', u'up', u'RP'), (u'their', u'they', u'PRP$'), (u'instruments', u'instrument', u'NNS'), (u'and', u'and', u'CC'), (u'waited', u'wait', u'VBD'), (u'for', u'for', u'IN'), (u'the', u'the', u'DT'), (u'drummer', u'drummer', u'NN'), (u'to', u'to', u'TO'), (u'show', u'show', u'VB'), (u'up', u'up', u'RP'), (u'.', u'.', u'.')]}, 'tokens': ['Daisy', 'got', 'the', 'other', 'cats', 'together', 'and', 'they', 'set', 'up', 'their', 'instruments', 'and', 'waited', 'for', 'the', 'drummer', 'to', 'show', 'up', '.']}, {'string': ' Soon a dog came running up, pulling a set of drums behind him.', 'parse': {'tree': '(ROOT (S (ADVP (RB Soon)) (NP (DT a) (NN dog)) (VP (VBD came) (S (VP (VBG running) (PRT (RP up)))) (, ,) (S (VP (VBG pulling) (NP (NP (DT a) (NN set)) (PP (IN of) (NP (NP (NNS drums)) (PP (IN behind) (NP (PRP him))))))))) (. .)))', 'lemma': [(u'Soon', u'soon', u'RB'), (u'a', u'a', u'DT'), (u'dog', u'dog', u'NN'), (u'came', u'come', u'VBD'), (u'running', u'run', u'VBG'), (u'up', u'up', u'RP'), (u',', u',', u','), (u'pulling', u'pull', u'VBG'), (u'a', u'a', u'DT'), (u'set', u'set', u'NN'), (u'of', u'of', u'IN'), (u'drums', u'drum', u'NNS'), (u'behind', u'behind', u'IN'), (u'him', u'he', u'PRP'), (u'.', u'.', u'.')]}, 'tokens': ['Soon', 'a', 'dog', 'came', 'running', 'up', ',', 'pulling', 'a', 'set', 'of', 'drums', 'behind', 'him', '.']}, {'string': " `` You 're the drummer? ''", 'parse': {'tree': "(ROOT (S (`` ``) (NP (PRP You)) (VP (VBP 're) (NP (DT the) (NN drummer))) (. ?) ('' '')))", 'lemma': [(u'``', u'``', u'``'), (u'You', u'you', u'PRP'), (u"'re", u'be', u'VBP'), (u'the', u'the', u'DT'), (u'drummer', u'drummer', u'NN'), (u'?', u'?', u'.'), (u"''", u"''", u"''")]}, 'tokens': ['``', 'You', "'re", 'the', 'drummer', '?', "''"]}, {'string': ' Sofia hissed.', 'parse': {'tree': '(ROOT (S (NP (NNP Sofia)) (VP (VBD hissed)) (. .)))', 'lemma': [(u'Sofia', u'Sofia', u'NNP'), (u'hissed', u'hiss', u'VBD'), (u'.', u'.', u'.')]}, 'tokens': ['Sofia', 'hissed', '.']}, {'string': " `` Scram! ''", 'parse': {'tree': "(ROOT (S (`` ``) (VP (VB Scram)) (. !) ('' '')))", 'lemma': [(u'``', u'``', u'``'), (u'Scram', u'scram', u'VB'), (u'!', u'!', u'.'), (u"''", u"''", u"''")]}, 'tokens': ['``', 'Scram', '!', "''"]}, {'string': ' said Abby.', 'parse': {'tree': '(ROOT (S (VP (VBD said) (NP (NNP Abby))) (. .)))', 'lemma': [(u'said', u'say', u'VBD'), (u'Abby', u'Abby', u'NNP'), (u'.', u'.', u'.')]}, 'tokens': ['said', 'Abby', '.']}, {'string': ' But Daisy was more accepting.', 'parse': {'tree': '(ROOT (S (CC But) (NP (NNP Daisy)) (VP (VBD was) (ADVP (RBR more)) (VP (VBG accepting))) (. .)))', 'lemma': [(u'But', u'but', u'CC'), (u'Daisy', u'Daisy', u'NNP'), (u'was', u'be', u'VBD'), (u'more', u'more', u'RBR'), (u'accepting', u'accept', u'VBG'), (u'.', u'.', u'.')]}, 'tokens': ['But', 'Daisy', 'was', 'more', 'accepting', '.']}, {'string': " `` C'mon guys, we need a drummer.", 'parse': {'tree': "(ROOT (S (`` ``) (NP (NNP C'mon) (NNS guys)) (, ,) (NP (PRP we)) (VP (VBP need) (NP (DT a) (NN drummer))) (. .)))", 'lemma': [(u'``', u'``', u'``'), (u"C'mon", u"C'mon", u'NNP'), (u'guys', u'guy', u'NNS'), (u',', u',', u','), (u'we', u'we', u'PRP'), (u'need', u'need', u'VBP'), (u'a', u'a', u'DT'), (u'drummer', u'drummer', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['``', "C'mon", 'guys', ',', 'we', 'need', 'a', 'drummer', '.']}, {'string': " Just let him play! ''", 'parse': {'tree': "(ROOT (S (S (ADVP (RB Just)) (VP (VB let))) (S (NP (PRP him)) (VP (VBP play))) (. !) ('' '')))", 'lemma': [(u'Just', u'just', u'RB'), (u'let', u'let', u'VB'), (u'him', u'he', u'PRP'), (u'play', u'play', u'VBP'), (u'!', u'!', u'.'), (u"''", u"''", u"''")]}, 'tokens': ['Just', 'let', 'him', 'play', '!', "''"]}, {'string': ' she said.', 'parse': {'tree': '(ROOT (S (NP (PRP she)) (VP (VBD said)) (. .)))', 'lemma': [(u'she', u'she', u'PRP'), (u'said', u'say', u'VBD'), (u'.', u'.', u'.')]}, 'tokens': ['she', 'said', '.']}, {'string': " `` Okay, '' said Sofia and Abby.", 'parse': {'tree': "(ROOT (SINV (`` ``) (FRAG (INTJ (UH Okay))) (, ,) ('' '') (VP (VBD said)) (NP (NP (NNP Sofia)) (CC and) (NP (NNP Abby))) (. .)))", 'lemma': [(u'``', u'``', u'``'), (u'Okay', u'okay', u'UH'), (u',', u',', u','), (u"''", u"''", u"''"), (u'said', u'say', u'VBD'), (u'Sofia', u'Sofia', u'NNP'), (u'and', u'and', u'CC'), (u'Abby', u'Abby', u'NNP'), (u'.', u'.', u'.')]}, 'tokens': ['``', 'Okay', ',', "''", 'said', 'Sofia', 'and', 'Abby', '.']}, {'string': ' They started to jam.', 'parse': {'tree': '(ROOT (S (NP (PRP They)) (VP (VBD started) (PP (TO to) (NP (NN jam)))) (. .)))', 'lemma': [(u'They', u'they', u'PRP'), (u'started', u'start', u'VBD'), (u'to', u'to', u'TO'), (u'jam', u'jam', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['They', 'started', 'to', 'jam', '.']}, {'string': " `` We need to come up with a name, '' Sofia said, between songs.", 'parse': {'tree': "(ROOT (S (`` ``) (S (NP (PRP We)) (VP (VBP need) (S (VP (TO to) (VP (VB come) (PRT (RP up)) (PP (IN with) (NP (DT a) (NN name)))))))) (, ,) ('' '') (NP (NNP Sofia)) (VP (VBD said) (, ,) (PP (IN between) (NP (NNS songs)))) (. .)))", 'lemma': [(u'``', u'``', u'``'), (u'We', u'we', u'PRP'), (u'need', u'need', u'VBP'), (u'to', u'to', u'TO'), (u'come', u'come', u'VB'), (u'up', u'up', u'RP'), (u'with', u'with', u'IN'), (u'a', u'a', u'DT'), (u'name', u'name', u'NN'), (u',', u',', u','), (u"''", u"''", u"''"), (u'Sofia', u'Sofia', u'NNP'), (u'said', u'say', u'VBD'), (u',', u',', u','), (u'between', u'between', u'IN'), (u'songs', u'song', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['``', 'We', 'need', 'to', 'come', 'up', 'with', 'a', 'name', ',', "''", 'Sofia', 'said', ',', 'between', 'songs', '.']}, {'string': " `` How about ` Atomic Death Fish? ' ''", 'parse': {'tree': "(ROOT (S (`` ``) (SBAR (WHADVP (WRB How)) (S (NP (ADVP (IN about))) (`` `) (VP (VBZ Atomic)))) (NP (NNP Death)) (VP (VBZ Fish)) (. ?) ('' ') ('' '')))", 'lemma': [(u'``', u'``', u'``'), (u'How', u'how', u'WRB'), (u'about', u'about', u'IN'), (u'`', u'`', u'``'), (u'Atomic', u'atomic', u'VBZ'), (u'Death', u'Death', u'NNP'), (u'Fish', u'fish', u'VBZ'), (u'?', u'?', u'.'), (u"'", u"'", u"''"), (u"''", u"''", u"''")]}, 'tokens': ['``', 'How', 'about', '`', 'Atomic', 'Death', 'Fish', '?', "'", "''"]}, {'string': ' said Abby.', 'parse': {'tree': '(ROOT (S (VP (VBD said) (NP (NNP Abby))) (. .)))', 'lemma': [(u'said', u'say', u'VBD'), (u'Abby', u'Abby', u'NNP'), (u'.', u'.', u'.')]}, 'tokens': ['said', 'Abby', '.']}, {'string': " `` No, too scary, '' said Sofia.", 'parse': {'tree': "(ROOT (S (`` ``) (FRAG (INTJ (UH No)) (, ,) (NP (RB too) (JJ scary))) (, ,) ('' '') (VP (VBD said)) (NP (NNP Sofia)) (. .)))", 'lemma': [(u'``', u'``', u'``'), (u'No', u'no', u'UH'), (u',', u',', u','), (u'too', u'too', u'RB'), (u'scary', u'scary', u'JJ'), (u',', u',', u','), (u"''", u"''", u"''"), (u'said', u'say', u'VBD'), (u'Sofia', u'Sofia', u'NNP'), (u'.', u'.', u'.')]}, 'tokens': ['``', 'No', ',', 'too', 'scary', ',', "''", 'said', 'Sofia', '.']}, {'string': " `` How about ` Monkeys on Mars? ' ''", 'parse': {'tree': "(ROOT (S (`` ``) (NP (NNP How)) (VP (RB about) (VP (`` `) (VBZ Monkeys) (PP (IN on) (NP (NNP Mars))))) (. ?) ('' ') ('' '')))", 'lemma': [(u'``', u'``', u'``'), (u'How', u'How', u'NNP'), (u'about', u'about', u'RB'), (u'`', u'`', u'``'), (u'Monkeys', u'monkey', u'VBZ'), (u'on', u'on', u'IN'), (u'Mars', u'Mars', u'NNP'), (u'?', u'?', u'.'), (u"'", u"'", u"''"), (u"''", u"''", u"''")]}, 'tokens': ['``', 'How', 'about', '`', 'Monkeys', 'on', 'Mars', '?', "'", "''"]}, {'string': ' said Daisy.', 'parse': {'tree': '(ROOT (S (VP (VBD said) (NP (NNP Daisy))) (. .)))', 'lemma': [(u'said', u'say', u'VBD'), (u'Daisy', u'Daisy', u'NNP'), (u'.', u'.', u'.')]}, 'tokens': ['said', 'Daisy', '.']}, {'string': " `` Too goofy, '' said Sofia.", 'parse': {'tree': "(ROOT (SINV (`` ``) (FRAG (ADJP (RB Too) (JJ goofy))) (, ,) ('' '') (VP (VBD said)) (NP (NNP Sofia)) (. .)))", 'lemma': [(u'``', u'``', u'``'), (u'Too', u'too', u'RB'), (u'goofy', u'goofy', u'JJ'), (u',', u',', u','), (u"''", u"''", u"''"), (u'said', u'say', u'VBD'), (u'Sofia', u'Sofia', u'NNP'), (u'.', u'.', u'.')]}, 'tokens': ['``', 'Too', 'goofy', ',', "''", 'said', 'Sofia', '.']}, {'string': " `` How about ` Sofia and the No Nos? ' ''", 'parse': {'tree': "(ROOT (S (`` ``) (SBAR (WHADVP (WRB How)) (S (VP (ADVP (RB about)) (`` `) (VBG Sofia) (NP (NNP and))))) (NP (DT the) (NNP No)) (VP (VBZ Nos)) (. ?) ('' ') ('' '')))", 'lemma': [(u'``', u'``', u'``'), (u'How', u'how', u'WRB'), (u'about', u'about', u'RB'), (u'`', u'`', u'``'), (u'Sofia', u'sofia', u'VBG'), (u'and', u'and', u'NNP'), (u'the', u'the', u'DT'), (u'No', u'No', u'NNP'), (u'Nos', u'no', u'VBZ'), (u'?', u'?', u'.'), (u"'", u"'", u"''"), (u"''", u"''", u"''")]}, 'tokens': ['``', 'How', 'about', '`', 'Sofia', 'and', 'the', 'No', 'Nos', '?', "'", "''"]}, {'string': ' said the drummer.', 'parse': {'tree': '(ROOT (S (VP (VBD said) (NP (DT the) (NN drummer))) (. .)))', 'lemma': [(u'said', u'say', u'VBD'), (u'the', u'the', u'DT'), (u'drummer', u'drummer', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['said', 'the', 'drummer', '.']}, {'string': " `` I love it! ''", 'parse': {'tree': "(ROOT (S (`` ``) (NP (PRP I)) (VP (VBP love) (NP (PRP it))) (. !) ('' '')))", 'lemma': [(u'``', u'``', u'``'), (u'I', u'I', u'PRP'), (u'love', u'love', u'VBP'), (u'it', u'it', u'PRP'), (u'!', u'!', u'.'), (u"''", u"''", u"''")]}, 'tokens': ['``', 'I', 'love', 'it', '!', "''"]}, {'string': ' everyone said.', 'parse': {'tree': '(ROOT (S (NP (NN everyone)) (VP (VBD said)) (. .)))', 'lemma': [(u'everyone', u'everyone', u'NN'), (u'said', u'say', u'VBD'), (u'.', u'.', u'.')]}, 'tokens': ['everyone', 'said', '.']}], 'questions': [{'question': {'string': ' What is the name of the band?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (DT the) (NN name)) (PP (IN of) (NP (DT the) (NN band))))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'is', u'be', u'VBZ'), (u'the', u'the', u'DT'), (u'name', u'name', u'NN'), (u'of', u'of', u'IN'), (u'the', u'the', u'DT'), (u'band', u'band', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'is', 'the', 'name', 'of', 'the', 'band', '?']}, 'answers': [{'string': ' Monkeys on Mars', 'parse': {'tree': '(ROOT (NP (NP (NNS Monkeys)) (PP (IN on) (NP (NNP Mars)))))', 'lemma': [(u'Monkeys', u'monkey', u'NNS'), (u'on', u'on', u'IN'), (u'Mars', u'Mars', u'NNP')]}, 'tokens': ['Monkeys', 'on', 'Mars']}, {'string': ' Sofia and the No Nos', 'parse': {'tree': '(ROOT (NP (NP (NNP Sofia)) (CC and) (NP (DT the) (NNP No) (NNP Nos))))', 'lemma': [(u'Sofia', u'Sofia', u'NNP'), (u'and', u'and', u'CC'), (u'the', u'the', u'DT'), (u'No', u'No', u'NNP'), (u'Nos', u'Nos', u'NNP')]}, 'tokens': ['Sofia', 'and', 'the', 'No', 'Nos']}, {'string': ' Three Cats and a Dog', 'parse': {'tree': '(ROOT (NP (NP (CD Three) (NNS Cats)) (CC and) (NP (DT a) (NN Dog))))', 'lemma': [(u'Three', u'three', u'CD'), (u'Cats', u'cat', u'NNS'), (u'and', u'and', u'CC'), (u'a', u'a', u'DT'), (u'Dog', u'dog', u'NN')]}, 'tokens': ['Three', 'Cats', 'and', 'a', 'Dog']}, {'string': ' Atomic Death Fish', 'parse': {'tree': '(ROOT (NP (NNP Atomic) (NNP Death) (NNP Fish)))', 'lemma': [(u'Atomic', u'Atomic', u'NNP'), (u'Death', u'Death', u'NNP'), (u'Fish', u'Fish', u'NNP')]}, 'tokens': ['Atomic', 'Death', 'Fish']}], 'mode': 0}, {'question': {'string': ' What instruments did each of the cats play?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WDT What) (NN instruments)) (SQ (VBD did) (NP (NP (DT each)) (PP (IN of) (NP (DT the) (NNS cats)))) (VP (VB play))) (. ?)))', 'lemma': [(u'What', u'what', u'WDT'), (u'instruments', u'instrument', u'NN'), (u'did', u'do', u'VBD'), (u'each', u'each', u'DT'), (u'of', u'of', u'IN'), (u'the', u'the', u'DT'), (u'cats', u'cat', u'NNS'), (u'play', u'play', u'VB'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'instruments', 'did', 'each', 'of', 'the', 'cats', 'play', '?']}, 'answers': [{'string': ' Sofia played guitar, Daisy played drums, and Abby played Bass.', 'parse': {'tree': '(ROOT (S (S (NP (NNP Sofia)) (VP (VBD played) (NP (NN guitar)))) (PRN (, ,) (S (NP (NNP Daisy)) (VP (VBD played) (NP (NNS drums)))) (, ,)) (CC and) (S (NP (NNP Abby)) (VP (VBD played) (NP (NNP Bass)))) (. .)))', 'lemma': [(u'Sofia', u'Sofia', u'NNP'), (u'played', u'play', u'VBD'), (u'guitar', u'guitar', u'NN'), (u',', u',', u','), (u'Daisy', u'Daisy', u'NNP'), (u'played', u'play', u'VBD'), (u'drums', u'drum', u'NNS'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'Abby', u'Abby', u'NNP'), (u'played', u'play', u'VBD'), (u'Bass', u'Bass', u'NNP'), (u'.', u'.', u'.')]}, 'tokens': ['Sofia', 'played', 'guitar', ',', 'Daisy', 'played', 'drums', ',', 'and', 'Abby', 'played', 'Bass', '.']}, {'string': ' Daisy played guitar, Sofia played drums, and Abby played Bass.', 'parse': {'tree': '(ROOT (S (S (NP (NNP Daisy)) (VP (VBD played) (NP (NN guitar)))) (PRN (, ,) (S (NP (NNP Sofia)) (VP (VBD played) (NP (NNS drums)))) (, ,)) (CC and) (S (NP (NNP Abby)) (VP (VBD played) (NP (NNP Bass)))) (. .)))', 'lemma': [(u'Daisy', u'Daisy', u'NNP'), (u'played', u'play', u'VBD'), (u'guitar', u'guitar', u'NN'), (u',', u',', u','), (u'Sofia', u'Sofia', u'NNP'), (u'played', u'play', u'VBD'), (u'drums', u'drum', u'NNS'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'Abby', u'Abby', u'NNP'), (u'played', u'play', u'VBD'), (u'Bass', u'Bass', u'NNP'), (u'.', u'.', u'.')]}, 'tokens': ['Daisy', 'played', 'guitar', ',', 'Sofia', 'played', 'drums', ',', 'and', 'Abby', 'played', 'Bass', '.']}, {'string': ' Abby played guitar, Daisy played drums, and Sofia played Bass.', 'parse': {'tree': '(ROOT (S (S (NP (NNP Abby)) (VP (VBD played) (NP (NN guitar)))) (PRN (, ,) (S (NP (NNP Daisy)) (VP (VBD played) (NP (NNS drums)))) (, ,)) (CC and) (S (NP (NNP Sofia)) (VP (VBD played) (NP (NNP Bass)))) (. .)))', 'lemma': [(u'Abby', u'Abby', u'NNP'), (u'played', u'play', u'VBD'), (u'guitar', u'guitar', u'NN'), (u',', u',', u','), (u'Daisy', u'Daisy', u'NNP'), (u'played', u'play', u'VBD'), (u'drums', u'drum', u'NNS'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'Sofia', u'Sofia', u'NNP'), (u'played', u'play', u'VBD'), (u'Bass', u'Bass', u'NNP'), (u'.', u'.', u'.')]}, 'tokens': ['Abby', 'played', 'guitar', ',', 'Daisy', 'played', 'drums', ',', 'and', 'Sofia', 'played', 'Bass', '.']}, {'string': ' Daisy and Sofia played guitar and Abby played Bass.', 'parse': {'tree': '(ROOT (S (NP (NNP Daisy) (CC and) (NNP Sofia)) (VP (VBD played) (SBAR (S (NP (NNP guitar) (CC and) (NNP Abby)) (VP (VBD played) (NP (NNP Bass)))))) (. .)))', 'lemma': [(u'Daisy', u'Daisy', u'NNP'), (u'and', u'and', u'CC'), (u'Sofia', u'Sofia', u'NNP'), (u'played', u'play', u'VBD'), (u'guitar', u'guitar', u'NNP'), (u'and', u'and', u'CC'), (u'Abby', u'Abby', u'NNP'), (u'played', u'play', u'VBD'), (u'Bass', u'Bass', u'NNP'), (u'.', u'.', u'.')]}, 'tokens': ['Daisy', 'and', 'Sofia', 'played', 'guitar', 'and', 'Abby', 'played', 'Bass', '.']}], 'mode': 1}, {'question': {'string': ' What kind of animal is the drummer?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WHNP (WDT What) (NN kind)) (PP (IN of) (NP (NN animal)))) (SQ (VBZ is) (NP (DT the) (NN drummer))) (. ?)))', 'lemma': [(u'What', u'what', u'WDT'), (u'kind', u'kind', u'NN'), (u'of', u'of', u'IN'), (u'animal', u'animal', u'NN'), (u'is', u'be', u'VBZ'), (u'the', u'the', u'DT'), (u'drummer', u'drummer', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'kind', 'of', 'animal', 'is', 'the', 'drummer', '?']}, 'answers': [{'string': ' fish', 'parse': {'tree': '(ROOT (NP (NN fish)))', 'lemma': [(u'fish', u'fish', u'NN')]}, 'tokens': ['fish']}, {'string': ' monkey', 'parse': {'tree': '(ROOT (NP (NN monkey)))', 'lemma': [(u'monkey', u'monkey', u'NN')]}, 'tokens': ['monkey']}, {'string': ' dog', 'parse': {'tree': '(ROOT (NP (NN dog)))', 'lemma': [(u'dog', u'dog', u'NN')]}, 'tokens': ['dog']}, {'string': ' cat', 'parse': {'tree': '(ROOT (NP (NN cat)))', 'lemma': [(u'cat', u'cat', u'NN')]}, 'tokens': ['cat']}], 'mode': 1}, {'question': {'string': ' Which cat was accepting of the dog?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WDT Which) (NN cat)) (SQ (VBD was) (VP (VBG accepting) (PP (IN of) (NP (DT the) (NN dog))))) (. ?)))', 'lemma': [(u'Which', u'which', u'WDT'), (u'cat', u'cat', u'NN'), (u'was', u'be', u'VBD'), (u'accepting', u'accept', u'VBG'), (u'of', u'of', u'IN'), (u'the', u'the', u'DT'), (u'dog', u'dog', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['Which', 'cat', 'was', 'accepting', 'of', 'the', 'dog', '?']}, 'answers': [{'string': ' Sofia and Abby', 'parse': {'tree': '(ROOT (NP (NNPS Sofia) (CC and) (NNPS Abby)))', 'lemma': [(u'Sofia', u'Sofia', u'NNPS'), (u'and', u'and', u'CC'), (u'Abby', u'Abby', u'NNPS')]}, 'tokens': ['Sofia', 'and', 'Abby']}, {'string': ' Abby', 'parse': {'tree': '(ROOT (NP (NNP Abby)))', 'lemma': [(u'Abby', u'Abby', u'NNP')]}, 'tokens': ['Abby']}, {'string': ' Daisy', 'parse': {'tree': '(ROOT (NP (NNP Daisy)))', 'lemma': [(u'Daisy', u'Daisy', u'NNP')]}, 'tokens': ['Daisy']}, {'string': ' Sofia', 'parse': {'tree': '(ROOT (NP (NNP Sofia)))', 'lemma': [(u'Sofia', u'Sofia', u'NNP')]}, 'tokens': ['Sofia']}], 'mode': 0}]}
{'sentences': [{'string': " Mike wanted to make a cake for his Mom 's birthday.", 'parse': {'tree': "(ROOT (S (NP (NNP Mike)) (VP (VBD wanted) (S (VP (TO to) (VP (VB make) (NP (NP (DT a) (NN cake)) (PP (IN for) (NP (NP (PRP$ his) (NN Mom) (POS 's)) (NN birthday)))))))) (. .)))", 'lemma': [(u'Mike', u'Mike', u'NNP'), (u'wanted', u'want', u'VBD'), (u'to', u'to', u'TO'), (u'make', u'make', u'VB'), (u'a', u'a', u'DT'), (u'cake', u'cake', u'NN'), (u'for', u'for', u'IN'), (u'his', u'he', u'PRP$'), (u'Mom', u'mom', u'NN'), (u"'s", u"'s", u'POS'), (u'birthday', u'birthday', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Mike', 'wanted', 'to', 'make', 'a', 'cake', 'for', 'his', 'Mom', "'s", 'birthday', '.']}, {'string': ' His dad was going to help him.', 'parse': {'tree': '(ROOT (S (NP (PRP$ His) (NN dad)) (VP (VBD was) (VP (VBG going) (S (VP (TO to) (VP (VB help) (NP (PRP him))))))) (. .)))', 'lemma': [(u'His', u'he', u'PRP$'), (u'dad', u'dad', u'NN'), (u'was', u'be', u'VBD'), (u'going', u'go', u'VBG'), (u'to', u'to', u'TO'), (u'help', u'help', u'VB'), (u'him', u'he', u'PRP'), (u'.', u'.', u'.')]}, 'tokens': ['His', 'dad', 'was', 'going', 'to', 'help', 'him', '.']}, {'string': ' Mike had eggs, milk, and flour at his house, but no sugar!', 'parse': {'tree': '(ROOT (S (NP (NNP Mike)) (VP (VBD had) (NP (NP (NNS eggs)) (, ,) (NP (NN milk)) (, ,) (CC and) (NP (NN flour))) (PP (IN at) (NP (NP (PRP$ his) (NN house)) (, ,) (CC but) (NP (DT no) (NN sugar))))) (. !)))', 'lemma': [(u'Mike', u'Mike', u'NNP'), (u'had', u'have', u'VBD'), (u'eggs', u'egg', u'NNS'), (u',', u',', u','), (u'milk', u'milk', u'NN'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'flour', u'flour', u'NN'), (u'at', u'at', u'IN'), (u'his', u'he', u'PRP$'), (u'house', u'house', u'NN'), (u',', u',', u','), (u'but', u'but', u'CC'), (u'no', u'no', u'DT'), (u'sugar', u'sugar', u'NN'), (u'!', u'!', u'.')]}, 'tokens': ['Mike', 'had', 'eggs', ',', 'milk', ',', 'and', 'flour', 'at', 'his', 'house', ',', 'but', 'no', 'sugar', '!']}, {'string': ' Dad told Mike to take his bicycle to the store so he could buy sugar for the cake.', 'parse': {'tree': '(ROOT (S (NP (NNP Dad)) (VP (VBD told) (S (NP (NNP Mike)) (VP (TO to) (VP (VB take) (NP (PRP$ his) (NN bicycle)) (PP (TO to) (NP (DT the) (NN store))) (SBAR (IN so) (S (NP (PRP he)) (VP (MD could) (VP (VB buy) (NP (NN sugar)) (PP (IN for) (NP (DT the) (NN cake))))))))))) (. .)))', 'lemma': [(u'Dad', u'Dad', u'NNP'), (u'told', u'tell', u'VBD'), (u'Mike', u'Mike', u'NNP'), (u'to', u'to', u'TO'), (u'take', u'take', u'VB'), (u'his', u'he', u'PRP$'), (u'bicycle', u'bicycle', u'NN'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'store', u'store', u'NN'), (u'so', u'so', u'IN'), (u'he', u'he', u'PRP'), (u'could', u'could', u'MD'), (u'buy', u'buy', u'VB'), (u'sugar', u'sugar', u'NN'), (u'for', u'for', u'IN'), (u'the', u'the', u'DT'), (u'cake', u'cake', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Dad', 'told', 'Mike', 'to', 'take', 'his', 'bicycle', 'to', 'the', 'store', 'so', 'he', 'could', 'buy', 'sugar', 'for', 'the', 'cake', '.']}, {'string': ' On his way to the store, Mike saw his friend, Sally, at the park.', 'parse': {'tree': '(ROOT (S (PP (IN On) (NP (NP (PRP$ his) (NN way)) (PP (TO to) (NP (DT the) (NN store))))) (, ,) (NP (NNP Mike)) (VP (VBD saw) (NP (NP (NP (PRP$ his) (NN friend)) (, ,) (NP (NNP Sally)) (, ,)) (PP (IN at) (NP (DT the) (NN park))))) (. .)))', 'lemma': [(u'On', u'on', u'IN'), (u'his', u'he', u'PRP$'), (u'way', u'way', u'NN'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'store', u'store', u'NN'), (u',', u',', u','), (u'Mike', u'Mike', u'NNP'), (u'saw', u'see', u'VBD'), (u'his', u'he', u'PRP$'), (u'friend', u'friend', u'NN'), (u',', u',', u','), (u'Sally', u'Sally', u'NNP'), (u',', u',', u','), (u'at', u'at', u'IN'), (u'the', u'the', u'DT'), (u'park', u'park', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['On', 'his', 'way', 'to', 'the', 'store', ',', 'Mike', 'saw', 'his', 'friend', ',', 'Sally', ',', 'at', 'the', 'park', '.']}, {'string': ' He rode over to say hello.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD rode) (PRT (RP over)) (S (VP (TO to) (VP (VB say) (NP (UH hello)))))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'rode', u'ride', u'VBD'), (u'over', u'over', u'RP'), (u'to', u'to', u'TO'), (u'say', u'say', u'VB'), (u'hello', u'hello', u'UH'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'rode', 'over', 'to', 'say', 'hello', '.']}, {'string': ' Mike and Sally played lots of games at the park.', 'parse': {'tree': '(ROOT (S (NP (NNP Mike) (CC and) (NNP Sally)) (VP (VBD played) (NP (NP (NNS lots)) (PP (IN of) (NP (NNS games)))) (PP (IN at) (NP (DT the) (NN park)))) (. .)))', 'lemma': [(u'Mike', u'Mike', u'NNP'), (u'and', u'and', u'CC'), (u'Sally', u'Sally', u'NNP'), (u'played', u'play', u'VBD'), (u'lots', u'lot', u'NNS'), (u'of', u'of', u'IN'), (u'games', u'game', u'NNS'), (u'at', u'at', u'IN'), (u'the', u'the', u'DT'), (u'park', u'park', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Mike', 'and', 'Sally', 'played', 'lots', 'of', 'games', 'at', 'the', 'park', '.']}, {'string': ' After a long time, Mike saw it was starting to get dark.', 'parse': {'tree': '(ROOT (S (PP (IN After) (NP (DT a) (JJ long) (NN time))) (, ,) (NP (NNP Mike)) (VP (VBD saw) (SBAR (S (NP (PRP it)) (VP (VBD was) (VP (VBG starting) (S (VP (TO to) (VP (VB get) (ADJP (JJ dark)))))))))) (. .)))', 'lemma': [(u'After', u'after', u'IN'), (u'a', u'a', u'DT'), (u'long', u'long', u'JJ'), (u'time', u'time', u'NN'), (u',', u',', u','), (u'Mike', u'Mike', u'NNP'), (u'saw', u'see', u'VBD'), (u'it', u'it', u'PRP'), (u'was', u'be', u'VBD'), (u'starting', u'start', u'VBG'), (u'to', u'to', u'TO'), (u'get', u'get', u'VB'), (u'dark', u'dark', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['After', 'a', 'long', 'time', ',', 'Mike', 'saw', 'it', 'was', 'starting', 'to', 'get', 'dark', '.']}, {'string': ' He needed to hurry if he was going to make it to the store and get home before night time.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD needed) (S (VP (TO to) (VP (VB hurry) (SBAR (IN if) (S (NP (PRP he)) (VP (VBD was) (VP (VBG going) (S (VP (TO to) (VP (VP (VB make) (NP (PRP it)) (PP (TO to) (NP (DT the) (NN store)))) (CC and) (VP (VB get) (NP (NN home)) (PP (IN before) (NP (NN night) (NN time))))))))))))))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'needed', u'need', u'VBD'), (u'to', u'to', u'TO'), (u'hurry', u'hurry', u'VB'), (u'if', u'if', u'IN'), (u'he', u'he', u'PRP'), (u'was', u'be', u'VBD'), (u'going', u'go', u'VBG'), (u'to', u'to', u'TO'), (u'make', u'make', u'VB'), (u'it', u'it', u'PRP'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'store', u'store', u'NN'), (u'and', u'and', u'CC'), (u'get', u'get', u'VB'), (u'home', u'home', u'NN'), (u'before', u'before', u'IN'), (u'night', u'night', u'NN'), (u'time', u'time', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'needed', 'to', 'hurry', 'if', 'he', 'was', 'going', 'to', 'make', 'it', 'to', 'the', 'store', 'and', 'get', 'home', 'before', 'night', 'time', '.']}, {'string': ' Mike rode as fast as he could, and made it to the store.', 'parse': {'tree': '(ROOT (S (NP (NNP Mike)) (VP (VBD rode) (ADVP (RB as) (RB fast)) (SBAR (IN as) (S (NP (PRP he)) (VP (VP (MD could)) (, ,) (CC and) (VP (VBD made) (NP (PRP it)) (PP (TO to) (NP (DT the) (NN store)))))))) (. .)))', 'lemma': [(u'Mike', u'Mike', u'NNP'), (u'rode', u'ride', u'VBD'), (u'as', u'as', u'RB'), (u'fast', u'fast', u'RB'), (u'as', u'as', u'IN'), (u'he', u'he', u'PRP'), (u'could', u'could', u'MD'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'made', u'make', u'VBD'), (u'it', u'it', u'PRP'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'store', u'store', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Mike', 'rode', 'as', 'fast', 'as', 'he', 'could', ',', 'and', 'made', 'it', 'to', 'the', 'store', '.']}, {'string': ' The store was really big, but Mike found the sugar really fast.', 'parse': {'tree': '(ROOT (S (S (NP (DT The) (NN store)) (VP (VBD was) (ADJP (RB really) (JJ big)))) (, ,) (CC but) (S (NP (NNP Mike)) (VP (VBD found) (S (NP (DT the) (NN sugar)) (ADJP (RB really) (JJ fast))))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'store', u'store', u'NN'), (u'was', u'be', u'VBD'), (u'really', u'really', u'RB'), (u'big', u'big', u'JJ'), (u',', u',', u','), (u'but', u'but', u'CC'), (u'Mike', u'Mike', u'NNP'), (u'found', u'find', u'VBD'), (u'the', u'the', u'DT'), (u'sugar', u'sugar', u'NN'), (u'really', u'really', u'RB'), (u'fast', u'fast', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'store', 'was', 'really', 'big', ',', 'but', 'Mike', 'found', 'the', 'sugar', 'really', 'fast', '.']}, {'string': ' When Mike was on his way to the front of the store to pay for the sugar, he saw a toy he had been wanting for a long time.', 'parse': {'tree': '(ROOT (S (SBAR (WHADVP (WRB When)) (S (NP (NNP Mike)) (VP (VBD was) (PP (IN on) (NP (PRP$ his) (NN way))) (PP (TO to) (NP (NP (DT the) (NN front)) (PP (IN of) (NP (DT the) (NN store) (S (VP (TO to) (VP (VB pay) (PP (IN for) (NP (DT the) (NN sugar))))))))))))) (, ,) (NP (PRP he)) (VP (VBD saw) (NP (NP (DT a) (NN toy)) (SBAR (S (NP (PRP he)) (VP (VBD had) (VP (VBN been) (VP (VBG wanting) (PP (IN for) (NP (DT a) (JJ long) (NN time)))))))))) (. .)))', 'lemma': [(u'When', u'when', u'WRB'), (u'Mike', u'Mike', u'NNP'), (u'was', u'be', u'VBD'), (u'on', u'on', u'IN'), (u'his', u'he', u'PRP$'), (u'way', u'way', u'NN'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'front', u'front', u'NN'), (u'of', u'of', u'IN'), (u'the', u'the', u'DT'), (u'store', u'store', u'NN'), (u'to', u'to', u'TO'), (u'pay', u'pay', u'VB'), (u'for', u'for', u'IN'), (u'the', u'the', u'DT'), (u'sugar', u'sugar', u'NN'), (u',', u',', u','), (u'he', u'he', u'PRP'), (u'saw', u'see', u'VBD'), (u'a', u'a', u'DT'), (u'toy', u'toy', u'NN'), (u'he', u'he', u'PRP'), (u'had', u'have', u'VBD'), (u'been', u'be', u'VBN'), (u'wanting', u'want', u'VBG'), (u'for', u'for', u'IN'), (u'a', u'a', u'DT'), (u'long', u'long', u'JJ'), (u'time', u'time', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['When', 'Mike', 'was', 'on', 'his', 'way', 'to', 'the', 'front', 'of', 'the', 'store', 'to', 'pay', 'for', 'the', 'sugar', ',', 'he', 'saw', 'a', 'toy', 'he', 'had', 'been', 'wanting', 'for', 'a', 'long', 'time', '.']}, {'string': ' But Mike only had enough money to pay for the sugar or the toy.', 'parse': {'tree': '(ROOT (S (CC But) (NP (NNP Mike)) (ADVP (RB only)) (VP (VBD had) (NP (JJ enough) (NN money) (S (VP (TO to) (VP (VB pay) (PP (IN for) (NP (NP (DT the) (NN sugar)) (CC or) (NP (DT the) (NN toy))))))))) (. .)))', 'lemma': [(u'But', u'but', u'CC'), (u'Mike', u'Mike', u'NNP'), (u'only', u'only', u'RB'), (u'had', u'have', u'VBD'), (u'enough', u'enough', u'JJ'), (u'money', u'money', u'NN'), (u'to', u'to', u'TO'), (u'pay', u'pay', u'VB'), (u'for', u'for', u'IN'), (u'the', u'the', u'DT'), (u'sugar', u'sugar', u'NN'), (u'or', u'or', u'CC'), (u'the', u'the', u'DT'), (u'toy', u'toy', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['But', 'Mike', 'only', 'had', 'enough', 'money', 'to', 'pay', 'for', 'the', 'sugar', 'or', 'the', 'toy', '.']}, {'string': " Mike did n't know what to do!", 'parse': {'tree': "(ROOT (S (NP (NNP Mike)) (VP (VBD did) (RB n't) (VP (VB know) (SBAR (WHNP (WP what)) (S (VP (TO to) (VP (VB do))))))) (. !)))", 'lemma': [(u'Mike', u'Mike', u'NNP'), (u'did', u'do', u'VBD'), (u"n't", u'not', u'RB'), (u'know', u'know', u'VB'), (u'what', u'what', u'WP'), (u'to', u'to', u'TO'), (u'do', u'do', u'VB'), (u'!', u'!', u'.')]}, 'tokens': ['Mike', 'did', "n't", 'know', 'what', 'to', 'do', '!']}, {'string': ' The cake would taste good and would make his mom happy.', 'parse': {'tree': '(ROOT (S (NP (DT The) (NN cake)) (VP (VP (MD would) (VP (VB taste) (ADJP (JJ good)))) (CC and) (VP (MD would) (VP (VB make) (S (NP (PRP$ his) (NN mom)) (ADJP (JJ happy)))))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'cake', u'cake', u'NN'), (u'would', u'would', u'MD'), (u'taste', u'taste', u'VB'), (u'good', u'good', u'JJ'), (u'and', u'and', u'CC'), (u'would', u'would', u'MD'), (u'make', u'make', u'VB'), (u'his', u'he', u'PRP$'), (u'mom', u'mom', u'NN'), (u'happy', u'happy', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'cake', 'would', 'taste', 'good', 'and', 'would', 'make', 'his', 'mom', 'happy', '.']}, {'string': ' But, the toy was so cool!', 'parse': {'tree': '(ROOT (S (CC But) (, ,) (NP (DT the) (NN toy)) (VP (VBD was) (ADJP (RB so) (JJ cool))) (. !)))', 'lemma': [(u'But', u'but', u'CC'), (u',', u',', u','), (u'the', u'the', u'DT'), (u'toy', u'toy', u'NN'), (u'was', u'be', u'VBD'), (u'so', u'so', u'RB'), (u'cool', u'cool', u'JJ'), (u'!', u'!', u'.')]}, 'tokens': ['But', ',', 'the', 'toy', 'was', 'so', 'cool', '!']}, {'string': " Mike bought the sugar for his mom 's cake, because she was always so nice to him.", 'parse': {'tree': "(ROOT (S (NP (NNP Mike)) (VP (VBD bought) (NP (DT the) (NN sugar)) (PP (IN for) (NP (NP (PRP$ his) (NN mom) (POS 's)) (NN cake))) (, ,) (SBAR (IN because) (S (NP (PRP she)) (VP (VBD was) (ADVP (RB always)) (ADJP (RB so) (JJ nice) (PP (TO to) (NP (PRP him)))))))) (. .)))", 'lemma': [(u'Mike', u'Mike', u'NNP'), (u'bought', u'buy', u'VBD'), (u'the', u'the', u'DT'), (u'sugar', u'sugar', u'NN'), (u'for', u'for', u'IN'), (u'his', u'he', u'PRP$'), (u'mom', u'mom', u'NN'), (u"'s", u"'s", u'POS'), (u'cake', u'cake', u'NN'), (u',', u',', u','), (u'because', u'because', u'IN'), (u'she', u'she', u'PRP'), (u'was', u'be', u'VBD'), (u'always', u'always', u'RB'), (u'so', u'so', u'RB'), (u'nice', u'nice', u'JJ'), (u'to', u'to', u'TO'), (u'him', u'he', u'PRP'), (u'.', u'.', u'.')]}, 'tokens': ['Mike', 'bought', 'the', 'sugar', 'for', 'his', 'mom', "'s", 'cake', ',', 'because', 'she', 'was', 'always', 'so', 'nice', 'to', 'him', '.']}, {'string': ' He could always get the toy another time.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (MD could) (ADVP (RB always)) (VP (VB get) (NP (DT the) (NN toy)) (NP (DT another) (NN time)))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'could', u'could', u'MD'), (u'always', u'always', u'RB'), (u'get', u'get', u'VB'), (u'the', u'the', u'DT'), (u'toy', u'toy', u'NN'), (u'another', u'another', u'DT'), (u'time', u'time', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'could', 'always', 'get', 'the', 'toy', 'another', 'time', '.']}, {'string': ' 2.', 'parse': {'tree': '(ROOT (FRAG (NP (CD 2)) (. .)))', 'lemma': [(u'2', u'2', u'CD'), (u'.', u'.', u'.')]}, 'tokens': ['2', '.']}, {'string': ' What did Mike find at the store that he wanted to buy', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD did) (NP (NNP Mike)) (VP (VB find) (PP (IN at) (NP (DT the) (NN store))) (SBAR (IN that) (S (NP (PRP he)) (VP (VBD wanted) (S (VP (TO to) (VP (VB buy)))))))))))', 'lemma': [(u'What', u'what', u'WP'), (u'did', u'do', u'VBD'), (u'Mike', u'Mike', u'NNP'), (u'find', u'find', u'VB'), (u'at', u'at', u'IN'), (u'the', u'the', u'DT'), (u'store', u'store', u'NN'), (u'that', u'that', u'IN'), (u'he', u'he', u'PRP'), (u'wanted', u'want', u'VBD'), (u'to', u'to', u'TO'), (u'buy', u'buy', u'VB')]}, 'tokens': ['What', 'did', 'Mike', 'find', 'at', 'the', 'store', 'that', 'he', 'wanted', 'to', 'buy']}], 'questions': [{'question': {'string': ' Who did Mike play games with at the park?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP Who)) (SQ (VBD did) (NP (NNP Mike)) (VP (VB play) (NP (NNS games)) (PP (IN with) (PP (IN at) (NP (DT the) (NN park)))))) (. ?)))', 'lemma': [(u'Who', u'who', u'WP'), (u'did', u'do', u'VBD'), (u'Mike', u'Mike', u'NNP'), (u'play', u'play', u'VB'), (u'games', u'game', u'NNS'), (u'with', u'with', u'IN'), (u'at', u'at', u'IN'), (u'the', u'the', u'DT'), (u'park', u'park', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['Who', 'did', 'Mike', 'play', 'games', 'with', 'at', 'the', 'park', '?']}, 'answers': [{'string': ' Sally', 'parse': {'tree': '(ROOT (NP (NNP Sally)))', 'lemma': [(u'Sally', u'Sally', u'NNP')]}, 'tokens': ['Sally']}, {'string': ' His Dad', 'parse': {'tree': '(ROOT (FRAG (NP (PRP$ His) (NN Dad))))', 'lemma': [(u'His', u'he', u'PRP$'), (u'Dad', u'dad', u'NN')]}, 'tokens': ['His', 'Dad']}, {'string': ' His dog', 'parse': {'tree': '(ROOT (FRAG (NP (PRP$ His) (NN dog))))', 'lemma': [(u'His', u'he', u'PRP$'), (u'dog', u'dog', u'NN')]}, 'tokens': ['His', 'dog']}, {'string': ' His Mom', 'parse': {'tree': '(ROOT (FRAG (NP (PRP$ His) (NN Mom))))', 'lemma': [(u'His', u'he', u'PRP$'), (u'Mom', u'mom', u'NN')]}, 'tokens': ['His', 'Mom']}], 'mode': 0}, {'question': {'string': ' Why was Mike going to make a cake?', 'parse': {'tree': '(ROOT (SBARQ (WHADVP (WRB Why)) (SQ (VBD was) (NP (NNP Mike)) (VP (VBG going) (S (VP (TO to) (VP (VB make) (NP (DT a) (NN cake))))))) (. ?)))', 'lemma': [(u'Why', u'why', u'WRB'), (u'was', u'be', u'VBD'), (u'Mike', u'Mike', u'NNP'), (u'going', u'go', u'VBG'), (u'to', u'to', u'TO'), (u'make', u'make', u'VB'), (u'a', u'a', u'DT'), (u'cake', u'cake', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['Why', 'was', 'Mike', 'going', 'to', 'make', 'a', 'cake', '?']}, 'answers': [{'string': ' because he wanted to eat cake', 'parse': {'tree': '(ROOT (SBAR (IN because) (S (NP (PRP he)) (VP (VBD wanted) (S (VP (TO to) (VP (VB eat) (NP (NN cake)))))))))', 'lemma': [(u'because', u'because', u'IN'), (u'he', u'he', u'PRP'), (u'wanted', u'want', u'VBD'), (u'to', u'to', u'TO'), (u'eat', u'eat', u'VB'), (u'cake', u'cake', u'NN')]}, 'tokens': ['because', 'he', 'wanted', 'to', 'eat', 'cake']}, {'string': " It was Mike 's mom 's birthday", 'parse': {'tree': "(ROOT (S (NP (PRP It)) (VP (VBD was) (NP (NP (NP (NNP Mike) (POS 's)) (NN mom) (POS 's)) (NN birthday)))))", 'lemma': [(u'It', u'it', u'PRP'), (u'was', u'be', u'VBD'), (u'Mike', u'Mike', u'NNP'), (u"'s", u"'s", u'POS'), (u'mom', u'mom', u'NN'), (u"'s", u"'s", u'POS'), (u'birthday', u'birthday', u'NN')]}, 'tokens': ['It', 'was', 'Mike', "'s", 'mom', "'s", 'birthday']}, {'string': ' He really likes to bake', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (ADVP (RB really)) (VBZ likes) (S (VP (TO to) (VP (VB bake)))))))', 'lemma': [(u'He', u'he', u'PRP'), (u'really', u'really', u'RB'), (u'likes', u'like', u'VBZ'), (u'to', u'to', u'TO'), (u'bake', u'bake', u'VB')]}, 'tokens': ['He', 'really', 'likes', 'to', 'bake']}, {'string': " It was Mike 's birthday", 'parse': {'tree': "(ROOT (S (NP (PRP It)) (VP (VBD was) (NP (NP (NNP Mike) (POS 's)) (NN birthday)))))", 'lemma': [(u'It', u'it', u'PRP'), (u'was', u'be', u'VBD'), (u'Mike', u'Mike', u'NNP'), (u"'s", u"'s", u'POS'), (u'birthday', u'birthday', u'NN')]}, 'tokens': ['It', 'was', 'Mike', "'s", 'birthday']}], 'mode': 1}, {'question': {'string': ' What did Mike almost buy instead of the sugar?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD did) (NP (NNP Mike)) (VP (ADVP (RB almost)) (VB buy) (ADVP (RB instead)) (PP (IN of) (NP (DT the) (NN sugar))))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'did', u'do', u'VBD'), (u'Mike', u'Mike', u'NNP'), (u'almost', u'almost', u'RB'), (u'buy', u'buy', u'VB'), (u'instead', u'instead', u'RB'), (u'of', u'of', u'IN'), (u'the', u'the', u'DT'), (u'sugar', u'sugar', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'did', 'Mike', 'almost', 'buy', 'instead', 'of', 'the', 'sugar', '?']}, 'answers': [{'string': ' A bag of flour', 'parse': {'tree': '(ROOT (NP (NP (DT A) (NN bag)) (PP (IN of) (NP (NN flour)))))', 'lemma': [(u'A', u'a', u'DT'), (u'bag', u'bag', u'NN'), (u'of', u'of', u'IN'), (u'flour', u'flour', u'NN')]}, 'tokens': ['A', 'bag', 'of', 'flour']}, {'string': ' Flowers for his Mom', 'parse': {'tree': '(ROOT (NP (NP (NNS Flowers)) (PP (IN for) (NP (PRP$ his) (NN Mom)))))', 'lemma': [(u'Flowers', u'flower', u'NNS'), (u'for', u'for', u'IN'), (u'his', u'he', u'PRP$'), (u'Mom', u'mom', u'NN')]}, 'tokens': ['Flowers', 'for', 'his', 'Mom']}, {'string': ' A toy he really wanted', 'parse': {'tree': '(ROOT (FRAG (NP (DT A) (NN toy) (SBAR (S (NP (PRP he)) (ADVP (RB really)) (VP (VBD wanted)))))))', 'lemma': [(u'A', u'a', u'DT'), (u'toy', u'toy', u'NN'), (u'he', u'he', u'PRP'), (u'really', u'really', u'RB'), (u'wanted', u'want', u'VBD')]}, 'tokens': ['A', 'toy', 'he', 'really', 'wanted']}, {'string': ' His favorite candy', 'parse': {'tree': '(ROOT (FRAG (NP (PRP$ His) (JJ favorite) (NN candy))))', 'lemma': [(u'His', u'he', u'PRP$'), (u'favorite', u'favorite', u'JJ'), (u'candy', u'candy', u'NN')]}, 'tokens': ['His', 'favorite', 'candy']}], 'mode': 1}, {'question': {'string': ' Why did Mike want to buy the toy and the sugar?', 'parse': {'tree': '(ROOT (SBARQ (WHADVP (WRB Why)) (SQ (VBD did) (NP (NNP Mike)) (VP (VB want) (S (VP (TO to) (VP (VB buy) (NP (NP (DT the) (NN toy)) (CC and) (NP (DT the) (NN sugar)))))))) (. ?)))', 'lemma': [(u'Why', u'why', u'WRB'), (u'did', u'do', u'VBD'), (u'Mike', u'Mike', u'NNP'), (u'want', u'want', u'VB'), (u'to', u'to', u'TO'), (u'buy', u'buy', u'VB'), (u'the', u'the', u'DT'), (u'toy', u'toy', u'NN'), (u'and', u'and', u'CC'), (u'the', u'the', u'DT'), (u'sugar', u'sugar', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['Why', 'did', 'Mike', 'want', 'to', 'buy', 'the', 'toy', 'and', 'the', 'sugar', '?']}, 'answers': [{'string': ' the toy was cool, and he needed sugar for the cake', 'parse': {'tree': '(ROOT (S (S (NP (DT the) (NN toy)) (VP (VBD was) (ADJP (JJ cool)))) (, ,) (CC and) (S (NP (PRP he)) (VP (VBD needed) (NP (NN sugar)) (PP (IN for) (NP (DT the) (NN cake)))))))', 'lemma': [(u'the', u'the', u'DT'), (u'toy', u'toy', u'NN'), (u'was', u'be', u'VBD'), (u'cool', u'cool', u'JJ'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'he', u'he', u'PRP'), (u'needed', u'need', u'VBD'), (u'sugar', u'sugar', u'NN'), (u'for', u'for', u'IN'), (u'the', u'the', u'DT'), (u'cake', u'cake', u'NN')]}, 'tokens': ['the', 'toy', 'was', 'cool', ',', 'and', 'he', 'needed', 'sugar', 'for', 'the', 'cake']}, {'string': " The toy was for his mom 's present, and the sugar was for her cake", 'parse': {'tree': "(ROOT (S (S (NP (DT The) (NN toy)) (VP (VBD was) (PP (IN for) (NP (NP (PRP$ his) (NN mom) (POS 's)) (NN present))))) (, ,) (CC and) (S (NP (DT the) (NN sugar)) (VP (VBD was) (PP (IN for) (NP (PRP$ her) (NN cake)))))))", 'lemma': [(u'The', u'the', u'DT'), (u'toy', u'toy', u'NN'), (u'was', u'be', u'VBD'), (u'for', u'for', u'IN'), (u'his', u'he', u'PRP$'), (u'mom', u'mom', u'NN'), (u"'s", u"'s", u'POS'), (u'present', u'present', u'NN'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'the', u'the', u'DT'), (u'sugar', u'sugar', u'NN'), (u'was', u'be', u'VBD'), (u'for', u'for', u'IN'), (u'her', u'she', u'PRP$'), (u'cake', u'cake', u'NN')]}, 'tokens': ['The', 'toy', 'was', 'for', 'his', 'mom', "'s", 'present', ',', 'and', 'the', 'sugar', 'was', 'for', 'her', 'cake']}, {'string': ' it was the last toy there, and the sugar would taste good', 'parse': {'tree': '(ROOT (S (S (NP (PRP it)) (VP (VBD was) (NP (DT the) (JJ last) (NN toy)) (ADVP (RB there)))) (, ,) (CC and) (S (NP (DT the) (NN sugar)) (VP (MD would) (VP (VB taste) (ADJP (JJ good)))))))', 'lemma': [(u'it', u'it', u'PRP'), (u'was', u'be', u'VBD'), (u'the', u'the', u'DT'), (u'last', u'last', u'JJ'), (u'toy', u'toy', u'NN'), (u'there', u'there', u'RB'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'the', u'the', u'DT'), (u'sugar', u'sugar', u'NN'), (u'would', u'would', u'MD'), (u'taste', u'taste', u'VB'), (u'good', u'good', u'JJ')]}, 'tokens': ['it', 'was', 'the', 'last', 'toy', 'there', ',', 'and', 'the', 'sugar', 'would', 'taste', 'good']}, {'string': " his dad wanted the toy, and the sugar was for his mom 's cake", 'parse': {'tree': "(ROOT (S (S (NP (PRP$ his) (NN dad)) (VP (VBD wanted) (NP (DT the) (NN toy)))) (, ,) (CC and) (S (NP (DT the) (NN sugar)) (VP (VBD was) (PP (IN for) (NP (NP (PRP$ his) (NN mom) (POS 's)) (NN cake)))))))", 'lemma': [(u'his', u'he', u'PRP$'), (u'dad', u'dad', u'NN'), (u'wanted', u'want', u'VBD'), (u'the', u'the', u'DT'), (u'toy', u'toy', u'NN'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'the', u'the', u'DT'), (u'sugar', u'sugar', u'NN'), (u'was', u'be', u'VBD'), (u'for', u'for', u'IN'), (u'his', u'he', u'PRP$'), (u'mom', u'mom', u'NN'), (u"'s", u"'s", u'POS'), (u'cake', u'cake', u'NN')]}, 'tokens': ['his', 'dad', 'wanted', 'the', 'toy', ',', 'and', 'the', 'sugar', 'was', 'for', 'his', 'mom', "'s", 'cake']}], 'mode': 0}]}
{'sentences': [{'string': ' The angel alligator was quite the sight!', 'parse': {'tree': '(ROOT (S (NP (DT The) (JJ angel) (NN alligator)) (VP (VBD was) (ADVP (RB quite) (NP (DT the) (NN sight)))) (. !)))', 'lemma': [(u'The', u'the', u'DT'), (u'angel', u'angel', u'JJ'), (u'alligator', u'alligator', u'NN'), (u'was', u'be', u'VBD'), (u'quite', u'quite', u'RB'), (u'the', u'the', u'DT'), (u'sight', u'sight', u'NN'), (u'!', u'!', u'.')]}, 'tokens': ['The', 'angel', 'alligator', 'was', 'quite', 'the', 'sight', '!']}, {'string': ' It loved to scream with all its might!', 'parse': {'tree': '(ROOT (S (NP (PRP It)) (VP (VBD loved) (S (VP (TO to) (VP (VB scream) (PP (IN with) (NP (PDT all) (PRP$ its) (NN might))))))) (. !)))', 'lemma': [(u'It', u'it', u'PRP'), (u'loved', u'love', u'VBD'), (u'to', u'to', u'TO'), (u'scream', u'scream', u'VB'), (u'with', u'with', u'IN'), (u'all', u'all', u'PDT'), (u'its', u'its', u'PRP$'), (u'might', u'might', u'NN'), (u'!', u'!', u'.')]}, 'tokens': ['It', 'loved', 'to', 'scream', 'with', 'all', 'its', 'might', '!']}, {'string': ' It loved to roll in mud and sun.', 'parse': {'tree': '(ROOT (S (NP (PRP It)) (VP (VBD loved) (S (VP (TO to) (VP (VB roll) (PP (IN in) (NP (NN mud) (CC and) (NN sun))))))) (. .)))', 'lemma': [(u'It', u'it', u'PRP'), (u'loved', u'love', u'VBD'), (u'to', u'to', u'TO'), (u'roll', u'roll', u'VB'), (u'in', u'in', u'IN'), (u'mud', u'mud', u'NN'), (u'and', u'and', u'CC'), (u'sun', u'sun', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['It', 'loved', 'to', 'roll', 'in', 'mud', 'and', 'sun', '.']}, {'string': ' Then it would go for a run.', 'parse': {'tree': '(ROOT (S (RB Then) (NP (PRP it)) (VP (MD would) (VP (VB go) (PP (IN for) (NP (DT a) (NN run))))) (. .)))', 'lemma': [(u'Then', u'then', u'RB'), (u'it', u'it', u'PRP'), (u'would', u'would', u'MD'), (u'go', u'go', u'VB'), (u'for', u'for', u'IN'), (u'a', u'a', u'DT'), (u'run', u'run', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Then', 'it', 'would', 'go', 'for', 'a', 'run', '.']}, {'string': ' But why did it run?', 'parse': {'tree': '(ROOT (SBARQ (CC But) (WHADVP (WRB why)) (SQ (VBD did) (NP (PRP it)) (VP (VB run))) (. ?)))', 'lemma': [(u'But', u'but', u'CC'), (u'why', u'why', u'WRB'), (u'did', u'do', u'VBD'), (u'it', u'it', u'PRP'), (u'run', u'run', u'VB'), (u'?', u'?', u'.')]}, 'tokens': ['But', 'why', 'did', 'it', 'run', '?']}, {'string': ' Why did it scream?', 'parse': {'tree': '(ROOT (SBARQ (WHADVP (WRB Why)) (SQ (VBD did) (NP (PRP it)) (VP (VB scream))) (. ?)))', 'lemma': [(u'Why', u'why', u'WRB'), (u'did', u'do', u'VBD'), (u'it', u'it', u'PRP'), (u'scream', u'scream', u'VB'), (u'?', u'?', u'.')]}, 'tokens': ['Why', 'did', 'it', 'scream', '?']}, {'string': ' It had a fork in its butt!', 'parse': {'tree': '(ROOT (S (NP (PRP It)) (VP (VBD had) (NP (NP (DT a) (NN fork)) (PP (IN in) (NP (PRP$ its) (NN butt))))) (. !)))', 'lemma': [(u'It', u'it', u'PRP'), (u'had', u'have', u'VBD'), (u'a', u'a', u'DT'), (u'fork', u'fork', u'NN'), (u'in', u'in', u'IN'), (u'its', u'its', u'PRP$'), (u'butt', u'butt', u'NN'), (u'!', u'!', u'.')]}, 'tokens': ['It', 'had', 'a', 'fork', 'in', 'its', 'butt', '!']}, {'string': ' It sat in a trashcan.', 'parse': {'tree': '(ROOT (S (NP (PRP It)) (VP (VBD sat) (PP (IN in) (NP (DT a) (NN trashcan)))) (. .)))', 'lemma': [(u'It', u'it', u'PRP'), (u'sat', u'sit', u'VBD'), (u'in', u'in', u'IN'), (u'a', u'a', u'DT'), (u'trashcan', u'trashcan', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['It', 'sat', 'in', 'a', 'trashcan', '.']}, {'string': ' This was not a smart thing to do!', 'parse': {'tree': '(ROOT (S (NP (DT This)) (VP (VBD was) (RB not) (NP (DT a) (JJ smart) (NN thing) (S (VP (TO to) (VP (VB do)))))) (. !)))', 'lemma': [(u'This', u'this', u'DT'), (u'was', u'be', u'VBD'), (u'not', u'not', u'RB'), (u'a', u'a', u'DT'), (u'smart', u'smart', u'JJ'), (u'thing', u'thing', u'NN'), (u'to', u'to', u'TO'), (u'do', u'do', u'VB'), (u'!', u'!', u'.')]}, 'tokens': ['This', 'was', 'not', 'a', 'smart', 'thing', 'to', 'do', '!']}, {'string': ' But he did it, oh yes, oh me, oh you!', 'parse': {'tree': '(ROOT (S (CC But) (NP (PRP he)) (VP (VP (VBD did) (NP (PRP it)) (, ,) (INTJ (UH oh) (UH yes)) (, ,) (NP (INTJ (UH oh)) (NP (PRP me)))) (, ,) (NP (INTJ (UH oh)) (NP (PRP you)))) (. !)))', 'lemma': [(u'But', u'but', u'CC'), (u'he', u'he', u'PRP'), (u'did', u'do', u'VBD'), (u'it', u'it', u'PRP'), (u',', u',', u','), (u'oh', u'oh', u'UH'), (u'yes', u'yes', u'UH'), (u',', u',', u','), (u'oh', u'oh', u'UH'), (u'me', u'I', u'PRP'), (u',', u',', u','), (u'oh', u'oh', u'UH'), (u'you', u'you', u'PRP'), (u'!', u'!', u'.')]}, 'tokens': ['But', 'he', 'did', 'it', ',', 'oh', 'yes', ',', 'oh', 'me', ',', 'oh', 'you', '!']}, {'string': ' The alligator had a beard.', 'parse': {'tree': '(ROOT (S (NP (DT The) (NN alligator)) (VP (VBD had) (NP (DT a) (NN beard))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'alligator', u'alligator', u'NN'), (u'had', u'have', u'VBD'), (u'a', u'a', u'DT'), (u'beard', u'beard', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'alligator', 'had', 'a', 'beard', '.']}, {'string': ' It was a great beard.', 'parse': {'tree': '(ROOT (S (NP (PRP It)) (VP (VBD was) (NP (DT a) (JJ great) (NN beard))) (. .)))', 'lemma': [(u'It', u'it', u'PRP'), (u'was', u'be', u'VBD'), (u'a', u'a', u'DT'), (u'great', u'great', u'JJ'), (u'beard', u'beard', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['It', 'was', 'a', 'great', 'beard', '.']}, {'string': ' But nobody ever talked about his beard.', 'parse': {'tree': '(ROOT (S (CC But) (NP (NN nobody)) (ADVP (RB ever)) (VP (VBD talked) (PP (IN about) (NP (PRP$ his) (NN beard)))) (. .)))', 'lemma': [(u'But', u'but', u'CC'), (u'nobody', u'nobody', u'NN'), (u'ever', u'ever', u'RB'), (u'talked', u'talk', u'VBD'), (u'about', u'about', u'IN'), (u'his', u'he', u'PRP$'), (u'beard', u'beard', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['But', 'nobody', 'ever', 'talked', 'about', 'his', 'beard', '.']}, {'string': ' Why?', 'parse': {'tree': '(ROOT (FRAG (WRB Why) (. ?)))', 'lemma': [(u'Why', u'why', u'WRB'), (u'?', u'?', u'.')]}, 'tokens': ['Why', '?']}, {'string': ' Because they would only see the fork in its butt!', 'parse': {'tree': '(ROOT (FRAG (SBAR (IN Because) (S (NP (PRP they)) (VP (MD would) (ADVP (RB only)) (VP (VB see) (NP (NP (DT the) (NN fork)) (PP (IN in) (NP (PRP$ its) (NN butt)))))))) (. !)))', 'lemma': [(u'Because', u'because', u'IN'), (u'they', u'they', u'PRP'), (u'would', u'would', u'MD'), (u'only', u'only', u'RB'), (u'see', u'see', u'VB'), (u'the', u'the', u'DT'), (u'fork', u'fork', u'NN'), (u'in', u'in', u'IN'), (u'its', u'its', u'PRP$'), (u'butt', u'butt', u'NN'), (u'!', u'!', u'.')]}, 'tokens': ['Because', 'they', 'would', 'only', 'see', 'the', 'fork', 'in', 'its', 'butt', '!']}, {'string': ' But one day, the alligator made a friend.', 'parse': {'tree': '(ROOT (S (CC But) (NP (CD one) (NN day)) (, ,) (NP (DT the) (NN alligator)) (VP (VBD made) (NP (DT a) (NN friend))) (. .)))', 'lemma': [(u'But', u'but', u'CC'), (u'one', u'one', u'CD'), (u'day', u'day', u'NN'), (u',', u',', u','), (u'the', u'the', u'DT'), (u'alligator', u'alligator', u'NN'), (u'made', u'make', u'VBD'), (u'a', u'a', u'DT'), (u'friend', u'friend', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['But', 'one', 'day', ',', 'the', 'alligator', 'made', 'a', 'friend', '.']}, {'string': ' The friend needed a fork.', 'parse': {'tree': '(ROOT (S (NP (DT The) (NN friend)) (VP (VBD needed) (NP (DT a) (NN fork))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'friend', u'friend', u'NN'), (u'needed', u'need', u'VBD'), (u'a', u'a', u'DT'), (u'fork', u'fork', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'friend', 'needed', 'a', 'fork', '.']}, {'string': ' How was he to eat his spaghetti without a fork?', 'parse': {'tree': '(ROOT (SBARQ (WHADVP (WRB How)) (SQ (VBD was) (NP (NP (PRP he)) (S (VP (TO to) (VP (VB eat) (NP (PRP$ his) (NNS spaghetti)) (PP (IN without) (NP (DT a) (NN fork)))))))) (. ?)))', 'lemma': [(u'How', u'how', u'WRB'), (u'was', u'be', u'VBD'), (u'he', u'he', u'PRP'), (u'to', u'to', u'TO'), (u'eat', u'eat', u'VB'), (u'his', u'he', u'PRP$'), (u'spaghetti', u'spaghetti', u'NNS'), (u'without', u'without', u'IN'), (u'a', u'a', u'DT'), (u'fork', u'fork', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['How', 'was', 'he', 'to', 'eat', 'his', 'spaghetti', 'without', 'a', 'fork', '?']}, {'string': " But ... I 'm not sure a butt fork is the best way to eat spaghetti.", 'parse': {'tree': "(ROOT (S (ADVP (CC But)) (: ...) (NP (PRP I)) (VP (VBP 'm) (RB not) (ADJP (JJ sure) (SBAR (S (NP (DT a) (NN butt) (NN fork)) (VP (VBZ is) (NP (NP (DT the) (JJS best) (NN way)) (SBAR (S (VP (TO to) (VP (VB eat) (NP (NNS spaghetti)))))))))))) (. .)))", 'lemma': [(u'But', u'but', u'CC'), (u'...', u'...', u':'), (u'I', u'I', u'PRP'), (u"'m", u'be', u'VBP'), (u'not', u'not', u'RB'), (u'sure', u'sure', u'JJ'), (u'a', u'a', u'DT'), (u'butt', u'butt', u'NN'), (u'fork', u'fork', u'NN'), (u'is', u'be', u'VBZ'), (u'the', u'the', u'DT'), (u'best', u'best', u'JJS'), (u'way', u'way', u'NN'), (u'to', u'to', u'TO'), (u'eat', u'eat', u'VB'), (u'spaghetti', u'spaghetti', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['But', '...', 'I', "'m", 'not', 'sure', 'a', 'butt', 'fork', 'is', 'the', 'best', 'way', 'to', 'eat', 'spaghetti', '.']}, {'string': ' Do you?', 'parse': {'tree': '(ROOT (SQ (VP (VB Do) (NP (PRP you))) (. ?)))', 'lemma': [(u'Do', u'do', u'VB'), (u'you', u'you', u'PRP'), (u'?', u'?', u'.')]}, 'tokens': ['Do', 'you', '?']}], 'questions': [{'question': {'string': ' What did the angel alligator have?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD did) (NP (DT the) (JJ angel) (NN alligator)) (VP (VB have))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'did', u'do', u'VBD'), (u'the', u'the', u'DT'), (u'angel', u'angel', u'JJ'), (u'alligator', u'alligator', u'NN'), (u'have', u'have', u'VB'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'did', 'the', 'angel', 'alligator', 'have', '?']}, 'answers': [{'string': ' a trashcan', 'parse': {'tree': '(ROOT (FRAG (NP (DT a) (NN trashcan))))', 'lemma': [(u'a', u'a', u'DT'), (u'trashcan', u'trashcan', u'NN')]}, 'tokens': ['a', 'trashcan']}, {'string': ' spaghetti', 'parse': {'tree': '(ROOT (NP (NNS spaghetti)))', 'lemma': [(u'spaghetti', u'spaghetti', u'NNS')]}, 'tokens': ['spaghetti']}, {'string': ' a spoon', 'parse': {'tree': '(ROOT (FRAG (NP (DT a) (NN spoon))))', 'lemma': [(u'a', u'a', u'DT'), (u'spoon', u'spoon', u'NN')]}, 'tokens': ['a', 'spoon']}, {'string': ' a beard', 'parse': {'tree': '(ROOT (FRAG (X (SYM a)) (VP (VBD beard))))', 'lemma': [(u'a', u'a', u'SYM'), (u'beard', u'beard', u'VBD')]}, 'tokens': ['a', 'beard']}], 'mode': 1}, {'question': {'string': ' What did the friend need?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD did) (NP (DT the) (NN friend)) (VP (VB need))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'did', u'do', u'VBD'), (u'the', u'the', u'DT'), (u'friend', u'friend', u'NN'), (u'need', u'need', u'VB'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'did', 'the', 'friend', 'need', '?']}, 'answers': [{'string': ' an alligator', 'parse': {'tree': '(ROOT (FRAG (NP (DT an) (NN alligator))))', 'lemma': [(u'an', u'a', u'DT'), (u'alligator', u'alligator', u'NN')]}, 'tokens': ['an', 'alligator']}, {'string': ' spaghetti', 'parse': {'tree': '(ROOT (NP (NNS spaghetti)))', 'lemma': [(u'spaghetti', u'spaghetti', u'NNS')]}, 'tokens': ['spaghetti']}, {'string': ' a butt', 'parse': {'tree': '(ROOT (FRAG (DT a) (JJ butt)))', 'lemma': [(u'a', u'a', u'DT'), (u'butt', u'butt', u'JJ')]}, 'tokens': ['a', 'butt']}, {'string': ' a fork', 'parse': {'tree': '(ROOT (FRAG (NP (DT a) (NN fork))))', 'lemma': [(u'a', u'a', u'DT'), (u'fork', u'fork', u'NN')]}, 'tokens': ['a', 'fork']}], 'mode': 1}, {'question': {'string': ' What was not a smart thing to do?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD was) (NP (NP (RB not) (DT a) (JJ smart) (NN thing)) (S (VP (TO to) (VP (VB do)))))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'was', u'be', u'VBD'), (u'not', u'not', u'RB'), (u'a', u'a', u'DT'), (u'smart', u'smart', u'JJ'), (u'thing', u'thing', u'NN'), (u'to', u'to', u'TO'), (u'do', u'do', u'VB'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'was', 'not', 'a', 'smart', 'thing', 'to', 'do', '?']}, 'answers': [{'string': ' eating spaghetti', 'parse': {'tree': '(ROOT (NP (JJ eating) (NNS spaghetti)))', 'lemma': [(u'eating', u'eating', u'JJ'), (u'spaghetti', u'spaghetti', u'NNS')]}, 'tokens': ['eating', 'spaghetti']}, {'string': ' going for a run', 'parse': {'tree': '(ROOT (S (VP (VBG going) (PP (IN for) (NP (DT a) (NN run))))))', 'lemma': [(u'going', u'go', u'VBG'), (u'for', u'for', u'IN'), (u'a', u'a', u'DT'), (u'run', u'run', u'NN')]}, 'tokens': ['going', 'for', 'a', 'run']}, {'string': ' rolling in the mud', 'parse': {'tree': '(ROOT (S (VP (VBG rolling) (PP (IN in) (NP (DT the) (NN mud))))))', 'lemma': [(u'rolling', u'roll', u'VBG'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'mud', u'mud', u'NN')]}, 'tokens': ['rolling', 'in', 'the', 'mud']}, {'string': ' sitting in a trashcan', 'parse': {'tree': '(ROOT (S (VP (VBG sitting) (PP (IN in) (NP (DT a) (NN trashcan))))))', 'lemma': [(u'sitting', u'sit', u'VBG'), (u'in', u'in', u'IN'), (u'a', u'a', u'DT'), (u'trashcan', u'trashcan', u'NN')]}, 'tokens': ['sitting', 'in', 'a', 'trashcan']}], 'mode': 0}, {'question': {'string': ' What did the angel alligator love to do?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD did) (NP (DT the) (JJ angel) (NN alligator)) (VP (VB love) (S (VP (TO to) (VP (VB do)))))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'did', u'do', u'VBD'), (u'the', u'the', u'DT'), (u'angel', u'angel', u'JJ'), (u'alligator', u'alligator', u'NN'), (u'love', u'love', u'VB'), (u'to', u'to', u'TO'), (u'do', u'do', u'VB'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'did', 'the', 'angel', 'alligator', 'love', 'to', 'do', '?']}, 'answers': [{'string': ' scream and roll', 'parse': {'tree': '(ROOT (S (VP (VB scream) (CC and) (VB roll))))', 'lemma': [(u'scream', u'scream', u'VB'), (u'and', u'and', u'CC'), (u'roll', u'roll', u'VB')]}, 'tokens': ['scream', 'and', 'roll']}, {'string': ' run and eat', 'parse': {'tree': '(ROOT (S (VP (VB run) (CC and) (VB eat))))', 'lemma': [(u'run', u'run', u'VB'), (u'and', u'and', u'CC'), (u'eat', u'eat', u'VB')]}, 'tokens': ['run', 'and', 'eat']}, {'string': ' eat and run', 'parse': {'tree': '(ROOT (S (VP (VB eat) (CC and) (VB run))))', 'lemma': [(u'eat', u'eat', u'VB'), (u'and', u'and', u'CC'), (u'run', u'run', u'VB')]}, 'tokens': ['eat', 'and', 'run']}, {'string': ' see and talk', 'parse': {'tree': '(ROOT (S (VP (VB see) (CC and) (VB talk))))', 'lemma': [(u'see', u'see', u'VB'), (u'and', u'and', u'CC'), (u'talk', u'talk', u'VB')]}, 'tokens': ['see', 'and', 'talk']}], 'mode': 0}]}
{'sentences': [{'string': ' One morning, I woke up and went downstairs for breakfast.', 'parse': {'tree': '(ROOT (S (NP (CD One) (NN morning)) (, ,) (NP (PRP I)) (VP (VP (VBD woke) (PRT (RP up))) (CC and) (VP (VBD went) (NP (NNS downstairs)) (PP (IN for) (NP (NN breakfast))))) (. .)))', 'lemma': [(u'One', u'one', u'CD'), (u'morning', u'morning', u'NN'), (u',', u',', u','), (u'I', u'I', u'PRP'), (u'woke', u'wake', u'VBD'), (u'up', u'up', u'RP'), (u'and', u'and', u'CC'), (u'went', u'go', u'VBD'), (u'downstairs', u'downstairs', u'NNS'), (u'for', u'for', u'IN'), (u'breakfast', u'breakfast', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['One', 'morning', ',', 'I', 'woke', 'up', 'and', 'went', 'downstairs', 'for', 'breakfast', '.']}, {'string': ' I fixed my normal breakfast: hot pickles, marshmallows, and ketchup.', 'parse': {'tree': '(ROOT (S (NP (PRP I)) (VP (VBD fixed) (NP (NP (PRP$ my) (JJ normal) (NN breakfast)) (: :) (NP (NP (JJ hot) (NNS pickles)) (, ,) (NP (NNS marshmallows)) (, ,) (CC and) (NP (NN ketchup))))) (. .)))', 'lemma': [(u'I', u'I', u'PRP'), (u'fixed', u'fix', u'VBD'), (u'my', u'my', u'PRP$'), (u'normal', u'normal', u'JJ'), (u'breakfast', u'breakfast', u'NN'), (u':', u':', u':'), (u'hot', u'hot', u'JJ'), (u'pickles', u'pickle', u'NNS'), (u',', u',', u','), (u'marshmallows', u'marshmallow', u'NNS'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'ketchup', u'ketchup', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['I', 'fixed', 'my', 'normal', 'breakfast', ':', 'hot', 'pickles', ',', 'marshmallows', ',', 'and', 'ketchup', '.']}, {'string': ' First I heat up the pickles on the stove, then I put the marshmallows in the toaster as I pour out my small plate of ketchup.', 'parse': {'tree': '(ROOT (S (LST (JJ First)) (S (NP (PRP I)) (VP (VB heat) (PRT (RP up)) (NP (NP (DT the) (NNS pickles)) (PP (IN on) (NP (DT the) (NN stove)))))) (, ,) (RB then) (S (NP (PRP I)) (VP (VBD put) (NP (DT the) (NNS marshmallows)) (PP (IN in) (NP (DT the) (NN toaster))) (SBAR (IN as) (S (NP (PRP I)) (VP (VBP pour) (PRT (RP out)) (NP (NP (PRP$ my) (JJ small) (NN plate)) (PP (IN of) (NP (NN ketchup))))))))) (. .)))', 'lemma': [(u'First', u'first', u'JJ'), (u'I', u'I', u'PRP'), (u'heat', u'heat', u'VB'), (u'up', u'up', u'RP'), (u'the', u'the', u'DT'), (u'pickles', u'pickle', u'NNS'), (u'on', u'on', u'IN'), (u'the', u'the', u'DT'), (u'stove', u'stove', u'NN'), (u',', u',', u','), (u'then', u'then', u'RB'), (u'I', u'I', u'PRP'), (u'put', u'put', u'VBD'), (u'the', u'the', u'DT'), (u'marshmallows', u'marshmallow', u'NNS'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'toaster', u'toaster', u'NN'), (u'as', u'as', u'IN'), (u'I', u'I', u'PRP'), (u'pour', u'pour', u'VBP'), (u'out', u'out', u'RP'), (u'my', u'my', u'PRP$'), (u'small', u'small', u'JJ'), (u'plate', u'plate', u'NN'), (u'of', u'of', u'IN'), (u'ketchup', u'ketchup', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['First', 'I', 'heat', 'up', 'the', 'pickles', 'on', 'the', 'stove', ',', 'then', 'I', 'put', 'the', 'marshmallows', 'in', 'the', 'toaster', 'as', 'I', 'pour', 'out', 'my', 'small', 'plate', 'of', 'ketchup', '.']}, {'string': ' Delicious!', 'parse': {'tree': '(ROOT (INTJ (UH Delicious) (. !)))', 'lemma': [(u'Delicious', u'delicious', u'UH'), (u'!', u'!', u'.')]}, 'tokens': ['Delicious', '!']}, {'string': ' I eat it every morning, often with a tall glass of lemonade.', 'parse': {'tree': '(ROOT (S (NP (PRP I)) (VP (VBP eat) (NP (PRP it)) (NP (DT every) (NN morning)) (, ,) (PP (ADVP (RB often)) (IN with) (NP (NP (DT a) (JJ tall) (NN glass)) (PP (IN of) (NP (NN lemonade)))))) (. .)))', 'lemma': [(u'I', u'I', u'PRP'), (u'eat', u'eat', u'VBP'), (u'it', u'it', u'PRP'), (u'every', u'every', u'DT'), (u'morning', u'morning', u'NN'), (u',', u',', u','), (u'often', u'often', u'RB'), (u'with', u'with', u'IN'), (u'a', u'a', u'DT'), (u'tall', u'tall', u'JJ'), (u'glass', u'glass', u'NN'), (u'of', u'of', u'IN'), (u'lemonade', u'lemonade', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['I', 'eat', 'it', 'every', 'morning', ',', 'often', 'with', 'a', 'tall', 'glass', 'of', 'lemonade', '.']}, {'string': ' I sat down at the table to eat, and looked out the window at the birds in my yard.', 'parse': {'tree': '(ROOT (S (NP (PRP I)) (VP (VP (VBD sat) (PRT (RP down)) (PP (IN at) (NP (DT the) (NN table))) (S (VP (TO to) (VP (VB eat))))) (, ,) (CC and) (VP (VBD looked) (PRT (RP out)) (NP (DT the) (NN window)) (PP (IN at) (NP (DT the) (NNS birds))) (PP (IN in) (NP (PRP$ my) (NN yard))))) (. .)))', 'lemma': [(u'I', u'I', u'PRP'), (u'sat', u'sit', u'VBD'), (u'down', u'down', u'RP'), (u'at', u'at', u'IN'), (u'the', u'the', u'DT'), (u'table', u'table', u'NN'), (u'to', u'to', u'TO'), (u'eat', u'eat', u'VB'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'looked', u'look', u'VBD'), (u'out', u'out', u'RP'), (u'the', u'the', u'DT'), (u'window', u'window', u'NN'), (u'at', u'at', u'IN'), (u'the', u'the', u'DT'), (u'birds', u'bird', u'NNS'), (u'in', u'in', u'IN'), (u'my', u'my', u'PRP$'), (u'yard', u'yard', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['I', 'sat', 'down', 'at', 'the', 'table', 'to', 'eat', ',', 'and', 'looked', 'out', 'the', 'window', 'at', 'the', 'birds', 'in', 'my', 'yard', '.']}, {'string': ' Sometimes I see skunks outside, and once I saw a small pot-bellied pig.', 'parse': {'tree': '(ROOT (S (S (ADVP (RB Sometimes)) (NP (PRP I)) (VP (VBP see) (PP (NN skunks) (NN outside)))) (, ,) (CC and) (S (ADVP (RB once)) (NP (PRP I)) (VP (VBD saw) (NP (DT a) (JJ small) (JJ pot-bellied) (NN pig)))) (. .)))', 'lemma': [(u'Sometimes', u'sometimes', u'RB'), (u'I', u'I', u'PRP'), (u'see', u'see', u'VBP'), (u'skunks', u'skunk', u'NN'), (u'outside', u'outside', u'NN'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'once', u'once', u'RB'), (u'I', u'I', u'PRP'), (u'saw', u'see', u'VBD'), (u'a', u'a', u'DT'), (u'small', u'small', u'JJ'), (u'pot-bellied', u'pot-bellied', u'JJ'), (u'pig', u'pig', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Sometimes', 'I', 'see', 'skunks', 'outside', ',', 'and', 'once', 'I', 'saw', 'a', 'small', 'pot-bellied', 'pig', '.']}, {'string': ' But today there were only a few flamingos.', 'parse': {'tree': '(ROOT (S (CC But) (NP (NN today)) (NP (EX there)) (VP (VBD were) (NP (QP (RB only) (DT a) (JJ few)) (NNS flamingos))) (. .)))', 'lemma': [(u'But', u'but', u'CC'), (u'today', u'today', u'NN'), (u'there', u'there', u'EX'), (u'were', u'be', u'VBD'), (u'only', u'only', u'RB'), (u'a', u'a', u'DT'), (u'few', u'few', u'JJ'), (u'flamingos', u'flamingo', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['But', 'today', 'there', 'were', 'only', 'a', 'few', 'flamingos', '.']}, {'string': " I opened up the book I was reading, `` All About Birds. ''", 'parse': {'tree': "(ROOT (S (NP (PRP I)) (VP (VBD opened) (PRT (RP up)) (NP (NP (DT the) (NN book)) (SBAR (S (NP (PRP I)) (VP (VBD was) (VP (VBG reading)) (, ,) (`` ``) (ADJP (NP (DT All) (RB About)) (JJ Birds))))))) (. .) ('' '')))", 'lemma': [(u'I', u'I', u'PRP'), (u'opened', u'open', u'VBD'), (u'up', u'up', u'RP'), (u'the', u'the', u'DT'), (u'book', u'book', u'NN'), (u'I', u'I', u'PRP'), (u'was', u'be', u'VBD'), (u'reading', u'read', u'VBG'), (u',', u',', u','), (u'``', u'``', u'``'), (u'All', u'all', u'DT'), (u'About', u'about', u'RB'), (u'Birds', u'birds', u'JJ'), (u'.', u'.', u'.'), (u"''", u"''", u"''")]}, 'tokens': ['I', 'opened', 'up', 'the', 'book', 'I', 'was', 'reading', ',', '``', 'All', 'About', 'Birds', '.', "''"]}, {'string': ' I had finished the chapter on pigeons, and was moving on to robins.', 'parse': {'tree': '(ROOT (S (NP (PRP I)) (VP (VP (VBD had) (VP (VBN finished) (NP (NP (DT the) (NN chapter)) (PP (IN on) (NP (NNS pigeons)))))) (, ,) (CC and) (VP (VBD was) (VP (VBG moving) (PP (IN on) (PP (TO to) (NP (NNS robins))))))) (. .)))', 'lemma': [(u'I', u'I', u'PRP'), (u'had', u'have', u'VBD'), (u'finished', u'finish', u'VBN'), (u'the', u'the', u'DT'), (u'chapter', u'chapter', u'NN'), (u'on', u'on', u'IN'), (u'pigeons', u'pigeon', u'NNS'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'was', u'be', u'VBD'), (u'moving', u'move', u'VBG'), (u'on', u'on', u'IN'), (u'to', u'to', u'TO'), (u'robins', u'robin', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['I', 'had', 'finished', 'the', 'chapter', 'on', 'pigeons', ',', 'and', 'was', 'moving', 'on', 'to', 'robins', '.']}, {'string': ' While putting ketchup on my marshmallows, I felt something tickling my neck.', 'parse': {'tree': '(ROOT (S (SBAR (IN While) (S (VP (VBG putting) (NP (NN ketchup)) (PP (IN on) (NP (PRP$ my) (NNS marshmallows)))))) (, ,) (NP (PRP I)) (VP (VBD felt) (NP (NN something)) (S (VP (VBG tickling) (NP (PRP$ my) (NN neck))))) (. .)))', 'lemma': [(u'While', u'while', u'IN'), (u'putting', u'put', u'VBG'), (u'ketchup', u'ketchup', u'NN'), (u'on', u'on', u'IN'), (u'my', u'my', u'PRP$'), (u'marshmallows', u'marshmallow', u'NNS'), (u',', u',', u','), (u'I', u'I', u'PRP'), (u'felt', u'feel', u'VBD'), (u'something', u'something', u'NN'), (u'tickling', u'tickle', u'VBG'), (u'my', u'my', u'PRP$'), (u'neck', u'neck', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['While', 'putting', 'ketchup', 'on', 'my', 'marshmallows', ',', 'I', 'felt', 'something', 'tickling', 'my', 'neck', '.']}, {'string': ' I looked down, and there was a daddy long-legs, climbing up!', 'parse': {'tree': '(ROOT (S (S (NP (PRP I)) (VP (VBD looked) (PRT (RP down)))) (, ,) (CC and) (S (NP (EX there)) (VP (VBD was) (NP (DT a) (JJ daddy) (NNS long-legs)) (, ,) (S (VP (VBG climbing) (PRT (RP up)))))) (. !)))', 'lemma': [(u'I', u'I', u'PRP'), (u'looked', u'look', u'VBD'), (u'down', u'down', u'RP'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'there', u'there', u'EX'), (u'was', u'be', u'VBD'), (u'a', u'a', u'DT'), (u'daddy', u'daddy', u'JJ'), (u'long-legs', u'long-leg', u'NNS'), (u',', u',', u','), (u'climbing', u'climb', u'VBG'), (u'up', u'up', u'RP'), (u'!', u'!', u'.')]}, 'tokens': ['I', 'looked', 'down', ',', 'and', 'there', 'was', 'a', 'daddy', 'long-legs', ',', 'climbing', 'up', '!']}, {'string': ' I had never seen one so close to my face.', 'parse': {'tree': '(ROOT (S (NP (PRP I)) (VP (VBD had) (ADVP (RB never)) (VP (VBN seen) (NP (CD one)) (ADVP (ADVP (RB so) (RB close)) (PP (TO to) (NP (PRP$ my) (NN face)))))) (. .)))', 'lemma': [(u'I', u'I', u'PRP'), (u'had', u'have', u'VBD'), (u'never', u'never', u'RB'), (u'seen', u'see', u'VBN'), (u'one', u'one', u'CD'), (u'so', u'so', u'RB'), (u'close', u'close', u'RB'), (u'to', u'to', u'TO'), (u'my', u'my', u'PRP$'), (u'face', u'face', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['I', 'had', 'never', 'seen', 'one', 'so', 'close', 'to', 'my', 'face', '.']}, {'string': " `` Er, what 's up? ''", 'parse': {'tree': "(ROOT (FRAG (`` ``) (NP (NP (NNP Er)) (, ,) (SBAR (WHNP (WP what)) (S (VP (VBZ 's) (ADVP (RB up)))))) (. ?) ('' '')))", 'lemma': [(u'``', u'``', u'``'), (u'Er', u'Er', u'NNP'), (u',', u',', u','), (u'what', u'what', u'WP'), (u"'s", u'be', u'VBZ'), (u'up', u'up', u'RB'), (u'?', u'?', u'.'), (u"''", u"''", u"''")]}, 'tokens': ['``', 'Er', ',', 'what', "'s", 'up', '?', "''"]}, {'string': ' I asked.', 'parse': {'tree': '(ROOT (S (NP (PRP I)) (VP (VBD asked)) (. .)))', 'lemma': [(u'I', u'I', u'PRP'), (u'asked', u'ask', u'VBD'), (u'.', u'.', u'.')]}, 'tokens': ['I', 'asked', '.']}, {'string': " `` Not much, '' he said.", 'parse': {'tree': "(ROOT (S (`` ``) (FRAG (RB Not) (ADVP (RB much))) (, ,) ('' '') (NP (PRP he)) (VP (VBD said)) (. .)))", 'lemma': [(u'``', u'``', u'``'), (u'Not', u'not', u'RB'), (u'much', u'much', u'RB'), (u',', u',', u','), (u"''", u"''", u"''"), (u'he', u'he', u'PRP'), (u'said', u'say', u'VBD'), (u'.', u'.', u'.')]}, 'tokens': ['``', 'Not', 'much', ',', "''", 'he', 'said', '.']}, {'string': " `` I smelled the hot pickles, and wanted to have a taste. ''", 'parse': {'tree': "(ROOT (S (`` ``) (NP (PRP I)) (VP (VP (VBD smelled) (NP (DT the) (JJ hot) (NNS pickles))) (, ,) (CC and) (VP (VBD wanted) (S (VP (TO to) (VP (VB have) (NP (DT a) (NN taste))))))) (. .) ('' '')))", 'lemma': [(u'``', u'``', u'``'), (u'I', u'I', u'PRP'), (u'smelled', u'smell', u'VBD'), (u'the', u'the', u'DT'), (u'hot', u'hot', u'JJ'), (u'pickles', u'pickle', u'NNS'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'wanted', u'want', u'VBD'), (u'to', u'to', u'TO'), (u'have', u'have', u'VB'), (u'a', u'a', u'DT'), (u'taste', u'taste', u'NN'), (u'.', u'.', u'.'), (u"''", u"''", u"''")]}, 'tokens': ['``', 'I', 'smelled', 'the', 'hot', 'pickles', ',', 'and', 'wanted', 'to', 'have', 'a', 'taste', '.', "''"]}, {'string': " `` Sure, little guy, '' I said.", 'parse': {'tree': "(ROOT (S (`` ``) (FRAG (INTJ (RB Sure)) (, ,) (NP (JJ little) (NN guy))) (, ,) ('' '') (NP (PRP I)) (VP (VBD said)) (. .)))", 'lemma': [(u'``', u'``', u'``'), (u'Sure', u'sure', u'RB'), (u',', u',', u','), (u'little', u'little', u'JJ'), (u'guy', u'guy', u'NN'), (u',', u',', u','), (u"''", u"''", u"''"), (u'I', u'I', u'PRP'), (u'said', u'say', u'VBD'), (u'.', u'.', u'.')]}, 'tokens': ['``', 'Sure', ',', 'little', 'guy', ',', "''", 'I', 'said', '.']}, {'string': ' I put a small piece of pickle on my finger and held it out.', 'parse': {'tree': '(ROOT (S (NP (PRP I)) (VP (VP (VBD put) (NP (NP (DT a) (JJ small) (NN piece)) (PP (IN of) (NP (NN pickle)))) (PP (IN on) (NP (PRP$ my) (NN finger)))) (CC and) (VP (VBD held) (NP (PRP it)) (PRT (RP out)))) (. .)))', 'lemma': [(u'I', u'I', u'PRP'), (u'put', u'put', u'VBD'), (u'a', u'a', u'DT'), (u'small', u'small', u'JJ'), (u'piece', u'piece', u'NN'), (u'of', u'of', u'IN'), (u'pickle', u'pickle', u'NN'), (u'on', u'on', u'IN'), (u'my', u'my', u'PRP$'), (u'finger', u'finger', u'NN'), (u'and', u'and', u'CC'), (u'held', u'hold', u'VBD'), (u'it', u'it', u'PRP'), (u'out', u'out', u'RP'), (u'.', u'.', u'.')]}, 'tokens': ['I', 'put', 'a', 'small', 'piece', 'of', 'pickle', 'on', 'my', 'finger', 'and', 'held', 'it', 'out', '.']}, {'string': ' While I was doing that, that sneaky daddy-long-legs ran down my arm.', 'parse': {'tree': '(ROOT (S (SBAR (IN While) (S (NP (PRP I)) (VP (VBD was) (VP (VBG doing) (NP (DT that)))))) (, ,) (NP (DT that) (JJ sneaky) (NNS daddy-long-legs)) (VP (VBD ran) (PRT (RP down)) (NP (PRP$ my) (NN arm))) (. .)))', 'lemma': [(u'While', u'while', u'IN'), (u'I', u'I', u'PRP'), (u'was', u'be', u'VBD'), (u'doing', u'do', u'VBG'), (u'that', u'that', u'DT'), (u',', u',', u','), (u'that', u'that', u'DT'), (u'sneaky', u'sneaky', u'JJ'), (u'daddy-long-legs', u'daddy-long-leg', u'NNS'), (u'ran', u'run', u'VBD'), (u'down', u'down', u'RP'), (u'my', u'my', u'PRP$'), (u'arm', u'arm', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['While', 'I', 'was', 'doing', 'that', ',', 'that', 'sneaky', 'daddy-long-legs', 'ran', 'down', 'my', 'arm', '.']}, {'string': ' He grabbed the rest of my pickle, and ran out the door!', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VP (VBD grabbed) (NP (NP (DT the) (NN rest)) (PP (IN of) (NP (PRP$ my) (NN pickle))))) (, ,) (CC and) (VP (VBD ran) (PRT (RP out)) (NP (DT the) (NN door)))) (. !)))', 'lemma': [(u'He', u'he', u'PRP'), (u'grabbed', u'grab', u'VBD'), (u'the', u'the', u'DT'), (u'rest', u'rest', u'NN'), (u'of', u'of', u'IN'), (u'my', u'my', u'PRP$'), (u'pickle', u'pickle', u'NN'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'ran', u'run', u'VBD'), (u'out', u'out', u'RP'), (u'the', u'the', u'DT'), (u'door', u'door', u'NN'), (u'!', u'!', u'.')]}, 'tokens': ['He', 'grabbed', 'the', 'rest', 'of', 'my', 'pickle', ',', 'and', 'ran', 'out', 'the', 'door', '!']}, {'string': ' And that was the last time I gave a pickle to a spider at breakfast.', 'parse': {'tree': '(ROOT (S (CC And) (NP (DT that)) (VP (VBD was) (NP (NP (DT the) (JJ last) (NN time)) (SBAR (S (NP (PRP I)) (VP (VBD gave) (NP (DT a) (NN pickle)) (PP (TO to) (NP (DT a) (NN spider))) (PP (IN at) (NP (NN breakfast)))))))) (. .)))', 'lemma': [(u'And', u'and', u'CC'), (u'that', u'that', u'DT'), (u'was', u'be', u'VBD'), (u'the', u'the', u'DT'), (u'last', u'last', u'JJ'), (u'time', u'time', u'NN'), (u'I', u'I', u'PRP'), (u'gave', u'give', u'VBD'), (u'a', u'a', u'DT'), (u'pickle', u'pickle', u'NN'), (u'to', u'to', u'TO'), (u'a', u'a', u'DT'), (u'spider', u'spider', u'NN'), (u'at', u'at', u'IN'), (u'breakfast', u'breakfast', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['And', 'that', 'was', 'the', 'last', 'time', 'I', 'gave', 'a', 'pickle', 'to', 'a', 'spider', 'at', 'breakfast', '.']}], 'questions': [{'question': {'string': ' What type of birds did I see in my yard?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WHNP (WDT What) (NN type)) (PP (IN of) (NP (NNS birds)))) (SQ (VBD did) (NP (PRP I)) (VP (VB see) (PP (IN in) (NP (PRP$ my) (NN yard))))) (. ?)))', 'lemma': [(u'What', u'what', u'WDT'), (u'type', u'type', u'NN'), (u'of', u'of', u'IN'), (u'birds', u'bird', u'NNS'), (u'did', u'do', u'VBD'), (u'I', u'I', u'PRP'), (u'see', u'see', u'VB'), (u'in', u'in', u'IN'), (u'my', u'my', u'PRP$'), (u'yard', u'yard', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'type', 'of', 'birds', 'did', 'I', 'see', 'in', 'my', 'yard', '?']}, 'answers': [{'string': ' Pigeons', 'parse': {'tree': '(ROOT (NP (NNS Pigeons)))', 'lemma': [(u'Pigeons', u'pigeon', u'NNS')]}, 'tokens': ['Pigeons']}, {'string': ' Flamingos', 'parse': {'tree': '(ROOT (NP (NNS Flamingos)))', 'lemma': [(u'Flamingos', u'flamingo', u'NNS')]}, 'tokens': ['Flamingos']}, {'string': ' Pig birds', 'parse': {'tree': '(ROOT (NP (NNP Pig) (NNS birds)))', 'lemma': [(u'Pig', u'Pig', u'NNP'), (u'birds', u'bird', u'NNS')]}, 'tokens': ['Pig', 'birds']}, {'string': ' Robins', 'parse': {'tree': '(ROOT (NP (NNP Robins)))', 'lemma': [(u'Robins', u'Robins', u'NNP')]}, 'tokens': ['Robins']}], 'mode': 0}, {'question': {'string': ' What did the sneaky spider do?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD did) (NP (DT the) (JJ sneaky) (NN spider)) (VP (VB do))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'did', u'do', u'VBD'), (u'the', u'the', u'DT'), (u'sneaky', u'sneaky', u'JJ'), (u'spider', u'spider', u'NN'), (u'do', u'do', u'VB'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'did', 'the', 'sneaky', 'spider', 'do', '?']}, 'answers': [{'string': ' Poured me some lemonade.', 'parse': {'tree': '(ROOT (S (VP (VB Poured) (S (NP (PRP me)) (NP (DT some) (NN lemonade)))) (. .)))', 'lemma': [(u'Poured', u'pour', u'VB'), (u'me', u'I', u'PRP'), (u'some', u'some', u'DT'), (u'lemonade', u'lemonade', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Poured', 'me', 'some', 'lemonade', '.']}, {'string': ' Put my marshmallow in the toaster.', 'parse': {'tree': '(ROOT (S (VP (VB Put) (NP (PRP$ my) (NN marshmallow)) (PP (IN in) (NP (DT the) (NN toaster)))) (. .)))', 'lemma': [(u'Put', u'put', u'VB'), (u'my', u'my', u'PRP$'), (u'marshmallow', u'marshmallow', u'NN'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'toaster', u'toaster', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Put', 'my', 'marshmallow', 'in', 'the', 'toaster', '.']}, {'string': ' Stole my pickle.', 'parse': {'tree': '(ROOT (S (VP (VB Stole) (NP (PRP$ my) (NN pickle))) (. .)))', 'lemma': [(u'Stole', u'steal', u'VB'), (u'my', u'my', u'PRP$'), (u'pickle', u'pickle', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Stole', 'my', 'pickle', '.']}, {'string': ' Dumped out my ketchup.', 'parse': {'tree': '(ROOT (S (VP (VB Dumped) (PRT (RP out)) (NP (PRP$ my) (NN ketchup))) (. .)))', 'lemma': [(u'Dumped', u'dump', u'VB'), (u'out', u'out', u'RP'), (u'my', u'my', u'PRP$'), (u'ketchup', u'ketchup', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Dumped', 'out', 'my', 'ketchup', '.']}], 'mode': 0}, {'question': {'string': ' What was tickling my neck?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD was) (VP (VBG tickling) (NP (PRP$ my) (NN neck)))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'was', u'be', u'VBD'), (u'tickling', u'tickle', u'VBG'), (u'my', u'my', u'PRP$'), (u'neck', u'neck', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'was', 'tickling', 'my', 'neck', '?']}, 'answers': [{'string': ' A flamingo', 'parse': {'tree': '(ROOT (FRAG (NP (DT A) (NN flamingo))))', 'lemma': [(u'A', u'a', u'DT'), (u'flamingo', u'flamingo', u'NN')]}, 'tokens': ['A', 'flamingo']}, {'string': ' A pig', 'parse': {'tree': '(ROOT (FRAG (NP (DT A) (NN pig))))', 'lemma': [(u'A', u'a', u'DT'), (u'pig', u'pig', u'NN')]}, 'tokens': ['A', 'pig']}, {'string': ' A daddy-long-legs.', 'parse': {'tree': '(ROOT (NP (DT A) (NNS daddy-long-legs) (. .)))', 'lemma': [(u'A', u'a', u'DT'), (u'daddy-long-legs', u'daddy-long-leg', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['A', 'daddy-long-legs', '.']}, {'string': ' A skunk', 'parse': {'tree': '(ROOT (FRAG (NP (DT A) (NN skunk))))', 'lemma': [(u'A', u'a', u'DT'), (u'skunk', u'skunk', u'NN')]}, 'tokens': ['A', 'skunk']}], 'mode': 0}, {'question': {'string': ' What do I heat up on the stove for breakfast?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBP do) (NP (PRP I)) (VP (VB heat) (PRT (RP up)) (PP (IN on) (NP (NP (DT the) (NN stove)) (PP (IN for) (NP (NN breakfast))))))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'do', u'do', u'VBP'), (u'I', u'I', u'PRP'), (u'heat', u'heat', u'VB'), (u'up', u'up', u'RP'), (u'on', u'on', u'IN'), (u'the', u'the', u'DT'), (u'stove', u'stove', u'NN'), (u'for', u'for', u'IN'), (u'breakfast', u'breakfast', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'do', 'I', 'heat', 'up', 'on', 'the', 'stove', 'for', 'breakfast', '?']}, 'answers': [{'string': ' ketchup', 'parse': {'tree': '(ROOT (NP (NN ketchup)))', 'lemma': [(u'ketchup', u'ketchup', u'NN')]}, 'tokens': ['ketchup']}, {'string': ' pickles', 'parse': {'tree': '(ROOT (NP (NNS pickles)))', 'lemma': [(u'pickles', u'pickle', u'NNS')]}, 'tokens': ['pickles']}, {'string': ' marshmallows', 'parse': {'tree': '(ROOT (NP (NNS marshmallows)))', 'lemma': [(u'marshmallows', u'marshmallow', u'NNS')]}, 'tokens': ['marshmallows']}, {'string': ' lemonade', 'parse': {'tree': '(ROOT (NP (NN lemonade)))', 'lemma': [(u'lemonade', u'lemonade', u'NN')]}, 'tokens': ['lemonade']}], 'mode': 1}]}
{'sentences': [{'string': ' Sammy loved playing baseball.', 'parse': {'tree': '(ROOT (S (NP (NNP Sammy)) (VP (VBD loved) (S (VP (VBG playing) (NP (NN baseball))))) (. .)))', 'lemma': [(u'Sammy', u'Sammy', u'NNP'), (u'loved', u'love', u'VBD'), (u'playing', u'play', u'VBG'), (u'baseball', u'baseball', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Sammy', 'loved', 'playing', 'baseball', '.']}, {'string': ' He would play every day, even if there was no practice that day!', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (MD would) (VP (VB play) (NP (DT every) (NN day)) (, ,) (SBAR (RB even) (IN if) (S (NP (EX there)) (VP (VBD was) (NP (NP (DT no) (NN practice)) (NP (DT that) (NN day)))))))) (. !)))', 'lemma': [(u'He', u'he', u'PRP'), (u'would', u'would', u'MD'), (u'play', u'play', u'VB'), (u'every', u'every', u'DT'), (u'day', u'day', u'NN'), (u',', u',', u','), (u'even', u'even', u'RB'), (u'if', u'if', u'IN'), (u'there', u'there', u'EX'), (u'was', u'be', u'VBD'), (u'no', u'no', u'DT'), (u'practice', u'practice', u'NN'), (u'that', u'that', u'DT'), (u'day', u'day', u'NN'), (u'!', u'!', u'.')]}, 'tokens': ['He', 'would', 'play', 'every', 'day', ',', 'even', 'if', 'there', 'was', 'no', 'practice', 'that', 'day', '!']}, {'string': ' One day, Sammy went to the park with his mom to play catch with his friends, but as he was playing, he tripped over a rock, and his shoe slipped off!', 'parse': {'tree': '(ROOT (S (S (NP (CD One) (NN day)) (, ,) (NP (NNP Sammy)) (VP (VBD went) (PP (TO to) (NP (DT the) (NN park))) (PP (IN with) (NP (PRP$ his) (NN mom) (S (VP (TO to) (VP (VB play) (NP (NN catch)) (PP (IN with) (NP (PRP$ his) (NNS friends)))))))))) (, ,) (CC but) (S (S (SBAR (IN as) (S (NP (PRP he)) (VP (VBD was) (VP (VBG playing))))) (, ,) (NP (PRP he)) (VP (VBN tripped) (PP (IN over) (NP (DT a) (NN rock))))) (, ,) (CC and) (S (NP (PRP$ his) (NN shoe)) (VP (VBD slipped) (PRT (RP off))))) (. !)))', 'lemma': [(u'One', u'one', u'CD'), (u'day', u'day', u'NN'), (u',', u',', u','), (u'Sammy', u'Sammy', u'NNP'), (u'went', u'go', u'VBD'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'park', u'park', u'NN'), (u'with', u'with', u'IN'), (u'his', u'he', u'PRP$'), (u'mom', u'mom', u'NN'), (u'to', u'to', u'TO'), (u'play', u'play', u'VB'), (u'catch', u'catch', u'NN'), (u'with', u'with', u'IN'), (u'his', u'he', u'PRP$'), (u'friends', u'friend', u'NNS'), (u',', u',', u','), (u'but', u'but', u'CC'), (u'as', u'as', u'IN'), (u'he', u'he', u'PRP'), (u'was', u'be', u'VBD'), (u'playing', u'play', u'VBG'), (u',', u',', u','), (u'he', u'he', u'PRP'), (u'tripped', u'trip', u'VBN'), (u'over', u'over', u'IN'), (u'a', u'a', u'DT'), (u'rock', u'rock', u'NN'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'his', u'he', u'PRP$'), (u'shoe', u'shoe', u'NN'), (u'slipped', u'slip', u'VBD'), (u'off', u'off', u'RP'), (u'!', u'!', u'.')]}, 'tokens': ['One', 'day', ',', 'Sammy', 'went', 'to', 'the', 'park', 'with', 'his', 'mom', 'to', 'play', 'catch', 'with', 'his', 'friends', ',', 'but', 'as', 'he', 'was', 'playing', ',', 'he', 'tripped', 'over', 'a', 'rock', ',', 'and', 'his', 'shoe', 'slipped', 'off', '!']}, {'string': " His shoe went flying into the air, high up into the sky, and Sammy watched as the shoe fell into old man Mr. Grumpy 's yard.", 'parse': {'tree': "(ROOT (S (S (NP (PRP$ His) (NN shoe)) (VP (VBD went) (S (VP (VBG flying) (PP (IN into) (NP (NP (DT the) (NN air)) (, ,) (ADVP (RB high) (RB up) (PP (IN into) (NP (DT the) (NN sky)))))))))) (, ,) (CC and) (S (NP (NNP Sammy)) (VP (VBD watched) (SBAR (IN as) (S (NP (DT the) (NN shoe)) (VP (VBD fell) (PP (IN into) (NP (NP (JJ old) (NN man) (NNP Mr.) (NNP Grumpy) (POS 's)) (NN yard)))))))) (. .)))", 'lemma': [(u'His', u'he', u'PRP$'), (u'shoe', u'shoe', u'NN'), (u'went', u'go', u'VBD'), (u'flying', u'fly', u'VBG'), (u'into', u'into', u'IN'), (u'the', u'the', u'DT'), (u'air', u'air', u'NN'), (u',', u',', u','), (u'high', u'high', u'RB'), (u'up', u'up', u'RB'), (u'into', u'into', u'IN'), (u'the', u'the', u'DT'), (u'sky', u'sky', u'NN'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'Sammy', u'Sammy', u'NNP'), (u'watched', u'watch', u'VBD'), (u'as', u'as', u'IN'), (u'the', u'the', u'DT'), (u'shoe', u'shoe', u'NN'), (u'fell', u'fall', u'VBD'), (u'into', u'into', u'IN'), (u'old', u'old', u'JJ'), (u'man', u'man', u'NN'), (u'Mr.', u'Mr.', u'NNP'), (u'Grumpy', u'Grumpy', u'NNP'), (u"'s", u"'s", u'POS'), (u'yard', u'yard', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['His', 'shoe', 'went', 'flying', 'into', 'the', 'air', ',', 'high', 'up', 'into', 'the', 'sky', ',', 'and', 'Sammy', 'watched', 'as', 'the', 'shoe', 'fell', 'into', 'old', 'man', 'Mr.', 'Grumpy', "'s", 'yard', '.']}, {'string': ' What was he going to do?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD was) (NP (PRP he)) (VP (VBG going) (S (VP (TO to) (VP (VB do)))))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'was', u'be', u'VBD'), (u'he', u'he', u'PRP'), (u'going', u'go', u'VBG'), (u'to', u'to', u'TO'), (u'do', u'do', u'VB'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'was', 'he', 'going', 'to', 'do', '?']}, {'string': ' His mom sat on a bench not too far away, reading a book.', 'parse': {'tree': '(ROOT (S (NP (PRP$ His) (NN mom)) (VP (VBD sat) (PP (IN on) (NP (DT a) (NN bench))) (ADVP (RB not) (RB too) (RB far) (RB away)) (, ,) (S (VP (VBG reading) (NP (DT a) (NN book))))) (. .)))', 'lemma': [(u'His', u'he', u'PRP$'), (u'mom', u'mom', u'NN'), (u'sat', u'sit', u'VBD'), (u'on', u'on', u'IN'), (u'a', u'a', u'DT'), (u'bench', u'bench', u'NN'), (u'not', u'not', u'RB'), (u'too', u'too', u'RB'), (u'far', u'far', u'RB'), (u'away', u'away', u'RB'), (u',', u',', u','), (u'reading', u'read', u'VBG'), (u'a', u'a', u'DT'), (u'book', u'book', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['His', 'mom', 'sat', 'on', 'a', 'bench', 'not', 'too', 'far', 'away', ',', 'reading', 'a', 'book', '.']}, {'string': " `` Should I tell Mom? ''", 'parse': {'tree': "(ROOT (SBARQ (`` ``) (WHADVP (WRB Should)) (SQ (NP (PRP I)) (VP (VB tell) (NP (NN Mom)))) (. ?) ('' '')))", 'lemma': [(u'``', u'``', u'``'), (u'Should', u'should', u'WRB'), (u'I', u'I', u'PRP'), (u'tell', u'tell', u'VB'), (u'Mom', u'mom', u'NN'), (u'?', u'?', u'.'), (u"''", u"''", u"''")]}, 'tokens': ['``', 'Should', 'I', 'tell', 'Mom', '?', "''"]}, {'string': ' Sammy thought to himself.', 'parse': {'tree': '(ROOT (S (NP (NNP Sammy)) (VP (VBD thought) (PP (TO to) (NP (PRP himself)))) (. .)))', 'lemma': [(u'Sammy', u'Sammy', u'NNP'), (u'thought', u'think', u'VBD'), (u'to', u'to', u'TO'), (u'himself', u'himself', u'PRP'), (u'.', u'.', u'.')]}, 'tokens': ['Sammy', 'thought', 'to', 'himself', '.']}, {'string': " He thought that maybe he should n't, because he might get in trouble.", 'parse': {'tree': "(ROOT (S (NP (PRP He)) (VP (VBD thought) (SBAR (IN that) (S (ADVP (RB maybe)) (NP (PRP he)) (VP (MD should) (RB n't) (, ,) (SBAR (IN because) (S (NP (PRP he)) (VP (MD might) (VP (VB get) (PP (IN in) (NP (NN trouble))))))))))) (. .)))", 'lemma': [(u'He', u'he', u'PRP'), (u'thought', u'think', u'VBD'), (u'that', u'that', u'IN'), (u'maybe', u'maybe', u'RB'), (u'he', u'he', u'PRP'), (u'should', u'should', u'MD'), (u"n't", u'not', u'RB'), (u',', u',', u','), (u'because', u'because', u'IN'), (u'he', u'he', u'PRP'), (u'might', u'might', u'MD'), (u'get', u'get', u'VB'), (u'in', u'in', u'IN'), (u'trouble', u'trouble', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'thought', 'that', 'maybe', 'he', 'should', "n't", ',', 'because', 'he', 'might', 'get', 'in', 'trouble', '.']}, {'string': " Instead, he was going to climb the fence into Mr. Grumpy 's yard!", 'parse': {'tree': "(ROOT (S (ADVP (RB Instead)) (, ,) (NP (PRP he)) (VP (VBD was) (VP (VBG going) (S (VP (TO to) (VP (VB climb) (NP (DT the) (NN fence)) (PP (IN into) (NP (NP (NNP Mr.) (NNP Grumpy) (POS 's)) (NN yard)))))))) (. !)))", 'lemma': [(u'Instead', u'instead', u'RB'), (u',', u',', u','), (u'he', u'he', u'PRP'), (u'was', u'be', u'VBD'), (u'going', u'go', u'VBG'), (u'to', u'to', u'TO'), (u'climb', u'climb', u'VB'), (u'the', u'the', u'DT'), (u'fence', u'fence', u'NN'), (u'into', u'into', u'IN'), (u'Mr.', u'Mr.', u'NNP'), (u'Grumpy', u'Grumpy', u'NNP'), (u"'s", u"'s", u'POS'), (u'yard', u'yard', u'NN'), (u'!', u'!', u'.')]}, 'tokens': ['Instead', ',', 'he', 'was', 'going', 'to', 'climb', 'the', 'fence', 'into', 'Mr.', 'Grumpy', "'s", 'yard', '!']}, {'string': " `` What, are you crazy? ''", 'parse': {'tree': "(ROOT (SBARQ (`` ``) (WHNP (WP What)) (SQ (VP (, ,) (S (VP (VBP are) (ADJP (NP (PRP you)) (JJ crazy)))))) (. ?) ('' '')))", 'lemma': [(u'``', u'``', u'``'), (u'What', u'what', u'WP'), (u',', u',', u','), (u'are', u'be', u'VBP'), (u'you', u'you', u'PRP'), (u'crazy', u'crazy', u'JJ'), (u'?', u'?', u'.'), (u"''", u"''", u"''")]}, 'tokens': ['``', 'What', ',', 'are', 'you', 'crazy', '?', "''"]}, {'string': " Sammy 's friend Billy said when he told him what he was going to do.", 'parse': {'tree': "(ROOT (S (NP (NP (NNP Sammy) (POS 's)) (NN friend) (NN Billy)) (VP (VBD said) (SBAR (WHADVP (WRB when)) (S (NP (PRP he)) (VP (VBD told) (NP (PRP him)) (SBAR (WHNP (WP what)) (S (NP (PRP he)) (VP (VBD was) (VP (VBG going) (S (VP (TO to) (VP (VB do)))))))))))) (. .)))", 'lemma': [(u'Sammy', u'Sammy', u'NNP'), (u"'s", u"'s", u'POS'), (u'friend', u'friend', u'NN'), (u'Billy', u'billy', u'NN'), (u'said', u'say', u'VBD'), (u'when', u'when', u'WRB'), (u'he', u'he', u'PRP'), (u'told', u'tell', u'VBD'), (u'him', u'he', u'PRP'), (u'what', u'what', u'WP'), (u'he', u'he', u'PRP'), (u'was', u'be', u'VBD'), (u'going', u'go', u'VBG'), (u'to', u'to', u'TO'), (u'do', u'do', u'VB'), (u'.', u'.', u'.')]}, 'tokens': ['Sammy', "'s", 'friend', 'Billy', 'said', 'when', 'he', 'told', 'him', 'what', 'he', 'was', 'going', 'to', 'do', '.']}, {'string': " Billy did n't seem to like the idea.", 'parse': {'tree': "(ROOT (S (NP (NNP Billy)) (VP (VBD did) (RB n't) (VP (VB seem) (S (VP (TO to) (VP (VB like) (NP (DT the) (NN idea))))))) (. .)))", 'lemma': [(u'Billy', u'Billy', u'NNP'), (u'did', u'do', u'VBD'), (u"n't", u'not', u'RB'), (u'seem', u'seem', u'VB'), (u'to', u'to', u'TO'), (u'like', u'like', u'VB'), (u'the', u'the', u'DT'), (u'idea', u'idea', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Billy', 'did', "n't", 'seem', 'to', 'like', 'the', 'idea', '.']}, {'string': " `` Mr. Grumpy is a mean old man, and he 'll yell at you for sure.", 'parse': {'tree': "(ROOT (S (`` ``) (S (NP (NNP Mr.) (NNP Grumpy)) (VP (VBZ is) (NP (DT a) (JJ mean) (JJ old) (NN man)))) (, ,) (CC and) (S (NP (PRP he)) (VP (MD 'll) (VP (VB yell) (PP (IN at) (NP (PRP you))) (PP (IN for) (ADJP (JJ sure)))))) (. .)))", 'lemma': [(u'``', u'``', u'``'), (u'Mr.', u'Mr.', u'NNP'), (u'Grumpy', u'Grumpy', u'NNP'), (u'is', u'be', u'VBZ'), (u'a', u'a', u'DT'), (u'mean', u'mean', u'JJ'), (u'old', u'old', u'JJ'), (u'man', u'man', u'NN'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'he', u'he', u'PRP'), (u"'ll", u"'ll", u'MD'), (u'yell', u'yell', u'VB'), (u'at', u'at', u'IN'), (u'you', u'you', u'PRP'), (u'for', u'for', u'IN'), (u'sure', u'sure', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['``', 'Mr.', 'Grumpy', 'is', 'a', 'mean', 'old', 'man', ',', 'and', 'he', "'ll", 'yell', 'at', 'you', 'for', 'sure', '.']}, {'string': " I think you need to tell your mom! ''", 'parse': {'tree': "(ROOT (S (NP (PRP I)) (VP (VBP think) (SBAR (S (NP (PRP you)) (VP (VBP need) (S (VP (TO to) (VP (VB tell) (NP (PRP$ your) (NN mom))))))))) (. !) ('' '')))", 'lemma': [(u'I', u'I', u'PRP'), (u'think', u'think', u'VBP'), (u'you', u'you', u'PRP'), (u'need', u'need', u'VBP'), (u'to', u'to', u'TO'), (u'tell', u'tell', u'VB'), (u'your', u'you', u'PRP$'), (u'mom', u'mom', u'NN'), (u'!', u'!', u'.'), (u"''", u"''", u"''")]}, 'tokens': ['I', 'think', 'you', 'need', 'to', 'tell', 'your', 'mom', '!', "''"]}, {'string': " With that, Billy ran off to tell Sammy 's mom!", 'parse': {'tree': "(ROOT (S (PP (IN With) (NP (DT that))) (, ,) (NP (NNP Billy)) (VP (VBD ran) (PRT (RP off)) (S (VP (TO to) (VP (VB tell) (NP (NP (NNP Sammy) (POS 's)) (NN mom)))))) (. !)))", 'lemma': [(u'With', u'with', u'IN'), (u'that', u'that', u'DT'), (u',', u',', u','), (u'Billy', u'Billy', u'NNP'), (u'ran', u'run', u'VBD'), (u'off', u'off', u'RP'), (u'to', u'to', u'TO'), (u'tell', u'tell', u'VB'), (u'Sammy', u'Sammy', u'NNP'), (u"'s", u"'s", u'POS'), (u'mom', u'mom', u'NN'), (u'!', u'!', u'.')]}, 'tokens': ['With', 'that', ',', 'Billy', 'ran', 'off', 'to', 'tell', 'Sammy', "'s", 'mom', '!']}, {'string': ' Sammy ran after Billy, trying to get him to stop, but Billy told the whole story before Sammy could get there.', 'parse': {'tree': '(ROOT (S (S (NP (NNP Sammy)) (VP (VBD ran) (PP (IN after) (NP (NNP Billy))) (, ,) (S (VP (VBG trying) (S (VP (TO to) (VP (VB get) (S (NP (PRP him)) (VP (TO to) (VP (VB stop))))))))))) (, ,) (CC but) (S (NP (NNP Billy)) (VP (VBD told) (NP (DT the) (JJ whole) (NN story)) (SBAR (IN before) (S (NP (NNP Sammy)) (VP (MD could) (VP (VB get) (ADVP (RB there)))))))) (. .)))', 'lemma': [(u'Sammy', u'Sammy', u'NNP'), (u'ran', u'run', u'VBD'), (u'after', u'after', u'IN'), (u'Billy', u'Billy', u'NNP'), (u',', u',', u','), (u'trying', u'try', u'VBG'), (u'to', u'to', u'TO'), (u'get', u'get', u'VB'), (u'him', u'he', u'PRP'), (u'to', u'to', u'TO'), (u'stop', u'stop', u'VB'), (u',', u',', u','), (u'but', u'but', u'CC'), (u'Billy', u'Billy', u'NNP'), (u'told', u'tell', u'VBD'), (u'the', u'the', u'DT'), (u'whole', u'whole', u'JJ'), (u'story', u'story', u'NN'), (u'before', u'before', u'IN'), (u'Sammy', u'Sammy', u'NNP'), (u'could', u'could', u'MD'), (u'get', u'get', u'VB'), (u'there', u'there', u'RB'), (u'.', u'.', u'.')]}, 'tokens': ['Sammy', 'ran', 'after', 'Billy', ',', 'trying', 'to', 'get', 'him', 'to', 'stop', ',', 'but', 'Billy', 'told', 'the', 'whole', 'story', 'before', 'Sammy', 'could', 'get', 'there', '.']}, {'string': " After Sammy 's mom heard the story, she took Sammy by the hand and said, `` Come on, Sammy, let 's go get your shoe! ''", 'parse': {'tree': "(ROOT (S (SBAR (IN After) (S (NP (NP (NNP Sammy) (POS 's)) (NN mom)) (VP (VBD heard) (NP (DT the) (NN story)) (PRN (, ,) (S (NP (PRP she)) (VP (VP (VBD took) (NP (NNP Sammy)) (PP (IN by) (NP (DT the) (NN hand)))) (CC and) (VP (VBD said)))) (, ,)) (`` ``) (PP (VBN Come) (PP (IN on)))))) (, ,) (ADVP (RB Sammy)) (, ,) (NP (NNP let) (POS 's)) (VP (VBP go) (VP (VB get) (NP (PRP$ your) (NN shoe)))) (. !) ('' '')))", 'lemma': [(u'After', u'after', u'IN'), (u'Sammy', u'Sammy', u'NNP'), (u"'s", u"'s", u'POS'), (u'mom', u'mom', u'NN'), (u'heard', u'hear', u'VBD'), (u'the', u'the', u'DT'), (u'story', u'story', u'NN'), (u',', u',', u','), (u'she', u'she', u'PRP'), (u'took', u'take', u'VBD'), (u'Sammy', u'Sammy', u'NNP'), (u'by', u'by', u'IN'), (u'the', u'the', u'DT'), (u'hand', u'hand', u'NN'), (u'and', u'and', u'CC'), (u'said', u'say', u'VBD'), (u',', u',', u','), (u'``', u'``', u'``'), (u'Come', u'come', u'VBN'), (u'on', u'on', u'IN'), (u',', u',', u','), (u'Sammy', u'sammy', u'RB'), (u',', u',', u','), (u'let', u'let', u'NNP'), (u"'s", u"'s", u'POS'), (u'go', u'go', u'VBP'), (u'get', u'get', u'VB'), (u'your', u'you', u'PRP$'), (u'shoe', u'shoe', u'NN'), (u'!', u'!', u'.'), (u"''", u"''", u"''")]}, 'tokens': ['After', 'Sammy', "'s", 'mom', 'heard', 'the', 'story', ',', 'she', 'took', 'Sammy', 'by', 'the', 'hand', 'and', 'said', ',', '``', 'Come', 'on', ',', 'Sammy', ',', 'let', "'s", 'go', 'get', 'your', 'shoe', '!', "''"]}, {'string': ' Sammy was worried.', 'parse': {'tree': '(ROOT (S (NP (NNP Sammy)) (VP (VBD was) (ADJP (JJ worried))) (. .)))', 'lemma': [(u'Sammy', u'Sammy', u'NNP'), (u'was', u'be', u'VBD'), (u'worried', u'worried', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['Sammy', 'was', 'worried', '.']}, {'string': ' What was she going to do?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD was) (NP (PRP she)) (VP (VBG going) (S (VP (TO to) (VP (VB do)))))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'was', u'be', u'VBD'), (u'she', u'she', u'PRP'), (u'going', u'go', u'VBG'), (u'to', u'to', u'TO'), (u'do', u'do', u'VB'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'was', 'she', 'going', 'to', 'do', '?']}, {'string': " Sammy 's mom took him straight to mean old Mr. Grumpy 's door, and knocked on it.", 'parse': {'tree': "(ROOT (S (NP (NP (NNP Sammy) (POS 's)) (NN mom)) (VP (VP (VBD took) (NP (PRP him)) (ADVP (RB straight)) (S (VP (TO to) (VP (VB mean) (NP (NP (JJ old) (NNP Mr.) (NNP Grumpy) (POS 's)) (NN door)))))) (, ,) (CC and) (VP (VBD knocked) (PP (IN on) (NP (PRP it))))) (. .)))", 'lemma': [(u'Sammy', u'Sammy', u'NNP'), (u"'s", u"'s", u'POS'), (u'mom', u'mom', u'NN'), (u'took', u'take', u'VBD'), (u'him', u'he', u'PRP'), (u'straight', u'straight', u'RB'), (u'to', u'to', u'TO'), (u'mean', u'mean', u'VB'), (u'old', u'old', u'JJ'), (u'Mr.', u'Mr.', u'NNP'), (u'Grumpy', u'Grumpy', u'NNP'), (u"'s", u"'s", u'POS'), (u'door', u'door', u'NN'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'knocked', u'knock', u'VBD'), (u'on', u'on', u'IN'), (u'it', u'it', u'PRP'), (u'.', u'.', u'.')]}, 'tokens': ['Sammy', "'s", 'mom', 'took', 'him', 'straight', 'to', 'mean', 'old', 'Mr.', 'Grumpy', "'s", 'door', ',', 'and', 'knocked', 'on', 'it', '.']}, {'string': " `` Oh no! ''", 'parse': {'tree': "(ROOT (S (`` ``) (VP (VB Oh) (NP (RB no))) (. !) ('' '')))", 'lemma': [(u'``', u'``', u'``'), (u'Oh', u'oh', u'VB'), (u'no', u'no', u'RB'), (u'!', u'!', u'.'), (u"''", u"''", u"''")]}, 'tokens': ['``', 'Oh', 'no', '!', "''"]}, {'string': " thought Sammy, `` He 's going to yell at me! ''", 'parse': {'tree': "(ROOT (SINV (VP (VBD thought)) (NP (NNP Sammy)) (, ,) (`` ``) (S (NP (PRP He)) (VP (VBZ 's) (VP (VBG going) (S (VP (TO to) (VP (VB yell) (PP (IN at) (NP (PRP me))))))))) (. !) ('' '')))", 'lemma': [(u'thought', u'think', u'VBD'), (u'Sammy', u'Sammy', u'NNP'), (u',', u',', u','), (u'``', u'``', u'``'), (u'He', u'he', u'PRP'), (u"'s", u'be', u'VBZ'), (u'going', u'go', u'VBG'), (u'to', u'to', u'TO'), (u'yell', u'yell', u'VB'), (u'at', u'at', u'IN'), (u'me', u'I', u'PRP'), (u'!', u'!', u'.'), (u"''", u"''", u"''")]}, 'tokens': ['thought', 'Sammy', ',', '``', 'He', "'s", 'going', 'to', 'yell', 'at', 'me', '!', "''"]}, {'string': ' But the man who opened the door was a nice old man, and he smiled at little Sammy, and let them get his shoe.', 'parse': {'tree': '(ROOT (S (S (CC But) (NP (NP (DT the) (NN man)) (SBAR (WHNP (WP who)) (S (VP (VBD opened) (NP (DT the) (NN door)))))) (VP (VBD was) (NP (DT a) (ADJP (JJ nice) (JJ old)) (NN man)))) (, ,) (CC and) (S (NP (PRP he)) (VP (VP (VBD smiled) (PP (IN at) (NP (JJ little) (NNP Sammy)))) (, ,) (CC and) (VP (VBD let) (S (NP (PRP them)) (VP (VB get) (NP (PRP$ his) (NN shoe))))))) (. .)))', 'lemma': [(u'But', u'but', u'CC'), (u'the', u'the', u'DT'), (u'man', u'man', u'NN'), (u'who', u'who', u'WP'), (u'opened', u'open', u'VBD'), (u'the', u'the', u'DT'), (u'door', u'door', u'NN'), (u'was', u'be', u'VBD'), (u'a', u'a', u'DT'), (u'nice', u'nice', u'JJ'), (u'old', u'old', u'JJ'), (u'man', u'man', u'NN'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'he', u'he', u'PRP'), (u'smiled', u'smile', u'VBD'), (u'at', u'at', u'IN'), (u'little', u'little', u'JJ'), (u'Sammy', u'Sammy', u'NNP'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'let', u'let', u'VBD'), (u'them', u'they', u'PRP'), (u'get', u'get', u'VB'), (u'his', u'he', u'PRP$'), (u'shoe', u'shoe', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['But', 'the', 'man', 'who', 'opened', 'the', 'door', 'was', 'a', 'nice', 'old', 'man', ',', 'and', 'he', 'smiled', 'at', 'little', 'Sammy', ',', 'and', 'let', 'them', 'get', 'his', 'shoe', '.']}, {'string': " That 's when Sammy learned that it 's always better to be honest.", 'parse': {'tree': "(ROOT (S (NP (DT That)) (VP (VBZ 's) (SBAR (WHADVP (WRB when)) (S (NP (NNP Sammy)) (VP (VBD learned) (SBAR (IN that) (S (NP (PRP it)) (VP (VBZ 's) (ADVP (RB always)) (ADJP (JJR better)) (S (VP (TO to) (VP (VB be) (ADJP (JJ honest)))))))))))) (. .)))", 'lemma': [(u'That', u'that', u'DT'), (u"'s", u'be', u'VBZ'), (u'when', u'when', u'WRB'), (u'Sammy', u'Sammy', u'NNP'), (u'learned', u'learn', u'VBD'), (u'that', u'that', u'IN'), (u'it', u'it', u'PRP'), (u"'s", u'be', u'VBZ'), (u'always', u'always', u'RB'), (u'better', u'better', u'JJR'), (u'to', u'to', u'TO'), (u'be', u'be', u'VB'), (u'honest', u'honest', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['That', "'s", 'when', 'Sammy', 'learned', 'that', 'it', "'s", 'always', 'better', 'to', 'be', 'honest', '.']}], 'questions': [{'question': {'string': ' What was the name of the man next door?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD was) (NP (NP (DT the) (NN name)) (PP (IN of) (NP (NP (DT the) (NN man)) (ADVP (JJ next) (NN door)))))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'was', u'be', u'VBD'), (u'the', u'the', u'DT'), (u'name', u'name', u'NN'), (u'of', u'of', u'IN'), (u'the', u'the', u'DT'), (u'man', u'man', u'NN'), (u'next', u'next', u'JJ'), (u'door', u'door', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'was', 'the', 'name', 'of', 'the', 'man', 'next', 'door', '?']}, 'answers': [{'string': ' Mr. Jumpy.', 'parse': {'tree': '(ROOT (NP (NNP Mr.) (NNP Jumpy) (. .)))', 'lemma': [(u'Mr.', u'Mr.', u'NNP'), (u'Jumpy', u'Jumpy', u'NNP'), (u'.', u'.', u'.')]}, 'tokens': ['Mr.', 'Jumpy', '.']}, {'string': ' Mr. Lumpy.', 'parse': {'tree': '(ROOT (NP (NNP Mr.) (NNP Lumpy) (. .)))', 'lemma': [(u'Mr.', u'Mr.', u'NNP'), (u'Lumpy', u'Lumpy', u'NNP'), (u'.', u'.', u'.')]}, 'tokens': ['Mr.', 'Lumpy', '.']}, {'string': ' Mr. Grumpy.', 'parse': {'tree': '(ROOT (NP (NNP Mr.) (NNP Grumpy) (. .)))', 'lemma': [(u'Mr.', u'Mr.', u'NNP'), (u'Grumpy', u'Grumpy', u'NNP'), (u'.', u'.', u'.')]}, 'tokens': ['Mr.', 'Grumpy', '.']}, {'string': ' Mr. Wheezy.', 'parse': {'tree': '(ROOT (NP (NNP Mr.) (NNP Wheezy) (. .)))', 'lemma': [(u'Mr.', u'Mr.', u'NNP'), (u'Wheezy', u'Wheezy', u'NNP'), (u'.', u'.', u'.')]}, 'tokens': ['Mr.', 'Wheezy', '.']}], 'mode': 0}, {'question': {'string': " When Sammy wondered if he was going to tell his mom, he did n't and ...", 'parse': {'tree': "(ROOT (S (SBAR (WHADVP (WRB When)) (S (NP (NNP Sammy)) (VP (VBD wondered) (SBAR (IN if) (S (NP (PRP he)) (VP (VBD was) (VP (VBG going) (S (VP (TO to) (VP (VB tell) (NP (PRP$ his) (NN mom)))))))))))) (, ,) (NP (PRP he)) (VP (VBD did) (RB n't) (VP (VB and))) (: ...)))", 'lemma': [(u'When', u'when', u'WRB'), (u'Sammy', u'Sammy', u'NNP'), (u'wondered', u'wonder', u'VBD'), (u'if', u'if', u'IN'), (u'he', u'he', u'PRP'), (u'was', u'be', u'VBD'), (u'going', u'go', u'VBG'), (u'to', u'to', u'TO'), (u'tell', u'tell', u'VB'), (u'his', u'he', u'PRP$'), (u'mom', u'mom', u'NN'), (u',', u',', u','), (u'he', u'he', u'PRP'), (u'did', u'do', u'VBD'), (u"n't", u'not', u'RB'), (u'and', u'and', u'VB'), (u'...', u'...', u':')]}, 'tokens': ['When', 'Sammy', 'wondered', 'if', 'he', 'was', 'going', 'to', 'tell', 'his', 'mom', ',', 'he', 'did', "n't", 'and', '...']}, 'answers': [{'string': ' Was going to climb the fence.', 'parse': {'tree': '(ROOT (S (VP (VBD Was) (VP (VBG going) (S (VP (TO to) (VP (VB climb) (NP (DT the) (NN fence))))))) (. .)))', 'lemma': [(u'Was', u'be', u'VBD'), (u'going', u'go', u'VBG'), (u'to', u'to', u'TO'), (u'climb', u'climb', u'VB'), (u'the', u'the', u'DT'), (u'fence', u'fence', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Was', 'going', 'to', 'climb', 'the', 'fence', '.']}, {'string': ' Never got his shoe back.', 'parse': {'tree': '(ROOT (S (NP (NNP Never)) (VP (VBD got) (NP (PRP$ his) (NN shoe)) (ADVP (RB back))) (. .)))', 'lemma': [(u'Never', u'Never', u'NNP'), (u'got', u'get', u'VBD'), (u'his', u'he', u'PRP$'), (u'shoe', u'shoe', u'NN'), (u'back', u'back', u'RB'), (u'.', u'.', u'.')]}, 'tokens': ['Never', 'got', 'his', 'shoe', 'back', '.']}, {'string': ' Ran away.', 'parse': {'tree': '(ROOT (S (VP (VB Ran) (PRT (RP away))) (. .)))', 'lemma': [(u'Ran', u'run', u'VB'), (u'away', u'away', u'RP'), (u'.', u'.', u'.')]}, 'tokens': ['Ran', 'away', '.']}, {'string': ' Bought another shoe.', 'parse': {'tree': '(ROOT (S (VP (VB Bought) (NP (DT another) (NN shoe))) (. .)))', 'lemma': [(u'Bought', u'buy', u'VB'), (u'another', u'another', u'DT'), (u'shoe', u'shoe', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Bought', 'another', 'shoe', '.']}], 'mode': 0}, {'question': {'string': ' Billy said Sammy was crazy and ...', 'parse': {'tree': '(ROOT (S (NP (NNP Billy)) (VP (VBD said) (SBAR (S (NP (NNP Sammy)) (VP (VBD was) (ADJP (JJ crazy)) (ADVP (CC and)))))) (: ...)))', 'lemma': [(u'Billy', u'Billy', u'NNP'), (u'said', u'say', u'VBD'), (u'Sammy', u'Sammy', u'NNP'), (u'was', u'be', u'VBD'), (u'crazy', u'crazy', u'JJ'), (u'and', u'and', u'CC'), (u'...', u'...', u':')]}, 'tokens': ['Billy', 'said', 'Sammy', 'was', 'crazy', 'and', '...']}, 'answers': [{'string': ' got the shoe for Sammy.', 'parse': {'tree': '(ROOT (S (VP (VBD got) (NP (DT the) (NN shoe)) (PP (IN for) (NP (NNP Sammy)))) (. .)))', 'lemma': [(u'got', u'get', u'VBD'), (u'the', u'the', u'DT'), (u'shoe', u'shoe', u'NN'), (u'for', u'for', u'IN'), (u'Sammy', u'Sammy', u'NNP'), (u'.', u'.', u'.')]}, 'tokens': ['got', 'the', 'shoe', 'for', 'Sammy', '.']}, {'string': ' said that he needed to tell his mom.', 'parse': {'tree': '(ROOT (S (VP (VBD said) (SBAR (IN that) (S (NP (PRP he)) (VP (VBD needed) (S (VP (TO to) (VP (VB tell) (NP (PRP$ his) (NN mom))))))))) (. .)))', 'lemma': [(u'said', u'say', u'VBD'), (u'that', u'that', u'IN'), (u'he', u'he', u'PRP'), (u'needed', u'need', u'VBD'), (u'to', u'to', u'TO'), (u'tell', u'tell', u'VB'), (u'his', u'he', u'PRP$'), (u'mom', u'mom', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['said', 'that', 'he', 'needed', 'to', 'tell', 'his', 'mom', '.']}, {'string': ' stopped being friends with Sammy.', 'parse': {'tree': '(ROOT (S (VP (VBN stopped) (S (VP (VBG being) (NP (NP (NNS friends)) (PP (IN with) (NP (NNP Sammy))))))) (. .)))', 'lemma': [(u'stopped', u'stop', u'VBN'), (u'being', u'be', u'VBG'), (u'friends', u'friend', u'NNS'), (u'with', u'with', u'IN'), (u'Sammy', u'Sammy', u'NNP'), (u'.', u'.', u'.')]}, 'tokens': ['stopped', 'being', 'friends', 'with', 'Sammy', '.']}, {'string': ' climbed the fence.', 'parse': {'tree': '(ROOT (S (VP (VBD climbed) (NP (DT the) (NN fence))) (. .)))', 'lemma': [(u'climbed', u'climb', u'VBD'), (u'the', u'the', u'DT'), (u'fence', u'fence', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['climbed', 'the', 'fence', '.']}], 'mode': 0}, {'question': {'string': " What flew into Mr. Grumpy 's yard?", 'parse': {'tree': "(ROOT (SBARQ (WHNP (WP What)) (SQ (VP (VBD flew) (PP (IN into) (NP (NP (NNP Mr.) (NNP Grumpy) (POS 's)) (NN yard))))) (. ?)))", 'lemma': [(u'What', u'what', u'WP'), (u'flew', u'fly', u'VBD'), (u'into', u'into', u'IN'), (u'Mr.', u'Mr.', u'NNP'), (u'Grumpy', u'Grumpy', u'NNP'), (u"'s", u"'s", u'POS'), (u'yard', u'yard', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'flew', 'into', 'Mr.', 'Grumpy', "'s", 'yard', '?']}, 'answers': [{'string': ' A Fence', 'parse': {'tree': '(ROOT (NP (NNP A) (NNP Fence)))', 'lemma': [(u'A', u'A', u'NNP'), (u'Fence', u'Fence', u'NNP')]}, 'tokens': ['A', 'Fence']}, {'string': ' A Bench', 'parse': {'tree': '(ROOT (NP (NNP A) (NNP Bench)))', 'lemma': [(u'A', u'A', u'NNP'), (u'Bench', u'Bench', u'NNP')]}, 'tokens': ['A', 'Bench']}, {'string': ' Shoe', 'parse': {'tree': '(ROOT (NP (NNP Shoe)))', 'lemma': [(u'Shoe', u'Shoe', u'NNP')]}, 'tokens': ['Shoe']}, {'string': ' A Book', 'parse': {'tree': '(ROOT (NP (NNP A) (NNP Book)))', 'lemma': [(u'A', u'A', u'NNP'), (u'Book', u'Book', u'NNP')]}, 'tokens': ['A', 'Book']}], 'mode': 1}]}
{'sentences': [{'string': ' Paul woke up to the sun shining in his eyes.', 'parse': {'tree': '(ROOT (S (NP (NNP Paul)) (VP (VBD woke) (PRT (RP up)) (PP (TO to) (NP (NP (DT the) (NN sun)) (VP (VBG shining) (PP (IN in) (NP (PRP$ his) (NNS eyes))))))) (. .)))', 'lemma': [(u'Paul', u'Paul', u'NNP'), (u'woke', u'wake', u'VBD'), (u'up', u'up', u'RP'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'sun', u'sun', u'NN'), (u'shining', u'shine', u'VBG'), (u'in', u'in', u'IN'), (u'his', u'he', u'PRP$'), (u'eyes', u'eye', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['Paul', 'woke', 'up', 'to', 'the', 'sun', 'shining', 'in', 'his', 'eyes', '.']}, {'string': ' He was so excited!', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD was) (ADJP (RB so) (JJ excited))) (. !)))', 'lemma': [(u'He', u'he', u'PRP'), (u'was', u'be', u'VBD'), (u'so', u'so', u'RB'), (u'excited', u'excited', u'JJ'), (u'!', u'!', u'.')]}, 'tokens': ['He', 'was', 'so', 'excited', '!']}, {'string': ' Today was the big day for the baseball game and he was very excited!', 'parse': {'tree': '(ROOT (S (S (NP (NNP Today)) (VP (VBD was) (NP (NP (DT the) (JJ big) (NN day)) (PP (IN for) (NP (DT the) (NN baseball) (NN game)))))) (CC and) (S (NP (PRP he)) (VP (VBD was) (ADJP (RB very) (JJ excited)))) (. !)))', 'lemma': [(u'Today', u'Today', u'NNP'), (u'was', u'be', u'VBD'), (u'the', u'the', u'DT'), (u'big', u'big', u'JJ'), (u'day', u'day', u'NN'), (u'for', u'for', u'IN'), (u'the', u'the', u'DT'), (u'baseball', u'baseball', u'NN'), (u'game', u'game', u'NN'), (u'and', u'and', u'CC'), (u'he', u'he', u'PRP'), (u'was', u'be', u'VBD'), (u'very', u'very', u'RB'), (u'excited', u'excited', u'JJ'), (u'!', u'!', u'.')]}, 'tokens': ['Today', 'was', 'the', 'big', 'day', 'for', 'the', 'baseball', 'game', 'and', 'he', 'was', 'very', 'excited', '!']}, {'string': ' He rolled out of bed and jumped in the shower, whistling a happy song.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VP (VBD rolled) (PRT (RP out)) (PP (IN of) (NP (NN bed)))) (CC and) (VP (VBD jumped) (PP (IN in) (NP (DT the) (NN shower))) (, ,) (S (VP (VBG whistling) (NP (DT a) (JJ happy) (NN song)))))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'rolled', u'roll', u'VBD'), (u'out', u'out', u'RP'), (u'of', u'of', u'IN'), (u'bed', u'bed', u'NN'), (u'and', u'and', u'CC'), (u'jumped', u'jump', u'VBD'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'shower', u'shower', u'NN'), (u',', u',', u','), (u'whistling', u'whistle', u'VBG'), (u'a', u'a', u'DT'), (u'happy', u'happy', u'JJ'), (u'song', u'song', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'rolled', 'out', 'of', 'bed', 'and', 'jumped', 'in', 'the', 'shower', ',', 'whistling', 'a', 'happy', 'song', '.']}, {'string': ' Downstairs he could hear his baby brother, Mike, crying and he had to giggle to himself.', 'parse': {'tree': '(ROOT (S (S (ADVP (RB Downstairs)) (NP (PRP he)) (VP (MD could) (VP (VB hear) (S (NP (NP (PRP$ his) (NN baby) (NN brother)) (, ,) (NP (NNP Mike)) (, ,)) (VP (VBG crying)))))) (CC and) (S (NP (PRP he)) (VP (VBD had) (S (VP (TO to) (VP (VB giggle) (PP (TO to) (NP (PRP himself)))))))) (. .)))', 'lemma': [(u'Downstairs', u'downstairs', u'RB'), (u'he', u'he', u'PRP'), (u'could', u'could', u'MD'), (u'hear', u'hear', u'VB'), (u'his', u'he', u'PRP$'), (u'baby', u'baby', u'NN'), (u'brother', u'brother', u'NN'), (u',', u',', u','), (u'Mike', u'Mike', u'NNP'), (u',', u',', u','), (u'crying', u'cry', u'VBG'), (u'and', u'and', u'CC'), (u'he', u'he', u'PRP'), (u'had', u'have', u'VBD'), (u'to', u'to', u'TO'), (u'giggle', u'giggle', u'VB'), (u'to', u'to', u'TO'), (u'himself', u'himself', u'PRP'), (u'.', u'.', u'.')]}, 'tokens': ['Downstairs', 'he', 'could', 'hear', 'his', 'baby', 'brother', ',', 'Mike', ',', 'crying', 'and', 'he', 'had', 'to', 'giggle', 'to', 'himself', '.']}, {'string': ' He got out of the shower and pulled on his clothes.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VP (VBD got) (PRT (RP out)) (PP (IN of) (NP (DT the) (NN shower)))) (CC and) (VP (VBD pulled) (PP (IN on) (NP (PRP$ his) (NNS clothes))))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'got', u'get', u'VBD'), (u'out', u'out', u'RP'), (u'of', u'of', u'IN'), (u'the', u'the', u'DT'), (u'shower', u'shower', u'NN'), (u'and', u'and', u'CC'), (u'pulled', u'pull', u'VBD'), (u'on', u'on', u'IN'), (u'his', u'he', u'PRP$'), (u'clothes', u'clothes', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'got', 'out', 'of', 'the', 'shower', 'and', 'pulled', 'on', 'his', 'clothes', '.']}, {'string': ' He looked at the calendar on his desk and smiled knowing yesterday, Friday, had been the last day of school.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VP (VBD looked) (PP (IN at) (NP (DT the) (NN calendar))) (PP (IN on) (NP (PRP$ his) (NN desk)))) (CC and) (VP (VBD smiled) (SBAR (S (S (VP (VBG knowing) (NP (NN yesterday)))) (, ,) (NP (NNP Friday)) (, ,) (VP (VBD had) (VP (VBN been) (NP (NP (DT the) (JJ last) (NN day)) (PP (IN of) (NP (NN school)))))))))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'looked', u'look', u'VBD'), (u'at', u'at', u'IN'), (u'the', u'the', u'DT'), (u'calendar', u'calendar', u'NN'), (u'on', u'on', u'IN'), (u'his', u'he', u'PRP$'), (u'desk', u'desk', u'NN'), (u'and', u'and', u'CC'), (u'smiled', u'smile', u'VBD'), (u'knowing', u'know', u'VBG'), (u'yesterday', u'yesterday', u'NN'), (u',', u',', u','), (u'Friday', u'Friday', u'NNP'), (u',', u',', u','), (u'had', u'have', u'VBD'), (u'been', u'be', u'VBN'), (u'the', u'the', u'DT'), (u'last', u'last', u'JJ'), (u'day', u'day', u'NN'), (u'of', u'of', u'IN'), (u'school', u'school', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'looked', 'at', 'the', 'calendar', 'on', 'his', 'desk', 'and', 'smiled', 'knowing', 'yesterday', ',', 'Friday', ',', 'had', 'been', 'the', 'last', 'day', 'of', 'school', '.']}, {'string': ' `` Hi, Mom!', 'parse': {'tree': '(ROOT (FRAG (`` ``) (NP (NNP Hi)) (, ,) (NP (NN Mom)) (. !)))', 'lemma': [(u'``', u'``', u'``'), (u'Hi', u'Hi', u'NNP'), (u',', u',', u','), (u'Mom', u'mom', u'NN'), (u'!', u'!', u'.')]}, 'tokens': ['``', 'Hi', ',', 'Mom', '!']}, {'string': " No school Monday, '' he laughed.", 'parse': {'tree': "(ROOT (S (NP (NP (DT No) (NN school)) (NP (NNP Monday))) (, ,) ('' '') (NP (PRP he)) (VP (VBD laughed)) (. .)))", 'lemma': [(u'No', u'no', u'DT'), (u'school', u'school', u'NN'), (u'Monday', u'Monday', u'NNP'), (u',', u',', u','), (u"''", u"''", u"''"), (u'he', u'he', u'PRP'), (u'laughed', u'laugh', u'VBD'), (u'.', u'.', u'.')]}, 'tokens': ['No', 'school', 'Monday', ',', "''", 'he', 'laughed', '.']}, {'string': ' He gave his baby brother a kiss on the cheek and grabbed a piece of bacon.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VP (VBD gave) (NP (PRP$ his) (NN baby) (NN brother)) (NP (NP (DT a) (NN kiss)) (PP (IN on) (NP (DT the) (NN cheek))))) (CC and) (VP (VBD grabbed) (NP (NP (DT a) (NN piece)) (PP (IN of) (NP (NN bacon)))))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'gave', u'give', u'VBD'), (u'his', u'he', u'PRP$'), (u'baby', u'baby', u'NN'), (u'brother', u'brother', u'NN'), (u'a', u'a', u'DT'), (u'kiss', u'kiss', u'NN'), (u'on', u'on', u'IN'), (u'the', u'the', u'DT'), (u'cheek', u'cheek', u'NN'), (u'and', u'and', u'CC'), (u'grabbed', u'grab', u'VBD'), (u'a', u'a', u'DT'), (u'piece', u'piece', u'NN'), (u'of', u'of', u'IN'), (u'bacon', u'bacon', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'gave', 'his', 'baby', 'brother', 'a', 'kiss', 'on', 'the', 'cheek', 'and', 'grabbed', 'a', 'piece', 'of', 'bacon', '.']}, {'string': ' `` Is that all you are eating, Paul?', 'parse': {'tree': '(ROOT (S (`` ``) (VP (VBZ Is) (NP (SBAR (IN that) (S (RB all) (NP (PRP you)) (VP (VBP are) (VP (VBG eating))))) (, ,) (NP (NNP Paul)))) (. ?)))', 'lemma': [(u'``', u'``', u'``'), (u'Is', u'be', u'VBZ'), (u'that', u'that', u'IN'), (u'all', u'all', u'RB'), (u'you', u'you', u'PRP'), (u'are', u'be', u'VBP'), (u'eating', u'eat', u'VBG'), (u',', u',', u','), (u'Paul', u'Paul', u'NNP'), (u'?', u'?', u'.')]}, 'tokens': ['``', 'Is', 'that', 'all', 'you', 'are', 'eating', ',', 'Paul', '?']}, {'string': " You need to have a good meal before you leave. ''", 'parse': {'tree': "(ROOT (S (NP (PRP You)) (VP (VBP need) (S (VP (TO to) (VP (VB have) (NP (DT a) (JJ good) (NN meal)) (SBAR (IN before) (S (NP (PRP you)) (VP (VBP leave)))))))) (. .) ('' '')))", 'lemma': [(u'You', u'you', u'PRP'), (u'need', u'need', u'VBP'), (u'to', u'to', u'TO'), (u'have', u'have', u'VB'), (u'a', u'a', u'DT'), (u'good', u'good', u'JJ'), (u'meal', u'meal', u'NN'), (u'before', u'before', u'IN'), (u'you', u'you', u'PRP'), (u'leave', u'leave', u'VBP'), (u'.', u'.', u'.'), (u"''", u"''", u"''")]}, 'tokens': ['You', 'need', 'to', 'have', 'a', 'good', 'meal', 'before', 'you', 'leave', '.', "''"]}, {'string': ' said mom.', 'parse': {'tree': '(ROOT (S (VP (VBD said) (NP (NN mom))) (. .)))', 'lemma': [(u'said', u'say', u'VBD'), (u'mom', u'mom', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['said', 'mom', '.']}, {'string': " `` Yes, I am meeting John and Terry at the playground and I am late. ''", 'parse': {'tree': "(ROOT (S (`` ``) (S (INTJ (UH Yes)) (, ,) (NP (PRP I)) (VP (VBP am) (VP (VBG meeting) (NP (NNP John) (CC and) (NNP Terry)) (PP (IN at) (NP (DT the) (NN playground)))))) (CC and) (S (NP (PRP I)) (VP (VBP am) (ADJP (JJ late)))) (. .) ('' '')))", 'lemma': [(u'``', u'``', u'``'), (u'Yes', u'yes', u'UH'), (u',', u',', u','), (u'I', u'I', u'PRP'), (u'am', u'be', u'VBP'), (u'meeting', u'meet', u'VBG'), (u'John', u'John', u'NNP'), (u'and', u'and', u'CC'), (u'Terry', u'Terry', u'NNP'), (u'at', u'at', u'IN'), (u'the', u'the', u'DT'), (u'playground', u'playground', u'NN'), (u'and', u'and', u'CC'), (u'I', u'I', u'PRP'), (u'am', u'be', u'VBP'), (u'late', u'late', u'JJ'), (u'.', u'.', u'.'), (u"''", u"''", u"''")]}, 'tokens': ['``', 'Yes', ',', 'I', 'am', 'meeting', 'John', 'and', 'Terry', 'at', 'the', 'playground', 'and', 'I', 'am', 'late', '.', "''"]}, {'string': " He grabbed his glove and bat and ran outside, right into a mud puddle from last night 's rain.", 'parse': {'tree': "(ROOT (S (NP (PRP He)) (VP (VP (VBD grabbed) (NP (PRP$ his) (NN glove) (CC and) (NN bat))) (CC and) (VP (VBD ran) (ADVP (RB outside)) (, ,) (ADVP (RB right) (PP (IN into) (NP (DT a) (NN mud) (NN puddle)))) (PP (IN from) (NP (NP (JJ last) (NN night) (POS 's)) (NN rain))))) (. .)))", 'lemma': [(u'He', u'he', u'PRP'), (u'grabbed', u'grab', u'VBD'), (u'his', u'he', u'PRP$'), (u'glove', u'glove', u'NN'), (u'and', u'and', u'CC'), (u'bat', u'bat', u'NN'), (u'and', u'and', u'CC'), (u'ran', u'run', u'VBD'), (u'outside', u'outside', u'RB'), (u',', u',', u','), (u'right', u'right', u'RB'), (u'into', u'into', u'IN'), (u'a', u'a', u'DT'), (u'mud', u'mud', u'NN'), (u'puddle', u'puddle', u'NN'), (u'from', u'from', u'IN'), (u'last', u'last', u'JJ'), (u'night', u'night', u'NN'), (u"'s", u"'s", u'POS'), (u'rain', u'rain', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'grabbed', 'his', 'glove', 'and', 'bat', 'and', 'ran', 'outside', ',', 'right', 'into', 'a', 'mud', 'puddle', 'from', 'last', 'night', "'s", 'rain', '.']}, {'string': ' He got to the playground and John was wiping his head.', 'parse': {'tree': '(ROOT (S (S (NP (PRP He)) (VP (VBD got) (PP (TO to) (NP (DT the) (NN playground))))) (CC and) (S (NP (NNP John)) (VP (VBD was) (VP (VBG wiping) (NP (PRP$ his) (NN head))))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'got', u'get', u'VBD'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'playground', u'playground', u'NN'), (u'and', u'and', u'CC'), (u'John', u'John', u'NNP'), (u'was', u'be', u'VBD'), (u'wiping', u'wipe', u'VBG'), (u'his', u'he', u'PRP$'), (u'head', u'head', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'got', 'to', 'the', 'playground', 'and', 'John', 'was', 'wiping', 'his', 'head', '.']}, {'string': " `` Whew, it is very hot now! ''", 'parse': {'tree': "(ROOT (S (`` ``) (ADVP (RB Whew)) (, ,) (NP (PRP it)) (VP (VBZ is) (ADJP (RB very) (JJ hot)) (ADVP (RB now))) (. !) ('' '')))", 'lemma': [(u'``', u'``', u'``'), (u'Whew', u'whew', u'RB'), (u',', u',', u','), (u'it', u'it', u'PRP'), (u'is', u'be', u'VBZ'), (u'very', u'very', u'RB'), (u'hot', u'hot', u'JJ'), (u'now', u'now', u'RB'), (u'!', u'!', u'.'), (u"''", u"''", u"''")]}, 'tokens': ['``', 'Whew', ',', 'it', 'is', 'very', 'hot', 'now', '!', "''"]}, {'string': ' `` It is going to be a hot summer since it was so cold this winter.', 'parse': {'tree': '(ROOT (S (`` ``) (NP (PRP It)) (VP (VBZ is) (VP (VBG going) (S (VP (TO to) (VP (VB be) (NP (DT a) (JJ hot) (NN summer)) (SBAR (IN since) (S (NP (PRP it)) (VP (VBD was) (ADJP (RB so) (JJ cold)) (NP (DT this) (NN winter)))))))))) (. .)))', 'lemma': [(u'``', u'``', u'``'), (u'It', u'it', u'PRP'), (u'is', u'be', u'VBZ'), (u'going', u'go', u'VBG'), (u'to', u'to', u'TO'), (u'be', u'be', u'VB'), (u'a', u'a', u'DT'), (u'hot', u'hot', u'JJ'), (u'summer', u'summer', u'NN'), (u'since', u'since', u'IN'), (u'it', u'it', u'PRP'), (u'was', u'be', u'VBD'), (u'so', u'so', u'RB'), (u'cold', u'cold', u'JJ'), (u'this', u'this', u'DT'), (u'winter', u'winter', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['``', 'It', 'is', 'going', 'to', 'be', 'a', 'hot', 'summer', 'since', 'it', 'was', 'so', 'cold', 'this', 'winter', '.']}, {'string': " It is hard to believe last month there was snow on the ground. ''", 'parse': {'tree': "(ROOT (S (NP (PRP It)) (VP (VBZ is) (ADJP (JJ hard) (S (VP (TO to) (VP (VB believe) (SBAR (S (NP (JJ last) (NN month)) (NP (EX there)) (VP (VBD was) (NP (NP (NN snow)) (PP (IN on) (NP (DT the) (NN ground)))))))))))) (. .) ('' '')))", 'lemma': [(u'It', u'it', u'PRP'), (u'is', u'be', u'VBZ'), (u'hard', u'hard', u'JJ'), (u'to', u'to', u'TO'), (u'believe', u'believe', u'VB'), (u'last', u'last', u'JJ'), (u'month', u'month', u'NN'), (u'there', u'there', u'EX'), (u'was', u'be', u'VBD'), (u'snow', u'snow', u'NN'), (u'on', u'on', u'IN'), (u'the', u'the', u'DT'), (u'ground', u'ground', u'NN'), (u'.', u'.', u'.'), (u"''", u"''", u"''")]}, 'tokens': ['It', 'is', 'hard', 'to', 'believe', 'last', 'month', 'there', 'was', 'snow', 'on', 'the', 'ground', '.', "''"]}, {'string': ' The boys jogged to the playing field and shook hands with the other boys.', 'parse': {'tree': '(ROOT (S (NP (DT The) (NNS boys)) (VP (VP (VBD jogged) (PP (TO to) (NP (DT the) (NN playing) (NN field)))) (CC and) (VP (VBD shook) (NP (NNS hands)) (PP (IN with) (NP (DT the) (JJ other) (NNS boys))))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'boys', u'boy', u'NNS'), (u'jogged', u'jog', u'VBD'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'playing', u'playing', u'NN'), (u'field', u'field', u'NN'), (u'and', u'and', u'CC'), (u'shook', u'shake', u'VBD'), (u'hands', u'hand', u'NNS'), (u'with', u'with', u'IN'), (u'the', u'the', u'DT'), (u'other', u'other', u'JJ'), (u'boys', u'boy', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'boys', 'jogged', 'to', 'the', 'playing', 'field', 'and', 'shook', 'hands', 'with', 'the', 'other', 'boys', '.']}, {'string': " `` This is going to be a great game, the first of the summer. ''", 'parse': {'tree': "(ROOT (S (`` ``) (NP (DT This)) (VP (VBZ is) (VP (VBG going) (S (VP (TO to) (VP (VB be) (NP (NP (DT a) (JJ great) (NN game)) (, ,) (NP (NP (DT the) (JJ first)) (PP (IN of) (NP (DT the) (NN summer)))))))))) (. .) ('' '')))", 'lemma': [(u'``', u'``', u'``'), (u'This', u'this', u'DT'), (u'is', u'be', u'VBZ'), (u'going', u'go', u'VBG'), (u'to', u'to', u'TO'), (u'be', u'be', u'VB'), (u'a', u'a', u'DT'), (u'great', u'great', u'JJ'), (u'game', u'game', u'NN'), (u',', u',', u','), (u'the', u'the', u'DT'), (u'first', u'first', u'JJ'), (u'of', u'of', u'IN'), (u'the', u'the', u'DT'), (u'summer', u'summer', u'NN'), (u'.', u'.', u'.'), (u"''", u"''", u"''")]}, 'tokens': ['``', 'This', 'is', 'going', 'to', 'be', 'a', 'great', 'game', ',', 'the', 'first', 'of', 'the', 'summer', '.', "''"]}, {'string': ' one of the boys said.', 'parse': {'tree': '(ROOT (S (NP (NP (CD one)) (PP (IN of) (NP (DT the) (NNS boys)))) (VP (VBD said)) (. .)))', 'lemma': [(u'one', u'one', u'CD'), (u'of', u'of', u'IN'), (u'the', u'the', u'DT'), (u'boys', u'boy', u'NNS'), (u'said', u'say', u'VBD'), (u'.', u'.', u'.')]}, 'tokens': ['one', 'of', 'the', 'boys', 'said', '.']}, {'string': ' The game started and everyone had a turn.', 'parse': {'tree': '(ROOT (S (S (NP (DT The) (NN game)) (VP (VBD started))) (CC and) (S (NP (NN everyone)) (VP (VBD had) (NP (DT a) (NN turn)))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'game', u'game', u'NN'), (u'started', u'start', u'VBD'), (u'and', u'and', u'CC'), (u'everyone', u'everyone', u'NN'), (u'had', u'have', u'VBD'), (u'a', u'a', u'DT'), (u'turn', u'turn', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'game', 'started', 'and', 'everyone', 'had', 'a', 'turn', '.']}, {'string': " Paul 's team was behind by two points.", 'parse': {'tree': "(ROOT (S (NP (NP (NNP Paul) (POS 's)) (NN team)) (VP (VBD was) (ADVP (RB behind)) (PP (IN by) (NP (CD two) (NNS points)))) (. .)))", 'lemma': [(u'Paul', u'Paul', u'NNP'), (u"'s", u"'s", u'POS'), (u'team', u'team', u'NN'), (u'was', u'be', u'VBD'), (u'behind', u'behind', u'RB'), (u'by', u'by', u'IN'), (u'two', u'two', u'CD'), (u'points', u'point', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['Paul', "'s", 'team', 'was', 'behind', 'by', 'two', 'points', '.']}, {'string': ' Terry took his place at the plate.', 'parse': {'tree': '(ROOT (S (NP (NNP Terry)) (VP (VBD took) (NP (PRP$ his) (NN place)) (PP (IN at) (NP (DT the) (NN plate)))) (. .)))', 'lemma': [(u'Terry', u'Terry', u'NNP'), (u'took', u'take', u'VBD'), (u'his', u'he', u'PRP$'), (u'place', u'place', u'NN'), (u'at', u'at', u'IN'), (u'the', u'the', u'DT'), (u'plate', u'plate', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Terry', 'took', 'his', 'place', 'at', 'the', 'plate', '.']}, {'string': " `` Batter up! ''", 'parse': {'tree': "(ROOT (S (`` ``) (VP (VB Batter) (PRT (RP up))) (. !) ('' '')))", 'lemma': [(u'``', u'``', u'``'), (u'Batter', u'batter', u'VB'), (u'up', u'up', u'RP'), (u'!', u'!', u'.'), (u"''", u"''", u"''")]}, 'tokens': ['``', 'Batter', 'up', '!', "''"]}, {'string': ' The pitcher threw the first ball.', 'parse': {'tree': '(ROOT (S (NP (DT The) (NN pitcher)) (VP (VBD threw) (NP (DT the) (JJ first) (NN ball))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'pitcher', u'pitcher', u'NN'), (u'threw', u'throw', u'VBD'), (u'the', u'the', u'DT'), (u'first', u'first', u'JJ'), (u'ball', u'ball', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'pitcher', 'threw', 'the', 'first', 'ball', '.']}, {'string': " `` STRIKE ONE! ''", 'parse': {'tree': "(ROOT (S (`` ``) (VP (VB STRIKE) (NP (CD ONE))) (. !) ('' '')))", 'lemma': [(u'``', u'``', u'``'), (u'STRIKE', u'strike', u'VB'), (u'ONE', u'one', u'CD'), (u'!', u'!', u'.'), (u"''", u"''", u"''")]}, 'tokens': ['``', 'STRIKE', 'ONE', '!', "''"]}, {'string': ' Then the second and crack, the bat hit the ball and it flew through the air.', 'parse': {'tree': '(ROOT (S (RB Then) (S (NP (NP (DT the) (NN second) (CC and) (NN crack)) (, ,) (NP (DT the) (NN bat))) (VP (VBD hit) (NP (DT the) (NN ball)))) (CC and) (S (NP (PRP it)) (VP (VBD flew) (PP (IN through) (NP (DT the) (NN air))))) (. .)))', 'lemma': [(u'Then', u'then', u'RB'), (u'the', u'the', u'DT'), (u'second', u'second', u'NN'), (u'and', u'and', u'CC'), (u'crack', u'crack', u'NN'), (u',', u',', u','), (u'the', u'the', u'DT'), (u'bat', u'bat', u'NN'), (u'hit', u'hit', u'VBD'), (u'the', u'the', u'DT'), (u'ball', u'ball', u'NN'), (u'and', u'and', u'CC'), (u'it', u'it', u'PRP'), (u'flew', u'fly', u'VBD'), (u'through', u'through', u'IN'), (u'the', u'the', u'DT'), (u'air', u'air', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Then', 'the', 'second', 'and', 'crack', ',', 'the', 'bat', 'hit', 'the', 'ball', 'and', 'it', 'flew', 'through', 'the', 'air', '.']}, {'string': ' Terry ran to the first base.', 'parse': {'tree': '(ROOT (S (NP (NNP Terry)) (VP (VBD ran) (PP (TO to) (NP (DT the) (JJ first) (NN base)))) (. .)))', 'lemma': [(u'Terry', u'Terry', u'NNP'), (u'ran', u'run', u'VBD'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'first', u'first', u'JJ'), (u'base', u'base', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Terry', 'ran', 'to', 'the', 'first', 'base', '.']}, {'string': ' Next, John hit the ball with the first throw and he ran to first base and Terry stole third base.', 'parse': {'tree': '(ROOT (S (ADVP (RB Next)) (, ,) (S (NP (NNP John)) (VP (VBD hit) (NP (DT the) (NN ball)) (PP (IN with) (NP (DT the) (JJ first) (NN throw))))) (CC and) (S (S (NP (PRP he)) (VP (VBD ran) (PP (TO to) (NP (JJ first) (NN base))))) (CC and) (S (NP (NNP Terry)) (VP (VBD stole) (NP (JJ third) (NN base))))) (. .)))', 'lemma': [(u'Next', u'next', u'RB'), (u',', u',', u','), (u'John', u'John', u'NNP'), (u'hit', u'hit', u'VBD'), (u'the', u'the', u'DT'), (u'ball', u'ball', u'NN'), (u'with', u'with', u'IN'), (u'the', u'the', u'DT'), (u'first', u'first', u'JJ'), (u'throw', u'throw', u'NN'), (u'and', u'and', u'CC'), (u'he', u'he', u'PRP'), (u'ran', u'run', u'VBD'), (u'to', u'to', u'TO'), (u'first', u'first', u'JJ'), (u'base', u'base', u'NN'), (u'and', u'and', u'CC'), (u'Terry', u'Terry', u'NNP'), (u'stole', u'steal', u'VBD'), (u'third', u'third', u'JJ'), (u'base', u'base', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Next', ',', 'John', 'hit', 'the', 'ball', 'with', 'the', 'first', 'throw', 'and', 'he', 'ran', 'to', 'first', 'base', 'and', 'Terry', 'stole', 'third', 'base', '.']}, {'string': ' The third player was Joey, a red headed boy.', 'parse': {'tree': '(ROOT (S (S (NP (DT The) (JJ third) (NN player)) (VP (VBD was) (ADJP (JJ Joey)))) (, ,) (NP (DT a) (NN red)) (VP (VBD headed) (INTJ (UH boy))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'third', u'third', u'JJ'), (u'player', u'player', u'NN'), (u'was', u'be', u'VBD'), (u'Joey', u'joey', u'JJ'), (u',', u',', u','), (u'a', u'a', u'DT'), (u'red', u'red', u'NN'), (u'headed', u'head', u'VBD'), (u'boy', u'boy', u'UH'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'third', 'player', 'was', 'Joey', ',', 'a', 'red', 'headed', 'boy', '.']}, {'string': ' He was not a very good player and he missed the ball three times.', 'parse': {'tree': '(ROOT (S (S (NP (PRP He)) (VP (VBD was) (RB not) (NP (DT a) (ADJP (RB very) (JJ good)) (NN player)))) (CC and) (S (NP (PRP he)) (VP (VBD missed) (NP (DT the) (NN ball)) (NP (CD three) (NNS times)))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'was', u'be', u'VBD'), (u'not', u'not', u'RB'), (u'a', u'a', u'DT'), (u'very', u'very', u'RB'), (u'good', u'good', u'JJ'), (u'player', u'player', u'NN'), (u'and', u'and', u'CC'), (u'he', u'he', u'PRP'), (u'missed', u'miss', u'VBD'), (u'the', u'the', u'DT'), (u'ball', u'ball', u'NN'), (u'three', u'three', u'CD'), (u'times', u'time', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'was', 'not', 'a', 'very', 'good', 'player', 'and', 'he', 'missed', 'the', 'ball', 'three', 'times', '.']}, {'string': " `` OUT. ''", 'parse': {'tree': "(ROOT (S (`` ``) (VP (VB OUT)) (. .) ('' '')))", 'lemma': [(u'``', u'``', u'``'), (u'OUT', u'out', u'VB'), (u'.', u'.', u'.'), (u"''", u"''", u"''")]}, 'tokens': ['``', 'OUT', '.', "''"]}, {'string': ' He was followed by George and he also made an out.', 'parse': {'tree': '(ROOT (S (S (NP (PRP He)) (VP (VBD was) (VP (VBN followed) (PP (IN by) (NP (NNP George)))))) (CC and) (S (NP (PRP he)) (ADVP (RB also)) (VP (VBD made) (NP (DT an) (NN out)))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'was', u'be', u'VBD'), (u'followed', u'follow', u'VBN'), (u'by', u'by', u'IN'), (u'George', u'George', u'NNP'), (u'and', u'and', u'CC'), (u'he', u'he', u'PRP'), (u'also', u'also', u'RB'), (u'made', u'make', u'VBD'), (u'an', u'a', u'DT'), (u'out', u'out', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'was', 'followed', 'by', 'George', 'and', 'he', 'also', 'made', 'an', 'out', '.']}, {'string': ' Up came Tiny.', 'parse': {'tree': '(ROOT (S (NP (NNP Up)) (VP (VBD came) (NP (NNP Tiny))) (. .)))', 'lemma': [(u'Up', u'Up', u'NNP'), (u'came', u'come', u'VBD'), (u'Tiny', u'Tiny', u'NNP'), (u'.', u'.', u'.')]}, 'tokens': ['Up', 'came', 'Tiny', '.']}, {'string': ' He hit the ball and made it to first base, John moved to second and Terry stayed on third.', 'parse': {'tree': '(ROOT (S (S (NP (PRP He)) (VP (VP (VBD hit) (NP (DT the) (NN ball))) (CC and) (VP (VBD made) (NP (PRP it)) (PP (TO to) (NP (JJ first) (NN base)))))) (, ,) (S (NP (NNP John)) (VP (VBD moved) (PP (TO to) (NP (NN second))))) (CC and) (S (NP (NNP Terry)) (VP (VBD stayed) (PP (IN on) (NP (JJ third))))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'hit', u'hit', u'VBD'), (u'the', u'the', u'DT'), (u'ball', u'ball', u'NN'), (u'and', u'and', u'CC'), (u'made', u'make', u'VBD'), (u'it', u'it', u'PRP'), (u'to', u'to', u'TO'), (u'first', u'first', u'JJ'), (u'base', u'base', u'NN'), (u',', u',', u','), (u'John', u'John', u'NNP'), (u'moved', u'move', u'VBD'), (u'to', u'to', u'TO'), (u'second', u'second', u'NN'), (u'and', u'and', u'CC'), (u'Terry', u'Terry', u'NNP'), (u'stayed', u'stay', u'VBD'), (u'on', u'on', u'IN'), (u'third', u'third', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'hit', 'the', 'ball', 'and', 'made', 'it', 'to', 'first', 'base', ',', 'John', 'moved', 'to', 'second', 'and', 'Terry', 'stayed', 'on', 'third', '.']}, {'string': ' CRACK!', 'parse': {'tree': '(ROOT (FRAG (NP (NNP CRACK)) (. !)))', 'lemma': [(u'CRACK', u'CRACK', u'NNP'), (u'!', u'!', u'.')]}, 'tokens': ['CRACK', '!']}, {'string': ' HOME RUN!', 'parse': {'tree': '(ROOT (NP (NNP HOME) (NNP RUN) (. !)))', 'lemma': [(u'HOME', u'HOME', u'NNP'), (u'RUN', u'RUN', u'NNP'), (u'!', u'!', u'.')]}, 'tokens': ['HOME', 'RUN', '!']}, {'string': ' Paul ran around the bases and Terry, John, and Tiny all made it in.', 'parse': {'tree': '(ROOT (S (S (NP (NNP Paul)) (VP (VBD ran) (PP (IN around) (NP (DT the) (NNS bases))))) (CC and) (S (NP (NNP Terry) (, ,) (NNP John) (, ,) (CC and) (NNP Tiny)) (ADVP (DT all)) (VP (VBD made) (NP (PRP it)) (PP (IN in)))) (. .)))', 'lemma': [(u'Paul', u'Paul', u'NNP'), (u'ran', u'run', u'VBD'), (u'around', u'around', u'IN'), (u'the', u'the', u'DT'), (u'bases', u'basis', u'NNS'), (u'and', u'and', u'CC'), (u'Terry', u'Terry', u'NNP'), (u',', u',', u','), (u'John', u'John', u'NNP'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'Tiny', u'Tiny', u'NNP'), (u'all', u'all', u'DT'), (u'made', u'make', u'VBD'), (u'it', u'it', u'PRP'), (u'in', u'in', u'IN'), (u'.', u'.', u'.')]}, 'tokens': ['Paul', 'ran', 'around', 'the', 'bases', 'and', 'Terry', ',', 'John', ',', 'and', 'Tiny', 'all', 'made', 'it', 'in', '.']}, {'string': ' Paul saved the game and the day!', 'parse': {'tree': '(ROOT (S (NP (NNP Paul)) (VP (VBD saved) (NP (NP (DT the) (NN game)) (CC and) (NP (DT the) (NN day)))) (. !)))', 'lemma': [(u'Paul', u'Paul', u'NNP'), (u'saved', u'save', u'VBD'), (u'the', u'the', u'DT'), (u'game', u'game', u'NN'), (u'and', u'and', u'CC'), (u'the', u'the', u'DT'), (u'day', u'day', u'NN'), (u'!', u'!', u'.')]}, 'tokens': ['Paul', 'saved', 'the', 'game', 'and', 'the', 'day', '!']}, {'string': " Paul 's team won the first game of the summer!", 'parse': {'tree': "(ROOT (S (NP (NP (NNP Paul) (POS 's)) (NN team)) (VP (VBD won) (NP (NP (DT the) (JJ first) (NN game)) (PP (IN of) (NP (DT the) (NN summer))))) (. !)))", 'lemma': [(u'Paul', u'Paul', u'NNP'), (u"'s", u"'s", u'POS'), (u'team', u'team', u'NN'), (u'won', u'win', u'VBD'), (u'the', u'the', u'DT'), (u'first', u'first', u'JJ'), (u'game', u'game', u'NN'), (u'of', u'of', u'IN'), (u'the', u'the', u'DT'), (u'summer', u'summer', u'NN'), (u'!', u'!', u'.')]}, 'tokens': ['Paul', "'s", 'team', 'won', 'the', 'first', 'game', 'of', 'the', 'summer', '!']}], 'questions': [{'question': {'string': ' Why was Paul excited?', 'parse': {'tree': '(ROOT (SBARQ (WHADVP (WRB Why)) (SQ (VBD was) (NP (NNP Paul)) (VP (VBN excited))) (. ?)))', 'lemma': [(u'Why', u'why', u'WRB'), (u'was', u'be', u'VBD'), (u'Paul', u'Paul', u'NNP'), (u'excited', u'excite', u'VBN'), (u'?', u'?', u'.')]}, 'tokens': ['Why', 'was', 'Paul', 'excited', '?']}, 'answers': [{'string': ' to eat breakfast', 'parse': {'tree': '(ROOT (FRAG (S (VP (TO to) (VP (VB eat) (NP (NN breakfast)))))))', 'lemma': [(u'to', u'to', u'TO'), (u'eat', u'eat', u'VB'), (u'breakfast', u'breakfast', u'NN')]}, 'tokens': ['to', 'eat', 'breakfast']}, {'string': ' to take a shower', 'parse': {'tree': '(ROOT (FRAG (S (VP (TO to) (VP (VB take) (NP (DT a) (NN shower)))))))', 'lemma': [(u'to', u'to', u'TO'), (u'take', u'take', u'VB'), (u'a', u'a', u'DT'), (u'shower', u'shower', u'NN')]}, 'tokens': ['to', 'take', 'a', 'shower']}, {'string': ' To see his baby brother', 'parse': {'tree': '(ROOT (FRAG (S (VP (TO To) (VP (VB see) (NP (PRP$ his) (NN baby) (NN brother)))))))', 'lemma': [(u'To', u'to', u'TO'), (u'see', u'see', u'VB'), (u'his', u'he', u'PRP$'), (u'baby', u'baby', u'NN'), (u'brother', u'brother', u'NN')]}, 'tokens': ['To', 'see', 'his', 'baby', 'brother']}, {'string': ' To play ball', 'parse': {'tree': '(ROOT (FRAG (S (VP (TO To) (VP (VB play) (NP (NN ball)))))))', 'lemma': [(u'To', u'to', u'TO'), (u'play', u'play', u'VB'), (u'ball', u'ball', u'NN')]}, 'tokens': ['To', 'play', 'ball']}], 'mode': 0}, {'question': {'string': ' What was the day of the big game?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD was) (NP (NP (DT the) (NN day)) (PP (IN of) (NP (DT the) (JJ big) (NN game))))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'was', u'be', u'VBD'), (u'the', u'the', u'DT'), (u'day', u'day', u'NN'), (u'of', u'of', u'IN'), (u'the', u'the', u'DT'), (u'big', u'big', u'JJ'), (u'game', u'game', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'was', 'the', 'day', 'of', 'the', 'big', 'game', '?']}, 'answers': [{'string': ' Monday', 'parse': {'tree': '(ROOT (NP (NNP Monday)))', 'lemma': [(u'Monday', u'Monday', u'NNP')]}, 'tokens': ['Monday']}, {'string': ' Friday', 'parse': {'tree': '(ROOT (NP (NNP Friday)))', 'lemma': [(u'Friday', u'Friday', u'NNP')]}, 'tokens': ['Friday']}, {'string': ' Saturday', 'parse': {'tree': '(ROOT (NP (NNP Saturday)))', 'lemma': [(u'Saturday', u'Saturday', u'NNP')]}, 'tokens': ['Saturday']}, {'string': ' Thursday', 'parse': {'tree': '(ROOT (NP (NNP Thursday)))', 'lemma': [(u'Thursday', u'Thursday', u'NNP')]}, 'tokens': ['Thursday']}], 'mode': 0}, {'question': {'string': ' What was the name of the baby brother?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD was) (NP (NP (DT the) (NN name)) (PP (IN of) (NP (DT the) (NN baby) (NN brother))))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'was', u'be', u'VBD'), (u'the', u'the', u'DT'), (u'name', u'name', u'NN'), (u'of', u'of', u'IN'), (u'the', u'the', u'DT'), (u'baby', u'baby', u'NN'), (u'brother', u'brother', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'was', 'the', 'name', 'of', 'the', 'baby', 'brother', '?']}, 'answers': [{'string': ' Paul', 'parse': {'tree': '(ROOT (NP (NNP Paul)))', 'lemma': [(u'Paul', u'Paul', u'NNP')]}, 'tokens': ['Paul']}, {'string': ' Terry.', 'parse': {'tree': '(ROOT (FRAG (NP (NNP Terry)) (. .)))', 'lemma': [(u'Terry', u'Terry', u'NNP'), (u'.', u'.', u'.')]}, 'tokens': ['Terry', '.']}, {'string': ' John', 'parse': {'tree': '(ROOT (NP (NNP John)))', 'lemma': [(u'John', u'John', u'NNP')]}, 'tokens': ['John']}, {'string': ' Mike', 'parse': {'tree': '(ROOT (NP (NNP Mike)))', 'lemma': [(u'Mike', u'Mike', u'NNP')]}, 'tokens': ['Mike']}], 'mode': 1}, {'question': {'string': ' Who was first up to hit the ball?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP Who)) (SQ (VP (VBD was) (ADVP (RB first) (RB up) (S (VP (TO to) (VP (VB hit) (NP (DT the) (NN ball)))))))) (. ?)))', 'lemma': [(u'Who', u'who', u'WP'), (u'was', u'be', u'VBD'), (u'first', u'first', u'RB'), (u'up', u'up', u'RB'), (u'to', u'to', u'TO'), (u'hit', u'hit', u'VB'), (u'the', u'the', u'DT'), (u'ball', u'ball', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['Who', 'was', 'first', 'up', 'to', 'hit', 'the', 'ball', '?']}, 'answers': [{'string': ' Paul', 'parse': {'tree': '(ROOT (NP (NNP Paul)))', 'lemma': [(u'Paul', u'Paul', u'NNP')]}, 'tokens': ['Paul']}, {'string': ' Terry', 'parse': {'tree': '(ROOT (NP (NNP Terry)))', 'lemma': [(u'Terry', u'Terry', u'NNP')]}, 'tokens': ['Terry']}, {'string': ' Mike', 'parse': {'tree': '(ROOT (NP (NNP Mike)))', 'lemma': [(u'Mike', u'Mike', u'NNP')]}, 'tokens': ['Mike']}, {'string': ' John', 'parse': {'tree': '(ROOT (NP (NNP John)))', 'lemma': [(u'John', u'John', u'NNP')]}, 'tokens': ['John']}], 'mode': 1}]}
{'sentences': [{'string': ' Nana had a bunch of money.', 'parse': {'tree': '(ROOT (S (NP (NNP Nana)) (VP (VBD had) (NP (NP (DT a) (NN bunch)) (PP (IN of) (NP (NN money))))) (. .)))', 'lemma': [(u'Nana', u'Nana', u'NNP'), (u'had', u'have', u'VBD'), (u'a', u'a', u'DT'), (u'bunch', u'bunch', u'NN'), (u'of', u'of', u'IN'), (u'money', u'money', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Nana', 'had', 'a', 'bunch', 'of', 'money', '.']}, {'string': ' She had saved money her whole life.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBD had) (VP (VBN saved) (NP (NN money)) (NP (PRP$ her) (JJ whole) (NN life)))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'had', u'have', u'VBD'), (u'saved', u'save', u'VBN'), (u'money', u'money', u'NN'), (u'her', u'she', u'PRP$'), (u'whole', u'whole', u'JJ'), (u'life', u'life', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'had', 'saved', 'money', 'her', 'whole', 'life', '.']}, {'string': ' But Nana was afraid of people stealing her money.', 'parse': {'tree': '(ROOT (S (CC But) (NP (NNP Nana)) (VP (VBD was) (ADJP (JJ afraid) (PP (IN of) (NP (NP (NNS people)) (VP (VBG stealing) (NP (PRP$ her) (NN money))))))) (. .)))', 'lemma': [(u'But', u'but', u'CC'), (u'Nana', u'Nana', u'NNP'), (u'was', u'be', u'VBD'), (u'afraid', u'afraid', u'JJ'), (u'of', u'of', u'IN'), (u'people', u'people', u'NNS'), (u'stealing', u'steal', u'VBG'), (u'her', u'she', u'PRP$'), (u'money', u'money', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['But', 'Nana', 'was', 'afraid', 'of', 'people', 'stealing', 'her', 'money', '.']}, {'string': ' She planned to hide it.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBD planned) (S (VP (TO to) (VP (VB hide) (NP (PRP it)))))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'planned', u'plan', u'VBD'), (u'to', u'to', u'TO'), (u'hide', u'hide', u'VB'), (u'it', u'it', u'PRP'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'planned', 'to', 'hide', 'it', '.']}, {'string': ' First she moved it around in her house and hid it behind a wall.', 'parse': {'tree': '(ROOT (S (ADVP (RB First)) (NP (PRP she)) (VP (VP (VBD moved) (NP (PRP it)) (PRT (RP around)) (PP (IN in) (NP (PRP$ her) (NN house)))) (CC and) (VP (VBP hid) (NP (PRP it)) (PP (IN behind) (NP (DT a) (NN wall))))) (. .)))', 'lemma': [(u'First', u'first', u'RB'), (u'she', u'she', u'PRP'), (u'moved', u'move', u'VBD'), (u'it', u'it', u'PRP'), (u'around', u'around', u'RP'), (u'in', u'in', u'IN'), (u'her', u'she', u'PRP$'), (u'house', u'house', u'NN'), (u'and', u'and', u'CC'), (u'hid', u'hide', u'VBP'), (u'it', u'it', u'PRP'), (u'behind', u'behind', u'IN'), (u'a', u'a', u'DT'), (u'wall', u'wall', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['First', 'she', 'moved', 'it', 'around', 'in', 'her', 'house', 'and', 'hid', 'it', 'behind', 'a', 'wall', '.']}, {'string': ' Then she put her money in the attic.', 'parse': {'tree': '(ROOT (S (RB Then) (NP (PRP she)) (VP (VBD put) (NP (PRP$ her) (NN money)) (PP (IN in) (NP (DT the) (NN attic)))) (. .)))', 'lemma': [(u'Then', u'then', u'RB'), (u'she', u'she', u'PRP'), (u'put', u'put', u'VBD'), (u'her', u'she', u'PRP$'), (u'money', u'money', u'NN'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'attic', u'attic', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Then', 'she', 'put', 'her', 'money', 'in', 'the', 'attic', '.']}, {'string': " But she still did n't feel safe about her money.", 'parse': {'tree': "(ROOT (S (CC But) (NP (PRP she)) (ADVP (RB still)) (VP (VBD did) (RB n't) (VP (VB feel) (ADJP (JJ safe)) (PP (IN about) (NP (PRP$ her) (NN money))))) (. .)))", 'lemma': [(u'But', u'but', u'CC'), (u'she', u'she', u'PRP'), (u'still', u'still', u'RB'), (u'did', u'do', u'VBD'), (u"n't", u'not', u'RB'), (u'feel', u'feel', u'VB'), (u'safe', u'safe', u'JJ'), (u'about', u'about', u'IN'), (u'her', u'she', u'PRP$'), (u'money', u'money', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['But', 'she', 'still', 'did', "n't", 'feel', 'safe', 'about', 'her', 'money', '.']}, {'string': ' She was sure someone would find it.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBD was) (ADJP (JJ sure) (SBAR (S (NP (NN someone)) (VP (MD would) (VP (VB find) (NP (PRP it)))))))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'was', u'be', u'VBD'), (u'sure', u'sure', u'JJ'), (u'someone', u'someone', u'NN'), (u'would', u'would', u'MD'), (u'find', u'find', u'VB'), (u'it', u'it', u'PRP'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'was', 'sure', 'someone', 'would', 'find', 'it', '.']}, {'string': ' Finally she took it outside and started digging in the ground.', 'parse': {'tree': '(ROOT (S (ADVP (RB Finally)) (NP (PRP she)) (VP (VP (VBD took) (NP (PRP it)) (ADVP (RB outside))) (CC and) (VP (VBD started) (NP (NN digging)) (PP (IN in) (NP (DT the) (NN ground))))) (. .)))', 'lemma': [(u'Finally', u'finally', u'RB'), (u'she', u'she', u'PRP'), (u'took', u'take', u'VBD'), (u'it', u'it', u'PRP'), (u'outside', u'outside', u'RB'), (u'and', u'and', u'CC'), (u'started', u'start', u'VBD'), (u'digging', u'digging', u'NN'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'ground', u'ground', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Finally', 'she', 'took', 'it', 'outside', 'and', 'started', 'digging', 'in', 'the', 'ground', '.']}, {'string': ' She buried it in the ground so no one would find it.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBD buried) (NP (PRP it)) (PP (IN in) (NP (DT the) (NN ground))) (SBAR (IN so) (S (NP (DT no) (NN one)) (VP (MD would) (VP (VB find) (NP (PRP it))))))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'buried', u'bury', u'VBD'), (u'it', u'it', u'PRP'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'ground', u'ground', u'NN'), (u'so', u'so', u'IN'), (u'no', u'no', u'DT'), (u'one', u'one', u'NN'), (u'would', u'would', u'MD'), (u'find', u'find', u'VB'), (u'it', u'it', u'PRP'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'buried', 'it', 'in', 'the', 'ground', 'so', 'no', 'one', 'would', 'find', 'it', '.']}, {'string': " `` It is going be safe here, '' said Nana.", 'parse': {'tree': "(ROOT (SINV (`` ``) (S (NP (PRP It)) (VP (VBZ is) (VP (VBG going) (VP (VB be) (ADJP (JJ safe)) (ADVP (RB here)))))) (, ,) ('' '') (VP (VBD said)) (NP (NNP Nana)) (. .)))", 'lemma': [(u'``', u'``', u'``'), (u'It', u'it', u'PRP'), (u'is', u'be', u'VBZ'), (u'going', u'go', u'VBG'), (u'be', u'be', u'VB'), (u'safe', u'safe', u'JJ'), (u'here', u'here', u'RB'), (u',', u',', u','), (u"''", u"''", u"''"), (u'said', u'say', u'VBD'), (u'Nana', u'Nana', u'NNP'), (u'.', u'.', u'.')]}, 'tokens': ['``', 'It', 'is', 'going', 'be', 'safe', 'here', ',', "''", 'said', 'Nana', '.']}, {'string': ' She was very pleased that she had hidden her money so well.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBD was) (ADJP (RB very) (JJ pleased)) (SBAR (IN that) (S (NP (PRP she)) (VP (VBD had) (VP (VBN hidden) (NP (PRP$ her) (NN money)) (ADVP (RB so) (RB well))))))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'was', u'be', u'VBD'), (u'very', u'very', u'RB'), (u'pleased', u'pleased', u'JJ'), (u'that', u'that', u'IN'), (u'she', u'she', u'PRP'), (u'had', u'have', u'VBD'), (u'hidden', u'hide', u'VBN'), (u'her', u'she', u'PRP$'), (u'money', u'money', u'NN'), (u'so', u'so', u'RB'), (u'well', u'well', u'RB'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'was', 'very', 'pleased', 'that', 'she', 'had', 'hidden', 'her', 'money', 'so', 'well', '.']}, {'string': ' The next day after breakfast, she went outside to make sure her money was still there.', 'parse': {'tree': '(ROOT (S (PP (NP (DT The) (JJ next) (NN day)) (IN after) (NP (NN breakfast))) (, ,) (NP (PRP she)) (VP (VBD went) (ADVP (RB outside)) (S (VP (TO to) (VP (VB make) (ADJP (JJ sure) (SBAR (S (NP (PRP$ her) (NN money)) (VP (VBD was) (ADVP (RB still)) (ADVP (RB there)))))))))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'next', u'next', u'JJ'), (u'day', u'day', u'NN'), (u'after', u'after', u'IN'), (u'breakfast', u'breakfast', u'NN'), (u',', u',', u','), (u'she', u'she', u'PRP'), (u'went', u'go', u'VBD'), (u'outside', u'outside', u'RB'), (u'to', u'to', u'TO'), (u'make', u'make', u'VB'), (u'sure', u'sure', u'JJ'), (u'her', u'she', u'PRP$'), (u'money', u'money', u'NN'), (u'was', u'be', u'VBD'), (u'still', u'still', u'RB'), (u'there', u'there', u'RB'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'next', 'day', 'after', 'breakfast', ',', 'she', 'went', 'outside', 'to', 'make', 'sure', 'her', 'money', 'was', 'still', 'there', '.']}, {'string': ' She stopped at the spot she thought she had buried it and began digging.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VP (VBD stopped) (PP (IN at) (NP (NP (DT the) (NN spot)) (SBAR (S (NP (PRP she)) (VP (VBD thought) (SBAR (S (NP (PRP she)) (VP (VBD had) (VP (VBN buried) (NP (PRP it)))))))))))) (CC and) (VP (VBD began) (NP (NN digging)))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'stopped', u'stop', u'VBD'), (u'at', u'at', u'IN'), (u'the', u'the', u'DT'), (u'spot', u'spot', u'NN'), (u'she', u'she', u'PRP'), (u'thought', u'think', u'VBD'), (u'she', u'she', u'PRP'), (u'had', u'have', u'VBD'), (u'buried', u'bury', u'VBN'), (u'it', u'it', u'PRP'), (u'and', u'and', u'CC'), (u'began', u'begin', u'VBD'), (u'digging', u'digging', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'stopped', 'at', 'the', 'spot', 'she', 'thought', 'she', 'had', 'buried', 'it', 'and', 'began', 'digging', '.']}, {'string': " After some time she had n't found it.", 'parse': {'tree': "(ROOT (S (PP (IN After) (NP (DT some) (NN time))) (NP (PRP she)) (VP (VBD had) (RB n't) (VP (VBN found) (NP (PRP it)))) (. .)))", 'lemma': [(u'After', u'after', u'IN'), (u'some', u'some', u'DT'), (u'time', u'time', u'NN'), (u'she', u'she', u'PRP'), (u'had', u'have', u'VBD'), (u"n't", u'not', u'RB'), (u'found', u'find', u'VBN'), (u'it', u'it', u'PRP'), (u'.', u'.', u'.')]}, 'tokens': ['After', 'some', 'time', 'she', 'had', "n't", 'found', 'it', '.']}, {'string': ' She climbed out of the hole and looked around.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VP (VBD climbed) (PRT (RP out)) (PP (IN of) (NP (DT the) (NN hole)))) (CC and) (VP (VBD looked) (PRT (RP around)))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'climbed', u'climb', u'VBD'), (u'out', u'out', u'RP'), (u'of', u'of', u'IN'), (u'the', u'the', u'DT'), (u'hole', u'hole', u'NN'), (u'and', u'and', u'CC'), (u'looked', u'look', u'VBD'), (u'around', u'around', u'RP'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'climbed', 'out', 'of', 'the', 'hole', 'and', 'looked', 'around', '.']}, {'string': ' She had used a tree as a way to mark the spot.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBD had) (VP (VBN used) (NP (DT a) (NN tree)) (PP (IN as) (NP (DT a) (NN way) (S (VP (TO to) (VP (VB mark) (NP (DT the) (NN spot))))))))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'had', u'have', u'VBD'), (u'used', u'use', u'VBN'), (u'a', u'a', u'DT'), (u'tree', u'tree', u'NN'), (u'as', u'as', u'IN'), (u'a', u'a', u'DT'), (u'way', u'way', u'NN'), (u'to', u'to', u'TO'), (u'mark', u'mark', u'VB'), (u'the', u'the', u'DT'), (u'spot', u'spot', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'had', 'used', 'a', 'tree', 'as', 'a', 'way', 'to', 'mark', 'the', 'spot', '.']}, {'string': " But she could n't tell which tree.", 'parse': {'tree': "(ROOT (S (CC But) (NP (PRP she)) (VP (MD could) (RB n't) (VP (VB tell) (NP (WDT which) (NN tree)))) (. .)))", 'lemma': [(u'But', u'but', u'CC'), (u'she', u'she', u'PRP'), (u'could', u'could', u'MD'), (u"n't", u'not', u'RB'), (u'tell', u'tell', u'VB'), (u'which', u'which', u'WDT'), (u'tree', u'tree', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['But', 'she', 'could', "n't", 'tell', 'which', 'tree', '.']}, {'string': ' The wind was blowing and the trees all looked the same!', 'parse': {'tree': '(ROOT (S (S (NP (DT The) (NN wind)) (VP (VBD was) (VP (VBG blowing)))) (CC and) (S (NP (DT the) (NNS trees)) (ADVP (DT all)) (VP (VBD looked) (NP (DT the) (JJ same)))) (. !)))', 'lemma': [(u'The', u'the', u'DT'), (u'wind', u'wind', u'NN'), (u'was', u'be', u'VBD'), (u'blowing', u'blow', u'VBG'), (u'and', u'and', u'CC'), (u'the', u'the', u'DT'), (u'trees', u'tree', u'NNS'), (u'all', u'all', u'DT'), (u'looked', u'look', u'VBD'), (u'the', u'the', u'DT'), (u'same', u'same', u'JJ'), (u'!', u'!', u'.')]}, 'tokens': ['The', 'wind', 'was', 'blowing', 'and', 'the', 'trees', 'all', 'looked', 'the', 'same', '!']}, {'string': ' She had used a brown spot on the ground to mark the spot.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBD had) (VP (VBN used) (NP (DT a) (JJ brown) (NN spot)) (PP (IN on) (NP (DT the) (NN ground) (S (VP (TO to) (VP (VB mark) (NP (DT the) (NN spot))))))))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'had', u'have', u'VBD'), (u'used', u'use', u'VBN'), (u'a', u'a', u'DT'), (u'brown', u'brown', u'JJ'), (u'spot', u'spot', u'NN'), (u'on', u'on', u'IN'), (u'the', u'the', u'DT'), (u'ground', u'ground', u'NN'), (u'to', u'to', u'TO'), (u'mark', u'mark', u'VB'), (u'the', u'the', u'DT'), (u'spot', u'spot', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'had', 'used', 'a', 'brown', 'spot', 'on', 'the', 'ground', 'to', 'mark', 'the', 'spot', '.']}, {'string': " But she could n't tell which brown spot it was!", 'parse': {'tree': "(ROOT (S (CC But) (NP (PRP she)) (VP (MD could) (RB n't) (VP (VB tell) (NP (NP (WDT which) (JJ brown) (NN spot)) (SBAR (S (NP (PRP it)) (VP (VBD was))))))) (. !)))", 'lemma': [(u'But', u'but', u'CC'), (u'she', u'she', u'PRP'), (u'could', u'could', u'MD'), (u"n't", u'not', u'RB'), (u'tell', u'tell', u'VB'), (u'which', u'which', u'WDT'), (u'brown', u'brown', u'JJ'), (u'spot', u'spot', u'NN'), (u'it', u'it', u'PRP'), (u'was', u'be', u'VBD'), (u'!', u'!', u'.')]}, 'tokens': ['But', 'she', 'could', "n't", 'tell', 'which', 'brown', 'spot', 'it', 'was', '!']}, {'string': " She knew she was n't lost.", 'parse': {'tree': "(ROOT (S (NP (PRP She)) (VP (VBD knew) (SBAR (S (NP (PRP she)) (VP (VBD was) (RB n't) (VP (VBN lost)))))) (. .)))", 'lemma': [(u'She', u'she', u'PRP'), (u'knew', u'know', u'VBD'), (u'she', u'she', u'PRP'), (u'was', u'be', u'VBD'), (u"n't", u'not', u'RB'), (u'lost', u'lose', u'VBN'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'knew', 'she', 'was', "n't", 'lost', '.']}, {'string': ' Nana had hidden her money so well that no one could find it, and that included her!', 'parse': {'tree': '(ROOT (S (S (NP (NNP Nana)) (VP (VBD had) (VP (VBN hidden) (NP (PRP$ her) (NN money)) (ADVP (ADVP (RB so) (RB well)) (SBAR (IN that) (S (NP (DT no) (NN one)) (VP (MD could) (VP (VB find) (NP (PRP it)))))))))) (, ,) (CC and) (S (NP (DT that)) (VP (VBD included) (NP (PRP her)))) (. !)))', 'lemma': [(u'Nana', u'Nana', u'NNP'), (u'had', u'have', u'VBD'), (u'hidden', u'hide', u'VBN'), (u'her', u'she', u'PRP$'), (u'money', u'money', u'NN'), (u'so', u'so', u'RB'), (u'well', u'well', u'RB'), (u'that', u'that', u'IN'), (u'no', u'no', u'DT'), (u'one', u'one', u'NN'), (u'could', u'could', u'MD'), (u'find', u'find', u'VB'), (u'it', u'it', u'PRP'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'that', u'that', u'DT'), (u'included', u'include', u'VBD'), (u'her', u'she', u'PRP'), (u'!', u'!', u'.')]}, 'tokens': ['Nana', 'had', 'hidden', 'her', 'money', 'so', 'well', 'that', 'no', 'one', 'could', 'find', 'it', ',', 'and', 'that', 'included', 'her', '!']}], 'questions': [{'question': {'string': ' How many different places does Nana hide the money BEFORE she hides it for the final time?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WHADJP (WRB How) (JJ many)) (JJ different) (NNS places)) (SQ (VBZ does) (NP (NNP Nana)) (VP (VB hide) (S (NP (DT the) (NN money)) (VP (VB BEFORE) (S (NP (PRP she)) (VP (VBG hides) (NP (PRP it)) (PP (IN for) (NP (DT the) (JJ final) (NN time))))))))) (. ?)))', 'lemma': [(u'How', u'how', u'WRB'), (u'many', u'many', u'JJ'), (u'different', u'different', u'JJ'), (u'places', u'place', u'NNS'), (u'does', u'do', u'VBZ'), (u'Nana', u'Nana', u'NNP'), (u'hide', u'hide', u'VB'), (u'the', u'the', u'DT'), (u'money', u'money', u'NN'), (u'BEFORE', u'before', u'VB'), (u'she', u'she', u'PRP'), (u'hides', u'hide', u'VBG'), (u'it', u'it', u'PRP'), (u'for', u'for', u'IN'), (u'the', u'the', u'DT'), (u'final', u'final', u'JJ'), (u'time', u'time', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['How', 'many', 'different', 'places', 'does', 'Nana', 'hide', 'the', 'money', 'BEFORE', 'she', 'hides', 'it', 'for', 'the', 'final', 'time', '?']}, 'answers': [{'string': ' Four', 'parse': {'tree': '(ROOT (NP (NNP Four)))', 'lemma': [(u'Four', u'Four', u'NNP')]}, 'tokens': ['Four']}, {'string': ' Five', 'parse': {'tree': '(ROOT (FRAG (NP (CD Five))))', 'lemma': [(u'Five', u'five', u'CD')]}, 'tokens': ['Five']}, {'string': ' Three', 'parse': {'tree': '(ROOT (NP (NNP Three)))', 'lemma': [(u'Three', u'Three', u'NNP')]}, 'tokens': ['Three']}, {'string': ' Two', 'parse': {'tree': '(ROOT (FRAG (NP (CD Two))))', 'lemma': [(u'Two', u'two', u'CD')]}, 'tokens': ['Two']}], 'mode': 0}, {'question': {'string': ' Where does Nana finally hide her money?', 'parse': {'tree': '(ROOT (SBARQ (WHADVP (WRB Where)) (SQ (VBZ does) (NP (NNP Nana)) (ADVP (RB finally)) (VP (VB hide) (NP (PRP$ her) (NN money)))) (. ?)))', 'lemma': [(u'Where', u'where', u'WRB'), (u'does', u'do', u'VBZ'), (u'Nana', u'Nana', u'NNP'), (u'finally', u'finally', u'RB'), (u'hide', u'hide', u'VB'), (u'her', u'she', u'PRP$'), (u'money', u'money', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['Where', 'does', 'Nana', 'finally', 'hide', 'her', 'money', '?']}, 'answers': [{'string': ' A tree', 'parse': {'tree': '(ROOT (FRAG (NP (DT A) (NN tree))))', 'lemma': [(u'A', u'a', u'DT'), (u'tree', u'tree', u'NN')]}, 'tokens': ['A', 'tree']}, {'string': ' A hole in the ground she dug', 'parse': {'tree': '(ROOT (FRAG (NP (DT A) (NN hole)) (PP (IN in) (NP (NP (DT the) (NN ground)) (SBAR (S (NP (PRP she)) (VP (VBD dug))))))))', 'lemma': [(u'A', u'a', u'DT'), (u'hole', u'hole', u'NN'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'ground', u'ground', u'NN'), (u'she', u'she', u'PRP'), (u'dug', u'dig', u'VBD')]}, 'tokens': ['A', 'hole', 'in', 'the', 'ground', 'she', 'dug']}, {'string': ' Her wall', 'parse': {'tree': '(ROOT (FRAG (NP (PRP$ Her) (NN wall))))', 'lemma': [(u'Her', u'she', u'PRP$'), (u'wall', u'wall', u'NN')]}, 'tokens': ['Her', 'wall']}, {'string': ' Her attic', 'parse': {'tree': '(ROOT (FRAG (NP (PRP$ Her) (NN attic))))', 'lemma': [(u'Her', u'she', u'PRP$'), (u'attic', u'attic', u'NN')]}, 'tokens': ['Her', 'attic']}], 'mode': 1}, {'question': {'string': " Why could n't she find her money at the end?", 'parse': {'tree': "(ROOT (SBARQ (WHADVP (WRB Why)) (SQ (MD could) (RB n't) (NP (PRP she)) (VP (VB find) (NP (PRP$ her) (NN money)) (PP (IN at) (NP (DT the) (NN end))))) (. ?)))", 'lemma': [(u'Why', u'why', u'WRB'), (u'could', u'could', u'MD'), (u"n't", u'not', u'RB'), (u'she', u'she', u'PRP'), (u'find', u'find', u'VB'), (u'her', u'she', u'PRP$'), (u'money', u'money', u'NN'), (u'at', u'at', u'IN'), (u'the', u'the', u'DT'), (u'end', u'end', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['Why', 'could', "n't", 'she', 'find', 'her', 'money', 'at', 'the', 'end', '?']}, 'answers': [{'string': ' The wind blew her money away', 'parse': {'tree': '(ROOT (S (NP (DT The) (NN wind)) (VP (VBD blew) (NP (PRP$ her) (NN money)) (ADVP (RB away)))))', 'lemma': [(u'The', u'the', u'DT'), (u'wind', u'wind', u'NN'), (u'blew', u'blow', u'VBD'), (u'her', u'she', u'PRP$'), (u'money', u'money', u'NN'), (u'away', u'away', u'RB')]}, 'tokens': ['The', 'wind', 'blew', 'her', 'money', 'away']}, {'string': " Because she had n't eaten breakfast.", 'parse': {'tree': "(ROOT (S (SBAR (IN Because) (S (NP (PRP she)) (VP (VBD had) (RB n't) (VP (VBN eaten))))) (VP (VBZ breakfast)) (. .)))", 'lemma': [(u'Because', u'because', u'IN'), (u'she', u'she', u'PRP'), (u'had', u'have', u'VBD'), (u"n't", u'not', u'RB'), (u'eaten', u'eat', u'VBN'), (u'breakfast', u'breakfast', u'VBZ'), (u'.', u'.', u'.')]}, 'tokens': ['Because', 'she', 'had', "n't", 'eaten', 'breakfast', '.']}, {'string': ' She got lost.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBD got) (VP (VBN lost))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'got', u'get', u'VBD'), (u'lost', u'lose', u'VBN'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'got', 'lost', '.']}, {'string': " Because she could n't tell which things she used to mark the spot where she hid the money.", 'parse': {'tree': "(ROOT (S (SBAR (IN Because) (S (NP (PRP she)) (VP (MD could) (RB n't) (VP (VB tell) (WHNP (WDT which) (NNS things)))))) (NP (PRP she)) (VP (VBD used) (S (VP (TO to) (VP (VB mark) (NP (DT the) (NN spot)) (SBAR (WHADVP (WRB where)) (S (NP (PRP she)) (VP (VBP hid) (NP (DT the) (NN money))))))))) (. .)))", 'lemma': [(u'Because', u'because', u'IN'), (u'she', u'she', u'PRP'), (u'could', u'could', u'MD'), (u"n't", u'not', u'RB'), (u'tell', u'tell', u'VB'), (u'which', u'which', u'WDT'), (u'things', u'thing', u'NNS'), (u'she', u'she', u'PRP'), (u'used', u'use', u'VBD'), (u'to', u'to', u'TO'), (u'mark', u'mark', u'VB'), (u'the', u'the', u'DT'), (u'spot', u'spot', u'NN'), (u'where', u'where', u'WRB'), (u'she', u'she', u'PRP'), (u'hid', u'hide', u'VBP'), (u'the', u'the', u'DT'), (u'money', u'money', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Because', 'she', 'could', "n't", 'tell', 'which', 'things', 'she', 'used', 'to', 'mark', 'the', 'spot', 'where', 'she', 'hid', 'the', 'money', '.']}], 'mode': 0}, {'question': {'string': ' Where was the first place Nana hid her money?', 'parse': {'tree': '(ROOT (SBARQ (WHADVP (WRB Where)) (SQ (VBD was) (NP (DT the) (JJ first) (NN place) (NNP Nana)) (VP (VBN hid) (NP (PRP$ her) (NN money)))) (. ?)))', 'lemma': [(u'Where', u'where', u'WRB'), (u'was', u'be', u'VBD'), (u'the', u'the', u'DT'), (u'first', u'first', u'JJ'), (u'place', u'place', u'NN'), (u'Nana', u'Nana', u'NNP'), (u'hid', u'hide', u'VBN'), (u'her', u'she', u'PRP$'), (u'money', u'money', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['Where', 'was', 'the', 'first', 'place', 'Nana', 'hid', 'her', 'money', '?']}, 'answers': [{'string': ' A tree', 'parse': {'tree': '(ROOT (FRAG (NP (DT A) (NN tree))))', 'lemma': [(u'A', u'a', u'DT'), (u'tree', u'tree', u'NN')]}, 'tokens': ['A', 'tree']}, {'string': ' The attic', 'parse': {'tree': '(ROOT (FRAG (NP (DT The) (NN attic))))', 'lemma': [(u'The', u'the', u'DT'), (u'attic', u'attic', u'NN')]}, 'tokens': ['The', 'attic']}, {'string': ' The wall', 'parse': {'tree': '(ROOT (FRAG (NP (DT The) (NN wall))))', 'lemma': [(u'The', u'the', u'DT'), (u'wall', u'wall', u'NN')]}, 'tokens': ['The', 'wall']}, {'string': ' A hole in the ground.', 'parse': {'tree': '(ROOT (NP (NP (DT A) (NN hole)) (PP (IN in) (NP (DT the) (NN ground))) (. .)))', 'lemma': [(u'A', u'a', u'DT'), (u'hole', u'hole', u'NN'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'ground', u'ground', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['A', 'hole', 'in', 'the', 'ground', '.']}], 'mode': 1}]}
{'sentences': [{'string': " Suzie 's cat, Peaches, was missing.", 'parse': {'tree': "(ROOT (S (NP (NP (NP (NNP Suzie) (POS 's)) (NN cat)) (, ,) (NP (NNP Peaches)) (, ,)) (VP (VBD was) (ADJP (VBG missing))) (. .)))", 'lemma': [(u'Suzie', u'Suzie', u'NNP'), (u"'s", u"'s", u'POS'), (u'cat', u'cat', u'NN'), (u',', u',', u','), (u'Peaches', u'Peaches', u'NNP'), (u',', u',', u','), (u'was', u'be', u'VBD'), (u'missing', u'miss', u'VBG'), (u'.', u'.', u'.')]}, 'tokens': ['Suzie', "'s", 'cat', ',', 'Peaches', ',', 'was', 'missing', '.']}, {'string': ' She was very scared.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBD was) (ADJP (RB very) (VBN scared))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'was', u'be', u'VBD'), (u'very', u'very', u'RB'), (u'scared', u'scare', u'VBN'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'was', 'very', 'scared', '.']}, {'string': ' Suzie got on her bicycle to look for her.', 'parse': {'tree': '(ROOT (S (NP (NNP Suzie)) (VP (VBD got) (PP (IN on) (NP (PRP$ her) (NN bicycle) (S (VP (TO to) (VP (VB look) (PP (IN for) (NP (PRP her))))))))) (. .)))', 'lemma': [(u'Suzie', u'Suzie', u'NNP'), (u'got', u'get', u'VBD'), (u'on', u'on', u'IN'), (u'her', u'she', u'PRP$'), (u'bicycle', u'bicycle', u'NN'), (u'to', u'to', u'TO'), (u'look', u'look', u'VB'), (u'for', u'for', u'IN'), (u'her', u'she', u'PRP'), (u'.', u'.', u'.')]}, 'tokens': ['Suzie', 'got', 'on', 'her', 'bicycle', 'to', 'look', 'for', 'her', '.']}, {'string': ' She looked up and down the street for Peaches and called for her, but Peaches did not come.', 'parse': {'tree': '(ROOT (S (S (NP (PRP She)) (VP (VP (VBD looked) (PRT (RP up) (CC and) (RP down)) (NP (NP (DT the) (NN street)) (PP (IN for) (NP (NNP Peaches))))) (CC and) (VP (VBD called) (PP (IN for) (NP (PRP her)))))) (, ,) (CC but) (S (NP (NNP Peaches)) (VP (VBD did) (RB not) (VP (VB come)))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'looked', u'look', u'VBD'), (u'up', u'up', u'RP'), (u'and', u'and', u'CC'), (u'down', u'down', u'RP'), (u'the', u'the', u'DT'), (u'street', u'street', u'NN'), (u'for', u'for', u'IN'), (u'Peaches', u'Peaches', u'NNP'), (u'and', u'and', u'CC'), (u'called', u'call', u'VBD'), (u'for', u'for', u'IN'), (u'her', u'she', u'PRP'), (u',', u',', u','), (u'but', u'but', u'CC'), (u'Peaches', u'Peaches', u'NNP'), (u'did', u'do', u'VBD'), (u'not', u'not', u'RB'), (u'come', u'come', u'VB'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'looked', 'up', 'and', 'down', 'the', 'street', 'for', 'Peaches', 'and', 'called', 'for', 'her', ',', 'but', 'Peaches', 'did', 'not', 'come', '.']}, {'string': ' \\ tabSuzie went to the lake and found a turtle.', 'parse': {'tree': '(ROOT (S (NP (JJ \\) (NN tabSuzie)) (VP (VP (VBD went) (PP (TO to) (NP (DT the) (NN lake)))) (CC and) (VP (VBD found) (NP (DT a) (NN turtle)))) (. .)))', 'lemma': [(u'\\', u'\\', u'JJ'), (u'tabSuzie', u'tabsuzie', u'NN'), (u'went', u'go', u'VBD'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'lake', u'lake', u'NN'), (u'and', u'and', u'CC'), (u'found', u'find', u'VBD'), (u'a', u'a', u'DT'), (u'turtle', u'turtle', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['\\', 'tabSuzie', 'went', 'to', 'the', 'lake', 'and', 'found', 'a', 'turtle', '.']}, {'string': " `` Mr. Turtle, '' she said.", 'parse': {'tree': "(ROOT (S (`` ``) (NP (NNP Mr.) (NNP Turtle)) (, ,) ('' '') (NP (PRP she)) (VP (VBD said)) (. .)))", 'lemma': [(u'``', u'``', u'``'), (u'Mr.', u'Mr.', u'NNP'), (u'Turtle', u'Turtle', u'NNP'), (u',', u',', u','), (u"''", u"''", u"''"), (u'she', u'she', u'PRP'), (u'said', u'say', u'VBD'), (u'.', u'.', u'.')]}, 'tokens': ['``', 'Mr.', 'Turtle', ',', "''", 'she', 'said', '.']}, {'string': " `` Have you seen my cat, Peaches? ''", 'parse': {'tree': "(ROOT (S (`` ``) (VP (VB Have) (S (NP (PRP you)) (VP (VBN seen) (NP (NP (PRP$ my) (NN cat)) (, ,) (NP (NNP Peaches)))))) (. ?) ('' '')))", 'lemma': [(u'``', u'``', u'``'), (u'Have', u'have', u'VB'), (u'you', u'you', u'PRP'), (u'seen', u'see', u'VBN'), (u'my', u'my', u'PRP$'), (u'cat', u'cat', u'NN'), (u',', u',', u','), (u'Peaches', u'Peaches', u'NNP'), (u'?', u'?', u'.'), (u"''", u"''", u"''")]}, 'tokens': ['``', 'Have', 'you', 'seen', 'my', 'cat', ',', 'Peaches', '?', "''"]}, {'string': " \\ tab `` No, Suzie, '' said Mr. Turtle.", 'parse': {'tree': "(ROOT (S (NP (JJ \\) (NN tab)) (`` ``) (S (INTJ (UH No)) (, ,) (VP (VB Suzie))) (, ,) ('' '') (VP (VBD said)) (NP (NNP Mr.) (NNP Turtle)) (. .)))", 'lemma': [(u'\\', u'\\', u'JJ'), (u'tab', u'tab', u'NN'), (u'``', u'``', u'``'), (u'No', u'no', u'UH'), (u',', u',', u','), (u'Suzie', u'suzie', u'VB'), (u',', u',', u','), (u"''", u"''", u"''"), (u'said', u'say', u'VBD'), (u'Mr.', u'Mr.', u'NNP'), (u'Turtle', u'Turtle', u'NNP'), (u'.', u'.', u'.')]}, 'tokens': ['\\', 'tab', '``', 'No', ',', 'Suzie', ',', "''", 'said', 'Mr.', 'Turtle', '.']}, {'string': " He was very old, and did n't see very well.", 'parse': {'tree': "(ROOT (S (NP (PRP He)) (VP (VP (VBD was) (ADJP (RB very) (JJ old))) (, ,) (CC and) (VP (VBD did) (RB n't) (VP (VB see) (ADVP (RB very) (RB well))))) (. .)))", 'lemma': [(u'He', u'he', u'PRP'), (u'was', u'be', u'VBD'), (u'very', u'very', u'RB'), (u'old', u'old', u'JJ'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'did', u'do', u'VBD'), (u"n't", u'not', u'RB'), (u'see', u'see', u'VB'), (u'very', u'very', u'RB'), (u'well', u'well', u'RB'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'was', 'very', 'old', ',', 'and', 'did', "n't", 'see', 'very', 'well', '.']}, {'string': " `` I can barely see my own shell. ''", 'parse': {'tree': "(ROOT (S (`` ``) (NP (PRP I)) (VP (MD can) (ADVP (RB barely)) (VP (VB see) (NP (PRP$ my) (JJ own) (NN shell)))) (. .) ('' '')))", 'lemma': [(u'``', u'``', u'``'), (u'I', u'I', u'PRP'), (u'can', u'can', u'MD'), (u'barely', u'barely', u'RB'), (u'see', u'see', u'VB'), (u'my', u'my', u'PRP$'), (u'own', u'own', u'JJ'), (u'shell', u'shell', u'NN'), (u'.', u'.', u'.'), (u"''", u"''", u"''")]}, 'tokens': ['``', 'I', 'can', 'barely', 'see', 'my', 'own', 'shell', '.', "''"]}, {'string': " \\ tab `` I 'm sorry, '' said Suzie.", 'parse': {'tree': "(ROOT (SINV (S (NP (JJ \\) (NN tab)) (`` ``) (NP (PRP I)) (VP (VBP 'm) (ADJP (JJ sorry))) (, ,) ('' '')) (VP (VBD said)) (NP (NNP Suzie)) (. .)))", 'lemma': [(u'\\', u'\\', u'JJ'), (u'tab', u'tab', u'NN'), (u'``', u'``', u'``'), (u'I', u'I', u'PRP'), (u"'m", u'be', u'VBP'), (u'sorry', u'sorry', u'JJ'), (u',', u',', u','), (u"''", u"''", u"''"), (u'said', u'say', u'VBD'), (u'Suzie', u'Suzie', u'NNP'), (u'.', u'.', u'.')]}, 'tokens': ['\\', 'tab', '``', 'I', "'m", 'sorry', ',', "''", 'said', 'Suzie', '.']}, {'string': ' `` But I have to find Peaches.', 'parse': {'tree': '(ROOT (S (`` ``) (CC But) (NP (PRP I)) (VP (VBP have) (S (VP (TO to) (VP (VB find) (NP (NNS Peaches)))))) (. .)))', 'lemma': [(u'``', u'``', u'``'), (u'But', u'but', u'CC'), (u'I', u'I', u'PRP'), (u'have', u'have', u'VBP'), (u'to', u'to', u'TO'), (u'find', u'find', u'VB'), (u'Peaches', u'peach', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['``', 'But', 'I', 'have', 'to', 'find', 'Peaches', '.']}, {'string': " It 's almost time for her supper. ''", 'parse': {'tree': "(ROOT (S (NP (PRP It)) (VP (VBZ 's) (NP (NP (RB almost) (NN time)) (PP (IN for) (NP (PRP$ her) (NN supper))))) (. .) ('' '')))", 'lemma': [(u'It', u'it', u'PRP'), (u"'s", u'be', u'VBZ'), (u'almost', u'almost', u'RB'), (u'time', u'time', u'NN'), (u'for', u'for', u'IN'), (u'her', u'she', u'PRP$'), (u'supper', u'supper', u'NN'), (u'.', u'.', u'.'), (u"''", u"''", u"''")]}, 'tokens': ['It', "'s", 'almost', 'time', 'for', 'her', 'supper', '.', "''"]}, {'string': ' \\ tabShe went further down the street, and met a puppy.', 'parse': {'tree': '(ROOT (S (NP (JJ \\) (NN tabShe)) (VP (VP (VBD went) (ADVP (RBR further) (RB down)) (NP (DT the) (NN street))) (, ,) (CC and) (VP (VBD met) (NP (DT a) (NN puppy)))) (. .)))', 'lemma': [(u'\\', u'\\', u'JJ'), (u'tabShe', u'tabshe', u'NN'), (u'went', u'go', u'VBD'), (u'further', u'further', u'RBR'), (u'down', u'down', u'RB'), (u'the', u'the', u'DT'), (u'street', u'street', u'NN'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'met', u'meet', u'VBD'), (u'a', u'a', u'DT'), (u'puppy', u'puppy', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['\\', 'tabShe', 'went', 'further', 'down', 'the', 'street', ',', 'and', 'met', 'a', 'puppy', '.']}, {'string': " `` Hello, puppy, '' she said.", 'parse': {'tree': "(ROOT (S (`` ``) (FRAG (INTJ (UH Hello)) (, ,) (ADVP (RB puppy))) (, ,) ('' '') (NP (PRP she)) (VP (VBD said)) (. .)))", 'lemma': [(u'``', u'``', u'``'), (u'Hello', u'hello', u'UH'), (u',', u',', u','), (u'puppy', u'puppy', u'RB'), (u',', u',', u','), (u"''", u"''", u"''"), (u'she', u'she', u'PRP'), (u'said', u'say', u'VBD'), (u'.', u'.', u'.')]}, 'tokens': ['``', 'Hello', ',', 'puppy', ',', "''", 'she', 'said', '.']}, {'string': " `` Have you seen my cat, Peaches? ''", 'parse': {'tree': "(ROOT (S (`` ``) (VP (VB Have) (S (NP (PRP you)) (VP (VBN seen) (NP (NP (PRP$ my) (NN cat)) (, ,) (NP (NNP Peaches)))))) (. ?) ('' '')))", 'lemma': [(u'``', u'``', u'``'), (u'Have', u'have', u'VB'), (u'you', u'you', u'PRP'), (u'seen', u'see', u'VBN'), (u'my', u'my', u'PRP$'), (u'cat', u'cat', u'NN'), (u',', u',', u','), (u'Peaches', u'Peaches', u'NNP'), (u'?', u'?', u'.'), (u"''", u"''", u"''")]}, 'tokens': ['``', 'Have', 'you', 'seen', 'my', 'cat', ',', 'Peaches', '?', "''"]}, {'string': ' \\ tabThe puppy was new, and had not met Peaches yet.', 'parse': {'tree': '(ROOT (S (NP (JJ \\) (NN tabThe)) (ADVP (RB puppy)) (VP (VP (VBD was) (ADJP (JJ new))) (, ,) (CC and) (VP (VBD had) (RB not) (VP (VBN met) (NP (NNS Peaches)) (ADVP (RB yet))))) (. .)))', 'lemma': [(u'\\', u'\\', u'JJ'), (u'tabThe', u'tabthe', u'NN'), (u'puppy', u'puppy', u'RB'), (u'was', u'be', u'VBD'), (u'new', u'new', u'JJ'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'had', u'have', u'VBD'), (u'not', u'not', u'RB'), (u'met', u'meet', u'VBN'), (u'Peaches', u'peach', u'NNS'), (u'yet', u'yet', u'RB'), (u'.', u'.', u'.')]}, 'tokens': ['\\', 'tabThe', 'puppy', 'was', 'new', ',', 'and', 'had', 'not', 'met', 'Peaches', 'yet', '.']}, {'string': " `` I do n't know who Peaches is, '' he said.", 'parse': {'tree': "(ROOT (S (`` ``) (S (NP (PRP I)) (VP (VBP do) (RB n't) (VP (VB know) (SBAR (WHNP (WP who)) (S (NP (NNP Peaches)) (VP (VBZ is))))))) (, ,) ('' '') (NP (PRP he)) (VP (VBD said)) (. .)))", 'lemma': [(u'``', u'``', u'``'), (u'I', u'I', u'PRP'), (u'do', u'do', u'VBP'), (u"n't", u'not', u'RB'), (u'know', u'know', u'VB'), (u'who', u'who', u'WP'), (u'Peaches', u'Peaches', u'NNP'), (u'is', u'be', u'VBZ'), (u',', u',', u','), (u"''", u"''", u"''"), (u'he', u'he', u'PRP'), (u'said', u'say', u'VBD'), (u'.', u'.', u'.')]}, 'tokens': ['``', 'I', 'do', "n't", 'know', 'who', 'Peaches', 'is', ',', "''", 'he', 'said', '.']}, {'string': " `` But I 'll let you know if I meet her. ''", 'parse': {'tree': "(ROOT (S (`` ``) (CC But) (NP (PRP I)) (VP (MD 'll) (VP (VB let) (S (NP (PRP you)) (VP (VB know) (SBAR (IN if) (S (NP (PRP I)) (VP (VBP meet) (NP (PRP her))))))))) (. .) ('' '')))", 'lemma': [(u'``', u'``', u'``'), (u'But', u'but', u'CC'), (u'I', u'I', u'PRP'), (u"'ll", u"'ll", u'MD'), (u'let', u'let', u'VB'), (u'you', u'you', u'PRP'), (u'know', u'know', u'VB'), (u'if', u'if', u'IN'), (u'I', u'I', u'PRP'), (u'meet', u'meet', u'VBP'), (u'her', u'she', u'PRP'), (u'.', u'.', u'.'), (u"''", u"''", u"''")]}, 'tokens': ['``', 'But', 'I', "'ll", 'let', 'you', 'know', 'if', 'I', 'meet', 'her', '.', "''"]}, {'string': ' \\ tabSuzie thanked the puppy and looked a little more before going home.', 'parse': {'tree': '(ROOT (S (NP (JJ \\) (NN tabSuzie)) (VP (VP (VBD thanked) (NP (DT the) (NN puppy))) (CC and) (VP (VBD looked) (ADJP (ADJP (NP (DT a) (RB little)) (JJR more)) (PP (IN before) (S (VP (VBG going) (NP (NN home)))))))) (. .)))', 'lemma': [(u'\\', u'\\', u'JJ'), (u'tabSuzie', u'tabsuzie', u'NN'), (u'thanked', u'thank', u'VBD'), (u'the', u'the', u'DT'), (u'puppy', u'puppy', u'NN'), (u'and', u'and', u'CC'), (u'looked', u'look', u'VBD'), (u'a', u'a', u'DT'), (u'little', u'little', u'RB'), (u'more', u'more', u'JJR'), (u'before', u'before', u'IN'), (u'going', u'go', u'VBG'), (u'home', u'home', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['\\', 'tabSuzie', 'thanked', 'the', 'puppy', 'and', 'looked', 'a', 'little', 'more', 'before', 'going', 'home', '.']}, {'string': ' It was dark, and the stars were out.', 'parse': {'tree': '(ROOT (S (S (NP (PRP It)) (VP (VBD was) (ADJP (JJ dark)))) (, ,) (CC and) (S (NP (DT the) (NNS stars)) (VP (VBD were) (ADVP (RB out)))) (. .)))', 'lemma': [(u'It', u'it', u'PRP'), (u'was', u'be', u'VBD'), (u'dark', u'dark', u'JJ'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'the', u'the', u'DT'), (u'stars', u'star', u'NNS'), (u'were', u'be', u'VBD'), (u'out', u'out', u'RB'), (u'.', u'.', u'.')]}, 'tokens': ['It', 'was', 'dark', ',', 'and', 'the', 'stars', 'were', 'out', '.']}, {'string': ' Suzie cried, and wished upon a star.', 'parse': {'tree': '(ROOT (S (NP (NNP Suzie)) (VP (VP (VBD cried)) (, ,) (CC and) (VP (VBD wished) (PP (IN upon) (NP (DT a) (NN star))))) (. .)))', 'lemma': [(u'Suzie', u'Suzie', u'NNP'), (u'cried', u'cry', u'VBD'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'wished', u'wish', u'VBD'), (u'upon', u'upon', u'IN'), (u'a', u'a', u'DT'), (u'star', u'star', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Suzie', 'cried', ',', 'and', 'wished', 'upon', 'a', 'star', '.']}, {'string': " `` Please let Peaches come home safe, '' she wished.", 'parse': {'tree': "(ROOT (S (`` ``) (S (INTJ (VB Please)) (VP (VB let) (S (NP (NNP Peaches)) (VP (VB come) (S (NP (NN home)) (ADJP (JJ safe))))))) (, ,) ('' '') (NP (PRP she)) (VP (VBD wished)) (. .)))", 'lemma': [(u'``', u'``', u'``'), (u'Please', u'please', u'VB'), (u'let', u'let', u'VB'), (u'Peaches', u'Peaches', u'NNP'), (u'come', u'come', u'VB'), (u'home', u'home', u'NN'), (u'safe', u'safe', u'JJ'), (u',', u',', u','), (u"''", u"''", u"''"), (u'she', u'she', u'PRP'), (u'wished', u'wish', u'VBD'), (u'.', u'.', u'.')]}, 'tokens': ['``', 'Please', 'let', 'Peaches', 'come', 'home', 'safe', ',', "''", 'she', 'wished', '.']}, {'string': ' \\ tabThe star twinkled, and Suzie heard a meow.', 'parse': {'tree': '(ROOT (S (S (NP (JJ \\) (NN tabThe) (NN star)) (VP (VBD twinkled))) (, ,) (CC and) (S (NP (NNP Suzie)) (VP (VBD heard) (NP (DT a) (NN meow)))) (. .)))', 'lemma': [(u'\\', u'\\', u'JJ'), (u'tabThe', u'tabthe', u'NN'), (u'star', u'star', u'NN'), (u'twinkled', u'twinkle', u'VBD'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'Suzie', u'Suzie', u'NNP'), (u'heard', u'hear', u'VBD'), (u'a', u'a', u'DT'), (u'meow', u'meow', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['\\', 'tabThe', 'star', 'twinkled', ',', 'and', 'Suzie', 'heard', 'a', 'meow', '.']}, {'string': " It was Peaches ' voice!", 'parse': {'tree': "(ROOT (S (NP (PRP It)) (VP (VBD was) (NP (NP (NNP Peaches) (POS ')) (NN voice))) (. !)))", 'lemma': [(u'It', u'it', u'PRP'), (u'was', u'be', u'VBD'), (u'Peaches', u'Peaches', u'NNP'), (u"'", u"'", u'POS'), (u'voice', u'voice', u'NN'), (u'!', u'!', u'.')]}, 'tokens': ['It', 'was', 'Peaches', "'", 'voice', '!']}, {'string': " Peaches had been hiding under Suzie 's bed all along!", 'parse': {'tree': "(ROOT (S (NP (NNS Peaches)) (VP (VBD had) (VP (VBN been) (VP (VBG hiding) (PP (IN under) (NP (NP (NP (NNP Suzie) (POS 's)) (NN bed)) (ADVP (DT all) (IN along))))))) (. !)))", 'lemma': [(u'Peaches', u'peach', u'NNS'), (u'had', u'have', u'VBD'), (u'been', u'be', u'VBN'), (u'hiding', u'hide', u'VBG'), (u'under', u'under', u'IN'), (u'Suzie', u'Suzie', u'NNP'), (u"'s", u"'s", u'POS'), (u'bed', u'bed', u'NN'), (u'all', u'all', u'DT'), (u'along', u'along', u'IN'), (u'!', u'!', u'.')]}, 'tokens': ['Peaches', 'had', 'been', 'hiding', 'under', 'Suzie', "'s", 'bed', 'all', 'along', '!']}, {'string': " Peaches jumped into Suzie 's lap, and Suzie hugged her and gave her her dinner, and then they went to bed and fell asleep.", 'parse': {'tree': "(ROOT (S (S (NP (NNS Peaches)) (VP (VBD jumped) (PP (IN into) (NP (NP (NNP Suzie) (POS 's)) (NN lap))))) (, ,) (CC and) (S (S (NP (NNP Suzie)) (VP (VP (VBD hugged) (NP (PRP her))) (CC and) (VP (VBD gave) (NP (PRP her)) (NP (PRP$ her) (NN dinner))))) (, ,) (CC and) (RB then) (S (NP (PRP they)) (VP (VP (VBD went) (PP (TO to) (NP (NN bed)))) (CC and) (VP (VBD fell) (S (ADJP (RB asleep))))))) (. .)))", 'lemma': [(u'Peaches', u'peach', u'NNS'), (u'jumped', u'jump', u'VBD'), (u'into', u'into', u'IN'), (u'Suzie', u'Suzie', u'NNP'), (u"'s", u"'s", u'POS'), (u'lap', u'lap', u'NN'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'Suzie', u'Suzie', u'NNP'), (u'hugged', u'hug', u'VBD'), (u'her', u'she', u'PRP'), (u'and', u'and', u'CC'), (u'gave', u'give', u'VBD'), (u'her', u'she', u'PRP'), (u'her', u'she', u'PRP$'), (u'dinner', u'dinner', u'NN'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'then', u'then', u'RB'), (u'they', u'they', u'PRP'), (u'went', u'go', u'VBD'), (u'to', u'to', u'TO'), (u'bed', u'bed', u'NN'), (u'and', u'and', u'CC'), (u'fell', u'fall', u'VBD'), (u'asleep', u'asleep', u'RB'), (u'.', u'.', u'.')]}, 'tokens': ['Peaches', 'jumped', 'into', 'Suzie', "'s", 'lap', ',', 'and', 'Suzie', 'hugged', 'her', 'and', 'gave', 'her', 'her', 'dinner', ',', 'and', 'then', 'they', 'went', 'to', 'bed', 'and', 'fell', 'asleep', '.']}], 'questions': [{'question': {'string': ' What was the order in which Suzie asked other characters for help?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD was) (NP (NP (DT the) (NN order)) (SBAR (WHPP (IN in) (WHNP (WDT which))) (S (NP (NNP Suzie)) (VP (VBD asked) (NP (JJ other) (NNS characters)) (PP (IN for) (NP (NN help)))))))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'was', u'be', u'VBD'), (u'the', u'the', u'DT'), (u'order', u'order', u'NN'), (u'in', u'in', u'IN'), (u'which', u'which', u'WDT'), (u'Suzie', u'Suzie', u'NNP'), (u'asked', u'ask', u'VBD'), (u'other', u'other', u'JJ'), (u'characters', u'character', u'NNS'), (u'for', u'for', u'IN'), (u'help', u'help', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'was', 'the', 'order', 'in', 'which', 'Suzie', 'asked', 'other', 'characters', 'for', 'help', '?']}, 'answers': [{'string': ' first Mr. Turtle, then the puppy, then the star', 'parse': {'tree': '(ROOT (FRAG (ADJP (NP (JJ first) (NNP Mr.)) (JJ Turtle)) (, ,) (RB then) (NP (DT the) (NN puppy)) (, ,) (RB then) (NP (DT the) (NN star))))', 'lemma': [(u'first', u'first', u'JJ'), (u'Mr.', u'Mr.', u'NNP'), (u'Turtle', u'turtle', u'JJ'), (u',', u',', u','), (u'then', u'then', u'RB'), (u'the', u'the', u'DT'), (u'puppy', u'puppy', u'NN'), (u',', u',', u','), (u'then', u'then', u'RB'), (u'the', u'the', u'DT'), (u'star', u'star', u'NN')]}, 'tokens': ['first', 'Mr.', 'Turtle', ',', 'then', 'the', 'puppy', ',', 'then', 'the', 'star']}, {'string': ' first the star, then Mr. Turtle, then the puppy', 'parse': {'tree': '(ROOT (FRAG (ADVP (JJ first) (NP (DT the) (NN star))) (, ,) (RB then) (NP (NNP Mr.) (NNP Turtle)) (, ,) (RB then) (NP (DT the) (NN puppy))))', 'lemma': [(u'first', u'first', u'JJ'), (u'the', u'the', u'DT'), (u'star', u'star', u'NN'), (u',', u',', u','), (u'then', u'then', u'RB'), (u'Mr.', u'Mr.', u'NNP'), (u'Turtle', u'Turtle', u'NNP'), (u',', u',', u','), (u'then', u'then', u'RB'), (u'the', u'the', u'DT'), (u'puppy', u'puppy', u'NN')]}, 'tokens': ['first', 'the', 'star', ',', 'then', 'Mr.', 'Turtle', ',', 'then', 'the', 'puppy']}, {'string': ' first the puppy, then Mr. Turtle, then Peaches', 'parse': {'tree': '(ROOT (FRAG (ADVP (JJ first) (NP (DT the) (NN puppy))) (, ,) (RB then) (NP (NNP Mr.) (NNP Turtle)) (, ,) (RB then) (NP (NNP Peaches))))', 'lemma': [(u'first', u'first', u'JJ'), (u'the', u'the', u'DT'), (u'puppy', u'puppy', u'NN'), (u',', u',', u','), (u'then', u'then', u'RB'), (u'Mr.', u'Mr.', u'NNP'), (u'Turtle', u'Turtle', u'NNP'), (u',', u',', u','), (u'then', u'then', u'RB'), (u'Peaches', u'Peaches', u'NNP')]}, 'tokens': ['first', 'the', 'puppy', ',', 'then', 'Mr.', 'Turtle', ',', 'then', 'Peaches']}, {'string': ' first Peaches, then the puppy, then Mr. Turtle', 'parse': {'tree': '(ROOT (NP (NP (JJ first) (NNS Peaches)) (PRN (, ,) (ADVP (RB then)) (NP (NP (DT the) (NN puppy)) (, ,) (NP (RB then)))) (NP (NNP Mr.) (NNP Turtle))))', 'lemma': [(u'first', u'first', u'JJ'), (u'Peaches', u'peach', u'NNS'), (u',', u',', u','), (u'then', u'then', u'RB'), (u'the', u'the', u'DT'), (u'puppy', u'puppy', u'NN'), (u',', u',', u','), (u'then', u'then', u'RB'), (u'Mr.', u'Mr.', u'NNP'), (u'Turtle', u'Turtle', u'NNP')]}, 'tokens': ['first', 'Peaches', ',', 'then', 'the', 'puppy', ',', 'then', 'Mr.', 'Turtle']}], 'mode': 0}, {'question': {'string': " What was the name of Suzie 's cat?", 'parse': {'tree': "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD was) (NP (NP (DT the) (NN name)) (PP (IN of) (NP (NP (NNP Suzie) (POS 's)) (NN cat))))) (. ?)))", 'lemma': [(u'What', u'what', u'WP'), (u'was', u'be', u'VBD'), (u'the', u'the', u'DT'), (u'name', u'name', u'NN'), (u'of', u'of', u'IN'), (u'Suzie', u'Suzie', u'NNP'), (u"'s", u"'s", u'POS'), (u'cat', u'cat', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'was', 'the', 'name', 'of', 'Suzie', "'s", 'cat', '?']}, 'answers': [{'string': ' Puppy', 'parse': {'tree': '(ROOT (ADVP (RB Puppy)))', 'lemma': [(u'Puppy', u'puppy', u'RB')]}, 'tokens': ['Puppy']}, {'string': ' Star', 'parse': {'tree': '(ROOT (NP (NNP Star)))', 'lemma': [(u'Star', u'Star', u'NNP')]}, 'tokens': ['Star']}, {'string': ' Turtle', 'parse': {'tree': '(ROOT (NP (NNP Turtle)))', 'lemma': [(u'Turtle', u'Turtle', u'NNP')]}, 'tokens': ['Turtle']}, {'string': ' Peaches', 'parse': {'tree': '(ROOT (NP (NNS Peaches)))', 'lemma': [(u'Peaches', u'peach', u'NNS')]}, 'tokens': ['Peaches']}], 'mode': 1}, {'question': {'string': ' Where was the cat hiding?', 'parse': {'tree': '(ROOT (SBARQ (WHADVP (WRB Where)) (SQ (VBD was) (NP (DT the) (NN cat) (NN hiding))) (. ?)))', 'lemma': [(u'Where', u'where', u'WRB'), (u'was', u'be', u'VBD'), (u'the', u'the', u'DT'), (u'cat', u'cat', u'NN'), (u'hiding', u'hiding', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['Where', 'was', 'the', 'cat', 'hiding', '?']}, 'answers': [{'string': ' down the street', 'parse': {'tree': '(ROOT (ADVP (RB down) (NP (DT the) (NN street))))', 'lemma': [(u'down', u'down', u'RB'), (u'the', u'the', u'DT'), (u'street', u'street', u'NN')]}, 'tokens': ['down', 'the', 'street']}, {'string': ' by the lake', 'parse': {'tree': '(ROOT (PP (IN by) (NP (DT the) (NN lake))))', 'lemma': [(u'by', u'by', u'IN'), (u'the', u'the', u'DT'), (u'lake', u'lake', u'NN')]}, 'tokens': ['by', 'the', 'lake']}, {'string': ' under the bed', 'parse': {'tree': '(ROOT (PP (IN under) (NP (DT the) (NN bed))))', 'lemma': [(u'under', u'under', u'IN'), (u'the', u'the', u'DT'), (u'bed', u'bed', u'NN')]}, 'tokens': ['under', 'the', 'bed']}, {'string': ' with the puppy', 'parse': {'tree': '(ROOT (PP (IN with) (NP (DT the) (NN puppy))))', 'lemma': [(u'with', u'with', u'IN'), (u'the', u'the', u'DT'), (u'puppy', u'puppy', u'NN')]}, 'tokens': ['with', 'the', 'puppy']}], 'mode': 1}, {'question': {'string': ' What animal did Suzie not meet in the story?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WDT What) (NN animal)) (SQ (VBD did) (NP (NNP Suzie)) (ADVP (RB not)) (VP (VB meet) (PP (IN in) (NP (DT the) (NN story))))) (. ?)))', 'lemma': [(u'What', u'what', u'WDT'), (u'animal', u'animal', u'NN'), (u'did', u'do', u'VBD'), (u'Suzie', u'Suzie', u'NNP'), (u'not', u'not', u'RB'), (u'meet', u'meet', u'VB'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'story', u'story', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'animal', 'did', 'Suzie', 'not', 'meet', 'in', 'the', 'story', '?']}, 'answers': [{'string': ' a puppy', 'parse': {'tree': '(ROOT (FRAG (NP (DT a) (NN puppy))))', 'lemma': [(u'a', u'a', u'DT'), (u'puppy', u'puppy', u'NN')]}, 'tokens': ['a', 'puppy']}, {'string': ' rabbit', 'parse': {'tree': '(ROOT (NP (NN rabbit)))', 'lemma': [(u'rabbit', u'rabbit', u'NN')]}, 'tokens': ['rabbit']}, {'string': ' a turtle', 'parse': {'tree': '(ROOT (FRAG (DT a) (JJ turtle)))', 'lemma': [(u'a', u'a', u'DT'), (u'turtle', u'turtle', u'JJ')]}, 'tokens': ['a', 'turtle']}, {'string': ' a cat', 'parse': {'tree': '(ROOT (FRAG (DT a) (JJ cat)))', 'lemma': [(u'a', u'a', u'DT'), (u'cat', u'cat', u'JJ')]}, 'tokens': ['a', 'cat']}], 'mode': 0}]}
{'sentences': [{'string': ' It was Tuesday.', 'parse': {'tree': '(ROOT (S (NP (PRP It)) (VP (VBD was) (NP (NNP Tuesday))) (. .)))', 'lemma': [(u'It', u'it', u'PRP'), (u'was', u'be', u'VBD'), (u'Tuesday', u'Tuesday', u'NNP'), (u'.', u'.', u'.')]}, 'tokens': ['It', 'was', 'Tuesday', '.']}, {'string': " Tuesday was Square 's favorite day.", 'parse': {'tree': "(ROOT (S (NP (NNP Tuesday)) (VP (VBD was) (NP (NP (NNP Square) (POS 's)) (JJ favorite) (NN day))) (. .)))", 'lemma': [(u'Tuesday', u'Tuesday', u'NNP'), (u'was', u'be', u'VBD'), (u'Square', u'Square', u'NNP'), (u"'s", u"'s", u'POS'), (u'favorite', u'favorite', u'JJ'), (u'day', u'day', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Tuesday', 'was', 'Square', "'s", 'favorite', 'day', '.']}, {'string': ' Wednesday was nice because it was always Spaghetti Night.', 'parse': {'tree': '(ROOT (S (NP (NNP Wednesday)) (VP (VBD was) (ADJP (JJ nice)) (SBAR (IN because) (S (NP (PRP it)) (VP (VBD was) (ADVP (RB always)) (NP (NNP Spaghetti) (NNP Night)))))) (. .)))', 'lemma': [(u'Wednesday', u'Wednesday', u'NNP'), (u'was', u'be', u'VBD'), (u'nice', u'nice', u'JJ'), (u'because', u'because', u'IN'), (u'it', u'it', u'PRP'), (u'was', u'be', u'VBD'), (u'always', u'always', u'RB'), (u'Spaghetti', u'Spaghetti', u'NNP'), (u'Night', u'Night', u'NNP'), (u'.', u'.', u'.')]}, 'tokens': ['Wednesday', 'was', 'nice', 'because', 'it', 'was', 'always', 'Spaghetti', 'Night', '.']}, {'string': ' Saturday was great because of the morning cartoons.', 'parse': {'tree': '(ROOT (S (NP (NNP Saturday)) (VP (VBD was) (ADJP (JJ great) (PP (RB because) (IN of) (NP (DT the) (NN morning) (NNS cartoons))))) (. .)))', 'lemma': [(u'Saturday', u'Saturday', u'NNP'), (u'was', u'be', u'VBD'), (u'great', u'great', u'JJ'), (u'because', u'because', u'RB'), (u'of', u'of', u'IN'), (u'the', u'the', u'DT'), (u'morning', u'morning', u'NN'), (u'cartoons', u'cartoon', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['Saturday', 'was', 'great', 'because', 'of', 'the', 'morning', 'cartoons', '.']}, {'string': ' But Tuesday?', 'parse': {'tree': '(ROOT (FRAG (CC But) (ADVP (RB Tuesday)) (. ?)))', 'lemma': [(u'But', u'but', u'CC'), (u'Tuesday', u'tuesday', u'RB'), (u'?', u'?', u'.')]}, 'tokens': ['But', 'Tuesday', '?']}, {'string': ' Tuesday was the day it always went to visit its friend Diamond.', 'parse': {'tree': '(ROOT (S (NP (NNP Tuesday)) (VP (VBD was) (NP (NP (DT the) (NN day)) (SBAR (S (NP (PRP it)) (ADVP (RB always)) (VP (VBD went) (S (VP (TO to) (VP (VB visit) (NP (PRP$ its) (NN friend) (NNP Diamond)))))))))) (. .)))', 'lemma': [(u'Tuesday', u'Tuesday', u'NNP'), (u'was', u'be', u'VBD'), (u'the', u'the', u'DT'), (u'day', u'day', u'NN'), (u'it', u'it', u'PRP'), (u'always', u'always', u'RB'), (u'went', u'go', u'VBD'), (u'to', u'to', u'TO'), (u'visit', u'visit', u'VB'), (u'its', u'its', u'PRP$'), (u'friend', u'friend', u'NN'), (u'Diamond', u'Diamond', u'NNP'), (u'.', u'.', u'.')]}, 'tokens': ['Tuesday', 'was', 'the', 'day', 'it', 'always', 'went', 'to', 'visit', 'its', 'friend', 'Diamond', '.']}, {'string': ' It was a beautiful day!', 'parse': {'tree': '(ROOT (S (NP (PRP It)) (VP (VBD was) (NP (DT a) (JJ beautiful) (NN day))) (. !)))', 'lemma': [(u'It', u'it', u'PRP'), (u'was', u'be', u'VBD'), (u'a', u'a', u'DT'), (u'beautiful', u'beautiful', u'JJ'), (u'day', u'day', u'NN'), (u'!', u'!', u'.')]}, 'tokens': ['It', 'was', 'a', 'beautiful', 'day', '!']}, {'string': ' The spring wind was blowing, and the sun was shining.', 'parse': {'tree': '(ROOT (S (S (NP (DT The) (NN spring) (NN wind)) (VP (VBD was) (VP (VBG blowing)))) (, ,) (CC and) (S (NP (DT the) (NN sun)) (VP (VBD was) (VP (VBG shining)))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'spring', u'spring', u'NN'), (u'wind', u'wind', u'NN'), (u'was', u'be', u'VBD'), (u'blowing', u'blow', u'VBG'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'the', u'the', u'DT'), (u'sun', u'sun', u'NN'), (u'was', u'be', u'VBD'), (u'shining', u'shine', u'VBG'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'spring', 'wind', 'was', 'blowing', ',', 'and', 'the', 'sun', 'was', 'shining', '.']}, {'string': ' Square and Diamond went to play by the river.', 'parse': {'tree': '(ROOT (S (NP (NNP Square) (CC and) (NNP Diamond)) (VP (VBD went) (S (VP (TO to) (VP (VB play) (PP (IN by) (NP (DT the) (NN river))))))) (. .)))', 'lemma': [(u'Square', u'Square', u'NNP'), (u'and', u'and', u'CC'), (u'Diamond', u'Diamond', u'NNP'), (u'went', u'go', u'VBD'), (u'to', u'to', u'TO'), (u'play', u'play', u'VB'), (u'by', u'by', u'IN'), (u'the', u'the', u'DT'), (u'river', u'river', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Square', 'and', 'Diamond', 'went', 'to', 'play', 'by', 'the', 'river', '.']}, {'string': ' They were having a great time.', 'parse': {'tree': '(ROOT (S (NP (PRP They)) (VP (VBD were) (VP (VBG having) (NP (DT a) (JJ great) (NN time)))) (. .)))', 'lemma': [(u'They', u'they', u'PRP'), (u'were', u'be', u'VBD'), (u'having', u'have', u'VBG'), (u'a', u'a', u'DT'), (u'great', u'great', u'JJ'), (u'time', u'time', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['They', 'were', 'having', 'a', 'great', 'time', '.']}, {'string': ' They swam.', 'parse': {'tree': '(ROOT (S (NP (PRP They)) (VP (VBP swam)) (. .)))', 'lemma': [(u'They', u'they', u'PRP'), (u'swam', u'swim', u'VBP'), (u'.', u'.', u'.')]}, 'tokens': ['They', 'swam', '.']}, {'string': ' They fished.', 'parse': {'tree': '(ROOT (S (NP (PRP They)) (VP (VBD fished)) (. .)))', 'lemma': [(u'They', u'they', u'PRP'), (u'fished', u'fish', u'VBD'), (u'.', u'.', u'.')]}, 'tokens': ['They', 'fished', '.']}, {'string': ' They played hide and seek.', 'parse': {'tree': '(ROOT (S (NP (PRP They)) (VP (VBD played) (S (VP (VB hide) (CC and) (VB seek)))) (. .)))', 'lemma': [(u'They', u'they', u'PRP'), (u'played', u'play', u'VBD'), (u'hide', u'hide', u'VB'), (u'and', u'and', u'CC'), (u'seek', u'seek', u'VB'), (u'.', u'.', u'.')]}, 'tokens': ['They', 'played', 'hide', 'and', 'seek', '.']}, {'string': ' Suddenly, the wind picked up.', 'parse': {'tree': '(ROOT (S (ADVP (RB Suddenly)) (, ,) (NP (DT the) (NN wind)) (VP (VBD picked) (PRT (RP up))) (. .)))', 'lemma': [(u'Suddenly', u'suddenly', u'RB'), (u',', u',', u','), (u'the', u'the', u'DT'), (u'wind', u'wind', u'NN'), (u'picked', u'pick', u'VBD'), (u'up', u'up', u'RP'), (u'.', u'.', u'.')]}, 'tokens': ['Suddenly', ',', 'the', 'wind', 'picked', 'up', '.']}, {'string': ' `` Hey, Square!', 'parse': {'tree': '(ROOT (FRAG (`` ``) (INTJ (UH Hey) (, ,) (UH Square)) (. !)))', 'lemma': [(u'``', u'``', u'``'), (u'Hey', u'hey', u'UH'), (u',', u',', u','), (u'Square', u'square', u'UH'), (u'!', u'!', u'.')]}, 'tokens': ['``', 'Hey', ',', 'Square', '!']}, {'string': " Would you like to see a trick? ''", 'parse': {'tree': "(ROOT (SQ (MD Would) (NP (PRP you)) (VP (VBP like) (S (VP (TO to) (VP (VB see) (NP (DT a) (NN trick)))))) (. ?) ('' '')))", 'lemma': [(u'Would', u'would', u'MD'), (u'you', u'you', u'PRP'), (u'like', u'like', u'VBP'), (u'to', u'to', u'TO'), (u'see', u'see', u'VB'), (u'a', u'a', u'DT'), (u'trick', u'trick', u'NN'), (u'?', u'?', u'.'), (u"''", u"''", u"''")]}, 'tokens': ['Would', 'you', 'like', 'to', 'see', 'a', 'trick', '?', "''"]}, {'string': ' `` Sure Diamond!', 'parse': {'tree': '(ROOT (FRAG (`` ``) (INTJ (JJ Sure) (NN Diamond)) (. !)))', 'lemma': [(u'``', u'``', u'``'), (u'Sure', u'sure', u'JJ'), (u'Diamond', u'diamond', u'NN'), (u'!', u'!', u'.')]}, 'tokens': ['``', 'Sure', 'Diamond', '!']}, {'string': " What is it? ''", 'parse': {'tree': "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (PRP it))) (. ?) ('' '')))", 'lemma': [(u'What', u'what', u'WP'), (u'is', u'be', u'VBZ'), (u'it', u'it', u'PRP'), (u'?', u'?', u'.'), (u"''", u"''", u"''")]}, 'tokens': ['What', 'is', 'it', '?', "''"]}, {'string': ' Diamond took a string out of its pocket.', 'parse': {'tree': '(ROOT (S (NP (NNP Diamond)) (VP (VBD took) (NP (DT a) (NN string)) (PRT (RP out)) (PP (IN of) (NP (PRP$ its) (NN pocket)))) (. .)))', 'lemma': [(u'Diamond', u'Diamond', u'NNP'), (u'took', u'take', u'VBD'), (u'a', u'a', u'DT'), (u'string', u'string', u'NN'), (u'out', u'out', u'RP'), (u'of', u'of', u'IN'), (u'its', u'its', u'PRP$'), (u'pocket', u'pocket', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Diamond', 'took', 'a', 'string', 'out', 'of', 'its', 'pocket', '.']}, {'string': ' Diamond tied it to her, and then she tied it to a tree.', 'parse': {'tree': '(ROOT (S (S (NP (NNP Diamond)) (VP (VBD tied) (NP (PRP it)) (PP (TO to) (NP (PRP her))))) (, ,) (CC and) (S (ADVP (RB then)) (NP (PRP she)) (VP (VBD tied) (NP (PRP it)) (PP (TO to) (NP (DT a) (NN tree))))) (. .)))', 'lemma': [(u'Diamond', u'Diamond', u'NNP'), (u'tied', u'tie', u'VBD'), (u'it', u'it', u'PRP'), (u'to', u'to', u'TO'), (u'her', u'she', u'PRP'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'then', u'then', u'RB'), (u'she', u'she', u'PRP'), (u'tied', u'tie', u'VBD'), (u'it', u'it', u'PRP'), (u'to', u'to', u'TO'), (u'a', u'a', u'DT'), (u'tree', u'tree', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Diamond', 'tied', 'it', 'to', 'her', ',', 'and', 'then', 'she', 'tied', 'it', 'to', 'a', 'tree', '.']}, {'string': " `` Watch this! ''", 'parse': {'tree': "(ROOT (S (`` ``) (VP (VB Watch) (NP (DT this))) (. !) ('' '')))", 'lemma': [(u'``', u'``', u'``'), (u'Watch', u'watch', u'VB'), (u'this', u'this', u'DT'), (u'!', u'!', u'.'), (u"''", u"''", u"''")]}, 'tokens': ['``', 'Watch', 'this', '!', "''"]}, {'string': ' Diamond jumped into the wind.', 'parse': {'tree': '(ROOT (S (NP (NNP Diamond)) (VP (VBD jumped) (PP (IN into) (NP (DT the) (NN wind)))) (. .)))', 'lemma': [(u'Diamond', u'Diamond', u'NNP'), (u'jumped', u'jump', u'VBD'), (u'into', u'into', u'IN'), (u'the', u'the', u'DT'), (u'wind', u'wind', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Diamond', 'jumped', 'into', 'the', 'wind', '.']}, {'string': ' Suddenly, she was flying!', 'parse': {'tree': '(ROOT (S (ADVP (RB Suddenly)) (, ,) (NP (PRP she)) (VP (VBD was) (VP (VBG flying))) (. !)))', 'lemma': [(u'Suddenly', u'suddenly', u'RB'), (u',', u',', u','), (u'she', u'she', u'PRP'), (u'was', u'be', u'VBD'), (u'flying', u'fly', u'VBG'), (u'!', u'!', u'.')]}, 'tokens': ['Suddenly', ',', 'she', 'was', 'flying', '!']}, {'string': ' She floated.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBD floated)) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'floated', u'float', u'VBD'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'floated', '.']}, {'string': ' She swooped.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBD swooped)) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'swooped', u'swoop', u'VBD'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'swooped', '.']}, {'string': ' She played with the clouds and the birds.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBD played) (PP (IN with) (NP (NP (DT the) (NNS clouds)) (CC and) (NP (DT the) (NNS birds))))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'played', u'play', u'VBD'), (u'with', u'with', u'IN'), (u'the', u'the', u'DT'), (u'clouds', u'cloud', u'NNS'), (u'and', u'and', u'CC'), (u'the', u'the', u'DT'), (u'birds', u'bird', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'played', 'with', 'the', 'clouds', 'and', 'the', 'birds', '.']}, {'string': ' She flew faster.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBD flew) (ADVP (RBR faster))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'flew', u'fly', u'VBD'), (u'faster', u'faster', u'RBR'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'flew', 'faster', '.']}, {'string': ' She flew slower.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBD flew) (ADJP (JJR slower))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'flew', u'fly', u'VBD'), (u'slower', u'slower', u'JJR'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'flew', 'slower', '.']}, {'string': ' At first, Square was amazed.', 'parse': {'tree': '(ROOT (S (PP (IN At) (NP (JJ first))) (, ,) (NP (NNP Square)) (VP (VBD was) (VP (VBN amazed))) (. .)))', 'lemma': [(u'At', u'at', u'IN'), (u'first', u'first', u'JJ'), (u',', u',', u','), (u'Square', u'Square', u'NNP'), (u'was', u'be', u'VBD'), (u'amazed', u'amaze', u'VBN'), (u'.', u'.', u'.')]}, 'tokens': ['At', 'first', ',', 'Square', 'was', 'amazed', '.']}, {'string': ' But slowly, Square started to frown.', 'parse': {'tree': '(ROOT (S (CC But) (ADVP (RB slowly)) (, ,) (NP (NNP Square)) (VP (VBD started) (S (VP (TO to) (VP (VB frown))))) (. .)))', 'lemma': [(u'But', u'but', u'CC'), (u'slowly', u'slowly', u'RB'), (u',', u',', u','), (u'Square', u'Square', u'NNP'), (u'started', u'start', u'VBD'), (u'to', u'to', u'TO'), (u'frown', u'frown', u'VB'), (u'.', u'.', u'.')]}, 'tokens': ['But', 'slowly', ',', 'Square', 'started', 'to', 'frown', '.']}, {'string': ' Diamond landed in front of her friend.', 'parse': {'tree': '(ROOT (S (NP (NNP Diamond)) (VP (VBD landed) (PP (IN in) (NP (NP (NN front)) (PP (IN of) (NP (PRP$ her) (NN friend)))))) (. .)))', 'lemma': [(u'Diamond', u'Diamond', u'NNP'), (u'landed', u'land', u'VBD'), (u'in', u'in', u'IN'), (u'front', u'front', u'NN'), (u'of', u'of', u'IN'), (u'her', u'she', u'PRP$'), (u'friend', u'friend', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Diamond', 'landed', 'in', 'front', 'of', 'her', 'friend', '.']}, {'string': " `` What 's wrong? ''", 'parse': {'tree': "(ROOT (SBARQ (`` ``) (WHNP (WP What)) (SQ (VBZ 's) (ADJP (JJ wrong))) (. ?) ('' '')))", 'lemma': [(u'``', u'``', u'``'), (u'What', u'what', u'WP'), (u"'s", u'be', u'VBZ'), (u'wrong', u'wrong', u'JJ'), (u'?', u'?', u'.'), (u"''", u"''", u"''")]}, 'tokens': ['``', 'What', "'s", 'wrong', '?', "''"]}, {'string': ' `` That was amazing!', 'parse': {'tree': '(ROOT (S (`` ``) (NP (DT That)) (VP (VBD was) (ADJP (JJ amazing))) (. !)))', 'lemma': [(u'``', u'``', u'``'), (u'That', u'that', u'DT'), (u'was', u'be', u'VBD'), (u'amazing', u'amazing', u'JJ'), (u'!', u'!', u'.')]}, 'tokens': ['``', 'That', 'was', 'amazing', '!']}, {'string': ' It looks like a lot of fun.', 'parse': {'tree': '(ROOT (S (NP (PRP It)) (VP (VBZ looks) (PP (IN like) (NP (NP (DT a) (NN lot)) (PP (IN of) (NP (NN fun)))))) (. .)))', 'lemma': [(u'It', u'it', u'PRP'), (u'looks', u'look', u'VBZ'), (u'like', u'like', u'IN'), (u'a', u'a', u'DT'), (u'lot', u'lot', u'NN'), (u'of', u'of', u'IN'), (u'fun', u'fun', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['It', 'looks', 'like', 'a', 'lot', 'of', 'fun', '.']}, {'string': ' But I am not shaped like a kite.', 'parse': {'tree': '(ROOT (S (CC But) (NP (PRP I)) (VP (VBP am) (RB not) (VP (VBN shaped) (PP (IN like) (NP (DT a) (NN kite))))) (. .)))', 'lemma': [(u'But', u'but', u'CC'), (u'I', u'I', u'PRP'), (u'am', u'be', u'VBP'), (u'not', u'not', u'RB'), (u'shaped', u'shape', u'VBN'), (u'like', u'like', u'IN'), (u'a', u'a', u'DT'), (u'kite', u'kite', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['But', 'I', 'am', 'not', 'shaped', 'like', 'a', 'kite', '.']}, {'string': " I ca n't do those amazing things like you. ''", 'parse': {'tree': "(ROOT (S (NP (PRP I)) (VP (MD ca) (RB n't) (VP (VB do) (NP (DT those) (JJ amazing) (NNS things)) (PP (IN like) (NP (PRP you))))) (. .) ('' '')))", 'lemma': [(u'I', u'I', u'PRP'), (u'ca', u'can', u'MD'), (u"n't", u'not', u'RB'), (u'do', u'do', u'VB'), (u'those', u'those', u'DT'), (u'amazing', u'amazing', u'JJ'), (u'things', u'thing', u'NNS'), (u'like', u'like', u'IN'), (u'you', u'you', u'PRP'), (u'.', u'.', u'.'), (u"''", u"''", u"''")]}, 'tokens': ['I', 'ca', "n't", 'do', 'those', 'amazing', 'things', 'like', 'you', '.', "''"]}, {'string': ' Diamond smiled.', 'parse': {'tree': '(ROOT (S (NP (NNP Diamond)) (VP (VBD smiled)) (. .)))', 'lemma': [(u'Diamond', u'Diamond', u'NNP'), (u'smiled', u'smile', u'VBD'), (u'.', u'.', u'.')]}, 'tokens': ['Diamond', 'smiled', '.']}, {'string': ' `` Yes you can, Square!', 'parse': {'tree': '(ROOT (S (`` ``) (S (INTJ (UH Yes)) (NP (PRP you)) (VP (MD can))) (, ,) (S (NP (NNP Square))) (. !)))', 'lemma': [(u'``', u'``', u'``'), (u'Yes', u'yes', u'UH'), (u'you', u'you', u'PRP'), (u'can', u'can', u'MD'), (u',', u',', u','), (u'Square', u'Square', u'NNP'), (u'!', u'!', u'.')]}, 'tokens': ['``', 'Yes', 'you', 'can', ',', 'Square', '!']}, {'string': " Stand on your tip-toes! ''", 'parse': {'tree': "(ROOT (S (VP (VB Stand) (PP (IN on) (NP (PRP$ your) (NNS tip-toes)))) (. !) ('' '')))", 'lemma': [(u'Stand', u'stand', u'VB'), (u'on', u'on', u'IN'), (u'your', u'you', u'PRP$'), (u'tip-toes', u'tip-toe', u'NNS'), (u'!', u'!', u'.'), (u"''", u"''", u"''")]}, 'tokens': ['Stand', 'on', 'your', 'tip-toes', '!', "''"]}, {'string': ' So Square did.', 'parse': {'tree': '(ROOT (S (IN So) (NP (NNP Square)) (VP (VBD did)) (. .)))', 'lemma': [(u'So', u'so', u'IN'), (u'Square', u'Square', u'NNP'), (u'did', u'do', u'VBD'), (u'.', u'.', u'.')]}, 'tokens': ['So', 'Square', 'did', '.']}, {'string': " `` Now, go look at yourself in the river. ''", 'parse': {'tree': "(ROOT (S (`` ``) (S (INTJ (RB Now)) (, ,) (VP (VB go))) (VP (VBP look) (PP (IN at) (NP (PRP yourself))) (PP (IN in) (NP (DT the) (NN river)))) (. .) ('' '')))", 'lemma': [(u'``', u'``', u'``'), (u'Now', u'now', u'RB'), (u',', u',', u','), (u'go', u'go', u'VB'), (u'look', u'look', u'VBP'), (u'at', u'at', u'IN'), (u'yourself', u'yourself', u'PRP'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'river', u'river', u'NN'), (u'.', u'.', u'.'), (u"''", u"''", u"''")]}, 'tokens': ['``', 'Now', ',', 'go', 'look', 'at', 'yourself', 'in', 'the', 'river', '.', "''"]}, {'string': ' Square walked to the river and looked down.', 'parse': {'tree': '(ROOT (S (NP (NNP Square)) (VP (VP (VBD walked) (PP (TO to) (NP (DT the) (NN river)))) (CC and) (VP (VBD looked) (PRT (RP down)))) (. .)))', 'lemma': [(u'Square', u'Square', u'NNP'), (u'walked', u'walk', u'VBD'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'river', u'river', u'NN'), (u'and', u'and', u'CC'), (u'looked', u'look', u'VBD'), (u'down', u'down', u'RP'), (u'.', u'.', u'.')]}, 'tokens': ['Square', 'walked', 'to', 'the', 'river', 'and', 'looked', 'down', '.']}, {'string': ' But he did not see a square.', 'parse': {'tree': '(ROOT (S (CC But) (NP (PRP he)) (VP (VBD did) (RB not) (VP (VB see) (NP (DT a) (NN square)))) (. .)))', 'lemma': [(u'But', u'but', u'CC'), (u'he', u'he', u'PRP'), (u'did', u'do', u'VBD'), (u'not', u'not', u'RB'), (u'see', u'see', u'VB'), (u'a', u'a', u'DT'), (u'square', u'square', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['But', 'he', 'did', 'not', 'see', 'a', 'square', '.']}, {'string': ' He saw a diamond!', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD saw) (NP (DT a) (NN diamond))) (. !)))', 'lemma': [(u'He', u'he', u'PRP'), (u'saw', u'see', u'VBD'), (u'a', u'a', u'DT'), (u'diamond', u'diamond', u'NN'), (u'!', u'!', u'.')]}, 'tokens': ['He', 'saw', 'a', 'diamond', '!']}, {'string': ' Diamond handed Square the string.', 'parse': {'tree': '(ROOT (S (NP (NNP Diamond)) (VP (VBD handed) (NP (NNP Square)) (NP (DT the) (NN string))) (. .)))', 'lemma': [(u'Diamond', u'Diamond', u'NNP'), (u'handed', u'hand', u'VBD'), (u'Square', u'Square', u'NNP'), (u'the', u'the', u'DT'), (u'string', u'string', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Diamond', 'handed', 'Square', 'the', 'string', '.']}, {'string': " `` Now jump! ''", 'parse': {'tree': "(ROOT (S (`` ``) (NP (RB Now)) (VP (VBP jump)) (. !) ('' '')))", 'lemma': [(u'``', u'``', u'``'), (u'Now', u'now', u'RB'), (u'jump', u'jump', u'VBP'), (u'!', u'!', u'.'), (u"''", u"''", u"''")]}, 'tokens': ['``', 'Now', 'jump', '!', "''"]}, {'string': ' she said.', 'parse': {'tree': '(ROOT (S (NP (PRP she)) (VP (VBD said)) (. .)))', 'lemma': [(u'she', u'she', u'PRP'), (u'said', u'say', u'VBD'), (u'.', u'.', u'.')]}, 'tokens': ['she', 'said', '.']}, {'string': ' Square jumped.', 'parse': {'tree': '(ROOT (S (NP (NNP Square)) (VP (VBD jumped)) (. .)))', 'lemma': [(u'Square', u'Square', u'NNP'), (u'jumped', u'jump', u'VBD'), (u'.', u'.', u'.')]}, 'tokens': ['Square', 'jumped', '.']}, {'string': ' He jumped as high as he could.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD jumped) (ADJP (RB as) (JJ high)) (SBAR (IN as) (S (NP (PRP he)) (VP (MD could))))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'jumped', u'jump', u'VBD'), (u'as', u'as', u'RB'), (u'high', u'high', u'JJ'), (u'as', u'as', u'IN'), (u'he', u'he', u'PRP'), (u'could', u'could', u'MD'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'jumped', 'as', 'high', 'as', 'he', 'could', '.']}, {'string': ' Just as he started to fall, the wind blew and picked him up.', 'parse': {'tree': '(ROOT (S (SBAR (RB Just) (IN as) (S (NP (PRP he)) (VP (VBD started) (S (VP (TO to) (VP (VB fall))))))) (, ,) (NP (DT the) (NN wind)) (VP (VP (VBD blew)) (CC and) (VP (VBD picked) (NP (PRP him)) (PRT (RP up)))) (. .)))', 'lemma': [(u'Just', u'just', u'RB'), (u'as', u'as', u'IN'), (u'he', u'he', u'PRP'), (u'started', u'start', u'VBD'), (u'to', u'to', u'TO'), (u'fall', u'fall', u'VB'), (u',', u',', u','), (u'the', u'the', u'DT'), (u'wind', u'wind', u'NN'), (u'blew', u'blow', u'VBD'), (u'and', u'and', u'CC'), (u'picked', u'pick', u'VBD'), (u'him', u'he', u'PRP'), (u'up', u'up', u'RP'), (u'.', u'.', u'.')]}, 'tokens': ['Just', 'as', 'he', 'started', 'to', 'fall', ',', 'the', 'wind', 'blew', 'and', 'picked', 'him', 'up', '.']}, {'string': ' He was flying, like Diamond!', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD was) (VP (VBG flying) (, ,) (PP (IN like) (NP (NNP Diamond))))) (. !)))', 'lemma': [(u'He', u'he', u'PRP'), (u'was', u'be', u'VBD'), (u'flying', u'fly', u'VBG'), (u',', u',', u','), (u'like', u'like', u'IN'), (u'Diamond', u'Diamond', u'NNP'), (u'!', u'!', u'.')]}, 'tokens': ['He', 'was', 'flying', ',', 'like', 'Diamond', '!']}, {'string': ' He floated.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD floated)) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'floated', u'float', u'VBD'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'floated', '.']}, {'string': ' He swooped.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD swooped)) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'swooped', u'swoop', u'VBD'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'swooped', '.']}, {'string': ' He played with the clouds and the birds.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD played) (PP (IN with) (NP (NP (DT the) (NNS clouds)) (CC and) (NP (DT the) (NNS birds))))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'played', u'play', u'VBD'), (u'with', u'with', u'IN'), (u'the', u'the', u'DT'), (u'clouds', u'cloud', u'NNS'), (u'and', u'and', u'CC'), (u'the', u'the', u'DT'), (u'birds', u'bird', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'played', 'with', 'the', 'clouds', 'and', 'the', 'birds', '.']}, {'string': ' He flew faster.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD flew) (ADVP (RBR faster))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'flew', u'fly', u'VBD'), (u'faster', u'faster', u'RBR'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'flew', 'faster', '.']}, {'string': ' He flew slower.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD flew) (ADJP (JJR slower))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'flew', u'fly', u'VBD'), (u'slower', u'slower', u'JJR'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'flew', 'slower', '.']}, {'string': ' He soon landed.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (ADVP (RB soon)) (VP (VBD landed)) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'soon', u'soon', u'RB'), (u'landed', u'land', u'VBD'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'soon', 'landed', '.']}, {'string': ' The sun was setting, so they said goodbye and made plans to meet again next Tuesday.', 'parse': {'tree': '(ROOT (S (S (NP (DT The) (NN sun)) (VP (VBD was) (VP (VBG setting)))) (, ,) (IN so) (S (NP (PRP they)) (VP (VP (VBD said) (NP (NN goodbye))) (CC and) (VP (VBD made) (NP (NNS plans)) (S (VP (TO to) (VP (VB meet) (ADVP (RB again)) (NP (JJ next) (NNP Tuesday)))))))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'sun', u'sun', u'NN'), (u'was', u'be', u'VBD'), (u'setting', u'set', u'VBG'), (u',', u',', u','), (u'so', u'so', u'IN'), (u'they', u'they', u'PRP'), (u'said', u'say', u'VBD'), (u'goodbye', u'goodbye', u'NN'), (u'and', u'and', u'CC'), (u'made', u'make', u'VBD'), (u'plans', u'plan', u'NNS'), (u'to', u'to', u'TO'), (u'meet', u'meet', u'VB'), (u'again', u'again', u'RB'), (u'next', u'next', u'JJ'), (u'Tuesday', u'Tuesday', u'NNP'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'sun', 'was', 'setting', ',', 'so', 'they', 'said', 'goodbye', 'and', 'made', 'plans', 'to', 'meet', 'again', 'next', 'Tuesday', '.']}, {'string': ' It was a beautiful day.', 'parse': {'tree': '(ROOT (S (NP (PRP It)) (VP (VBD was) (NP (DT a) (JJ beautiful) (NN day))) (. .)))', 'lemma': [(u'It', u'it', u'PRP'), (u'was', u'be', u'VBD'), (u'a', u'a', u'DT'), (u'beautiful', u'beautiful', u'JJ'), (u'day', u'day', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['It', 'was', 'a', 'beautiful', 'day', '.']}], 'questions': [{'question': {'string': ' What did Square see in the river?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD did) (NP (NNP Square)) (VP (VB see) (PP (IN in) (NP (DT the) (NN river))))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'did', u'do', u'VBD'), (u'Square', u'Square', u'NNP'), (u'see', u'see', u'VB'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'river', u'river', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'did', 'Square', 'see', 'in', 'the', 'river', '?']}, 'answers': [{'string': ' He saw a diamond.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD saw) (NP (DT a) (NN diamond))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'saw', u'see', u'VBD'), (u'a', u'a', u'DT'), (u'diamond', u'diamond', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'saw', 'a', 'diamond', '.']}, {'string': ' He saw a square.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD saw) (NP (DT a) (NN square))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'saw', u'see', u'VBD'), (u'a', u'a', u'DT'), (u'square', u'square', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'saw', 'a', 'square', '.']}, {'string': ' He saw a kite.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD saw) (NP (DT a) (NN kite))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'saw', u'see', u'VBD'), (u'a', u'a', u'DT'), (u'kite', u'kite', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'saw', 'a', 'kite', '.']}, {'string': ' He saw a fish.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD saw) (NP (DT a) (NN fish))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'saw', u'see', u'VBD'), (u'a', u'a', u'DT'), (u'fish', u'fish', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'saw', 'a', 'fish', '.']}], 'mode': 0}, {'question': {'string': ' Why was Square sad?', 'parse': {'tree': '(ROOT (SBARQ (WHADVP (WRB Why)) (SQ (VBD was) (NP (NNP Square)) (ADJP (JJ sad))) (. ?)))', 'lemma': [(u'Why', u'why', u'WRB'), (u'was', u'be', u'VBD'), (u'Square', u'Square', u'NNP'), (u'sad', u'sad', u'JJ'), (u'?', u'?', u'.')]}, 'tokens': ['Why', 'was', 'Square', 'sad', '?']}, 'answers': [{'string': ' He was not a diamond, so he could not swim.', 'parse': {'tree': '(ROOT (S (S (NP (PRP He)) (VP (VBD was) (RB not) (NP (DT a) (NN diamond)))) (, ,) (IN so) (S (NP (PRP he)) (VP (MD could) (RB not) (VP (VB swim)))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'was', u'be', u'VBD'), (u'not', u'not', u'RB'), (u'a', u'a', u'DT'), (u'diamond', u'diamond', u'NN'), (u',', u',', u','), (u'so', u'so', u'IN'), (u'he', u'he', u'PRP'), (u'could', u'could', u'MD'), (u'not', u'not', u'RB'), (u'swim', u'swim', u'VB'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'was', 'not', 'a', 'diamond', ',', 'so', 'he', 'could', 'not', 'swim', '.']}, {'string': " He did n't have a string, so he could not fish.", 'parse': {'tree': "(ROOT (S (S (NP (PRP He)) (VP (VBD did) (RB n't) (VP (VB have) (NP (DT a) (NN string))))) (, ,) (IN so) (S (NP (PRP he)) (VP (MD could) (RB not) (VP (VB fish)))) (. .)))", 'lemma': [(u'He', u'he', u'PRP'), (u'did', u'do', u'VBD'), (u"n't", u'not', u'RB'), (u'have', u'have', u'VB'), (u'a', u'a', u'DT'), (u'string', u'string', u'NN'), (u',', u',', u','), (u'so', u'so', u'IN'), (u'he', u'he', u'PRP'), (u'could', u'could', u'MD'), (u'not', u'not', u'RB'), (u'fish', u'fish', u'VB'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'did', "n't", 'have', 'a', 'string', ',', 'so', 'he', 'could', 'not', 'fish', '.']}, {'string': ' He was scared of flying.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD was) (ADJP (VBN scared) (PP (IN of) (S (VP (VBG flying)))))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'was', u'be', u'VBD'), (u'scared', u'scare', u'VBN'), (u'of', u'of', u'IN'), (u'flying', u'fly', u'VBG'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'was', 'scared', 'of', 'flying', '.']}, {'string': ' He was not shaped like a kite, so he could not fly.', 'parse': {'tree': '(ROOT (S (S (NP (PRP He)) (VP (VBD was) (RB not) (VP (VBN shaped) (PP (IN like) (NP (DT a) (NN kite)))))) (, ,) (IN so) (S (NP (PRP he)) (VP (MD could) (RB not) (VP (VB fly)))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'was', u'be', u'VBD'), (u'not', u'not', u'RB'), (u'shaped', u'shape', u'VBN'), (u'like', u'like', u'IN'), (u'a', u'a', u'DT'), (u'kite', u'kite', u'NN'), (u',', u',', u','), (u'so', u'so', u'IN'), (u'he', u'he', u'PRP'), (u'could', u'could', u'MD'), (u'not', u'not', u'RB'), (u'fly', u'fly', u'VB'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'was', 'not', 'shaped', 'like', 'a', 'kite', ',', 'so', 'he', 'could', 'not', 'fly', '.']}], 'mode': 0}, {'question': {'string': ' What did Square and Diamond do?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD did) (NP (NNP Square) (CC and) (NNP Diamond)) (VP (VB do))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'did', u'do', u'VBD'), (u'Square', u'Square', u'NNP'), (u'and', u'and', u'CC'), (u'Diamond', u'Diamond', u'NNP'), (u'do', u'do', u'VB'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'did', 'Square', 'and', 'Diamond', 'do', '?']}, 'answers': [{'string': ' They had a picnic.', 'parse': {'tree': '(ROOT (S (NP (PRP They)) (VP (VBD had) (NP (DT a) (NN picnic))) (. .)))', 'lemma': [(u'They', u'they', u'PRP'), (u'had', u'have', u'VBD'), (u'a', u'a', u'DT'), (u'picnic', u'picnic', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['They', 'had', 'a', 'picnic', '.']}, {'string': ' They swam and fished.', 'parse': {'tree': '(ROOT (S (NP (PRP They)) (VP (VP (VBP swam)) (CC and) (VP (VBD fished))) (. .)))', 'lemma': [(u'They', u'they', u'PRP'), (u'swam', u'swim', u'VBP'), (u'and', u'and', u'CC'), (u'fished', u'fish', u'VBD'), (u'.', u'.', u'.')]}, 'tokens': ['They', 'swam', 'and', 'fished', '.']}, {'string': ' They jumped and danced.', 'parse': {'tree': '(ROOT (S (NP (PRP They)) (VP (VP (VBD jumped)) (CC and) (VP (VBN danced))) (. .)))', 'lemma': [(u'They', u'they', u'PRP'), (u'jumped', u'jump', u'VBD'), (u'and', u'and', u'CC'), (u'danced', u'dance', u'VBN'), (u'.', u'.', u'.')]}, 'tokens': ['They', 'jumped', 'and', 'danced', '.']}, {'string': ' They flew and laughed.', 'parse': {'tree': '(ROOT (S (NP (PRP They)) (VP (VP (VBD flew)) (CC and) (VP (VBD laughed))) (. .)))', 'lemma': [(u'They', u'they', u'PRP'), (u'flew', u'fly', u'VBD'), (u'and', u'and', u'CC'), (u'laughed', u'laugh', u'VBD'), (u'.', u'.', u'.')]}, 'tokens': ['They', 'flew', 'and', 'laughed', '.']}], 'mode': 0}, {'question': {'string': " What is Square 's favorite day?", 'parse': {'tree': "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (NNP Square) (POS 's)) (JJ favorite) (NN day))) (. ?)))", 'lemma': [(u'What', u'what', u'WP'), (u'is', u'be', u'VBZ'), (u'Square', u'Square', u'NNP'), (u"'s", u"'s", u'POS'), (u'favorite', u'favorite', u'JJ'), (u'day', u'day', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'is', 'Square', "'s", 'favorite', 'day', '?']}, 'answers': [{'string': ' Friday', 'parse': {'tree': '(ROOT (NP (NNP Friday)))', 'lemma': [(u'Friday', u'Friday', u'NNP')]}, 'tokens': ['Friday']}, {'string': ' Wednesday', 'parse': {'tree': '(ROOT (NP (NNP Wednesday)))', 'lemma': [(u'Wednesday', u'Wednesday', u'NNP')]}, 'tokens': ['Wednesday']}, {'string': ' Saturday', 'parse': {'tree': '(ROOT (NP (NNP Saturday)))', 'lemma': [(u'Saturday', u'Saturday', u'NNP')]}, 'tokens': ['Saturday']}, {'string': ' Tuesday', 'parse': {'tree': '(ROOT (NP (NNP Tuesday)))', 'lemma': [(u'Tuesday', u'Tuesday', u'NNP')]}, 'tokens': ['Tuesday']}], 'mode': 1}]}
{'sentences': [{'string': ' The sun was rising in the morning and the birds were waking up.', 'parse': {'tree': '(ROOT (S (S (NP (DT The) (NN sun)) (VP (VBD was) (VP (VBG rising) (PP (IN in) (NP (DT the) (NN morning)))))) (CC and) (S (NP (DT the) (NNS birds)) (VP (VBD were) (VP (VBG waking) (PRT (RP up))))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'sun', u'sun', u'NN'), (u'was', u'be', u'VBD'), (u'rising', u'rise', u'VBG'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'morning', u'morning', u'NN'), (u'and', u'and', u'CC'), (u'the', u'the', u'DT'), (u'birds', u'bird', u'NNS'), (u'were', u'be', u'VBD'), (u'waking', u'wake', u'VBG'), (u'up', u'up', u'RP'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'sun', 'was', 'rising', 'in', 'the', 'morning', 'and', 'the', 'birds', 'were', 'waking', 'up', '.']}, {'string': ' A mother bird was watching over her baby eggs in the nest.', 'parse': {'tree': '(ROOT (S (NP (DT A) (NN mother) (NN bird)) (VP (VBD was) (VP (VBG watching) (PP (IN over) (NP (PRP$ her) (NN baby) (NNS eggs))) (PP (IN in) (NP (DT the) (NN nest))))) (. .)))', 'lemma': [(u'A', u'a', u'DT'), (u'mother', u'mother', u'NN'), (u'bird', u'bird', u'NN'), (u'was', u'be', u'VBD'), (u'watching', u'watch', u'VBG'), (u'over', u'over', u'IN'), (u'her', u'she', u'PRP$'), (u'baby', u'baby', u'NN'), (u'eggs', u'egg', u'NNS'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'nest', u'nest', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['A', 'mother', 'bird', 'was', 'watching', 'over', 'her', 'baby', 'eggs', 'in', 'the', 'nest', '.']}, {'string': ' She laid four eggs yesterday, some white and some spotted.', 'parse': {'tree': '(ROOT (S (S (NP (PRP She)) (VP (VBD laid) (NP (CD four) (NNS eggs)) (NP (NN yesterday)))) (, ,) (S (NP (DT some)) (ADJP (JJ white))) (CC and) (S (NP (DT some)) (VP (VBD spotted))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'laid', u'lay', u'VBD'), (u'four', u'four', u'CD'), (u'eggs', u'egg', u'NNS'), (u'yesterday', u'yesterday', u'NN'), (u',', u',', u','), (u'some', u'some', u'DT'), (u'white', u'white', u'JJ'), (u'and', u'and', u'CC'), (u'some', u'some', u'DT'), (u'spotted', u'spot', u'VBD'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'laid', 'four', 'eggs', 'yesterday', ',', 'some', 'white', 'and', 'some', 'spotted', '.']}, {'string': ' She had been keeping them warm so that her babies would soon be born.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBD had) (VP (VBN been) (VP (VBG keeping) (S (NP (PRP them)) (ADJP (JJ warm) (RB so) (SBAR (IN that) (S (NP (PRP$ her) (NNS babies)) (VP (MD would) (ADVP (RB soon)) (VP (VB be) (VP (VBN born))))))))))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'had', u'have', u'VBD'), (u'been', u'be', u'VBN'), (u'keeping', u'keep', u'VBG'), (u'them', u'they', u'PRP'), (u'warm', u'warm', u'JJ'), (u'so', u'so', u'RB'), (u'that', u'that', u'IN'), (u'her', u'she', u'PRP$'), (u'babies', u'baby', u'NNS'), (u'would', u'would', u'MD'), (u'soon', u'soon', u'RB'), (u'be', u'be', u'VB'), (u'born', u'bear', u'VBN'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'had', 'been', 'keeping', 'them', 'warm', 'so', 'that', 'her', 'babies', 'would', 'soon', 'be', 'born', '.']}, {'string': ' Little cracks appeared on the eggs and they started to grow and grow.', 'parse': {'tree': '(ROOT (S (S (NP (JJ Little) (NNS cracks)) (VP (VBD appeared) (PP (IN on) (NP (DT the) (NNS eggs))))) (CC and) (S (NP (PRP they)) (VP (VBD started) (S (VP (TO to) (VP (VB grow) (CC and) (VB grow)))))) (. .)))', 'lemma': [(u'Little', u'little', u'JJ'), (u'cracks', u'crack', u'NNS'), (u'appeared', u'appear', u'VBD'), (u'on', u'on', u'IN'), (u'the', u'the', u'DT'), (u'eggs', u'egg', u'NNS'), (u'and', u'and', u'CC'), (u'they', u'they', u'PRP'), (u'started', u'start', u'VBD'), (u'to', u'to', u'TO'), (u'grow', u'grow', u'VB'), (u'and', u'and', u'CC'), (u'grow', u'grow', u'VB'), (u'.', u'.', u'.')]}, 'tokens': ['Little', 'cracks', 'appeared', 'on', 'the', 'eggs', 'and', 'they', 'started', 'to', 'grow', 'and', 'grow', '.']}, {'string': " Little `` cheeping '' sounds could be heard coming from inside, and soon the eggs cracked open.", 'parse': {'tree': "(ROOT (S (S (NP (JJ Little) (`` ``) (JJ cheeping) ('' '') (NNS sounds)) (VP (MD could) (VP (VB be) (VP (VBN heard) (S (VP (VBG coming) (PP (IN from) (NP (NN inside))))))))) (, ,) (CC and) (S (ADVP (RB soon)) (NP (DT the) (NNS eggs)) (VP (VBD cracked) (ADJP (JJ open)))) (. .)))", 'lemma': [(u'Little', u'little', u'JJ'), (u'``', u'``', u'``'), (u'cheeping', u'cheeping', u'JJ'), (u"''", u"''", u"''"), (u'sounds', u'sound', u'NNS'), (u'could', u'could', u'MD'), (u'be', u'be', u'VB'), (u'heard', u'hear', u'VBN'), (u'coming', u'come', u'VBG'), (u'from', u'from', u'IN'), (u'inside', u'inside', u'NN'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'soon', u'soon', u'RB'), (u'the', u'the', u'DT'), (u'eggs', u'egg', u'NNS'), (u'cracked', u'crack', u'VBD'), (u'open', u'open', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['Little', '``', 'cheeping', "''", 'sounds', 'could', 'be', 'heard', 'coming', 'from', 'inside', ',', 'and', 'soon', 'the', 'eggs', 'cracked', 'open', '.']}, {'string': ' Featherless baby birds were inside, crying for food.', 'parse': {'tree': '(ROOT (S (NP (JJ Featherless) (NN baby) (NNS birds)) (VP (VBD were) (ADVP (RB inside)) (, ,) (S (VP (VBG crying) (PP (IN for) (NP (NN food)))))) (. .)))', 'lemma': [(u'Featherless', u'featherless', u'JJ'), (u'baby', u'baby', u'NN'), (u'birds', u'bird', u'NNS'), (u'were', u'be', u'VBD'), (u'inside', u'inside', u'RB'), (u',', u',', u','), (u'crying', u'cry', u'VBG'), (u'for', u'for', u'IN'), (u'food', u'food', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Featherless', 'baby', 'birds', 'were', 'inside', ',', 'crying', 'for', 'food', '.']}, {'string': ' The mother had nothing to give, so she quickly flew to the ground and looked in the dirt for food.', 'parse': {'tree': '(ROOT (S (S (NP (DT The) (NN mother)) (VP (VBD had) (NP (NN nothing) (S (VP (TO to) (VP (VB give))))))) (, ,) (IN so) (S (NP (PRP she)) (VP (VP (ADVP (RB quickly)) (VBD flew) (PP (TO to) (NP (DT the) (NN ground)))) (CC and) (VP (VBD looked) (PP (IN in) (NP (NP (DT the) (NN dirt)) (PP (IN for) (NP (NN food)))))))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'mother', u'mother', u'NN'), (u'had', u'have', u'VBD'), (u'nothing', u'nothing', u'NN'), (u'to', u'to', u'TO'), (u'give', u'give', u'VB'), (u',', u',', u','), (u'so', u'so', u'IN'), (u'she', u'she', u'PRP'), (u'quickly', u'quickly', u'RB'), (u'flew', u'fly', u'VBD'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'ground', u'ground', u'NN'), (u'and', u'and', u'CC'), (u'looked', u'look', u'VBD'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'dirt', u'dirt', u'NN'), (u'for', u'for', u'IN'), (u'food', u'food', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'mother', 'had', 'nothing', 'to', 'give', ',', 'so', 'she', 'quickly', 'flew', 'to', 'the', 'ground', 'and', 'looked', 'in', 'the', 'dirt', 'for', 'food', '.']}, {'string': ' She saw some worms wiggling in the ground.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBD saw) (NP (NP (DT some) (NNS worms)) (ADJP (VBG wiggling) (PP (IN in) (NP (DT the) (NN ground)))))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'saw', u'see', u'VBD'), (u'some', u'some', u'DT'), (u'worms', u'worm', u'NNS'), (u'wiggling', u'wiggle', u'VBG'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'ground', u'ground', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'saw', 'some', 'worms', 'wiggling', 'in', 'the', 'ground', '.']}, {'string': ' She picked a few up with her beak and flew them up to the nest.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VP (VBD picked) (NP (DT a) (JJ few)) (PRT (RP up)) (PP (IN with) (NP (PRP$ her) (NN beak)))) (CC and) (VP (VBD flew) (NP (PRP them)) (PRT (RP up)) (PP (TO to) (NP (DT the) (NN nest))))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'picked', u'pick', u'VBD'), (u'a', u'a', u'DT'), (u'few', u'few', u'JJ'), (u'up', u'up', u'RP'), (u'with', u'with', u'IN'), (u'her', u'she', u'PRP$'), (u'beak', u'beak', u'NN'), (u'and', u'and', u'CC'), (u'flew', u'fly', u'VBD'), (u'them', u'they', u'PRP'), (u'up', u'up', u'RP'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'nest', u'nest', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'picked', 'a', 'few', 'up', 'with', 'her', 'beak', 'and', 'flew', 'them', 'up', 'to', 'the', 'nest', '.']}, {'string': ' The babies were well fed with the worms, and the mother kept them all warm in the cold spring morning.', 'parse': {'tree': '(ROOT (S (S (NP (DT The) (NNS babies)) (VP (VBD were) (ADVP (RB well)) (VP (VBN fed) (PP (IN with) (NP (DT the) (NNS worms)))))) (, ,) (CC and) (S (NP (DT the) (NN mother)) (VP (VBD kept) (S (NP (PRP them)) (ADJP (RB all) (JJ warm) (PP (IN in) (NP (DT the) (JJ cold) (NN spring) (NN morning))))))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'babies', u'baby', u'NNS'), (u'were', u'be', u'VBD'), (u'well', u'well', u'RB'), (u'fed', u'feed', u'VBN'), (u'with', u'with', u'IN'), (u'the', u'the', u'DT'), (u'worms', u'worm', u'NNS'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'the', u'the', u'DT'), (u'mother', u'mother', u'NN'), (u'kept', u'keep', u'VBD'), (u'them', u'they', u'PRP'), (u'all', u'all', u'RB'), (u'warm', u'warm', u'JJ'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'cold', u'cold', u'JJ'), (u'spring', u'spring', u'NN'), (u'morning', u'morning', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'babies', 'were', 'well', 'fed', 'with', 'the', 'worms', ',', 'and', 'the', 'mother', 'kept', 'them', 'all', 'warm', 'in', 'the', 'cold', 'spring', 'morning', '.']}, {'string': ' Mr. Bird came home to find his new babies, and they were all a happy family.', 'parse': {'tree': '(ROOT (S (S (NP (NNP Mr.) (NNP Bird)) (VP (VBD came) (NP (NN home)) (S (VP (TO to) (VP (VB find) (NP (PRP$ his) (JJ new) (NNS babies))))))) (, ,) (CC and) (S (NP (PRP they)) (VP (VBD were) (NP (PDT all) (DT a) (JJ happy) (NN family)))) (. .)))', 'lemma': [(u'Mr.', u'Mr.', u'NNP'), (u'Bird', u'Bird', u'NNP'), (u'came', u'come', u'VBD'), (u'home', u'home', u'NN'), (u'to', u'to', u'TO'), (u'find', u'find', u'VB'), (u'his', u'he', u'PRP$'), (u'new', u'new', u'JJ'), (u'babies', u'baby', u'NNS'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'they', u'they', u'PRP'), (u'were', u'be', u'VBD'), (u'all', u'all', u'PDT'), (u'a', u'a', u'DT'), (u'happy', u'happy', u'JJ'), (u'family', u'family', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Mr.', 'Bird', 'came', 'home', 'to', 'find', 'his', 'new', 'babies', ',', 'and', 'they', 'were', 'all', 'a', 'happy', 'family', '.']}], 'questions': [{'question': {'string': ' What color are the eggs?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WDT What) (NN color)) (SQ (VBP are) (NP (DT the) (NNS eggs))) (. ?)))', 'lemma': [(u'What', u'what', u'WDT'), (u'color', u'color', u'NN'), (u'are', u'be', u'VBP'), (u'the', u'the', u'DT'), (u'eggs', u'egg', u'NNS'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'color', 'are', 'the', 'eggs', '?']}, 'answers': [{'string': ' All spotted', 'parse': {'tree': '(ROOT (S (NP (DT All)) (VP (VBD spotted))))', 'lemma': [(u'All', u'all', u'DT'), (u'spotted', u'spot', u'VBD')]}, 'tokens': ['All', 'spotted']}, {'string': ' blue', 'parse': {'tree': '(ROOT (ADJP (JJ blue)))', 'lemma': [(u'blue', u'blue', u'JJ')]}, 'tokens': ['blue']}, {'string': ' Some white, some spotted', 'parse': {'tree': '(ROOT (NP (NP (DT Some) (JJ white)) (, ,) (NP (DT some) (NN spotted))))', 'lemma': [(u'Some', u'some', u'DT'), (u'white', u'white', u'JJ'), (u',', u',', u','), (u'some', u'some', u'DT'), (u'spotted', u'spotted', u'NN')]}, 'tokens': ['Some', 'white', ',', 'some', 'spotted']}, {'string': ' All white', 'parse': {'tree': '(ROOT (ADJP (NP (DT All)) (JJ white)))', 'lemma': [(u'All', u'all', u'DT'), (u'white', u'white', u'JJ')]}, 'tokens': ['All', 'white']}], 'mode': 1}, {'question': {'string': ' How many babies are there?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WHADJP (WRB How) (JJ many)) (NNS babies)) (SQ (VBP are) (NP (EX there))) (. ?)))', 'lemma': [(u'How', u'how', u'WRB'), (u'many', u'many', u'JJ'), (u'babies', u'baby', u'NNS'), (u'are', u'be', u'VBP'), (u'there', u'there', u'EX'), (u'?', u'?', u'.')]}, 'tokens': ['How', 'many', 'babies', 'are', 'there', '?']}, 'answers': [{'string': ' two', 'parse': {'tree': '(ROOT (FRAG (NP (CD two))))', 'lemma': [(u'two', u'two', u'CD')]}, 'tokens': ['two']}, {'string': ' three', 'parse': {'tree': '(ROOT (FRAG (NP (CD three))))', 'lemma': [(u'three', u'three', u'CD')]}, 'tokens': ['three']}, {'string': ' four', 'parse': {'tree': '(ROOT (FRAG (NP (CD four))))', 'lemma': [(u'four', u'four', u'CD')]}, 'tokens': ['four']}, {'string': ' one', 'parse': {'tree': '(ROOT (NP (NN one)))', 'lemma': [(u'one', u'one', u'NN')]}, 'tokens': ['one']}], 'mode': 1}, {'question': {'string': ' What food does the mother bird get?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WDT What) (NP (NN food))) (SQ (VBZ does) (NP (DT the) (NN mother) (NN bird)) (VP (VB get))) (. ?)))', 'lemma': [(u'What', u'what', u'WDT'), (u'food', u'food', u'NN'), (u'does', u'do', u'VBZ'), (u'the', u'the', u'DT'), (u'mother', u'mother', u'NN'), (u'bird', u'bird', u'NN'), (u'get', u'get', u'VB'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'food', 'does', 'the', 'mother', 'bird', 'get', '?']}, 'answers': [{'string': ' Dirt', 'parse': {'tree': '(ROOT (NP (NNP Dirt)))', 'lemma': [(u'Dirt', u'Dirt', u'NNP')]}, 'tokens': ['Dirt']}, {'string': ' Eggs', 'parse': {'tree': '(ROOT (NP (NNP Eggs)))', 'lemma': [(u'Eggs', u'Eggs', u'NNP')]}, 'tokens': ['Eggs']}, {'string': ' Nest', 'parse': {'tree': '(ROOT (NP (NNP Nest)))', 'lemma': [(u'Nest', u'Nest', u'NNP')]}, 'tokens': ['Nest']}, {'string': ' Worms', 'parse': {'tree': '(ROOT (INTJ (UH Worms)))', 'lemma': [(u'Worms', u'worms', u'UH')]}, 'tokens': ['Worms']}], 'mode': 0}, {'question': {'string': ' Who came into the nest last?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP Who)) (SQ (VP (VBD came) (PP (IN into) (NP (DT the) (NN nest) (JJ last))))) (. ?)))', 'lemma': [(u'Who', u'who', u'WP'), (u'came', u'come', u'VBD'), (u'into', u'into', u'IN'), (u'the', u'the', u'DT'), (u'nest', u'nest', u'NN'), (u'last', u'last', u'JJ'), (u'?', u'?', u'.')]}, 'tokens': ['Who', 'came', 'into', 'the', 'nest', 'last', '?']}, 'answers': [{'string': ' Worms', 'parse': {'tree': '(ROOT (INTJ (UH Worms)))', 'lemma': [(u'Worms', u'worms', u'UH')]}, 'tokens': ['Worms']}, {'string': ' The babies', 'parse': {'tree': '(ROOT (FRAG (NP (DT The) (NNS babies))))', 'lemma': [(u'The', u'the', u'DT'), (u'babies', u'baby', u'NNS')]}, 'tokens': ['The', 'babies']}, {'string': ' Mr. Bird', 'parse': {'tree': '(ROOT (NP (NNP Mr.) (NNP Bird)))', 'lemma': [(u'Mr.', u'Mr.', u'NNP'), (u'Bird', u'Bird', u'NNP')]}, 'tokens': ['Mr.', 'Bird']}, {'string': ' Mrs. Bird', 'parse': {'tree': '(ROOT (NP (NNP Mrs.) (NNP Bird)))', 'lemma': [(u'Mrs.', u'Mrs.', u'NNP'), (u'Bird', u'Bird', u'NNP')]}, 'tokens': ['Mrs.', 'Bird']}], 'mode': 0}]}
{'sentences': [{'string': ' Once upon a time I had a dog named Toodles.', 'parse': {'tree': '(ROOT (S (ADVP (RB Once) (PP (IN upon) (NP (DT a) (NN time)))) (NP (PRP I)) (VP (VBD had) (NP (NP (DT a) (NN dog)) (VP (VBN named) (NP (NNS Toodles))))) (. .)))', 'lemma': [(u'Once', u'once', u'RB'), (u'upon', u'upon', u'IN'), (u'a', u'a', u'DT'), (u'time', u'time', u'NN'), (u'I', u'I', u'PRP'), (u'had', u'have', u'VBD'), (u'a', u'a', u'DT'), (u'dog', u'dog', u'NN'), (u'named', u'name', u'VBN'), (u'Toodles', u'toodle', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['Once', 'upon', 'a', 'time', 'I', 'had', 'a', 'dog', 'named', 'Toodles', '.']}, {'string': ' He was black and white and had long floppy ears.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VP (VBD was) (ADJP (JJ black) (CC and) (JJ white))) (CC and) (VP (VBD had) (NP (JJ long) (JJ floppy) (NNS ears)))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'was', u'be', u'VBD'), (u'black', u'black', u'JJ'), (u'and', u'and', u'CC'), (u'white', u'white', u'JJ'), (u'and', u'and', u'CC'), (u'had', u'have', u'VBD'), (u'long', u'long', u'JJ'), (u'floppy', u'floppy', u'JJ'), (u'ears', u'ear', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'was', 'black', 'and', 'white', 'and', 'had', 'long', 'floppy', 'ears', '.']}, {'string': ' He also had very short legs, but really big paws.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (ADVP (RB also)) (VP (VBD had) (NP (ADJP (ADJP (RB very) (RB short) (JJ legs)) (, ,) (CC but) (ADJP (RB really) (JJ big))) (NNS paws))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'also', u'also', u'RB'), (u'had', u'have', u'VBD'), (u'very', u'very', u'RB'), (u'short', u'short', u'RB'), (u'legs', u'legs', u'JJ'), (u',', u',', u','), (u'but', u'but', u'CC'), (u'really', u'really', u'RB'), (u'big', u'big', u'JJ'), (u'paws', u'paw', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'also', 'had', 'very', 'short', 'legs', ',', 'but', 'really', 'big', 'paws', '.']}, {'string': " Every Saturday we would go to the park and play Toodles ' favorite game.", 'parse': {'tree': "(ROOT (S (NP (DT Every) (NNP Saturday)) (NP (PRP we)) (VP (MD would) (VP (VP (VB go) (PP (TO to) (NP (DT the) (NN park)))) (CC and) (VP (VB play) (NP (NP (NNP Toodles) (POS ')) (JJ favorite) (NN game))))) (. .)))", 'lemma': [(u'Every', u'every', u'DT'), (u'Saturday', u'Saturday', u'NNP'), (u'we', u'we', u'PRP'), (u'would', u'would', u'MD'), (u'go', u'go', u'VB'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'park', u'park', u'NN'), (u'and', u'and', u'CC'), (u'play', u'play', u'VB'), (u'Toodles', u'Toodles', u'NNP'), (u"'", u"'", u'POS'), (u'favorite', u'favorite', u'JJ'), (u'game', u'game', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Every', 'Saturday', 'we', 'would', 'go', 'to', 'the', 'park', 'and', 'play', 'Toodles', "'", 'favorite', 'game', '.']}, {'string': ' Toodles loved playing fetch.', 'parse': {'tree': '(ROOT (S (NP (NNS Toodles)) (VP (VBD loved) (SBAR (S (NP (NN playing)) (VP (VBP fetch))))) (. .)))', 'lemma': [(u'Toodles', u'toodle', u'NNS'), (u'loved', u'love', u'VBD'), (u'playing', u'playing', u'NN'), (u'fetch', u'fetch', u'VBP'), (u'.', u'.', u'.')]}, 'tokens': ['Toodles', 'loved', 'playing', 'fetch', '.']}, {'string': ' One Saturday, Toodles ran over to the pond because he saw ducks swimming there.', 'parse': {'tree': '(ROOT (S (NP (CD One) (NNP Saturday)) (, ,) (NP (NNP Toodles)) (VP (VBD ran) (PRT (RP over)) (PP (TO to) (NP (DT the) (NN pond))) (SBAR (IN because) (S (NP (PRP he)) (VP (VBD saw) (NP (NP (NNS ducks)) (VP (VBG swimming) (ADVP (RB there)))))))) (. .)))', 'lemma': [(u'One', u'one', u'CD'), (u'Saturday', u'Saturday', u'NNP'), (u',', u',', u','), (u'Toodles', u'Toodles', u'NNP'), (u'ran', u'run', u'VBD'), (u'over', u'over', u'RP'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'pond', u'pond', u'NN'), (u'because', u'because', u'IN'), (u'he', u'he', u'PRP'), (u'saw', u'see', u'VBD'), (u'ducks', u'duck', u'NNS'), (u'swimming', u'swim', u'VBG'), (u'there', u'there', u'RB'), (u'.', u'.', u'.')]}, 'tokens': ['One', 'Saturday', ',', 'Toodles', 'ran', 'over', 'to', 'the', 'pond', 'because', 'he', 'saw', 'ducks', 'swimming', 'there', '.']}, {'string': ' He ran all around the pond, barking at the ducks.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD ran) (NP (NP (DT all)) (PP (IN around) (NP (DT the) (NN pond)))) (, ,) (S (VP (VBG barking) (PP (IN at) (NP (DT the) (NNS ducks)))))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'ran', u'run', u'VBD'), (u'all', u'all', u'DT'), (u'around', u'around', u'IN'), (u'the', u'the', u'DT'), (u'pond', u'pond', u'NN'), (u',', u',', u','), (u'barking', u'bark', u'VBG'), (u'at', u'at', u'IN'), (u'the', u'the', u'DT'), (u'ducks', u'duck', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'ran', 'all', 'around', 'the', 'pond', ',', 'barking', 'at', 'the', 'ducks', '.']}, {'string': ' The ducks ignored him, and kept swimming.', 'parse': {'tree': '(ROOT (S (NP (DT The) (NNS ducks)) (VP (VP (VBD ignored) (NP (PRP him))) (, ,) (CC and) (VP (VBD kept) (NP (NN swimming)))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'ducks', u'duck', u'NNS'), (u'ignored', u'ignore', u'VBD'), (u'him', u'he', u'PRP'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'kept', u'keep', u'VBD'), (u'swimming', u'swimming', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'ducks', 'ignored', 'him', ',', 'and', 'kept', 'swimming', '.']}, {'string': " Toodles was n't having it!", 'parse': {'tree': "(ROOT (S (NP (NNS Toodles)) (VP (VBD was) (RB n't) (VP (VBG having) (NP (PRP it)))) (. !)))", 'lemma': [(u'Toodles', u'toodle', u'NNS'), (u'was', u'be', u'VBD'), (u"n't", u'not', u'RB'), (u'having', u'have', u'VBG'), (u'it', u'it', u'PRP'), (u'!', u'!', u'.')]}, 'tokens': ['Toodles', 'was', "n't", 'having', 'it', '!']}, {'string': ' He jumped into the pond and started swimming toward the ducks, chasing around his new playmates.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VP (VBD jumped) (PP (IN into) (NP (DT the) (NN pond)))) (CC and) (VP (VBD started) (S (VP (VP (VBG swimming) (PP (IN toward) (NP (DT the) (NNS ducks)))) (, ,) (VP (VBG chasing) (PP (IN around) (NP (PRP$ his) (JJ new) (NNS playmates)))))))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'jumped', u'jump', u'VBD'), (u'into', u'into', u'IN'), (u'the', u'the', u'DT'), (u'pond', u'pond', u'NN'), (u'and', u'and', u'CC'), (u'started', u'start', u'VBD'), (u'swimming', u'swim', u'VBG'), (u'toward', u'toward', u'IN'), (u'the', u'the', u'DT'), (u'ducks', u'duck', u'NNS'), (u',', u',', u','), (u'chasing', u'chase', u'VBG'), (u'around', u'around', u'IN'), (u'his', u'he', u'PRP$'), (u'new', u'new', u'JJ'), (u'playmates', u'playmate', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'jumped', 'into', 'the', 'pond', 'and', 'started', 'swimming', 'toward', 'the', 'ducks', ',', 'chasing', 'around', 'his', 'new', 'playmates', '.']}, {'string': ' One of the ducks, braver than the others, poked Toodles with his beak - and then bit him right on one of his floppy ears!', 'parse': {'tree': '(ROOT (S (NP (NP (NP (CD One)) (PP (IN of) (NP (DT the) (NNS ducks)))) (, ,) (NP (NP (NN braver)) (PP (IN than) (NP (DT the) (NNS others)))) (, ,)) (VP (VP (VBD poked) (NP (NNS Toodles)) (PP (IN with) (NP (PRP$ his) (NN beak)))) (: -) (CC and) (VP (ADVP (RB then)) (VBD bit) (S (NP (PRP him)) (ADJP (JJ right) (PP (IN on) (NP (NP (CD one)) (PP (IN of) (NP (PRP$ his) (JJ floppy) (NNS ears))))))))) (. !)))', 'lemma': [(u'One', u'one', u'CD'), (u'of', u'of', u'IN'), (u'the', u'the', u'DT'), (u'ducks', u'duck', u'NNS'), (u',', u',', u','), (u'braver', u'braver', u'NN'), (u'than', u'than', u'IN'), (u'the', u'the', u'DT'), (u'others', u'other', u'NNS'), (u',', u',', u','), (u'poked', u'poke', u'VBD'), (u'Toodles', u'toodle', u'NNS'), (u'with', u'with', u'IN'), (u'his', u'he', u'PRP$'), (u'beak', u'beak', u'NN'), (u'-', u'-', u':'), (u'and', u'and', u'CC'), (u'then', u'then', u'RB'), (u'bit', u'bite', u'VBD'), (u'him', u'he', u'PRP'), (u'right', u'right', u'JJ'), (u'on', u'on', u'IN'), (u'one', u'one', u'CD'), (u'of', u'of', u'IN'), (u'his', u'he', u'PRP$'), (u'floppy', u'floppy', u'JJ'), (u'ears', u'ear', u'NNS'), (u'!', u'!', u'.')]}, 'tokens': ['One', 'of', 'the', 'ducks', ',', 'braver', 'than', 'the', 'others', ',', 'poked', 'Toodles', 'with', 'his', 'beak', '-', 'and', 'then', 'bit', 'him', 'right', 'on', 'one', 'of', 'his', 'floppy', 'ears', '!']}, {'string': ' Toodles barked and ran out of the pond because the duck hurt his ear.', 'parse': {'tree': '(ROOT (S (NP (NNS Toodles)) (VP (VP (VBD barked)) (CC and) (VP (VBD ran) (PRT (RP out)) (PP (IN of) (NP (DT the) (NN pond))) (PP (IN because) (NP (NP (DT the) (NN duck)) (VP (VBN hurt) (NP (PRP$ his) (NN ear))))))) (. .)))', 'lemma': [(u'Toodles', u'toodle', u'NNS'), (u'barked', u'bark', u'VBD'), (u'and', u'and', u'CC'), (u'ran', u'run', u'VBD'), (u'out', u'out', u'RP'), (u'of', u'of', u'IN'), (u'the', u'the', u'DT'), (u'pond', u'pond', u'NN'), (u'because', u'because', u'IN'), (u'the', u'the', u'DT'), (u'duck', u'duck', u'NN'), (u'hurt', u'hurt', u'VBN'), (u'his', u'he', u'PRP$'), (u'ear', u'ear', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Toodles', 'barked', 'and', 'ran', 'out', 'of', 'the', 'pond', 'because', 'the', 'duck', 'hurt', 'his', 'ear', '.']}, {'string': ' Soaking wet, he ran toward where I was eating a sandwich on the grass and curled right up in my lap so I could make him feel better.', 'parse': {'tree': '(ROOT (S (S (VP (VBG Soaking) (ADJP (JJ wet)))) (, ,) (NP (PRP he)) (VP (VBD ran) (PP (IN toward) (SBAR (WHADVP (WRB where)) (S (NP (PRP I)) (VP (VP (VBD was) (VP (VBG eating) (NP (NP (DT a) (NN sandwich)) (PP (IN on) (NP (DT the) (NN grass)))))) (CC and) (VP (VBD curled) (ADVP (RB right) (RB up)) (PP (IN in) (NP (PRP$ my) (NN lap)))))))) (SBAR (IN so) (S (NP (PRP I)) (VP (MD could) (VP (VB make) (S (NP (PRP him)) (VP (VB feel) (ADVP (RBR better))))))))) (. .)))', 'lemma': [(u'Soaking', u'soak', u'VBG'), (u'wet', u'wet', u'JJ'), (u',', u',', u','), (u'he', u'he', u'PRP'), (u'ran', u'run', u'VBD'), (u'toward', u'toward', u'IN'), (u'where', u'where', u'WRB'), (u'I', u'I', u'PRP'), (u'was', u'be', u'VBD'), (u'eating', u'eat', u'VBG'), (u'a', u'a', u'DT'), (u'sandwich', u'sandwich', u'NN'), (u'on', u'on', u'IN'), (u'the', u'the', u'DT'), (u'grass', u'grass', u'NN'), (u'and', u'and', u'CC'), (u'curled', u'curl', u'VBD'), (u'right', u'right', u'RB'), (u'up', u'up', u'RB'), (u'in', u'in', u'IN'), (u'my', u'my', u'PRP$'), (u'lap', u'lap', u'NN'), (u'so', u'so', u'IN'), (u'I', u'I', u'PRP'), (u'could', u'could', u'MD'), (u'make', u'make', u'VB'), (u'him', u'he', u'PRP'), (u'feel', u'feel', u'VB'), (u'better', u'better', u'RBR'), (u'.', u'.', u'.')]}, 'tokens': ['Soaking', 'wet', ',', 'he', 'ran', 'toward', 'where', 'I', 'was', 'eating', 'a', 'sandwich', 'on', 'the', 'grass', 'and', 'curled', 'right', 'up', 'in', 'my', 'lap', 'so', 'I', 'could', 'make', 'him', 'feel', 'better', '.']}, {'string': ' After that, whenever he would see a duck, Toodles would run the other way.', 'parse': {'tree': '(ROOT (S (PP (IN After) (NP (NP (DT that)) (, ,) (SBAR (WHADVP (WRB whenever)) (S (NP (PRP he)) (VP (MD would) (VP (VB see) (NP (DT a) (NN duck)))))))) (, ,) (NP (NNP Toodles)) (VP (MD would) (VP (VB run) (NP (DT the) (JJ other) (NN way)))) (. .)))', 'lemma': [(u'After', u'after', u'IN'), (u'that', u'that', u'DT'), (u',', u',', u','), (u'whenever', u'whenever', u'WRB'), (u'he', u'he', u'PRP'), (u'would', u'would', u'MD'), (u'see', u'see', u'VB'), (u'a', u'a', u'DT'), (u'duck', u'duck', u'NN'), (u',', u',', u','), (u'Toodles', u'Toodles', u'NNP'), (u'would', u'would', u'MD'), (u'run', u'run', u'VB'), (u'the', u'the', u'DT'), (u'other', u'other', u'JJ'), (u'way', u'way', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['After', 'that', ',', 'whenever', 'he', 'would', 'see', 'a', 'duck', ',', 'Toodles', 'would', 'run', 'the', 'other', 'way', '.']}], 'questions': [{'question': {'string': ' Why did we go to the park every Saturday?', 'parse': {'tree': '(ROOT (SBARQ (WHADVP (WRB Why)) (SQ (VBD did) (NP (PRP we)) (VP (VB go) (PP (TO to) (NP (DT the) (NN park))) (NP (DT every) (NNP Saturday)))) (. ?)))', 'lemma': [(u'Why', u'why', u'WRB'), (u'did', u'do', u'VBD'), (u'we', u'we', u'PRP'), (u'go', u'go', u'VB'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'park', u'park', u'NN'), (u'every', u'every', u'DT'), (u'Saturday', u'Saturday', u'NNP'), (u'?', u'?', u'.')]}, 'tokens': ['Why', 'did', 'we', 'go', 'to', 'the', 'park', 'every', 'Saturday', '?']}, 'answers': [{'string': ' To dig in the sand.', 'parse': {'tree': '(ROOT (S (VP (TO To) (VP (VB dig) (PP (IN in) (NP (DT the) (NN sand))))) (. .)))', 'lemma': [(u'To', u'to', u'TO'), (u'dig', u'dig', u'VB'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'sand', u'sand', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['To', 'dig', 'in', 'the', 'sand', '.']}, {'string': ' To play fetch.', 'parse': {'tree': '(ROOT (S (S (VP (TO To) (VP (VB play)))) (VP (VBP fetch)) (. .)))', 'lemma': [(u'To', u'to', u'TO'), (u'play', u'play', u'VB'), (u'fetch', u'fetch', u'VBP'), (u'.', u'.', u'.')]}, 'tokens': ['To', 'play', 'fetch', '.']}, {'string': ' To chase other dogs.', 'parse': {'tree': '(ROOT (S (VP (TO To) (VP (VB chase) (NP (JJ other) (NNS dogs)))) (. .)))', 'lemma': [(u'To', u'to', u'TO'), (u'chase', u'chase', u'VB'), (u'other', u'other', u'JJ'), (u'dogs', u'dog', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['To', 'chase', 'other', 'dogs', '.']}, {'string': ' To swim in the pond.', 'parse': {'tree': '(ROOT (S (NP (TO To)) (VP (VBP swim) (PP (IN in) (NP (DT the) (NN pond)))) (. .)))', 'lemma': [(u'To', u'to', u'TO'), (u'swim', u'swim', u'VBP'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'pond', u'pond', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['To', 'swim', 'in', 'the', 'pond', '.']}], 'mode': 0}, {'question': {'string': ' What did Toodles look like?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD did) (NP (NNPS Toodles)) (VP (VB look) (PP (IN like)))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'did', u'do', u'VBD'), (u'Toodles', u'Toodles', u'NNPS'), (u'look', u'look', u'VB'), (u'like', u'like', u'IN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'did', 'Toodles', 'look', 'like', '?']}, 'answers': [{'string': ' Brown and white with floppy ears, long legs, and big paws.', 'parse': {'tree': '(ROOT (NP (NP (NNP Brown) (CC and) (NNP white)) (PP (IN with) (NP (NP (JJ floppy) (NNS ears)) (, ,) (NP (JJ long) (NNS legs)) (, ,) (CC and) (NP (JJ big) (NNS paws)))) (. .)))', 'lemma': [(u'Brown', u'Brown', u'NNP'), (u'and', u'and', u'CC'), (u'white', u'white', u'NNP'), (u'with', u'with', u'IN'), (u'floppy', u'floppy', u'JJ'), (u'ears', u'ear', u'NNS'), (u',', u',', u','), (u'long', u'long', u'JJ'), (u'legs', u'leg', u'NNS'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'big', u'big', u'JJ'), (u'paws', u'paw', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['Brown', 'and', 'white', 'with', 'floppy', 'ears', ',', 'long', 'legs', ',', 'and', 'big', 'paws', '.']}, {'string': ' Gray with short ears, short legs, and tiny paws.', 'parse': {'tree': '(ROOT (NP (NP (NNP Gray)) (PP (IN with) (NP (NP (JJ short) (NNS ears)) (, ,) (NP (JJ short) (NNS legs)) (, ,) (CC and) (NP (JJ tiny) (NNS paws)))) (. .)))', 'lemma': [(u'Gray', u'Gray', u'NNP'), (u'with', u'with', u'IN'), (u'short', u'short', u'JJ'), (u'ears', u'ear', u'NNS'), (u',', u',', u','), (u'short', u'short', u'JJ'), (u'legs', u'leg', u'NNS'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'tiny', u'tiny', u'JJ'), (u'paws', u'paw', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['Gray', 'with', 'short', 'ears', ',', 'short', 'legs', ',', 'and', 'tiny', 'paws', '.']}, {'string': ' Black and white with floppy ears, short legs, and big paws.', 'parse': {'tree': '(ROOT (NP (NP (NNP Black) (CC and) (NNP white)) (PP (IN with) (NP (NP (JJ floppy) (NNS ears)) (, ,) (NP (JJ short) (NNS legs)) (, ,) (CC and) (NP (JJ big) (NNS paws)))) (. .)))', 'lemma': [(u'Black', u'Black', u'NNP'), (u'and', u'and', u'CC'), (u'white', u'white', u'NNP'), (u'with', u'with', u'IN'), (u'floppy', u'floppy', u'JJ'), (u'ears', u'ear', u'NNS'), (u',', u',', u','), (u'short', u'short', u'JJ'), (u'legs', u'leg', u'NNS'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'big', u'big', u'JJ'), (u'paws', u'paw', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['Black', 'and', 'white', 'with', 'floppy', 'ears', ',', 'short', 'legs', ',', 'and', 'big', 'paws', '.']}, {'string': ' Black and white with short ears, long legs, and big paws.', 'parse': {'tree': '(ROOT (NP (NP (NNP Black) (CC and) (NNP white)) (PP (IN with) (NP (NP (JJ short) (NNS ears)) (, ,) (NP (JJ long) (NNS legs)) (, ,) (CC and) (NP (JJ big) (NNS paws)))) (. .)))', 'lemma': [(u'Black', u'Black', u'NNP'), (u'and', u'and', u'CC'), (u'white', u'white', u'NNP'), (u'with', u'with', u'IN'), (u'short', u'short', u'JJ'), (u'ears', u'ear', u'NNS'), (u',', u',', u','), (u'long', u'long', u'JJ'), (u'legs', u'leg', u'NNS'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'big', u'big', u'JJ'), (u'paws', u'paw', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['Black', 'and', 'white', 'with', 'short', 'ears', ',', 'long', 'legs', ',', 'and', 'big', 'paws', '.']}], 'mode': 0}, {'question': {'string': ' Why was Toodles soaking wet?', 'parse': {'tree': '(ROOT (SBARQ (WHADVP (WRB Why)) (SQ (VBD was) (NP (NNPS Toodles)) (VP (VBG soaking) (ADJP (JJ wet)))) (. ?)))', 'lemma': [(u'Why', u'why', u'WRB'), (u'was', u'be', u'VBD'), (u'Toodles', u'Toodles', u'NNPS'), (u'soaking', u'soak', u'VBG'), (u'wet', u'wet', u'JJ'), (u'?', u'?', u'.')]}, 'tokens': ['Why', 'was', 'Toodles', 'soaking', 'wet', '?']}, 'answers': [{'string': ' Because he swam in the pond to fetch a stick.', 'parse': {'tree': '(ROOT (FRAG (SBAR (IN Because) (S (NP (PRP he)) (VP (VBP swam) (PP (IN in) (NP (DT the) (NN pond) (S (VP (TO to) (VP (VB fetch) (NP (DT a) (NN stick)))))))))) (. .)))', 'lemma': [(u'Because', u'because', u'IN'), (u'he', u'he', u'PRP'), (u'swam', u'swim', u'VBP'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'pond', u'pond', u'NN'), (u'to', u'to', u'TO'), (u'fetch', u'fetch', u'VB'), (u'a', u'a', u'DT'), (u'stick', u'stick', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Because', 'he', 'swam', 'in', 'the', 'pond', 'to', 'fetch', 'a', 'stick', '.']}, {'string': ' Because he swam in the pond to chase the ducks.', 'parse': {'tree': '(ROOT (FRAG (SBAR (IN Because) (S (NP (PRP he)) (VP (VBP swam) (PP (IN in) (NP (DT the) (NN pond) (S (VP (TO to) (VP (VB chase) (NP (DT the) (NNS ducks)))))))))) (. .)))', 'lemma': [(u'Because', u'because', u'IN'), (u'he', u'he', u'PRP'), (u'swam', u'swim', u'VBP'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'pond', u'pond', u'NN'), (u'to', u'to', u'TO'), (u'chase', u'chase', u'VB'), (u'the', u'the', u'DT'), (u'ducks', u'duck', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['Because', 'he', 'swam', 'in', 'the', 'pond', 'to', 'chase', 'the', 'ducks', '.']}, {'string': ' Because it rained on him.', 'parse': {'tree': '(ROOT (FRAG (SBAR (IN Because) (S (NP (PRP it)) (VP (VBD rained) (PP (IN on) (NP (PRP him)))))) (. .)))', 'lemma': [(u'Because', u'because', u'IN'), (u'it', u'it', u'PRP'), (u'rained', u'rain', u'VBD'), (u'on', u'on', u'IN'), (u'him', u'he', u'PRP'), (u'.', u'.', u'.')]}, 'tokens': ['Because', 'it', 'rained', 'on', 'him', '.']}, {'string': ' Because he jumped in the pool to fetch a ball.', 'parse': {'tree': '(ROOT (FRAG (SBAR (IN Because) (S (NP (PRP he)) (VP (VBD jumped) (PP (IN in) (NP (DT the) (NN pool))) (S (VP (TO to) (VP (VB fetch) (NP (DT a) (NN ball)))))))) (. .)))', 'lemma': [(u'Because', u'because', u'IN'), (u'he', u'he', u'PRP'), (u'jumped', u'jump', u'VBD'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'pool', u'pool', u'NN'), (u'to', u'to', u'TO'), (u'fetch', u'fetch', u'VB'), (u'a', u'a', u'DT'), (u'ball', u'ball', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Because', 'he', 'jumped', 'in', 'the', 'pool', 'to', 'fetch', 'a', 'ball', '.']}], 'mode': 0}, {'question': {'string': ' Why did Toodles curl up in my lap?', 'parse': {'tree': '(ROOT (SBARQ (WHADVP (WRB Why)) (SQ (VBD did) (NP (NNPS Toodles)) (VP (VB curl) (PRT (RP up)) (PP (IN in) (NP (PRP$ my) (NN lap))))) (. ?)))', 'lemma': [(u'Why', u'why', u'WRB'), (u'did', u'do', u'VBD'), (u'Toodles', u'Toodles', u'NNPS'), (u'curl', u'curl', u'VB'), (u'up', u'up', u'RP'), (u'in', u'in', u'IN'), (u'my', u'my', u'PRP$'), (u'lap', u'lap', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['Why', 'did', 'Toodles', 'curl', 'up', 'in', 'my', 'lap', '?']}, 'answers': [{'string': ' So I could make him feel better.', 'parse': {'tree': '(ROOT (S (IN So) (NP (PRP I)) (VP (MD could) (VP (VB make) (S (NP (PRP him)) (VP (VB feel) (ADVP (RBR better)))))) (. .)))', 'lemma': [(u'So', u'so', u'IN'), (u'I', u'I', u'PRP'), (u'could', u'could', u'MD'), (u'make', u'make', u'VB'), (u'him', u'he', u'PRP'), (u'feel', u'feel', u'VB'), (u'better', u'better', u'RBR'), (u'.', u'.', u'.')]}, 'tokens': ['So', 'I', 'could', 'make', 'him', 'feel', 'better', '.']}, {'string': ' Because I was tired.', 'parse': {'tree': '(ROOT (FRAG (SBAR (IN Because) (S (NP (PRP I)) (VP (VBD was) (ADJP (JJ tired))))) (. .)))', 'lemma': [(u'Because', u'because', u'IN'), (u'I', u'I', u'PRP'), (u'was', u'be', u'VBD'), (u'tired', u'tired', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['Because', 'I', 'was', 'tired', '.']}, {'string': ' Because he wanted to go home.', 'parse': {'tree': '(ROOT (FRAG (SBAR (IN Because) (S (NP (PRP he)) (VP (VBD wanted) (S (VP (TO to) (VP (VB go) (NP (NN home)))))))) (. .)))', 'lemma': [(u'Because', u'because', u'IN'), (u'he', u'he', u'PRP'), (u'wanted', u'want', u'VBD'), (u'to', u'to', u'TO'), (u'go', u'go', u'VB'), (u'home', u'home', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Because', 'he', 'wanted', 'to', 'go', 'home', '.']}, {'string': ' Because he was tired.', 'parse': {'tree': '(ROOT (FRAG (SBAR (IN Because) (S (NP (PRP he)) (VP (VBD was) (ADJP (JJ tired))))) (. .)))', 'lemma': [(u'Because', u'because', u'IN'), (u'he', u'he', u'PRP'), (u'was', u'be', u'VBD'), (u'tired', u'tired', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['Because', 'he', 'was', 'tired', '.']}], 'mode': 0}]}
{'sentences': [{'string': " I do n't think I can win the race Tim told his parents over breakfast.", 'parse': {'tree': "(ROOT (S (NP (PRP I)) (VP (VBP do) (RB n't) (VP (VB think) (SBAR (S (NP (PRP I)) (VP (MD can) (VP (VB win) (NP (NP (DT the) (NN race)) (SBAR (S (NP (NNP Tim)) (VP (VBD told) (NP (PRP$ his) (NNS parents)) (PP (IN over) (NP (NN breakfast))))))))))))) (. .)))", 'lemma': [(u'I', u'I', u'PRP'), (u'do', u'do', u'VBP'), (u"n't", u'not', u'RB'), (u'think', u'think', u'VB'), (u'I', u'I', u'PRP'), (u'can', u'can', u'MD'), (u'win', u'win', u'VB'), (u'the', u'the', u'DT'), (u'race', u'race', u'NN'), (u'Tim', u'Tim', u'NNP'), (u'told', u'tell', u'VBD'), (u'his', u'he', u'PRP$'), (u'parents', u'parent', u'NNS'), (u'over', u'over', u'IN'), (u'breakfast', u'breakfast', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['I', 'do', "n't", 'think', 'I', 'can', 'win', 'the', 'race', 'Tim', 'told', 'his', 'parents', 'over', 'breakfast', '.']}, {'string': " His mother asked `` Why not? ''", 'parse': {'tree': "(ROOT (S (NP (PRP$ His) (NN mother)) (VP (VBD asked) (VP (`` ``) (VB Why) (RB not))) (. ?) ('' '')))", 'lemma': [(u'His', u'he', u'PRP$'), (u'mother', u'mother', u'NN'), (u'asked', u'ask', u'VBD'), (u'``', u'``', u'``'), (u'Why', u'why', u'VB'), (u'not', u'not', u'RB'), (u'?', u'?', u'.'), (u"''", u"''", u"''")]}, 'tokens': ['His', 'mother', 'asked', '``', 'Why', 'not', '?', "''"]}, {'string': ' but his father was silent.', 'parse': {'tree': '(ROOT (S (CC but) (NP (PRP$ his) (NN father)) (VP (VBD was) (ADJP (JJ silent))) (. .)))', 'lemma': [(u'but', u'but', u'CC'), (u'his', u'he', u'PRP$'), (u'father', u'father', u'NN'), (u'was', u'be', u'VBD'), (u'silent', u'silent', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['but', 'his', 'father', 'was', 'silent', '.']}, {'string': " Tim knew his father did n't believe he could be a racer: only last year, he had sent Tim to a doctor to ask why his son was n't a better runner.", 'parse': {'tree': "(ROOT (S (S (NP (NNP Tim)) (VP (VBD knew) (SBAR (S (NP (PRP$ his) (NN father)) (VP (VBD did) (RB n't) (VP (VB believe) (SBAR (S (NP (PRP he)) (VP (MD could) (VP (VB be) (NP (DT a) (NN racer)))))))))))) (: :) (S (NP (RB only) (JJ last) (NN year)) (, ,) (NP (PRP he)) (VP (VBD had) (VP (VBN sent) (NP (NNP Tim)) (PP (TO to) (NP (DT a) (NN doctor))) (S (VP (TO to) (VP (VB ask) (SBAR (WHADVP (WRB why)) (S (NP (PRP$ his) (NN son)) (VP (VBD was) (RB n't) (NP (DT a) (JJR better) (NN runner))))))))))) (. .)))", 'lemma': [(u'Tim', u'Tim', u'NNP'), (u'knew', u'know', u'VBD'), (u'his', u'he', u'PRP$'), (u'father', u'father', u'NN'), (u'did', u'do', u'VBD'), (u"n't", u'not', u'RB'), (u'believe', u'believe', u'VB'), (u'he', u'he', u'PRP'), (u'could', u'could', u'MD'), (u'be', u'be', u'VB'), (u'a', u'a', u'DT'), (u'racer', u'racer', u'NN'), (u':', u':', u':'), (u'only', u'only', u'RB'), (u'last', u'last', u'JJ'), (u'year', u'year', u'NN'), (u',', u',', u','), (u'he', u'he', u'PRP'), (u'had', u'have', u'VBD'), (u'sent', u'send', u'VBN'), (u'Tim', u'Tim', u'NNP'), (u'to', u'to', u'TO'), (u'a', u'a', u'DT'), (u'doctor', u'doctor', u'NN'), (u'to', u'to', u'TO'), (u'ask', u'ask', u'VB'), (u'why', u'why', u'WRB'), (u'his', u'he', u'PRP$'), (u'son', u'son', u'NN'), (u'was', u'be', u'VBD'), (u"n't", u'not', u'RB'), (u'a', u'a', u'DT'), (u'better', u'better', u'JJR'), (u'runner', u'runner', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Tim', 'knew', 'his', 'father', 'did', "n't", 'believe', 'he', 'could', 'be', 'a', 'racer', ':', 'only', 'last', 'year', ',', 'he', 'had', 'sent', 'Tim', 'to', 'a', 'doctor', 'to', 'ask', 'why', 'his', 'son', 'was', "n't", 'a', 'better', 'runner', '.']}, {'string': " The doctor told him Tim could be anything he wanted to be, and maybe he did n't like to run.", 'parse': {'tree': "(ROOT (S (S (NP (DT The) (NN doctor)) (VP (VBD told) (NP (PRP him)) (SBAR (S (NP (NNP Tim)) (VP (MD could) (VP (VB be) (ADJP (NN anything) (SBAR (S (NP (PRP he)) (VP (VBD wanted) (S (VP (TO to) (VP (VB be)))))))))))))) (, ,) (CC and) (S (ADVP (RB maybe)) (NP (PRP he)) (VP (VBD did) (RB n't) (VP (VB like) (S (VP (TO to) (VP (VB run))))))) (. .)))", 'lemma': [(u'The', u'the', u'DT'), (u'doctor', u'doctor', u'NN'), (u'told', u'tell', u'VBD'), (u'him', u'he', u'PRP'), (u'Tim', u'Tim', u'NNP'), (u'could', u'could', u'MD'), (u'be', u'be', u'VB'), (u'anything', u'anything', u'NN'), (u'he', u'he', u'PRP'), (u'wanted', u'want', u'VBD'), (u'to', u'to', u'TO'), (u'be', u'be', u'VB'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'maybe', u'maybe', u'RB'), (u'he', u'he', u'PRP'), (u'did', u'do', u'VBD'), (u"n't", u'not', u'RB'), (u'like', u'like', u'VB'), (u'to', u'to', u'TO'), (u'run', u'run', u'VB'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'doctor', 'told', 'him', 'Tim', 'could', 'be', 'anything', 'he', 'wanted', 'to', 'be', ',', 'and', 'maybe', 'he', 'did', "n't", 'like', 'to', 'run', '.']}, {'string': " Tim, who had always preferred a good book to P.E. class, wanted to show his family that he really could be what they wanted him to be, so he spent his allowance on a pair of green running shoes and signed up for his school 's Spring Fun Run.", 'parse': {'tree': "(ROOT (S (S (NP (NP (NNP Tim)) (, ,) (SBAR (WHNP (WP who)) (S (VP (VBD had) (ADVP (RB always)) (VP (VBN preferred) (NP (DT a) (JJ good) (NN book)) (PP (TO to) (NP (NNP P.E.) (NN class))))))) (, ,)) (VP (VBD wanted) (S (VP (TO to) (VP (VB show) (NP (PRP$ his) (NN family)) (SBAR (IN that) (S (NP (PRP he)) (ADVP (RB really)) (VP (MD could) (VP (VB be) (SBAR (WHNP (WP what)) (S (NP (PRP they)) (VP (VBD wanted) (S (NP (PRP him)) (VP (TO to) (VP (VB be)))))))))))))))) (, ,) (IN so) (S (NP (PRP he)) (VP (VP (VBD spent) (NP (PRP$ his) (NN allowance)) (PP (IN on) (NP (NP (DT a) (NN pair)) (PP (IN of) (NP (JJ green) (VBG running) (NNS shoes)))))) (CC and) (VP (VBD signed) (PRT (RP up)) (PP (IN for) (NP (NP (PRP$ his) (NN school) (POS 's)) (NNP Spring) (NNP Fun) (NNP Run)))))) (. .)))", 'lemma': [(u'Tim', u'Tim', u'NNP'), (u',', u',', u','), (u'who', u'who', u'WP'), (u'had', u'have', u'VBD'), (u'always', u'always', u'RB'), (u'preferred', u'prefer', u'VBN'), (u'a', u'a', u'DT'), (u'good', u'good', u'JJ'), (u'book', u'book', u'NN'), (u'to', u'to', u'TO'), (u'P.E.', u'P.E.', u'NNP'), (u'class', u'class', u'NN'), (u',', u',', u','), (u'wanted', u'want', u'VBD'), (u'to', u'to', u'TO'), (u'show', u'show', u'VB'), (u'his', u'he', u'PRP$'), (u'family', u'family', u'NN'), (u'that', u'that', u'IN'), (u'he', u'he', u'PRP'), (u'really', u'really', u'RB'), (u'could', u'could', u'MD'), (u'be', u'be', u'VB'), (u'what', u'what', u'WP'), (u'they', u'they', u'PRP'), (u'wanted', u'want', u'VBD'), (u'him', u'he', u'PRP'), (u'to', u'to', u'TO'), (u'be', u'be', u'VB'), (u',', u',', u','), (u'so', u'so', u'IN'), (u'he', u'he', u'PRP'), (u'spent', u'spend', u'VBD'), (u'his', u'he', u'PRP$'), (u'allowance', u'allowance', u'NN'), (u'on', u'on', u'IN'), (u'a', u'a', u'DT'), (u'pair', u'pair', u'NN'), (u'of', u'of', u'IN'), (u'green', u'green', u'JJ'), (u'running', u'run', u'VBG'), (u'shoes', u'shoe', u'NNS'), (u'and', u'and', u'CC'), (u'signed', u'sign', u'VBD'), (u'up', u'up', u'RP'), (u'for', u'for', u'IN'), (u'his', u'he', u'PRP$'), (u'school', u'school', u'NN'), (u"'s", u"'s", u'POS'), (u'Spring', u'Spring', u'NNP'), (u'Fun', u'Fun', u'NNP'), (u'Run', u'Run', u'NNP'), (u'.', u'.', u'.')]}, 'tokens': ['Tim', ',', 'who', 'had', 'always', 'preferred', 'a', 'good', 'book', 'to', 'P.E.', 'class', ',', 'wanted', 'to', 'show', 'his', 'family', 'that', 'he', 'really', 'could', 'be', 'what', 'they', 'wanted', 'him', 'to', 'be', ',', 'so', 'he', 'spent', 'his', 'allowance', 'on', 'a', 'pair', 'of', 'green', 'running', 'shoes', 'and', 'signed', 'up', 'for', 'his', 'school', "'s", 'Spring', 'Fun', 'Run', '.']}, {'string': " Tim answered, `` I 'm going to try to win, but Angela is so quick!", 'parse': {'tree': "(ROOT (S (S (NP (NNP Tim)) (VP (VBD answered) (, ,) (`` ``) (S (NP (PRP I)) (VP (VBP 'm) (VP (VBG going) (S (VP (TO to) (VP (VB try) (S (VP (TO to) (VP (VB win)))))))))))) (, ,) (CC but) (S (NP (NNP Angela)) (VP (VBZ is) (ADJP (RB so) (JJ quick)))) (. !)))", 'lemma': [(u'Tim', u'Tim', u'NNP'), (u'answered', u'answer', u'VBD'), (u',', u',', u','), (u'``', u'``', u'``'), (u'I', u'I', u'PRP'), (u"'m", u'be', u'VBP'), (u'going', u'go', u'VBG'), (u'to', u'to', u'TO'), (u'try', u'try', u'VB'), (u'to', u'to', u'TO'), (u'win', u'win', u'VB'), (u',', u',', u','), (u'but', u'but', u'CC'), (u'Angela', u'Angela', u'NNP'), (u'is', u'be', u'VBZ'), (u'so', u'so', u'RB'), (u'quick', u'quick', u'JJ'), (u'!', u'!', u'.')]}, 'tokens': ['Tim', 'answered', ',', '``', 'I', "'m", 'going', 'to', 'try', 'to', 'win', ',', 'but', 'Angela', 'is', 'so', 'quick', '!']}, {'string': " No one ever beats her at recess. ''", 'parse': {'tree': "(ROOT (S (NP (DT No) (NN one)) (ADVP (RB ever)) (VP (VBZ beats) (NP (PRP her)) (PP (IN at) (NP (NN recess)))) (. .) ('' '')))", 'lemma': [(u'No', u'no', u'DT'), (u'one', u'one', u'NN'), (u'ever', u'ever', u'RB'), (u'beats', u'beat', u'VBZ'), (u'her', u'she', u'PRP'), (u'at', u'at', u'IN'), (u'recess', u'recess', u'NN'), (u'.', u'.', u'.'), (u"''", u"''", u"''")]}, 'tokens': ['No', 'one', 'ever', 'beats', 'her', 'at', 'recess', '.', "''"]}, {'string': " `` Well, we 'll be there for you, either way '' his mother said.", 'parse': {'tree': "(ROOT (S (`` ``) (S (INTJ (UH Well)) (, ,) (NP (PRP we)) (VP (MD 'll) (VP (VB be) (ADVP (RB there)) (PP (IN for) (NP (NP (PRP you)) (, ,) (NP (DT either) (NN way))))))) ('' '') (NP (PRP$ his) (NN mother)) (VP (VBD said)) (. .)))", 'lemma': [(u'``', u'``', u'``'), (u'Well', u'well', u'UH'), (u',', u',', u','), (u'we', u'we', u'PRP'), (u"'ll", u"'ll", u'MD'), (u'be', u'be', u'VB'), (u'there', u'there', u'RB'), (u'for', u'for', u'IN'), (u'you', u'you', u'PRP'), (u',', u',', u','), (u'either', u'either', u'DT'), (u'way', u'way', u'NN'), (u"''", u"''", u"''"), (u'his', u'he', u'PRP$'), (u'mother', u'mother', u'NN'), (u'said', u'say', u'VBD'), (u'.', u'.', u'.')]}, 'tokens': ['``', 'Well', ',', 'we', "'ll", 'be', 'there', 'for', 'you', ',', 'either', 'way', "''", 'his', 'mother', 'said', '.']}, {'string': ' Tim took an apple and walked to the bus.', 'parse': {'tree': '(ROOT (S (NP (NNP Tim)) (VP (VP (VBD took) (NP (DT an) (NN apple))) (CC and) (VP (VBD walked) (PP (TO to) (NP (DT the) (NN bus))))) (. .)))', 'lemma': [(u'Tim', u'Tim', u'NNP'), (u'took', u'take', u'VBD'), (u'an', u'a', u'DT'), (u'apple', u'apple', u'NN'), (u'and', u'and', u'CC'), (u'walked', u'walk', u'VBD'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'bus', u'bus', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Tim', 'took', 'an', 'apple', 'and', 'walked', 'to', 'the', 'bus', '.']}, {'string': ' Since the race was after school today -LRB- school was letting out at 3:00 today, instead of 3:15 -RRB-, he knew he would be too nervous to think about anything else until it began.', 'parse': {'tree': '(ROOT (S (SBAR (IN Since) (S (NP (DT the) (NN race)) (VP (VBD was) (PP (IN after) (NP (NN school))) (NP (NN today))))) (PRN (-LRB- -LRB-) (S (NP (NN school)) (VP (VBD was) (VP (VBG letting) (PRT (RP out)) (PP (IN at) (NP (CD 3:00))) (NP (NN today)) (, ,) (PP (RB instead) (IN of) (NP (CD 3:15)))))) (-RRB- -RRB-)) (, ,) (NP (PRP he)) (VP (VBD knew) (SBAR (S (NP (PRP he)) (VP (MD would) (VP (VB be) (ADJP (RB too) (JJ nervous) (S (VP (TO to) (VP (VB think) (PP (IN about) (NP (NN anything) (RB else))))))) (SBAR (IN until) (S (NP (PRP it)) (VP (VBD began))))))))) (. .)))', 'lemma': [(u'Since', u'since', u'IN'), (u'the', u'the', u'DT'), (u'race', u'race', u'NN'), (u'was', u'be', u'VBD'), (u'after', u'after', u'IN'), (u'school', u'school', u'NN'), (u'today', u'today', u'NN'), (u'-LRB-', u'-lrb-', u'-LRB-'), (u'school', u'school', u'NN'), (u'was', u'be', u'VBD'), (u'letting', u'let', u'VBG'), (u'out', u'out', u'RP'), (u'at', u'at', u'IN'), (u'3:00', u'3:00', u'CD'), (u'today', u'today', u'NN'), (u',', u',', u','), (u'instead', u'instead', u'RB'), (u'of', u'of', u'IN'), (u'3:15', u'3:15', u'CD'), (u'-RRB-', u'-rrb-', u'-RRB-'), (u',', u',', u','), (u'he', u'he', u'PRP'), (u'knew', u'know', u'VBD'), (u'he', u'he', u'PRP'), (u'would', u'would', u'MD'), (u'be', u'be', u'VB'), (u'too', u'too', u'RB'), (u'nervous', u'nervous', u'JJ'), (u'to', u'to', u'TO'), (u'think', u'think', u'VB'), (u'about', u'about', u'IN'), (u'anything', u'anything', u'NN'), (u'else', u'else', u'RB'), (u'until', u'until', u'IN'), (u'it', u'it', u'PRP'), (u'began', u'begin', u'VBD'), (u'.', u'.', u'.')]}, 'tokens': ['Since', 'the', 'race', 'was', 'after', 'school', 'today', '-LRB-', 'school', 'was', 'letting', 'out', 'at', '3:00', 'today', ',', 'instead', 'of', '3:15', '-RRB-', ',', 'he', 'knew', 'he', 'would', 'be', 'too', 'nervous', 'to', 'think', 'about', 'anything', 'else', 'until', 'it', 'began', '.']}, {'string': " He did n't even bring his new book with him, an action book starring an orphan named Simon that Tim sometimes pretended to be.", 'parse': {'tree': "(ROOT (S (NP (PRP He)) (VP (VBD did) (RB n't) (ADVP (RB even)) (VP (VB bring) (NP (PRP$ his) (JJ new) (NN book)) (PP (IN with) (NP (NP (PRP him)) (, ,) (NP (NP (DT an) (NN action) (NN book)) (VP (VBG starring) (NP (NP (DT an) (NN orphan)) (VP (VBN named) (NP (NNP Simon)) (SBAR (IN that) (S (NP (NNP Tim)) (ADVP (RB sometimes)) (VP (VBD pretended) (S (VP (TO to) (VP (VB be))))))))))))))) (. .)))", 'lemma': [(u'He', u'he', u'PRP'), (u'did', u'do', u'VBD'), (u"n't", u'not', u'RB'), (u'even', u'even', u'RB'), (u'bring', u'bring', u'VB'), (u'his', u'he', u'PRP$'), (u'new', u'new', u'JJ'), (u'book', u'book', u'NN'), (u'with', u'with', u'IN'), (u'him', u'he', u'PRP'), (u',', u',', u','), (u'an', u'a', u'DT'), (u'action', u'action', u'NN'), (u'book', u'book', u'NN'), (u'starring', u'star', u'VBG'), (u'an', u'a', u'DT'), (u'orphan', u'orphan', u'NN'), (u'named', u'name', u'VBN'), (u'Simon', u'Simon', u'NNP'), (u'that', u'that', u'IN'), (u'Tim', u'Tim', u'NNP'), (u'sometimes', u'sometimes', u'RB'), (u'pretended', u'pretend', u'VBD'), (u'to', u'to', u'TO'), (u'be', u'be', u'VB'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'did', "n't", 'even', 'bring', 'his', 'new', 'book', 'with', 'him', ',', 'an', 'action', 'book', 'starring', 'an', 'orphan', 'named', 'Simon', 'that', 'Tim', 'sometimes', 'pretended', 'to', 'be', '.']}, {'string': ' 3:30 arrived and the race was about to begin.', 'parse': {'tree': '(ROOT (S (NP (NP (CD 3:30) (NNS arrived)) (CC and) (NP (DT the) (NN race))) (VP (VBD was) (VP (IN about) (S (VP (TO to) (VP (VB begin)))))) (. .)))', 'lemma': [(u'3:30', u'3:30', u'CD'), (u'arrived', u'arrived', u'NNS'), (u'and', u'and', u'CC'), (u'the', u'the', u'DT'), (u'race', u'race', u'NN'), (u'was', u'be', u'VBD'), (u'about', u'about', u'IN'), (u'to', u'to', u'TO'), (u'begin', u'begin', u'VB'), (u'.', u'.', u'.')]}, 'tokens': ['3:30', 'arrived', 'and', 'the', 'race', 'was', 'about', 'to', 'begin', '.']}, {'string': ' All the other students had brought running shorts, but Tim was going to have to run in his school pants.', 'parse': {'tree': '(ROOT (S (S (NP (PDT All) (DT the) (JJ other) (NNS students)) (VP (VBD had) (VP (VBN brought) (S (VP (VBG running) (NP (NNS shorts))))))) (, ,) (CC but) (S (NP (NNP Tim)) (VP (VBD was) (VP (VBG going) (S (VP (TO to) (VP (VB have) (S (VP (TO to) (VP (VB run) (PP (IN in) (NP (PRP$ his) (NN school) (NNS pants)))))))))))) (. .)))', 'lemma': [(u'All', u'all', u'PDT'), (u'the', u'the', u'DT'), (u'other', u'other', u'JJ'), (u'students', u'student', u'NNS'), (u'had', u'have', u'VBD'), (u'brought', u'bring', u'VBN'), (u'running', u'run', u'VBG'), (u'shorts', u'shorts', u'NNS'), (u',', u',', u','), (u'but', u'but', u'CC'), (u'Tim', u'Tim', u'NNP'), (u'was', u'be', u'VBD'), (u'going', u'go', u'VBG'), (u'to', u'to', u'TO'), (u'have', u'have', u'VB'), (u'to', u'to', u'TO'), (u'run', u'run', u'VB'), (u'in', u'in', u'IN'), (u'his', u'he', u'PRP$'), (u'school', u'school', u'NN'), (u'pants', u'pants', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['All', 'the', 'other', 'students', 'had', 'brought', 'running', 'shorts', ',', 'but', 'Tim', 'was', 'going', 'to', 'have', 'to', 'run', 'in', 'his', 'school', 'pants', '.']}, {'string': ' Suddenly, he saw that his shoes were untied.', 'parse': {'tree': '(ROOT (S (ADVP (RB Suddenly)) (, ,) (NP (PRP he)) (VP (VBD saw) (SBAR (IN that) (S (NP (PRP$ his) (NNS shoes)) (VP (VBD were) (VP (VBN untied)))))) (. .)))', 'lemma': [(u'Suddenly', u'suddenly', u'RB'), (u',', u',', u','), (u'he', u'he', u'PRP'), (u'saw', u'see', u'VBD'), (u'that', u'that', u'IN'), (u'his', u'he', u'PRP$'), (u'shoes', u'shoe', u'NNS'), (u'were', u'be', u'VBD'), (u'untied', u'untie', u'VBN'), (u'.', u'.', u'.')]}, 'tokens': ['Suddenly', ',', 'he', 'saw', 'that', 'his', 'shoes', 'were', 'untied', '.']}, {'string': ' As he bent down to tie them, one of the older boys kicked the back of his knee, making him fall down right as the race began.', 'parse': {'tree': '(ROOT (S (SBAR (IN As) (S (NP (PRP he)) (VP (VBZ bent) (PRT (RP down)) (S (VP (TO to) (VP (VB tie) (NP (PRP them)))))))) (, ,) (NP (NP (CD one)) (PP (IN of) (NP (DT the) (JJR older) (NNS boys)))) (VP (VBD kicked) (NP (NP (DT the) (NN back)) (PP (IN of) (NP (PRP$ his) (NN knee)))) (, ,) (S (VP (VBG making) (S (NP (PRP him)) (VP (VB fall) (ADVP (ADVP (RB down) (RB right)) (SBAR (IN as) (S (NP (DT the) (NN race)) (VP (VBD began)))))))))) (. .)))', 'lemma': [(u'As', u'as', u'IN'), (u'he', u'he', u'PRP'), (u'bent', u'bend', u'VBZ'), (u'down', u'down', u'RP'), (u'to', u'to', u'TO'), (u'tie', u'tie', u'VB'), (u'them', u'they', u'PRP'), (u',', u',', u','), (u'one', u'one', u'CD'), (u'of', u'of', u'IN'), (u'the', u'the', u'DT'), (u'older', u'older', u'JJR'), (u'boys', u'boy', u'NNS'), (u'kicked', u'kick', u'VBD'), (u'the', u'the', u'DT'), (u'back', u'back', u'NN'), (u'of', u'of', u'IN'), (u'his', u'he', u'PRP$'), (u'knee', u'knee', u'NN'), (u',', u',', u','), (u'making', u'make', u'VBG'), (u'him', u'he', u'PRP'), (u'fall', u'fall', u'VB'), (u'down', u'down', u'RB'), (u'right', u'right', u'RB'), (u'as', u'as', u'IN'), (u'the', u'the', u'DT'), (u'race', u'race', u'NN'), (u'began', u'begin', u'VBD'), (u'.', u'.', u'.')]}, 'tokens': ['As', 'he', 'bent', 'down', 'to', 'tie', 'them', ',', 'one', 'of', 'the', 'older', 'boys', 'kicked', 'the', 'back', 'of', 'his', 'knee', ',', 'making', 'him', 'fall', 'down', 'right', 'as', 'the', 'race', 'began', '.']}, {'string': ' By the time he got up and tied his shoes, he saw he would finish in last place, as the other kids were much farther ahead of him.', 'parse': {'tree': '(ROOT (S (S (PP (IN By) (NP (DT the) (NN time))) (NP (PRP he)) (VP (VP (VBD got) (PRT (RP up))) (CC and) (VP (VBD tied) (NP (PRP$ his) (NNS shoes))))) (, ,) (NP (PRP he)) (VP (VBD saw) (SBAR (S (NP (PRP he)) (VP (MD would) (VP (VB finish) (PP (IN in) (NP (JJ last) (NN place))) (, ,) (SBAR (IN as) (S (NP (DT the) (JJ other) (NNS kids)) (VP (VBD were) (ADVP (RB much) (RBR farther) (RB ahead)) (PP (IN of) (NP (PRP him))))))))))) (. .)))', 'lemma': [(u'By', u'by', u'IN'), (u'the', u'the', u'DT'), (u'time', u'time', u'NN'), (u'he', u'he', u'PRP'), (u'got', u'get', u'VBD'), (u'up', u'up', u'RP'), (u'and', u'and', u'CC'), (u'tied', u'tie', u'VBD'), (u'his', u'he', u'PRP$'), (u'shoes', u'shoe', u'NNS'), (u',', u',', u','), (u'he', u'he', u'PRP'), (u'saw', u'see', u'VBD'), (u'he', u'he', u'PRP'), (u'would', u'would', u'MD'), (u'finish', u'finish', u'VB'), (u'in', u'in', u'IN'), (u'last', u'last', u'JJ'), (u'place', u'place', u'NN'), (u',', u',', u','), (u'as', u'as', u'IN'), (u'the', u'the', u'DT'), (u'other', u'other', u'JJ'), (u'kids', u'kid', u'NNS'), (u'were', u'be', u'VBD'), (u'much', u'much', u'RB'), (u'farther', u'farther', u'RBR'), (u'ahead', u'ahead', u'RB'), (u'of', u'of', u'IN'), (u'him', u'he', u'PRP'), (u'.', u'.', u'.')]}, 'tokens': ['By', 'the', 'time', 'he', 'got', 'up', 'and', 'tied', 'his', 'shoes', ',', 'he', 'saw', 'he', 'would', 'finish', 'in', 'last', 'place', ',', 'as', 'the', 'other', 'kids', 'were', 'much', 'farther', 'ahead', 'of', 'him', '.']}, {'string': ' It was almost 4:00 before Tim saw the end of the run.', 'parse': {'tree': '(ROOT (S (NP (PRP It)) (VP (VBD was) (ADVP (RB almost) (NP (CD 4:00))) (SBAR (IN before) (S (NP (NNP Tim)) (VP (VBD saw) (NP (NP (DT the) (NN end)) (PP (IN of) (NP (DT the) (NN run)))))))) (. .)))', 'lemma': [(u'It', u'it', u'PRP'), (u'was', u'be', u'VBD'), (u'almost', u'almost', u'RB'), (u'4:00', u'4:00', u'CD'), (u'before', u'before', u'IN'), (u'Tim', u'Tim', u'NNP'), (u'saw', u'see', u'VBD'), (u'the', u'the', u'DT'), (u'end', u'end', u'NN'), (u'of', u'of', u'IN'), (u'the', u'the', u'DT'), (u'run', u'run', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['It', 'was', 'almost', '4:00', 'before', 'Tim', 'saw', 'the', 'end', 'of', 'the', 'run', '.']}, {'string': ' By the time Tim reached the finish line, the group of parents waiting on their kids was very small, as some kids had been finished for a long time.', 'parse': {'tree': '(ROOT (S (PP (IN By) (NP (NP (DT the) (NN time)) (SBAR (S (NP (NNP Tim)) (VP (VBD reached) (NP (DT the) (NN finish) (NN line))))))) (, ,) (NP (NP (DT the) (NN group)) (PP (IN of) (NP (NP (NNS parents)) (VP (VBG waiting) (PP (IN on) (NP (PRP$ their) (NNS kids))))))) (VP (VBD was) (ADJP (RB very) (JJ small)) (, ,) (SBAR (IN as) (S (NP (DT some) (NNS kids)) (VP (VBD had) (VP (VBN been) (VP (VBN finished) (PP (IN for) (NP (DT a) (JJ long) (NN time))))))))) (. .)))', 'lemma': [(u'By', u'by', u'IN'), (u'the', u'the', u'DT'), (u'time', u'time', u'NN'), (u'Tim', u'Tim', u'NNP'), (u'reached', u'reach', u'VBD'), (u'the', u'the', u'DT'), (u'finish', u'finish', u'NN'), (u'line', u'line', u'NN'), (u',', u',', u','), (u'the', u'the', u'DT'), (u'group', u'group', u'NN'), (u'of', u'of', u'IN'), (u'parents', u'parent', u'NNS'), (u'waiting', u'wait', u'VBG'), (u'on', u'on', u'IN'), (u'their', u'they', u'PRP$'), (u'kids', u'kid', u'NNS'), (u'was', u'be', u'VBD'), (u'very', u'very', u'RB'), (u'small', u'small', u'JJ'), (u',', u',', u','), (u'as', u'as', u'IN'), (u'some', u'some', u'DT'), (u'kids', u'kid', u'NNS'), (u'had', u'have', u'VBD'), (u'been', u'be', u'VBN'), (u'finished', u'finish', u'VBN'), (u'for', u'for', u'IN'), (u'a', u'a', u'DT'), (u'long', u'long', u'JJ'), (u'time', u'time', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['By', 'the', 'time', 'Tim', 'reached', 'the', 'finish', 'line', ',', 'the', 'group', 'of', 'parents', 'waiting', 'on', 'their', 'kids', 'was', 'very', 'small', ',', 'as', 'some', 'kids', 'had', 'been', 'finished', 'for', 'a', 'long', 'time', '.']}, {'string': " Tim 's father asked, `` What took you so long?", 'parse': {'tree': "(ROOT (S (NP (NP (NNP Tim) (POS 's)) (NN father)) (VP (VBD asked) (, ,) (`` ``) (S (NP (WP What)) (VP (VBD took) (NP (PRP you)) (ADVP (RB so) (RB long))))) (. ?)))", 'lemma': [(u'Tim', u'Tim', u'NNP'), (u"'s", u"'s", u'POS'), (u'father', u'father', u'NN'), (u'asked', u'ask', u'VBD'), (u',', u',', u','), (u'``', u'``', u'``'), (u'What', u'what', u'WP'), (u'took', u'take', u'VBD'), (u'you', u'you', u'PRP'), (u'so', u'so', u'RB'), (u'long', u'long', u'RB'), (u'?', u'?', u'.')]}, 'tokens': ['Tim', "'s", 'father', 'asked', ',', '``', 'What', 'took', 'you', 'so', 'long', '?']}, {'string': " I 'm surprised to see you here at all!", 'parse': {'tree': "(ROOT (S (NP (PRP I)) (VP (VBP 'm) (ADJP (JJ surprised) (S (VP (TO to) (VP (VB see) (NP (PRP you)) (ADVP (RB here)) (ADVP (IN at) (DT all))))))) (. !)))", 'lemma': [(u'I', u'I', u'PRP'), (u"'m", u'be', u'VBP'), (u'surprised', u'surprised', u'JJ'), (u'to', u'to', u'TO'), (u'see', u'see', u'VB'), (u'you', u'you', u'PRP'), (u'here', u'here', u'RB'), (u'at', u'at', u'IN'), (u'all', u'all', u'DT'), (u'!', u'!', u'.')]}, 'tokens': ['I', "'m", 'surprised', 'to', 'see', 'you', 'here', 'at', 'all', '!']}, {'string': " Why did you sign up for this when we all knew you would n't win? ''", 'parse': {'tree': "(ROOT (SBARQ (WHADVP (WRB Why)) (SQ (VBD did) (NP (PRP you)) (VP (VB sign) (PRT (RP up)) (PP (IN for) (NP (DT this))) (SBAR (WHADVP (WRB when)) (S (NP (PRP we)) (ADVP (DT all)) (VP (VBD knew) (SBAR (S (NP (PRP you)) (VP (MD would) (RB n't) (VP (VB win)))))))))) (. ?) ('' '')))", 'lemma': [(u'Why', u'why', u'WRB'), (u'did', u'do', u'VBD'), (u'you', u'you', u'PRP'), (u'sign', u'sign', u'VB'), (u'up', u'up', u'RP'), (u'for', u'for', u'IN'), (u'this', u'this', u'DT'), (u'when', u'when', u'WRB'), (u'we', u'we', u'PRP'), (u'all', u'all', u'DT'), (u'knew', u'know', u'VBD'), (u'you', u'you', u'PRP'), (u'would', u'would', u'MD'), (u"n't", u'not', u'RB'), (u'win', u'win', u'VB'), (u'?', u'?', u'.'), (u"''", u"''", u"''")]}, 'tokens': ['Why', 'did', 'you', 'sign', 'up', 'for', 'this', 'when', 'we', 'all', 'knew', 'you', 'would', "n't", 'win', '?', "''"]}, {'string': ' Tim thought about why he signed up.', 'parse': {'tree': '(ROOT (S (NP (NNP Tim)) (VP (VBD thought) (PP (IN about) (SBAR (WHADVP (WRB why)) (S (NP (PRP he)) (VP (VBD signed) (PRT (RP up))))))) (. .)))', 'lemma': [(u'Tim', u'Tim', u'NNP'), (u'thought', u'think', u'VBD'), (u'about', u'about', u'IN'), (u'why', u'why', u'WRB'), (u'he', u'he', u'PRP'), (u'signed', u'sign', u'VBD'), (u'up', u'up', u'RP'), (u'.', u'.', u'.')]}, 'tokens': ['Tim', 'thought', 'about', 'why', 'he', 'signed', 'up', '.']}, {'string': " It was n't about winning the race, or making his father proud.", 'parse': {'tree': "(ROOT (S (NP (PRP It)) (VP (VBD was) (RB n't) (VP (IN about) (S (VP (VP (VBG winning) (NP (DT the) (NN race))) (, ,) (CC or) (VP (VBG making) (S (NP (PRP$ his) (NN father)) (ADJP (JJ proud)))))))) (. .)))", 'lemma': [(u'It', u'it', u'PRP'), (u'was', u'be', u'VBD'), (u"n't", u'not', u'RB'), (u'about', u'about', u'IN'), (u'winning', u'win', u'VBG'), (u'the', u'the', u'DT'), (u'race', u'race', u'NN'), (u',', u',', u','), (u'or', u'or', u'CC'), (u'making', u'make', u'VBG'), (u'his', u'he', u'PRP$'), (u'father', u'father', u'NN'), (u'proud', u'proud', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['It', 'was', "n't", 'about', 'winning', 'the', 'race', ',', 'or', 'making', 'his', 'father', 'proud', '.']}, {'string': ' It was about finishing, and showing himself that the doctor was right: he could be anything he wanted to be, like his favorite character, Simon.', 'parse': {'tree': '(ROOT (S (S (NP (PRP It)) (VP (VBD was) (VP (IN about) (S (VP (VP (VBG finishing)) (, ,) (CC and) (VP (VBG showing) (NP (PRP himself)) (SBAR (IN that) (S (NP (DT the) (NN doctor)) (VP (VBD was) (ADJP (JJ right))))))))))) (: :) (S (NP (PRP he)) (VP (MD could) (VP (VB be) (ADJP (NN anything) (SBAR (S (NP (PRP he)) (VP (VBD wanted) (S (VP (TO to) (VP (VB be)))) (, ,) (PP (IN like) (NP (NP (PRP$ his) (JJ favorite) (NN character)) (, ,) (NP (NNP Simon))))))))))) (. .)))', 'lemma': [(u'It', u'it', u'PRP'), (u'was', u'be', u'VBD'), (u'about', u'about', u'IN'), (u'finishing', u'finish', u'VBG'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'showing', u'show', u'VBG'), (u'himself', u'himself', u'PRP'), (u'that', u'that', u'IN'), (u'the', u'the', u'DT'), (u'doctor', u'doctor', u'NN'), (u'was', u'be', u'VBD'), (u'right', u'right', u'JJ'), (u':', u':', u':'), (u'he', u'he', u'PRP'), (u'could', u'could', u'MD'), (u'be', u'be', u'VB'), (u'anything', u'anything', u'NN'), (u'he', u'he', u'PRP'), (u'wanted', u'want', u'VBD'), (u'to', u'to', u'TO'), (u'be', u'be', u'VB'), (u',', u',', u','), (u'like', u'like', u'IN'), (u'his', u'he', u'PRP$'), (u'favorite', u'favorite', u'JJ'), (u'character', u'character', u'NN'), (u',', u',', u','), (u'Simon', u'Simon', u'NNP'), (u'.', u'.', u'.')]}, 'tokens': ['It', 'was', 'about', 'finishing', ',', 'and', 'showing', 'himself', 'that', 'the', 'doctor', 'was', 'right', ':', 'he', 'could', 'be', 'anything', 'he', 'wanted', 'to', 'be', ',', 'like', 'his', 'favorite', 'character', ',', 'Simon', '.']}], 'questions': [{'question': {'string': ' Why does Tim start out so far behind?', 'parse': {'tree': '(ROOT (SBARQ (WHADVP (WRB Why)) (SQ (VBZ does) (NP (NNP Tim)) (VP (VB start) (PRT (RP out)) (ADVP (RB so) (RB far) (RB behind)))) (. ?)))', 'lemma': [(u'Why', u'why', u'WRB'), (u'does', u'do', u'VBZ'), (u'Tim', u'Tim', u'NNP'), (u'start', u'start', u'VB'), (u'out', u'out', u'RP'), (u'so', u'so', u'RB'), (u'far', u'far', u'RB'), (u'behind', u'behind', u'RB'), (u'?', u'?', u'.')]}, 'tokens': ['Why', 'does', 'Tim', 'start', 'out', 'so', 'far', 'behind', '?']}, 'answers': [{'string': ' He trips over his shoelace.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBZ trips) (PP (IN over) (NP (PRP$ his) (NN shoelace)))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'trips', u'trip', u'VBZ'), (u'over', u'over', u'IN'), (u'his', u'he', u'PRP$'), (u'shoelace', u'shoelace', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'trips', 'over', 'his', 'shoelace', '.']}, {'string': ' He is knocked down.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBZ is) (VP (VBN knocked) (PRT (RP down)))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'is', u'be', u'VBZ'), (u'knocked', u'knock', u'VBN'), (u'down', u'down', u'RP'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'is', 'knocked', 'down', '.']}, {'string': ' He gets sick.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBZ gets) (ADJP (JJ sick))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'gets', u'get', u'VBZ'), (u'sick', u'sick', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'gets', 'sick', '.']}, {'string': " He ca n't run.", 'parse': {'tree': "(ROOT (S (NP (PRP He)) (VP (MD ca) (RB n't) (VP (VB run))) (. .)))", 'lemma': [(u'He', u'he', u'PRP'), (u'ca', u'can', u'MD'), (u"n't", u'not', u'RB'), (u'run', u'run', u'VB'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'ca', "n't", 'run', '.']}], 'mode': 0}, {'question': {'string': ' What time does the race start?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WDT What) (NN time)) (SQ (VBZ does) (NP (DT the) (NN race)) (VP (VB start))) (. ?)))', 'lemma': [(u'What', u'what', u'WDT'), (u'time', u'time', u'NN'), (u'does', u'do', u'VBZ'), (u'the', u'the', u'DT'), (u'race', u'race', u'NN'), (u'start', u'start', u'VB'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'time', 'does', 'the', 'race', 'start', '?']}, 'answers': [{'string': ' 3:15', 'parse': {'tree': '(ROOT (INTJ (UH 3:15)))', 'lemma': [(u'3:15', u'3:15', u'UH')]}, 'tokens': ['3:15']}, {'string': " Tim does n't know", 'parse': {'tree': "(ROOT (S (NP (NNP Tim)) (VP (VBZ does) (RB n't) (VP (VB know)))))", 'lemma': [(u'Tim', u'Tim', u'NNP'), (u'does', u'do', u'VBZ'), (u"n't", u'not', u'RB'), (u'know', u'know', u'VB')]}, 'tokens': ['Tim', 'does', "n't", 'know']}, {'string': ' 4:00', 'parse': {'tree': '(ROOT (FRAG (NP (CD 4:00))))', 'lemma': [(u'4:00', u'4:00', u'CD')]}, 'tokens': ['4:00']}, {'string': ' 3:30', 'parse': {'tree': '(ROOT (FRAG (NP (CD 3:30))))', 'lemma': [(u'3:30', u'3:30', u'CD')]}, 'tokens': ['3:30']}], 'mode': 1}, {'question': {'string': ' Why does Tim run the race?', 'parse': {'tree': '(ROOT (SBARQ (WHADVP (WRB Why)) (SQ (VBZ does) (NP (NNP Tim)) (VP (VB run) (NP (DT the) (NN race)))) (. ?)))', 'lemma': [(u'Why', u'why', u'WRB'), (u'does', u'do', u'VBZ'), (u'Tim', u'Tim', u'NNP'), (u'run', u'run', u'VB'), (u'the', u'the', u'DT'), (u'race', u'race', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['Why', 'does', 'Tim', 'run', 'the', 'race', '?']}, 'answers': [{'string': ' To make Angela like him.', 'parse': {'tree': '(ROOT (S (VP (TO To) (VP (VB make) (NP (NP (NNP Angela)) (PP (IN like) (NP (PRP him)))))) (. .)))', 'lemma': [(u'To', u'to', u'TO'), (u'make', u'make', u'VB'), (u'Angela', u'Angela', u'NNP'), (u'like', u'like', u'IN'), (u'him', u'he', u'PRP'), (u'.', u'.', u'.')]}, 'tokens': ['To', 'make', 'Angela', 'like', 'him', '.']}, {'string': ' To win a prize.', 'parse': {'tree': '(ROOT (S (VP (TO To) (VP (VB win) (NP (DT a) (NN prize)))) (. .)))', 'lemma': [(u'To', u'to', u'TO'), (u'win', u'win', u'VB'), (u'a', u'a', u'DT'), (u'prize', u'prize', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['To', 'win', 'a', 'prize', '.']}, {'string': ' Because his father wants him to.', 'parse': {'tree': '(ROOT (FRAG (SBAR (IN Because) (S (NP (PRP$ his) (NN father)) (VP (VBZ wants) (S (NP (PRP him)) (VP (TO to)))))) (. .)))', 'lemma': [(u'Because', u'because', u'IN'), (u'his', u'he', u'PRP$'), (u'father', u'father', u'NN'), (u'wants', u'want', u'VBZ'), (u'him', u'he', u'PRP'), (u'to', u'to', u'TO'), (u'.', u'.', u'.')]}, 'tokens': ['Because', 'his', 'father', 'wants', 'him', 'to', '.']}, {'string': ' To show that he could be anything he wanted to be.', 'parse': {'tree': '(ROOT (S (S (VP (TO To) (VP (VB show) (SBAR (IN that) (S (NP (PRP he)) (VP (MD could) (VP (VB be) (NP (NN anything))))))))) (NP (PRP he)) (VP (VBD wanted) (S (VP (TO to) (VP (VB be))))) (. .)))', 'lemma': [(u'To', u'to', u'TO'), (u'show', u'show', u'VB'), (u'that', u'that', u'IN'), (u'he', u'he', u'PRP'), (u'could', u'could', u'MD'), (u'be', u'be', u'VB'), (u'anything', u'anything', u'NN'), (u'he', u'he', u'PRP'), (u'wanted', u'want', u'VBD'), (u'to', u'to', u'TO'), (u'be', u'be', u'VB'), (u'.', u'.', u'.')]}, 'tokens': ['To', 'show', 'that', 'he', 'could', 'be', 'anything', 'he', 'wanted', 'to', 'be', '.']}], 'mode': 0}, {'question': {'string': ' What does Tim bring to school?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ does) (NP (NNP Tim)) (VP (VB bring) (PP (TO to) (NP (NN school))))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'does', u'do', u'VBZ'), (u'Tim', u'Tim', u'NNP'), (u'bring', u'bring', u'VB'), (u'to', u'to', u'TO'), (u'school', u'school', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'does', 'Tim', 'bring', 'to', 'school', '?']}, 'answers': [{'string': ' An apple', 'parse': {'tree': '(ROOT (FRAG (NP (DT An) (NN apple))))', 'lemma': [(u'An', u'a', u'DT'), (u'apple', u'apple', u'NN')]}, 'tokens': ['An', 'apple']}, {'string': ' Nothing', 'parse': {'tree': '(ROOT (NP (NN Nothing)))', 'lemma': [(u'Nothing', u'nothing', u'NN')]}, 'tokens': ['Nothing']}, {'string': ' A book', 'parse': {'tree': '(ROOT (FRAG (NP (DT A) (NN book))))', 'lemma': [(u'A', u'a', u'DT'), (u'book', u'book', u'NN')]}, 'tokens': ['A', 'book']}, {'string': ' Shorts', 'parse': {'tree': '(ROOT (NP (NNS Shorts)))', 'lemma': [(u'Shorts', u'shorts', u'NNS')]}, 'tokens': ['Shorts']}], 'mode': 1}]}
{'sentences': [{'string': ' Jack wants to play with his dog, Max.', 'parse': {'tree': '(ROOT (S (NP (NNP Jack)) (VP (VBZ wants) (S (VP (TO to) (VP (VB play) (PP (IN with) (NP (NP (PRP$ his) (NN dog)) (, ,) (NP (NNP Max)))))))) (. .)))', 'lemma': [(u'Jack', u'Jack', u'NNP'), (u'wants', u'want', u'VBZ'), (u'to', u'to', u'TO'), (u'play', u'play', u'VB'), (u'with', u'with', u'IN'), (u'his', u'he', u'PRP$'), (u'dog', u'dog', u'NN'), (u',', u',', u','), (u'Max', u'Max', u'NNP'), (u'.', u'.', u'.')]}, 'tokens': ['Jack', 'wants', 'to', 'play', 'with', 'his', 'dog', ',', 'Max', '.']}, {'string': ' Jack finds the ball.', 'parse': {'tree': '(ROOT (S (NP (NNP Jack)) (VP (VBZ finds) (NP (DT the) (NN ball))) (. .)))', 'lemma': [(u'Jack', u'Jack', u'NNP'), (u'finds', u'find', u'VBZ'), (u'the', u'the', u'DT'), (u'ball', u'ball', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Jack', 'finds', 'the', 'ball', '.']}, {'string': ' He throws the ball across the yard.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBZ throws) (NP (NP (DT the) (NN ball)) (PP (IN across) (NP (DT the) (NN yard))))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'throws', u'throw', u'VBZ'), (u'the', u'the', u'DT'), (u'ball', u'ball', u'NN'), (u'across', u'across', u'IN'), (u'the', u'the', u'DT'), (u'yard', u'yard', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'throws', 'the', 'ball', 'across', 'the', 'yard', '.']}, {'string': ' Max runs after the ball.', 'parse': {'tree': '(ROOT (S (NP (NNP Max)) (VP (VBZ runs) (PP (IN after) (NP (DT the) (NN ball)))) (. .)))', 'lemma': [(u'Max', u'Max', u'NNP'), (u'runs', u'run', u'VBZ'), (u'after', u'after', u'IN'), (u'the', u'the', u'DT'), (u'ball', u'ball', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Max', 'runs', 'after', 'the', 'ball', '.']}, {'string': ' Max brings the ball back to Jack.', 'parse': {'tree': '(ROOT (S (NP (NNP Max)) (VP (VBZ brings) (NP (DT the) (NN ball)) (PRT (RP back)) (PP (TO to) (NP (NNP Jack)))) (. .)))', 'lemma': [(u'Max', u'Max', u'NNP'), (u'brings', u'bring', u'VBZ'), (u'the', u'the', u'DT'), (u'ball', u'ball', u'NN'), (u'back', u'back', u'RP'), (u'to', u'to', u'TO'), (u'Jack', u'Jack', u'NNP'), (u'.', u'.', u'.')]}, 'tokens': ['Max', 'brings', 'the', 'ball', 'back', 'to', 'Jack', '.']}, {'string': ' Jack plays fetch with Max for a long time.', 'parse': {'tree': '(ROOT (S (NP (NNP Jack)) (VP (VBZ plays) (VP (VB fetch) (PP (IN with) (NP (NP (NNP Max)) (PP (IN for) (NP (DT a) (JJ long) (NN time))))))) (. .)))', 'lemma': [(u'Jack', u'Jack', u'NNP'), (u'plays', u'play', u'VBZ'), (u'fetch', u'fetch', u'VB'), (u'with', u'with', u'IN'), (u'Max', u'Max', u'NNP'), (u'for', u'for', u'IN'), (u'a', u'a', u'DT'), (u'long', u'long', u'JJ'), (u'time', u'time', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Jack', 'plays', 'fetch', 'with', 'Max', 'for', 'a', 'long', 'time', '.']}, {'string': ' Jack now wants to Max for a walk.', 'parse': {'tree': '(ROOT (S (NP (NNP Jack)) (ADVP (RB now)) (VP (VBZ wants) (PP (TO to) (NP (NP (NNP Max)) (PP (IN for) (NP (DT a) (NN walk)))))) (. .)))', 'lemma': [(u'Jack', u'Jack', u'NNP'), (u'now', u'now', u'RB'), (u'wants', u'want', u'VBZ'), (u'to', u'to', u'TO'), (u'Max', u'Max', u'NNP'), (u'for', u'for', u'IN'), (u'a', u'a', u'DT'), (u'walk', u'walk', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Jack', 'now', 'wants', 'to', 'Max', 'for', 'a', 'walk', '.']}, {'string': " He looks for Max 's leash.", 'parse': {'tree': "(ROOT (S (NP (PRP He)) (VP (VBZ looks) (PP (IN for) (NP (NP (NNP Max) (POS 's)) (NN leash)))) (. .)))", 'lemma': [(u'He', u'he', u'PRP'), (u'looks', u'look', u'VBZ'), (u'for', u'for', u'IN'), (u'Max', u'Max', u'NNP'), (u"'s", u"'s", u'POS'), (u'leash', u'leash', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'looks', 'for', 'Max', "'s", 'leash', '.']}, {'string': ' He looks on the porch.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBZ looks) (PP (IN on) (NP (DT the) (NN porch)))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'looks', u'look', u'VBZ'), (u'on', u'on', u'IN'), (u'the', u'the', u'DT'), (u'porch', u'porch', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'looks', 'on', 'the', 'porch', '.']}, {'string': ' He looks in the closet.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBZ looks) (PP (IN in) (NP (DT the) (NN closet)))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'looks', u'look', u'VBZ'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'closet', u'closet', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'looks', 'in', 'the', 'closet', '.']}, {'string': ' He looks on the hooks by the front door.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBZ looks) (PP (IN on) (NP (DT the) (NNS hooks))) (PP (IN by) (NP (DT the) (JJ front) (NN door)))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'looks', u'look', u'VBZ'), (u'on', u'on', u'IN'), (u'the', u'the', u'DT'), (u'hooks', u'hook', u'NNS'), (u'by', u'by', u'IN'), (u'the', u'the', u'DT'), (u'front', u'front', u'JJ'), (u'door', u'door', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'looks', 'on', 'the', 'hooks', 'by', 'the', 'front', 'door', '.']}, {'string': ' Jack finally finds the leash in the kitchen drawer.', 'parse': {'tree': '(ROOT (S (NP (NNP Jack)) (ADVP (RB finally)) (VP (VBZ finds) (NP (NP (DT the) (NN leash)) (PP (IN in) (NP (DT the) (NN kitchen) (NN drawer))))) (. .)))', 'lemma': [(u'Jack', u'Jack', u'NNP'), (u'finally', u'finally', u'RB'), (u'finds', u'find', u'VBZ'), (u'the', u'the', u'DT'), (u'leash', u'leash', u'NN'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'kitchen', u'kitchen', u'NN'), (u'drawer', u'drawer', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Jack', 'finally', 'finds', 'the', 'leash', 'in', 'the', 'kitchen', 'drawer', '.']}, {'string': ' Jack puts the leash on Max and leads him out the front gate.', 'parse': {'tree': '(ROOT (S (NP (NNP Jack)) (VP (VP (VBZ puts) (NP (DT the) (NN leash)) (PP (IN on) (NP (NNP Max)))) (CC and) (VP (VBZ leads) (NP (PRP him)) (PP (IN out) (NP (DT the) (JJ front) (NN gate))))) (. .)))', 'lemma': [(u'Jack', u'Jack', u'NNP'), (u'puts', u'put', u'VBZ'), (u'the', u'the', u'DT'), (u'leash', u'leash', u'NN'), (u'on', u'on', u'IN'), (u'Max', u'Max', u'NNP'), (u'and', u'and', u'CC'), (u'leads', u'lead', u'VBZ'), (u'him', u'he', u'PRP'), (u'out', u'out', u'IN'), (u'the', u'the', u'DT'), (u'front', u'front', u'JJ'), (u'gate', u'gate', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Jack', 'puts', 'the', 'leash', 'on', 'Max', 'and', 'leads', 'him', 'out', 'the', 'front', 'gate', '.']}, {'string': " Jack is n't sure where he wants to go.", 'parse': {'tree': "(ROOT (S (NP (NNP Jack)) (VP (VBZ is) (RB n't) (ADJP (JJ sure)) (SBAR (WHADVP (WRB where)) (S (NP (PRP he)) (VP (VBZ wants) (S (VP (TO to) (VP (VB go)))))))) (. .)))", 'lemma': [(u'Jack', u'Jack', u'NNP'), (u'is', u'be', u'VBZ'), (u"n't", u'not', u'RB'), (u'sure', u'sure', u'JJ'), (u'where', u'where', u'WRB'), (u'he', u'he', u'PRP'), (u'wants', u'want', u'VBZ'), (u'to', u'to', u'TO'), (u'go', u'go', u'VB'), (u'.', u'.', u'.')]}, 'tokens': ['Jack', 'is', "n't", 'sure', 'where', 'he', 'wants', 'to', 'go', '.']}, {'string': ' He thinks about taking Max around the block.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBZ thinks) (PP (IN about) (S (VP (VBG taking) (NP (NP (NNP Max)) (PP (IN around) (NP (DT the) (NN block)))))))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'thinks', u'think', u'VBZ'), (u'about', u'about', u'IN'), (u'taking', u'take', u'VBG'), (u'Max', u'Max', u'NNP'), (u'around', u'around', u'IN'), (u'the', u'the', u'DT'), (u'block', u'block', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'thinks', 'about', 'taking', 'Max', 'around', 'the', 'block', '.']}, {'string': ' He thinks about taking Max to the pet store for a treat.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBZ thinks) (PP (IN about) (S (VP (VBG taking) (NP (NNP Max)) (PP (TO to) (NP (NP (DT the) (JJ pet) (NN store)) (PP (IN for) (NP (DT a) (NN treat))))))))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'thinks', u'think', u'VBZ'), (u'about', u'about', u'IN'), (u'taking', u'take', u'VBG'), (u'Max', u'Max', u'NNP'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'pet', u'pet', u'JJ'), (u'store', u'store', u'NN'), (u'for', u'for', u'IN'), (u'a', u'a', u'DT'), (u'treat', u'treat', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'thinks', 'about', 'taking', 'Max', 'to', 'the', 'pet', 'store', 'for', 'a', 'treat', '.']}, {'string': ' He thinks about visiting his friend.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBZ thinks) (PP (IN about) (S (VP (VBG visiting) (NP (PRP$ his) (NN friend)))))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'thinks', u'think', u'VBZ'), (u'about', u'about', u'IN'), (u'visiting', u'visit', u'VBG'), (u'his', u'he', u'PRP$'), (u'friend', u'friend', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'thinks', 'about', 'visiting', 'his', 'friend', '.']}, {'string': ' He finally knows where to go.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (ADVP (RB finally)) (VP (VBZ knows) (SBAR (WHADVP (WRB where)) (S (VP (TO to) (VP (VB go)))))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'finally', u'finally', u'RB'), (u'knows', u'know', u'VBZ'), (u'where', u'where', u'WRB'), (u'to', u'to', u'TO'), (u'go', u'go', u'VB'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'finally', 'knows', 'where', 'to', 'go', '.']}, {'string': ' He takes Max to the park.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBZ takes) (NP (NP (NNP Max)) (PP (TO to) (NP (DT the) (NN park))))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'takes', u'take', u'VBZ'), (u'Max', u'Max', u'NNP'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'park', u'park', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'takes', 'Max', 'to', 'the', 'park', '.']}, {'string': ' He sees his friends, Jim.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBZ sees) (NP (NP (PRP$ his) (NNS friends)) (, ,) (NP (NNP Jim)))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'sees', u'see', u'VBZ'), (u'his', u'he', u'PRP$'), (u'friends', u'friend', u'NNS'), (u',', u',', u','), (u'Jim', u'Jim', u'NNP'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'sees', 'his', 'friends', ',', 'Jim', '.']}, {'string': ' Sammy, and Paul, at the park.', 'parse': {'tree': '(ROOT (NP (NP (NNP Sammy)) (PRN (, ,) (CC and) (NP (NNP Paul)) (, ,)) (PP (IN at) (NP (DT the) (NN park))) (. .)))', 'lemma': [(u'Sammy', u'Sammy', u'NNP'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'Paul', u'Paul', u'NNP'), (u',', u',', u','), (u'at', u'at', u'IN'), (u'the', u'the', u'DT'), (u'park', u'park', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Sammy', ',', 'and', 'Paul', ',', 'at', 'the', 'park', '.']}, {'string': ' They are all friends but Jack likes Sammy the best.', 'parse': {'tree': '(ROOT (S (S (NP (PRP They)) (VP (VBP are) (NP (DT all) (NNS friends)))) (CC but) (S (NP (NNP Jack)) (VP (VBZ likes) (ADVP (RB Sammy)) (NP (DT the) (JJS best)))) (. .)))', 'lemma': [(u'They', u'they', u'PRP'), (u'are', u'be', u'VBP'), (u'all', u'all', u'DT'), (u'friends', u'friend', u'NNS'), (u'but', u'but', u'CC'), (u'Jack', u'Jack', u'NNP'), (u'likes', u'like', u'VBZ'), (u'Sammy', u'sammy', u'RB'), (u'the', u'the', u'DT'), (u'best', u'best', u'JJS'), (u'.', u'.', u'.')]}, 'tokens': ['They', 'are', 'all', 'friends', 'but', 'Jack', 'likes', 'Sammy', 'the', 'best', '.']}, {'string': ' Jack has a great time playing with Max at the park.', 'parse': {'tree': '(ROOT (S (NP (NNP Jack)) (VP (VBZ has) (NP (NP (DT a) (JJ great) (NN time)) (VP (VBG playing) (PP (IN with) (NP (NNP Max))) (PP (IN at) (NP (DT the) (NN park)))))) (. .)))', 'lemma': [(u'Jack', u'Jack', u'NNP'), (u'has', u'have', u'VBZ'), (u'a', u'a', u'DT'), (u'great', u'great', u'JJ'), (u'time', u'time', u'NN'), (u'playing', u'play', u'VBG'), (u'with', u'with', u'IN'), (u'Max', u'Max', u'NNP'), (u'at', u'at', u'IN'), (u'the', u'the', u'DT'), (u'park', u'park', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Jack', 'has', 'a', 'great', 'time', 'playing', 'with', 'Max', 'at', 'the', 'park', '.']}, {'string': ' They play with a Frisbee.', 'parse': {'tree': '(ROOT (S (NP (PRP They)) (VP (VBP play) (PP (IN with) (NP (DT a) (NNP Frisbee)))) (. .)))', 'lemma': [(u'They', u'they', u'PRP'), (u'play', u'play', u'VBP'), (u'with', u'with', u'IN'), (u'a', u'a', u'DT'), (u'Frisbee', u'Frisbee', u'NNP'), (u'.', u'.', u'.')]}, 'tokens': ['They', 'play', 'with', 'a', 'Frisbee', '.']}, {'string': ' They chase in other and roll on the ground.', 'parse': {'tree': '(ROOT (S (NP (PRP They)) (VP (VP (VB chase) (PP (IN in) (NP (JJ other)))) (CC and) (VP (VB roll) (PP (IN on) (NP (DT the) (NN ground))))) (. .)))', 'lemma': [(u'They', u'they', u'PRP'), (u'chase', u'chase', u'VB'), (u'in', u'in', u'IN'), (u'other', u'other', u'JJ'), (u'and', u'and', u'CC'), (u'roll', u'roll', u'VB'), (u'on', u'on', u'IN'), (u'the', u'the', u'DT'), (u'ground', u'ground', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['They', 'chase', 'in', 'other', 'and', 'roll', 'on', 'the', 'ground', '.']}, {'string': ' Max is very dirty when they got home.', 'parse': {'tree': '(ROOT (S (NP (NNP Max)) (VP (VBZ is) (ADJP (RB very) (JJ dirty)) (SBAR (WHADVP (WRB when)) (S (NP (PRP they)) (VP (VBD got) (NP (NN home)))))) (. .)))', 'lemma': [(u'Max', u'Max', u'NNP'), (u'is', u'be', u'VBZ'), (u'very', u'very', u'RB'), (u'dirty', u'dirty', u'JJ'), (u'when', u'when', u'WRB'), (u'they', u'they', u'PRP'), (u'got', u'get', u'VBD'), (u'home', u'home', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Max', 'is', 'very', 'dirty', 'when', 'they', 'got', 'home', '.']}, {'string': ' Jack has to give Max a bath in the tub.', 'parse': {'tree': '(ROOT (S (NP (NNP Jack)) (VP (VBZ has) (S (VP (TO to) (VP (VB give) (NP (NNP Max)) (NP (NP (DT a) (NN bath)) (PP (IN in) (NP (DT the) (NN tub)))))))) (. .)))', 'lemma': [(u'Jack', u'Jack', u'NNP'), (u'has', u'have', u'VBZ'), (u'to', u'to', u'TO'), (u'give', u'give', u'VB'), (u'Max', u'Max', u'NNP'), (u'a', u'a', u'DT'), (u'bath', u'bath', u'NN'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'tub', u'tub', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Jack', 'has', 'to', 'give', 'Max', 'a', 'bath', 'in', 'the', 'tub', '.']}], 'questions': [{'question': {'string': " Who is Jack 's best friend?", 'parse': {'tree': "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VBZ is) (NP (NP (NNP Jack) (POS 's)) (JJS best) (NN friend))) (. ?)))", 'lemma': [(u'Who', u'who', u'WP'), (u'is', u'be', u'VBZ'), (u'Jack', u'Jack', u'NNP'), (u"'s", u"'s", u'POS'), (u'best', u'best', u'JJS'), (u'friend', u'friend', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['Who', 'is', 'Jack', "'s", 'best', 'friend', '?']}, 'answers': [{'string': ' Max', 'parse': {'tree': '(ROOT (NP (NNP Max)))', 'lemma': [(u'Max', u'Max', u'NNP')]}, 'tokens': ['Max']}, {'string': ' Paul', 'parse': {'tree': '(ROOT (NP (NNP Paul)))', 'lemma': [(u'Paul', u'Paul', u'NNP')]}, 'tokens': ['Paul']}, {'string': ' Sammy', 'parse': {'tree': '(ROOT (ADVP (RB Sammy)))', 'lemma': [(u'Sammy', u'sammy', u'RB')]}, 'tokens': ['Sammy']}, {'string': ' Jim', 'parse': {'tree': '(ROOT (NP (NNP Jim)))', 'lemma': [(u'Jim', u'Jim', u'NNP')]}, 'tokens': ['Jim']}], 'mode': 0}, {'question': {'string': ' Where does Jack take Max?', 'parse': {'tree': '(ROOT (SBARQ (WHADVP (WRB Where)) (SQ (VBZ does) (NP (NNP Jack)) (VP (VB take) (NP (NNP Max)))) (. ?)))', 'lemma': [(u'Where', u'where', u'WRB'), (u'does', u'do', u'VBZ'), (u'Jack', u'Jack', u'NNP'), (u'take', u'take', u'VB'), (u'Max', u'Max', u'NNP'), (u'?', u'?', u'.')]}, 'tokens': ['Where', 'does', 'Jack', 'take', 'Max', '?']}, 'answers': [{'string': ' To the park', 'parse': {'tree': '(ROOT (PP (TO To) (NP (DT the) (NN park))))', 'lemma': [(u'To', u'to', u'TO'), (u'the', u'the', u'DT'), (u'park', u'park', u'NN')]}, 'tokens': ['To', 'the', 'park']}, {'string': ' Pet store', 'parse': {'tree': '(ROOT (NP (JJ Pet) (NN store)))', 'lemma': [(u'Pet', u'pet', u'JJ'), (u'store', u'store', u'NN')]}, 'tokens': ['Pet', 'store']}, {'string': ' To visit his friend', 'parse': {'tree': '(ROOT (FRAG (S (VP (TO To) (VP (VB visit) (NP (PRP$ his) (NN friend)))))))', 'lemma': [(u'To', u'to', u'TO'), (u'visit', u'visit', u'VB'), (u'his', u'he', u'PRP$'), (u'friend', u'friend', u'NN')]}, 'tokens': ['To', 'visit', 'his', 'friend']}, {'string': ' Around the block', 'parse': {'tree': '(ROOT (PP (IN Around) (NP (DT the) (NN block))))', 'lemma': [(u'Around', u'around', u'IN'), (u'the', u'the', u'DT'), (u'block', u'block', u'NN')]}, 'tokens': ['Around', 'the', 'block']}], 'mode': 1}, {'question': {'string': ' Where does Jack find the leash?', 'parse': {'tree': '(ROOT (SBARQ (WHADVP (WRB Where)) (SQ (VBZ does) (NP (NNP Jack)) (VP (VB find) (NP (DT the) (NN leash)))) (. ?)))', 'lemma': [(u'Where', u'where', u'WRB'), (u'does', u'do', u'VBZ'), (u'Jack', u'Jack', u'NNP'), (u'find', u'find', u'VB'), (u'the', u'the', u'DT'), (u'leash', u'leash', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['Where', 'does', 'Jack', 'find', 'the', 'leash', '?']}, 'answers': [{'string': ' On the porch', 'parse': {'tree': '(ROOT (PP (IN On) (NP (DT the) (NN porch))))', 'lemma': [(u'On', u'on', u'IN'), (u'the', u'the', u'DT'), (u'porch', u'porch', u'NN')]}, 'tokens': ['On', 'the', 'porch']}, {'string': ' In the kitchen drawer', 'parse': {'tree': '(ROOT (PP (IN In) (NP (DT the) (NN kitchen) (NN drawer))))', 'lemma': [(u'In', u'in', u'IN'), (u'the', u'the', u'DT'), (u'kitchen', u'kitchen', u'NN'), (u'drawer', u'drawer', u'NN')]}, 'tokens': ['In', 'the', 'kitchen', 'drawer']}, {'string': ' In the closet', 'parse': {'tree': '(ROOT (PP (IN In) (NP (DT the) (NN closet))))', 'lemma': [(u'In', u'in', u'IN'), (u'the', u'the', u'DT'), (u'closet', u'closet', u'NN')]}, 'tokens': ['In', 'the', 'closet']}, {'string': ' On the hooks by the front door', 'parse': {'tree': '(ROOT (PP (IN On) (NP (NP (DT the) (NNS hooks)) (PP (IN by) (NP (DT the) (JJ front) (NN door))))))', 'lemma': [(u'On', u'on', u'IN'), (u'the', u'the', u'DT'), (u'hooks', u'hook', u'NNS'), (u'by', u'by', u'IN'), (u'the', u'the', u'DT'), (u'front', u'front', u'JJ'), (u'door', u'door', u'NN')]}, 'tokens': ['On', 'the', 'hooks', 'by', 'the', 'front', 'door']}], 'mode': 1}, {'question': {'string': ' What game did Jack play with Max in the yard?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WDT What) (NN game)) (SQ (VBD did) (NP (NNP Jack)) (VP (VB play) (PP (IN with) (NP (NNP Max))) (PP (IN in) (NP (DT the) (NN yard))))) (. ?)))', 'lemma': [(u'What', u'what', u'WDT'), (u'game', u'game', u'NN'), (u'did', u'do', u'VBD'), (u'Jack', u'Jack', u'NNP'), (u'play', u'play', u'VB'), (u'with', u'with', u'IN'), (u'Max', u'Max', u'NNP'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'yard', u'yard', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'game', 'did', 'Jack', 'play', 'with', 'Max', 'in', 'the', 'yard', '?']}, 'answers': [{'string': ' Leash', 'parse': {'tree': '(ROOT (NP (NNP Leash)))', 'lemma': [(u'Leash', u'Leash', u'NNP')]}, 'tokens': ['Leash']}, {'string': ' Fetch', 'parse': {'tree': '(ROOT (NP (NNP Fetch)))', 'lemma': [(u'Fetch', u'Fetch', u'NNP')]}, 'tokens': ['Fetch']}, {'string': ' Ball', 'parse': {'tree': '(ROOT (NP (NNP Ball)))', 'lemma': [(u'Ball', u'Ball', u'NNP')]}, 'tokens': ['Ball']}, {'string': ' Frisbee', 'parse': {'tree': '(ROOT (NP (NNP Frisbee)))', 'lemma': [(u'Frisbee', u'Frisbee', u'NNP')]}, 'tokens': ['Frisbee']}], 'mode': 0}]}
{'sentences': [{'string': ' Josie started planning her new garden in the winter.', 'parse': {'tree': '(ROOT (S (NP (NNP Josie)) (VP (VBD started) (S (VP (VBG planning) (NP (PRP$ her) (JJ new) (NN garden)) (PP (IN in) (NP (DT the) (NN winter)))))) (. .)))', 'lemma': [(u'Josie', u'Josie', u'NNP'), (u'started', u'start', u'VBD'), (u'planning', u'plan', u'VBG'), (u'her', u'she', u'PRP$'), (u'new', u'new', u'JJ'), (u'garden', u'garden', u'NN'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'winter', u'winter', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Josie', 'started', 'planning', 'her', 'new', 'garden', 'in', 'the', 'winter', '.']}, {'string': ' She chose flowers and vegetables that could grow in her area.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBD chose) (NP (NP (NNS flowers) (CC and) (NNS vegetables)) (SBAR (WHNP (WDT that)) (S (VP (MD could) (VP (VB grow) (PP (IN in) (NP (PRP$ her) (NN area))))))))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'chose', u'choose', u'VBD'), (u'flowers', u'flower', u'NNS'), (u'and', u'and', u'CC'), (u'vegetables', u'vegetable', u'NNS'), (u'that', u'that', u'WDT'), (u'could', u'could', u'MD'), (u'grow', u'grow', u'VB'), (u'in', u'in', u'IN'), (u'her', u'she', u'PRP$'), (u'area', u'area', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'chose', 'flowers', 'and', 'vegetables', 'that', 'could', 'grow', 'in', 'her', 'area', '.']}, {'string': ' She looked through the seed magazines.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBD looked) (PP (IN through) (NP (DT the) (NN seed) (NNS magazines)))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'looked', u'look', u'VBD'), (u'through', u'through', u'IN'), (u'the', u'the', u'DT'), (u'seed', u'seed', u'NN'), (u'magazines', u'magazine', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'looked', 'through', 'the', 'seed', 'magazines', '.']}, {'string': ' She ordered the tastiest kind of each vegetable and the prettiest kind of each flower.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBD ordered) (NP (NP (NP (DT the) (JJ tastiest) (NN kind)) (PP (IN of) (NP (DT each) (NN vegetable)))) (CC and) (NP (NP (DT the) (JJ prettiest) (NN kind)) (PP (IN of) (NP (DT each) (NN flower)))))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'ordered', u'order', u'VBD'), (u'the', u'the', u'DT'), (u'tastiest', u'tastiest', u'JJ'), (u'kind', u'kind', u'NN'), (u'of', u'of', u'IN'), (u'each', u'each', u'DT'), (u'vegetable', u'vegetable', u'NN'), (u'and', u'and', u'CC'), (u'the', u'the', u'DT'), (u'prettiest', u'prettiest', u'JJ'), (u'kind', u'kind', u'NN'), (u'of', u'of', u'IN'), (u'each', u'each', u'DT'), (u'flower', u'flower', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'ordered', 'the', 'tastiest', 'kind', 'of', 'each', 'vegetable', 'and', 'the', 'prettiest', 'kind', 'of', 'each', 'flower', '.']}, {'string': ' She talked to a friend about her plans.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBD talked) (PP (TO to) (NP (DT a) (NN friend))) (PP (IN about) (NP (PRP$ her) (NNS plans)))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'talked', u'talk', u'VBD'), (u'to', u'to', u'TO'), (u'a', u'a', u'DT'), (u'friend', u'friend', u'NN'), (u'about', u'about', u'IN'), (u'her', u'she', u'PRP$'), (u'plans', u'plan', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'talked', 'to', 'a', 'friend', 'about', 'her', 'plans', '.']}, {'string': ' It seemed like the snow would never melt.', 'parse': {'tree': '(ROOT (S (NP (PRP It)) (VP (VBD seemed) (SBAR (IN like) (S (NP (DT the) (NN snow)) (VP (MD would) (ADVP (RB never)) (VP (VB melt)))))) (. .)))', 'lemma': [(u'It', u'it', u'PRP'), (u'seemed', u'seem', u'VBD'), (u'like', u'like', u'IN'), (u'the', u'the', u'DT'), (u'snow', u'snow', u'NN'), (u'would', u'would', u'MD'), (u'never', u'never', u'RB'), (u'melt', u'melt', u'VB'), (u'.', u'.', u'.')]}, 'tokens': ['It', 'seemed', 'like', 'the', 'snow', 'would', 'never', 'melt', '.']}, {'string': " But Josie did n't have to wait for spring to get started.", 'parse': {'tree': "(ROOT (S (CC But) (NP (NNP Josie)) (VP (VBD did) (RB n't) (VP (VB have) (S (VP (TO to) (VP (VB wait) (PP (IN for) (NP (NN spring)))))) (S (VP (TO to) (VP (VB get) (VP (VBN started))))))) (. .)))", 'lemma': [(u'But', u'but', u'CC'), (u'Josie', u'Josie', u'NNP'), (u'did', u'do', u'VBD'), (u"n't", u'not', u'RB'), (u'have', u'have', u'VB'), (u'to', u'to', u'TO'), (u'wait', u'wait', u'VB'), (u'for', u'for', u'IN'), (u'spring', u'spring', u'NN'), (u'to', u'to', u'TO'), (u'get', u'get', u'VB'), (u'started', u'start', u'VBN'), (u'.', u'.', u'.')]}, 'tokens': ['But', 'Josie', 'did', "n't", 'have', 'to', 'wait', 'for', 'spring', 'to', 'get', 'started', '.']}, {'string': ' Six weeks before the last frost, Josie planted seeds indoors.', 'parse': {'tree': '(ROOT (S (PP (NP (CD Six) (NNS weeks)) (IN before) (NP (DT the) (JJ last) (NN frost))) (, ,) (NP (NNP Josie)) (VP (VBD planted) (NP (NNS seeds)) (ADVP (RB indoors))) (. .)))', 'lemma': [(u'Six', u'six', u'CD'), (u'weeks', u'week', u'NNS'), (u'before', u'before', u'IN'), (u'the', u'the', u'DT'), (u'last', u'last', u'JJ'), (u'frost', u'frost', u'NN'), (u',', u',', u','), (u'Josie', u'Josie', u'NNP'), (u'planted', u'plant', u'VBD'), (u'seeds', u'seed', u'NNS'), (u'indoors', u'indoors', u'RB'), (u'.', u'.', u'.')]}, 'tokens': ['Six', 'weeks', 'before', 'the', 'last', 'frost', ',', 'Josie', 'planted', 'seeds', 'indoors', '.']}, {'string': ' The tiny seedlings pushed up through the soil and began to grow.', 'parse': {'tree': '(ROOT (S (NP (DT The) (JJ tiny) (NNS seedlings)) (VP (VP (VBD pushed) (PRT (RP up)) (PP (IN through) (NP (DT the) (NN soil)))) (CC and) (VP (VBD began) (S (VP (TO to) (VP (VB grow)))))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'tiny', u'tiny', u'JJ'), (u'seedlings', u'seedling', u'NNS'), (u'pushed', u'push', u'VBD'), (u'up', u'up', u'RP'), (u'through', u'through', u'IN'), (u'the', u'the', u'DT'), (u'soil', u'soil', u'NN'), (u'and', u'and', u'CC'), (u'began', u'begin', u'VBD'), (u'to', u'to', u'TO'), (u'grow', u'grow', u'VB'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'tiny', 'seedlings', 'pushed', 'up', 'through', 'the', 'soil', 'and', 'began', 'to', 'grow', '.']}, {'string': ' Finally spring arrived.', 'parse': {'tree': '(ROOT (S (ADVP (RB Finally)) (NP (NN spring)) (VP (VBD arrived)) (. .)))', 'lemma': [(u'Finally', u'finally', u'RB'), (u'spring', u'spring', u'NN'), (u'arrived', u'arrive', u'VBD'), (u'.', u'.', u'.')]}, 'tokens': ['Finally', 'spring', 'arrived', '.']}, {'string': ' Each day, Josie moved the seedlings outside for a few hours so they could get used to the cooler temperatures.', 'parse': {'tree': '(ROOT (S (NP (DT Each) (NN day)) (, ,) (NP (NNP Josie)) (VP (VBD moved) (NP (DT the) (NNS seedlings)) (PP (IN outside) (PP (IN for) (NP (DT a) (JJ few) (NNS hours)))) (SBAR (IN so) (S (NP (PRP they)) (VP (MD could) (VP (VB get) (VP (VBN used) (PP (TO to) (NP (DT the) (JJR cooler) (NNS temperatures))))))))) (. .)))', 'lemma': [(u'Each', u'each', u'DT'), (u'day', u'day', u'NN'), (u',', u',', u','), (u'Josie', u'Josie', u'NNP'), (u'moved', u'move', u'VBD'), (u'the', u'the', u'DT'), (u'seedlings', u'seedling', u'NNS'), (u'outside', u'outside', u'IN'), (u'for', u'for', u'IN'), (u'a', u'a', u'DT'), (u'few', u'few', u'JJ'), (u'hours', u'hour', u'NNS'), (u'so', u'so', u'IN'), (u'they', u'they', u'PRP'), (u'could', u'could', u'MD'), (u'get', u'get', u'VB'), (u'used', u'use', u'VBN'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'cooler', u'cooler', u'JJR'), (u'temperatures', u'temperature', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['Each', 'day', ',', 'Josie', 'moved', 'the', 'seedlings', 'outside', 'for', 'a', 'few', 'hours', 'so', 'they', 'could', 'get', 'used', 'to', 'the', 'cooler', 'temperatures', '.']}, {'string': ' Josie worked in her garden, digging the soil.', 'parse': {'tree': '(ROOT (S (NP (NNP Josie)) (VP (VBD worked) (PP (IN in) (NP (PRP$ her) (NN garden))) (, ,) (ADVP (RB digging) (NP (DT the) (NN soil)))) (. .)))', 'lemma': [(u'Josie', u'Josie', u'NNP'), (u'worked', u'work', u'VBD'), (u'in', u'in', u'IN'), (u'her', u'she', u'PRP$'), (u'garden', u'garden', u'NN'), (u',', u',', u','), (u'digging', u'digging', u'RB'), (u'the', u'the', u'DT'), (u'soil', u'soil', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Josie', 'worked', 'in', 'her', 'garden', ',', 'digging', 'the', 'soil', '.']}, {'string': ' She added a special growing mix from the garden store to make the soil better.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBD added) (NP (NP (DT a) (JJ special) (VBG growing) (NN mix)) (PP (IN from) (NP (DT the) (NN garden) (NN store))) (S (VP (TO to) (VP (VB make) (NP (DT the) (NN soil)) (ADVP (RBR better))))))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'added', u'add', u'VBD'), (u'a', u'a', u'DT'), (u'special', u'special', u'JJ'), (u'growing', u'grow', u'VBG'), (u'mix', u'mix', u'NN'), (u'from', u'from', u'IN'), (u'the', u'the', u'DT'), (u'garden', u'garden', u'NN'), (u'store', u'store', u'NN'), (u'to', u'to', u'TO'), (u'make', u'make', u'VB'), (u'the', u'the', u'DT'), (u'soil', u'soil', u'NN'), (u'better', u'better', u'RBR'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'added', 'a', 'special', 'growing', 'mix', 'from', 'the', 'garden', 'store', 'to', 'make', 'the', 'soil', 'better', '.']}, {'string': ' When everything was ready, she removed the seedlings from their trays and planted them in her garden.', 'parse': {'tree': '(ROOT (S (SBAR (WHADVP (WRB When)) (S (NP (NN everything)) (VP (VBD was) (ADJP (JJ ready))))) (, ,) (NP (PRP she)) (VP (VP (VBD removed) (NP (DT the) (NNS seedlings)) (PP (IN from) (NP (PRP$ their) (NNS trays)))) (CC and) (VP (VBD planted) (NP (PRP them)) (PP (IN in) (NP (PRP$ her) (NN garden))))) (. .)))', 'lemma': [(u'When', u'when', u'WRB'), (u'everything', u'everything', u'NN'), (u'was', u'be', u'VBD'), (u'ready', u'ready', u'JJ'), (u',', u',', u','), (u'she', u'she', u'PRP'), (u'removed', u'remove', u'VBD'), (u'the', u'the', u'DT'), (u'seedlings', u'seedling', u'NNS'), (u'from', u'from', u'IN'), (u'their', u'they', u'PRP$'), (u'trays', u'tray', u'NNS'), (u'and', u'and', u'CC'), (u'planted', u'plant', u'VBD'), (u'them', u'they', u'PRP'), (u'in', u'in', u'IN'), (u'her', u'she', u'PRP$'), (u'garden', u'garden', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['When', 'everything', 'was', 'ready', ',', 'she', 'removed', 'the', 'seedlings', 'from', 'their', 'trays', 'and', 'planted', 'them', 'in', 'her', 'garden', '.']}, {'string': ' The warm sun and rich soil helped her vegetables and flowers grow.', 'parse': {'tree': '(ROOT (S (NP (NP (DT The) (JJ warm) (NN sun)) (CC and) (NP (JJ rich) (NN soil))) (VP (VBD helped) (SBAR (S (NP (PRP$ her) (NNS vegetables) (CC and) (NNS flowers)) (VP (VBP grow))))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'warm', u'warm', u'JJ'), (u'sun', u'sun', u'NN'), (u'and', u'and', u'CC'), (u'rich', u'rich', u'JJ'), (u'soil', u'soil', u'NN'), (u'helped', u'help', u'VBD'), (u'her', u'she', u'PRP$'), (u'vegetables', u'vegetable', u'NNS'), (u'and', u'and', u'CC'), (u'flowers', u'flower', u'NNS'), (u'grow', u'grow', u'VBP'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'warm', 'sun', 'and', 'rich', 'soil', 'helped', 'her', 'vegetables', 'and', 'flowers', 'grow', '.']}], 'questions': [{'question': {'string': ' How did Josie get the soil in her garden ready for planting?', 'parse': {'tree': '(ROOT (SBARQ (WHADVP (WRB How)) (SQ (VBD did) (NP (NNP Josie)) (VP (VB get) (S (NP (NP (DT the) (NN soil)) (PP (IN in) (NP (PRP$ her) (NN garden)))) (ADJP (JJ ready) (PP (IN for) (NP (NN planting))))))) (. ?)))', 'lemma': [(u'How', u'how', u'WRB'), (u'did', u'do', u'VBD'), (u'Josie', u'Josie', u'NNP'), (u'get', u'get', u'VB'), (u'the', u'the', u'DT'), (u'soil', u'soil', u'NN'), (u'in', u'in', u'IN'), (u'her', u'she', u'PRP$'), (u'garden', u'garden', u'NN'), (u'ready', u'ready', u'JJ'), (u'for', u'for', u'IN'), (u'planting', u'planting', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['How', 'did', 'Josie', 'get', 'the', 'soil', 'in', 'her', 'garden', 'ready', 'for', 'planting', '?']}, 'answers': [{'string': ' She waited for the last frost.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBD waited) (PP (IN for) (NP (DT the) (JJ last) (NN frost)))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'waited', u'wait', u'VBD'), (u'for', u'for', u'IN'), (u'the', u'the', u'DT'), (u'last', u'last', u'JJ'), (u'frost', u'frost', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'waited', 'for', 'the', 'last', 'frost', '.']}, {'string': ' She planted her seedlings indoors.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBD planted) (NP (PRP$ her) (NNS seedlings)) (ADVP (RB indoors))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'planted', u'plant', u'VBD'), (u'her', u'she', u'PRP$'), (u'seedlings', u'seedling', u'NNS'), (u'indoors', u'indoors', u'RB'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'planted', 'her', 'seedlings', 'indoors', '.']}, {'string': ' She started planning her garden in the winter.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBD started) (S (VP (VBG planning) (NP (PRP$ her) (NN garden)) (PP (IN in) (NP (DT the) (NN winter)))))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'started', u'start', u'VBD'), (u'planning', u'plan', u'VBG'), (u'her', u'she', u'PRP$'), (u'garden', u'garden', u'NN'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'winter', u'winter', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'started', 'planning', 'her', 'garden', 'in', 'the', 'winter', '.']}, {'string': ' She dug her garden and added a special growing mix to the soil.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VP (VBD dug) (NP (PRP$ her) (NN garden))) (CC and) (VP (VBD added) (NP (DT a) (JJ special) (VBG growing) (NN mix)) (PP (TO to) (NP (DT the) (NN soil))))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'dug', u'dig', u'VBD'), (u'her', u'she', u'PRP$'), (u'garden', u'garden', u'NN'), (u'and', u'and', u'CC'), (u'added', u'add', u'VBD'), (u'a', u'a', u'DT'), (u'special', u'special', u'JJ'), (u'growing', u'grow', u'VBG'), (u'mix', u'mix', u'NN'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'soil', u'soil', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'dug', 'her', 'garden', 'and', 'added', 'a', 'special', 'growing', 'mix', 'to', 'the', 'soil', '.']}], 'mode': 0}, {'question': {'string': ' Where did Josie order her seeds?', 'parse': {'tree': '(ROOT (SBARQ (WHADVP (WRB Where)) (SQ (VBD did) (NP (NNP Josie)) (VP (VB order) (NP (PRP$ her) (NNS seeds)))) (. ?)))', 'lemma': [(u'Where', u'where', u'WRB'), (u'did', u'do', u'VBD'), (u'Josie', u'Josie', u'NNP'), (u'order', u'order', u'VB'), (u'her', u'she', u'PRP$'), (u'seeds', u'seed', u'NNS'), (u'?', u'?', u'.')]}, 'tokens': ['Where', 'did', 'Josie', 'order', 'her', 'seeds', '?']}, 'answers': [{'string': ' Seed magazines', 'parse': {'tree': '(ROOT (NP (NN Seed) (NNS magazines)))', 'lemma': [(u'Seed', u'seed', u'NN'), (u'magazines', u'magazine', u'NNS')]}, 'tokens': ['Seed', 'magazines']}, {'string': ' She had them left over from last year', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBD had) (S (NP (PRP them)) (VP (VBN left) (PRT (RP over)) (PP (IN from) (NP (JJ last) (NN year))))))))', 'lemma': [(u'She', u'she', u'PRP'), (u'had', u'have', u'VBD'), (u'them', u'they', u'PRP'), (u'left', u'leave', u'VBN'), (u'over', u'over', u'RP'), (u'from', u'from', u'IN'), (u'last', u'last', u'JJ'), (u'year', u'year', u'NN')]}, 'tokens': ['She', 'had', 'them', 'left', 'over', 'from', 'last', 'year']}, {'string': ' A friend', 'parse': {'tree': '(ROOT (FRAG (NP (DT A) (NN friend))))', 'lemma': [(u'A', u'a', u'DT'), (u'friend', u'friend', u'NN')]}, 'tokens': ['A', 'friend']}, {'string': ' The garden store', 'parse': {'tree': '(ROOT (NP (DT The) (NN garden) (NN store)))', 'lemma': [(u'The', u'the', u'DT'), (u'garden', u'garden', u'NN'), (u'store', u'store', u'NN')]}, 'tokens': ['The', 'garden', 'store']}], 'mode': 1}, {'question': {'string': ' What did Josie do to get her seedlings ready to plant in the garden?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD did) (NP (NNP Josie)) (VP (VB do) (S (VP (TO to) (VP (VB get) (S (NP (PRP$ her) (NNS seedlings)) (ADJP (JJ ready) (S (VP (TO to) (VP (VB plant) (PP (IN in) (NP (DT the) (NN garden))))))))))))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'did', u'do', u'VBD'), (u'Josie', u'Josie', u'NNP'), (u'do', u'do', u'VB'), (u'to', u'to', u'TO'), (u'get', u'get', u'VB'), (u'her', u'she', u'PRP$'), (u'seedlings', u'seedling', u'NNS'), (u'ready', u'ready', u'JJ'), (u'to', u'to', u'TO'), (u'plant', u'plant', u'VB'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'garden', u'garden', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'did', 'Josie', 'do', 'to', 'get', 'her', 'seedlings', 'ready', 'to', 'plant', 'in', 'the', 'garden', '?']}, 'answers': [{'string': ' The warm sun and rich soil helped her vegetables and flowers grow.', 'parse': {'tree': '(ROOT (S (NP (NP (DT The) (JJ warm) (NN sun)) (CC and) (NP (JJ rich) (NN soil))) (VP (VBD helped) (SBAR (S (NP (PRP$ her) (NNS vegetables) (CC and) (NNS flowers)) (VP (VBP grow))))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'warm', u'warm', u'JJ'), (u'sun', u'sun', u'NN'), (u'and', u'and', u'CC'), (u'rich', u'rich', u'JJ'), (u'soil', u'soil', u'NN'), (u'helped', u'help', u'VBD'), (u'her', u'she', u'PRP$'), (u'vegetables', u'vegetable', u'NNS'), (u'and', u'and', u'CC'), (u'flowers', u'flower', u'NNS'), (u'grow', u'grow', u'VBP'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'warm', 'sun', 'and', 'rich', 'soil', 'helped', 'her', 'vegetables', 'and', 'flowers', 'grow', '.']}, {'string': ' Melted the snow and planted them outside before the last frost.', 'parse': {'tree': '(ROOT (S (VP (VP (VB Melted) (NP (DT the) (NN snow))) (CC and) (VP (VBD planted) (NP (PRP them)) (PP (IN outside) (PP (IN before) (NP (DT the) (JJ last) (NN frost)))))) (. .)))', 'lemma': [(u'Melted', u'melt', u'VB'), (u'the', u'the', u'DT'), (u'snow', u'snow', u'NN'), (u'and', u'and', u'CC'), (u'planted', u'plant', u'VBD'), (u'them', u'they', u'PRP'), (u'outside', u'outside', u'IN'), (u'before', u'before', u'IN'), (u'the', u'the', u'DT'), (u'last', u'last', u'JJ'), (u'frost', u'frost', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Melted', 'the', 'snow', 'and', 'planted', 'them', 'outside', 'before', 'the', 'last', 'frost', '.']}, {'string': ' Planted them outside, straight into the soil.', 'parse': {'tree': '(ROOT (S (VP (VB Planted) (NP (PRP them)) (ADVP (RB outside)) (, ,) (ADVP (RB straight)) (PP (IN into) (NP (DT the) (NN soil)))) (. .)))', 'lemma': [(u'Planted', u'plant', u'VB'), (u'them', u'they', u'PRP'), (u'outside', u'outside', u'RB'), (u',', u',', u','), (u'straight', u'straight', u'RB'), (u'into', u'into', u'IN'), (u'the', u'the', u'DT'), (u'soil', u'soil', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Planted', 'them', 'outside', ',', 'straight', 'into', 'the', 'soil', '.']}, {'string': ' Started her seeds indoors and got them used to the cooler temperatures outside.', 'parse': {'tree': '(ROOT (S (S (VP (VP (VBN Started) (NP (PRP$ her) (NNS seeds)) (ADVP (RB indoors))) (CC and) (VP (VBD got) (NP (PRP them))))) (VP (VBN used) (PP (TO to) (NP (NP (DT the) (JJR cooler) (NNS temperatures)) (ADVP (IN outside))))) (. .)))', 'lemma': [(u'Started', u'start', u'VBN'), (u'her', u'she', u'PRP$'), (u'seeds', u'seed', u'NNS'), (u'indoors', u'indoors', u'RB'), (u'and', u'and', u'CC'), (u'got', u'get', u'VBD'), (u'them', u'they', u'PRP'), (u'used', u'use', u'VBN'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'cooler', u'cooler', u'JJR'), (u'temperatures', u'temperature', u'NNS'), (u'outside', u'outside', u'IN'), (u'.', u'.', u'.')]}, 'tokens': ['Started', 'her', 'seeds', 'indoors', 'and', 'got', 'them', 'used', 'to', 'the', 'cooler', 'temperatures', 'outside', '.']}], 'mode': 0}, {'question': {'string': ' When did Josie start her seedlings?', 'parse': {'tree': '(ROOT (SBARQ (WHADVP (WRB When)) (SQ (VBD did) (NP (NNP Josie)) (VP (VB start) (NP (PRP$ her) (NNS seedlings)))) (. ?)))', 'lemma': [(u'When', u'when', u'WRB'), (u'did', u'do', u'VBD'), (u'Josie', u'Josie', u'NNP'), (u'start', u'start', u'VB'), (u'her', u'she', u'PRP$'), (u'seedlings', u'seedling', u'NNS'), (u'?', u'?', u'.')]}, 'tokens': ['When', 'did', 'Josie', 'start', 'her', 'seedlings', '?']}, 'answers': [{'string': ' Seven weeks before the last frost.', 'parse': {'tree': '(ROOT (NP (NP (CD Seven) (NNS weeks)) (PP (IN before) (NP (DT the) (JJ last) (NN frost))) (. .)))', 'lemma': [(u'Seven', u'seven', u'CD'), (u'weeks', u'week', u'NNS'), (u'before', u'before', u'IN'), (u'the', u'the', u'DT'), (u'last', u'last', u'JJ'), (u'frost', u'frost', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Seven', 'weeks', 'before', 'the', 'last', 'frost', '.']}, {'string': ' Four weeks before the last frost.', 'parse': {'tree': '(ROOT (NP (NP (CD Four) (NNS weeks)) (PP (IN before) (NP (DT the) (JJ last) (NN frost))) (. .)))', 'lemma': [(u'Four', u'four', u'CD'), (u'weeks', u'week', u'NNS'), (u'before', u'before', u'IN'), (u'the', u'the', u'DT'), (u'last', u'last', u'JJ'), (u'frost', u'frost', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Four', 'weeks', 'before', 'the', 'last', 'frost', '.']}, {'string': ' Six weeks before the last frost.', 'parse': {'tree': '(ROOT (NP (NP (CD Six) (NNS weeks)) (PP (IN before) (NP (DT the) (JJ last) (NN frost))) (. .)))', 'lemma': [(u'Six', u'six', u'CD'), (u'weeks', u'week', u'NNS'), (u'before', u'before', u'IN'), (u'the', u'the', u'DT'), (u'last', u'last', u'JJ'), (u'frost', u'frost', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Six', 'weeks', 'before', 'the', 'last', 'frost', '.']}, {'string': ' Five weeks before the last frost.', 'parse': {'tree': '(ROOT (NP (NP (CD Five) (NNS weeks)) (PP (IN before) (NP (DT the) (JJ last) (NN frost))) (. .)))', 'lemma': [(u'Five', u'five', u'CD'), (u'weeks', u'week', u'NNS'), (u'before', u'before', u'IN'), (u'the', u'the', u'DT'), (u'last', u'last', u'JJ'), (u'frost', u'frost', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Five', 'weeks', 'before', 'the', 'last', 'frost', '.']}], 'mode': 1}]}
{'sentences': [{'string': ' Bill and Sarah chose to meet at the park on Saturday to play ball and have a picnic.', 'parse': {'tree': '(ROOT (S (NP (NNP Bill) (CC and) (NNP Sarah)) (VP (VBD chose) (S (VP (TO to) (VP (VB meet) (PP (IN at) (NP (NP (DT the) (NN park)) (PP (IN on) (NP (NNP Saturday))))) (S (VP (TO to) (VP (VP (VB play) (NP (NN ball))) (CC and) (VP (VB have) (NP (DT a) (NN picnic)))))))))) (. .)))', 'lemma': [(u'Bill', u'Bill', u'NNP'), (u'and', u'and', u'CC'), (u'Sarah', u'Sarah', u'NNP'), (u'chose', u'choose', u'VBD'), (u'to', u'to', u'TO'), (u'meet', u'meet', u'VB'), (u'at', u'at', u'IN'), (u'the', u'the', u'DT'), (u'park', u'park', u'NN'), (u'on', u'on', u'IN'), (u'Saturday', u'Saturday', u'NNP'), (u'to', u'to', u'TO'), (u'play', u'play', u'VB'), (u'ball', u'ball', u'NN'), (u'and', u'and', u'CC'), (u'have', u'have', u'VB'), (u'a', u'a', u'DT'), (u'picnic', u'picnic', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Bill', 'and', 'Sarah', 'chose', 'to', 'meet', 'at', 'the', 'park', 'on', 'Saturday', 'to', 'play', 'ball', 'and', 'have', 'a', 'picnic', '.']}, {'string': ' They went to the same grade school together and lived on the same street down from the park.', 'parse': {'tree': '(ROOT (S (NP (PRP They)) (VP (VP (VBD went) (PP (TO to) (NP (DT the) (JJ same) (NN grade) (NN school))) (ADVP (RB together))) (CC and) (VP (VBD lived) (PP (IN on) (NP (DT the) (JJ same) (NN street))) (ADVP (RB down) (PP (IN from) (NP (DT the) (NN park)))))) (. .)))', 'lemma': [(u'They', u'they', u'PRP'), (u'went', u'go', u'VBD'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'same', u'same', u'JJ'), (u'grade', u'grade', u'NN'), (u'school', u'school', u'NN'), (u'together', u'together', u'RB'), (u'and', u'and', u'CC'), (u'lived', u'live', u'VBD'), (u'on', u'on', u'IN'), (u'the', u'the', u'DT'), (u'same', u'same', u'JJ'), (u'street', u'street', u'NN'), (u'down', u'down', u'RB'), (u'from', u'from', u'IN'), (u'the', u'the', u'DT'), (u'park', u'park', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['They', 'went', 'to', 'the', 'same', 'grade', 'school', 'together', 'and', 'lived', 'on', 'the', 'same', 'street', 'down', 'from', 'the', 'park', '.']}, {'string': ' Sarah does not often like boys, but for a boy, Bill was alright.', 'parse': {'tree': '(ROOT (S (S (NP (NNP Sarah)) (VP (VBZ does) (RB not) (ADVP (RB often)) (VP (VB like) (NP (NNS boys))))) (, ,) (CC but) (S (PP (IN for) (NP (DT a) (NN boy))) (, ,) (NP (NNP Bill)) (VP (VBD was) (ADJP (JJ alright)))) (. .)))', 'lemma': [(u'Sarah', u'Sarah', u'NNP'), (u'does', u'do', u'VBZ'), (u'not', u'not', u'RB'), (u'often', u'often', u'RB'), (u'like', u'like', u'VB'), (u'boys', u'boy', u'NNS'), (u',', u',', u','), (u'but', u'but', u'CC'), (u'for', u'for', u'IN'), (u'a', u'a', u'DT'), (u'boy', u'boy', u'NN'), (u',', u',', u','), (u'Bill', u'Bill', u'NNP'), (u'was', u'be', u'VBD'), (u'alright', u'alright', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['Sarah', 'does', 'not', 'often', 'like', 'boys', ',', 'but', 'for', 'a', 'boy', ',', 'Bill', 'was', 'alright', '.']}, {'string': " Most boys like Tom and Mark are stupid and a real pain, but Bill was a lot of fun to play with and did n't do dumb things like putting a booger on her back during recess.", 'parse': {'tree': "(ROOT (S (S (NP (NP (JJS Most) (NNS boys)) (PP (IN like) (NP (NNP Tom) (CC and) (NNP Mark)))) (VP (VBP are) (UCP (ADJP (JJ stupid)) (CC and) (NP (DT a) (JJ real) (NN pain))))) (, ,) (CC but) (S (NP (NNP Bill)) (VP (VP (VBD was) (NP (DT a) (RB lot)) (NP (PP (IN of) (NP (NN fun) (S (VP (TO to) (VP (VB play) (PP (IN with))))))))) (CC and) (VP (VBD did) (RB n't) (VP (VB do) (NP (JJ dumb) (NNS things)) (PP (IN like) (S (VP (VBG putting) (NP (NP (DT a) (NN booger)) (PP (IN on) (NP (PRP$ her) (NN back)))) (PP (IN during) (NP (NN recess)))))))))) (. .)))", 'lemma': [(u'Most', u'most', u'JJS'), (u'boys', u'boy', u'NNS'), (u'like', u'like', u'IN'), (u'Tom', u'Tom', u'NNP'), (u'and', u'and', u'CC'), (u'Mark', u'Mark', u'NNP'), (u'are', u'be', u'VBP'), (u'stupid', u'stupid', u'JJ'), (u'and', u'and', u'CC'), (u'a', u'a', u'DT'), (u'real', u'real', u'JJ'), (u'pain', u'pain', u'NN'), (u',', u',', u','), (u'but', u'but', u'CC'), (u'Bill', u'Bill', u'NNP'), (u'was', u'be', u'VBD'), (u'a', u'a', u'DT'), (u'lot', u'lot', u'RB'), (u'of', u'of', u'IN'), (u'fun', u'fun', u'NN'), (u'to', u'to', u'TO'), (u'play', u'play', u'VB'), (u'with', u'with', u'IN'), (u'and', u'and', u'CC'), (u'did', u'do', u'VBD'), (u"n't", u'not', u'RB'), (u'do', u'do', u'VB'), (u'dumb', u'dumb', u'JJ'), (u'things', u'thing', u'NNS'), (u'like', u'like', u'IN'), (u'putting', u'put', u'VBG'), (u'a', u'a', u'DT'), (u'booger', u'booger', u'NN'), (u'on', u'on', u'IN'), (u'her', u'she', u'PRP$'), (u'back', u'back', u'NN'), (u'during', u'during', u'IN'), (u'recess', u'recess', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Most', 'boys', 'like', 'Tom', 'and', 'Mark', 'are', 'stupid', 'and', 'a', 'real', 'pain', ',', 'but', 'Bill', 'was', 'a', 'lot', 'of', 'fun', 'to', 'play', 'with', 'and', 'did', "n't", 'do', 'dumb', 'things', 'like', 'putting', 'a', 'booger', 'on', 'her', 'back', 'during', 'recess', '.']}, {'string': ' When Bill and Sarah arrived at the park, they first played ball in the grass near the playground.', 'parse': {'tree': '(ROOT (S (SBAR (WHADVP (WRB When)) (S (NP (NNP Bill) (CC and) (NNP Sarah)) (VP (VBD arrived) (PP (IN at) (NP (DT the) (NN park)))))) (, ,) (NP (PRP they)) (ADVP (RB first)) (VP (VBD played) (NP (NN ball)) (PP (IN in) (NP (NP (DT the) (NN grass)) (PP (IN near) (NP (DT the) (NN playground)))))) (. .)))', 'lemma': [(u'When', u'when', u'WRB'), (u'Bill', u'Bill', u'NNP'), (u'and', u'and', u'CC'), (u'Sarah', u'Sarah', u'NNP'), (u'arrived', u'arrive', u'VBD'), (u'at', u'at', u'IN'), (u'the', u'the', u'DT'), (u'park', u'park', u'NN'), (u',', u',', u','), (u'they', u'they', u'PRP'), (u'first', u'first', u'RB'), (u'played', u'play', u'VBD'), (u'ball', u'ball', u'NN'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'grass', u'grass', u'NN'), (u'near', u'near', u'IN'), (u'the', u'the', u'DT'), (u'playground', u'playground', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['When', 'Bill', 'and', 'Sarah', 'arrived', 'at', 'the', 'park', ',', 'they', 'first', 'played', 'ball', 'in', 'the', 'grass', 'near', 'the', 'playground', '.']}, {'string': ' Then they chose to pretend that Bill was a monster and Sarah was the monster hunter.', 'parse': {'tree': '(ROOT (S (RB Then) (NP (PRP they)) (VP (VBD chose) (S (VP (TO to) (VP (VB pretend) (SBAR (IN that) (S (S (NP (NNP Bill)) (VP (VBD was) (NP (DT a) (NN monster)))) (CC and) (S (NP (NNP Sarah)) (VP (VBD was) (NP (DT the) (NN monster) (NN hunter)))))))))) (. .)))', 'lemma': [(u'Then', u'then', u'RB'), (u'they', u'they', u'PRP'), (u'chose', u'choose', u'VBD'), (u'to', u'to', u'TO'), (u'pretend', u'pretend', u'VB'), (u'that', u'that', u'IN'), (u'Bill', u'Bill', u'NNP'), (u'was', u'be', u'VBD'), (u'a', u'a', u'DT'), (u'monster', u'monster', u'NN'), (u'and', u'and', u'CC'), (u'Sarah', u'Sarah', u'NNP'), (u'was', u'be', u'VBD'), (u'the', u'the', u'DT'), (u'monster', u'monster', u'NN'), (u'hunter', u'hunter', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Then', 'they', 'chose', 'to', 'pretend', 'that', 'Bill', 'was', 'a', 'monster', 'and', 'Sarah', 'was', 'the', 'monster', 'hunter', '.']}, {'string': ' Sarah chased Bill all over the playground.', 'parse': {'tree': '(ROOT (S (NP (NNP Sarah)) (VP (VBD chased) (NP (NNP Bill)) (PP (DT all) (IN over) (NP (DT the) (NN playground)))) (. .)))', 'lemma': [(u'Sarah', u'Sarah', u'NNP'), (u'chased', u'chase', u'VBD'), (u'Bill', u'Bill', u'NNP'), (u'all', u'all', u'DT'), (u'over', u'over', u'IN'), (u'the', u'the', u'DT'), (u'playground', u'playground', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Sarah', 'chased', 'Bill', 'all', 'over', 'the', 'playground', '.']}, {'string': ' They went in and out and up and down.', 'parse': {'tree': '(ROOT (S (NP (PRP They)) (VP (VP (VBD went) (PRT (RP in) (CC and) (RP out))) (CC and) (VP (ADVP (RB up) (CC and) (RB down)))) (. .)))', 'lemma': [(u'They', u'they', u'PRP'), (u'went', u'go', u'VBD'), (u'in', u'in', u'RP'), (u'and', u'and', u'CC'), (u'out', u'out', u'RP'), (u'and', u'and', u'CC'), (u'up', u'up', u'RB'), (u'and', u'and', u'CC'), (u'down', u'down', u'RB'), (u'.', u'.', u'.')]}, 'tokens': ['They', 'went', 'in', 'and', 'out', 'and', 'up', 'and', 'down', '.']}, {'string': ' Bill ran under the slide and stepped in a puddle.', 'parse': {'tree': '(ROOT (S (NP (NNP Bill)) (VP (VP (VBD ran) (PP (IN under) (NP (DT the) (NN slide)))) (CC and) (VP (VBD stepped) (PP (IN in) (NP (DT a) (NN puddle))))) (. .)))', 'lemma': [(u'Bill', u'Bill', u'NNP'), (u'ran', u'run', u'VBD'), (u'under', u'under', u'IN'), (u'the', u'the', u'DT'), (u'slide', u'slide', u'NN'), (u'and', u'and', u'CC'), (u'stepped', u'step', u'VBD'), (u'in', u'in', u'IN'), (u'a', u'a', u'DT'), (u'puddle', u'puddle', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Bill', 'ran', 'under', 'the', 'slide', 'and', 'stepped', 'in', 'a', 'puddle', '.']}, {'string': " He did n't get hurt but he sure got plenty wet.", 'parse': {'tree': "(ROOT (S (S (NP (PRP He)) (VP (VBD did) (RB n't) (VP (VB get) (VP (VBN hurt))))) (CC but) (S (NP (PRP he)) (ADVP (RB sure)) (VP (VBD got) (S (NP (RB plenty)) (ADJP (JJ wet))))) (. .)))", 'lemma': [(u'He', u'he', u'PRP'), (u'did', u'do', u'VBD'), (u"n't", u'not', u'RB'), (u'get', u'get', u'VB'), (u'hurt', u'hurt', u'VBN'), (u'but', u'but', u'CC'), (u'he', u'he', u'PRP'), (u'sure', u'sure', u'RB'), (u'got', u'get', u'VBD'), (u'plenty', u'plenty', u'RB'), (u'wet', u'wet', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'did', "n't", 'get', 'hurt', 'but', 'he', 'sure', 'got', 'plenty', 'wet', '.']}, {'string': ' Playing the monster game was the most fun that they had at the park that day.', 'parse': {'tree': '(ROOT (S (S (VP (VBG Playing) (NP (DT the) (NN monster) (NN game)))) (VP (VBD was) (NP (DT the) (JJS most) (NN fun)) (SBAR (IN that) (S (NP (PRP they)) (VP (VBD had) (PP (IN at) (NP (NP (DT the) (NN park)) (NP (DT that) (NN day)))))))) (. .)))', 'lemma': [(u'Playing', u'play', u'VBG'), (u'the', u'the', u'DT'), (u'monster', u'monster', u'NN'), (u'game', u'game', u'NN'), (u'was', u'be', u'VBD'), (u'the', u'the', u'DT'), (u'most', u'most', u'JJS'), (u'fun', u'fun', u'NN'), (u'that', u'that', u'IN'), (u'they', u'they', u'PRP'), (u'had', u'have', u'VBD'), (u'at', u'at', u'IN'), (u'the', u'the', u'DT'), (u'park', u'park', u'NN'), (u'that', u'that', u'DT'), (u'day', u'day', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Playing', 'the', 'monster', 'game', 'was', 'the', 'most', 'fun', 'that', 'they', 'had', 'at', 'the', 'park', 'that', 'day', '.']}, {'string': ' Later they sat in the grass for a picnic.', 'parse': {'tree': '(ROOT (S (ADVP (RB Later)) (NP (PRP they)) (VP (VBD sat) (PP (IN in) (NP (DT the) (NN grass))) (PP (IN for) (NP (DT a) (NN picnic)))) (. .)))', 'lemma': [(u'Later', u'later', u'RB'), (u'they', u'they', u'PRP'), (u'sat', u'sit', u'VBD'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'grass', u'grass', u'NN'), (u'for', u'for', u'IN'), (u'a', u'a', u'DT'), (u'picnic', u'picnic', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Later', 'they', 'sat', 'in', 'the', 'grass', 'for', 'a', 'picnic', '.']}, {'string': " They both took off their shoes so that Bill 's feet could dry off and so that he would n't feel silly without shoes.", 'parse': {'tree': "(ROOT (S (NP (PRP They)) (DT both) (VP (VBD took) (PRT (RP off)) (NP (PRP$ their) (NNS shoes)) (SBAR (RB so) (IN that) (S (NP (NP (NNP Bill) (POS 's)) (NNS feet)) (VP (MD could) (VP (VB dry) (ADVP (RB off) (CC and) (RB so)) (SBAR (IN that) (S (NP (PRP he)) (VP (MD would) (RB n't) (VP (VB feel) (ADJP (JJ silly)) (PP (IN without) (NP (NNS shoes)))))))))))) (. .)))", 'lemma': [(u'They', u'they', u'PRP'), (u'both', u'both', u'DT'), (u'took', u'take', u'VBD'), (u'off', u'off', u'RP'), (u'their', u'they', u'PRP$'), (u'shoes', u'shoe', u'NNS'), (u'so', u'so', u'RB'), (u'that', u'that', u'IN'), (u'Bill', u'Bill', u'NNP'), (u"'s", u"'s", u'POS'), (u'feet', u'foot', u'NNS'), (u'could', u'could', u'MD'), (u'dry', u'dry', u'VB'), (u'off', u'off', u'RB'), (u'and', u'and', u'CC'), (u'so', u'so', u'RB'), (u'that', u'that', u'IN'), (u'he', u'he', u'PRP'), (u'would', u'would', u'MD'), (u"n't", u'not', u'RB'), (u'feel', u'feel', u'VB'), (u'silly', u'silly', u'JJ'), (u'without', u'without', u'IN'), (u'shoes', u'shoe', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['They', 'both', 'took', 'off', 'their', 'shoes', 'so', 'that', 'Bill', "'s", 'feet', 'could', 'dry', 'off', 'and', 'so', 'that', 'he', 'would', "n't", 'feel', 'silly', 'without', 'shoes', '.']}, {'string': ' Sarah took out her lunch and laid it out next to her.', 'parse': {'tree': '(ROOT (S (NP (NNP Sarah)) (VP (VP (VBD took) (PRT (RP out)) (NP (PRP$ her) (NN lunch))) (CC and) (VP (VBD laid) (NP (PRP it)) (ADVP (RB out) (JJ next) (PP (TO to) (NP (PRP her)))))) (. .)))', 'lemma': [(u'Sarah', u'Sarah', u'NNP'), (u'took', u'take', u'VBD'), (u'out', u'out', u'RP'), (u'her', u'she', u'PRP$'), (u'lunch', u'lunch', u'NN'), (u'and', u'and', u'CC'), (u'laid', u'lay', u'VBD'), (u'it', u'it', u'PRP'), (u'out', u'out', u'RB'), (u'next', u'next', u'JJ'), (u'to', u'to', u'TO'), (u'her', u'she', u'PRP'), (u'.', u'.', u'.')]}, 'tokens': ['Sarah', 'took', 'out', 'her', 'lunch', 'and', 'laid', 'it', 'out', 'next', 'to', 'her', '.']}, {'string': ' She had dried fruit and cheese and a peanut butter sandwich.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBD had) (VP (VBD dried) (NP (NP (NN fruit) (CC and) (NN cheese)) (CC and) (NP (DT a) (NN peanut) (NN butter) (NN sandwich))))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'had', u'have', u'VBD'), (u'dried', u'dry', u'VBD'), (u'fruit', u'fruit', u'NN'), (u'and', u'and', u'CC'), (u'cheese', u'cheese', u'NN'), (u'and', u'and', u'CC'), (u'a', u'a', u'DT'), (u'peanut', u'peanut', u'NN'), (u'butter', u'butter', u'NN'), (u'sandwich', u'sandwich', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'had', 'dried', 'fruit', 'and', 'cheese', 'and', 'a', 'peanut', 'butter', 'sandwich', '.']}, {'string': ' Bill opened his lunch bag and found a coke, a bag of chips, and a ham salad sandwich.', 'parse': {'tree': '(ROOT (S (NP (NNP Bill)) (VP (VP (VBD opened) (NP (PRP$ his) (NN lunch) (NN bag))) (CC and) (VP (VBD found) (NP (NP (DT a) (NN coke)) (, ,) (NP (NP (DT a) (NN bag)) (PP (IN of) (NP (NNS chips)))) (, ,) (CC and) (NP (DT a) (NN ham) (NN salad) (NN sandwich))))) (. .)))', 'lemma': [(u'Bill', u'Bill', u'NNP'), (u'opened', u'open', u'VBD'), (u'his', u'he', u'PRP$'), (u'lunch', u'lunch', u'NN'), (u'bag', u'bag', u'NN'), (u'and', u'and', u'CC'), (u'found', u'find', u'VBD'), (u'a', u'a', u'DT'), (u'coke', u'coke', u'NN'), (u',', u',', u','), (u'a', u'a', u'DT'), (u'bag', u'bag', u'NN'), (u'of', u'of', u'IN'), (u'chips', u'chip', u'NNS'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'a', u'a', u'DT'), (u'ham', u'ham', u'NN'), (u'salad', u'salad', u'NN'), (u'sandwich', u'sandwich', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Bill', 'opened', 'his', 'lunch', 'bag', 'and', 'found', 'a', 'coke', ',', 'a', 'bag', 'of', 'chips', ',', 'and', 'a', 'ham', 'salad', 'sandwich', '.']}, {'string': ' Sarah wanted to trade Bill his bag of chips for her fruit.', 'parse': {'tree': '(ROOT (S (NP (NNP Sarah)) (VP (VBD wanted) (S (VP (TO to) (VP (VB trade) (S (NP (NNP Bill)) (NP (NP (PRP$ his) (NN bag)) (PP (IN of) (NP (NP (NNS chips)) (PP (IN for) (NP (PRP$ her) (NN fruit))))))))))) (. .)))', 'lemma': [(u'Sarah', u'Sarah', u'NNP'), (u'wanted', u'want', u'VBD'), (u'to', u'to', u'TO'), (u'trade', u'trade', u'VB'), (u'Bill', u'Bill', u'NNP'), (u'his', u'he', u'PRP$'), (u'bag', u'bag', u'NN'), (u'of', u'of', u'IN'), (u'chips', u'chip', u'NNS'), (u'for', u'for', u'IN'), (u'her', u'she', u'PRP$'), (u'fruit', u'fruit', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Sarah', 'wanted', 'to', 'trade', 'Bill', 'his', 'bag', 'of', 'chips', 'for', 'her', 'fruit', '.']}, {'string': ' He said that would be a fair trade and they enjoyed their lunch together.', 'parse': {'tree': '(ROOT (S (S (NP (PRP He)) (VP (VBD said) (SBAR (IN that) (S (VP (MD would) (VP (VB be) (NP (DT a) (JJ fair) (NN trade)))))))) (CC and) (S (NP (PRP they)) (VP (VBD enjoyed) (NP (PRP$ their) (NN lunch)) (ADVP (RB together)))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'said', u'say', u'VBD'), (u'that', u'that', u'IN'), (u'would', u'would', u'MD'), (u'be', u'be', u'VB'), (u'a', u'a', u'DT'), (u'fair', u'fair', u'JJ'), (u'trade', u'trade', u'NN'), (u'and', u'and', u'CC'), (u'they', u'they', u'PRP'), (u'enjoyed', u'enjoy', u'VBD'), (u'their', u'they', u'PRP$'), (u'lunch', u'lunch', u'NN'), (u'together', u'together', u'RB'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'said', 'that', 'would', 'be', 'a', 'fair', 'trade', 'and', 'they', 'enjoyed', 'their', 'lunch', 'together', '.']}, {'string': ' After they had their lunch, they lay back in the grass and watched the clouds.', 'parse': {'tree': '(ROOT (S (SBAR (IN After) (S (NP (PRP they)) (VP (VBD had) (NP (PRP$ their) (NN lunch))))) (, ,) (NP (PRP they)) (VP (VP (VBD lay) (PRT (RP back)) (PP (IN in) (NP (DT the) (NN grass)))) (CC and) (VP (VBD watched) (NP (DT the) (NNS clouds)))) (. .)))', 'lemma': [(u'After', u'after', u'IN'), (u'they', u'they', u'PRP'), (u'had', u'have', u'VBD'), (u'their', u'they', u'PRP$'), (u'lunch', u'lunch', u'NN'), (u',', u',', u','), (u'they', u'they', u'PRP'), (u'lay', u'lay', u'VBD'), (u'back', u'back', u'RP'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'grass', u'grass', u'NN'), (u'and', u'and', u'CC'), (u'watched', u'watch', u'VBD'), (u'the', u'the', u'DT'), (u'clouds', u'cloud', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['After', 'they', 'had', 'their', 'lunch', ',', 'they', 'lay', 'back', 'in', 'the', 'grass', 'and', 'watched', 'the', 'clouds', '.']}, {'string': ' Some clouds looked like animals or shapes.', 'parse': {'tree': '(ROOT (S (NP (DT Some) (NNS clouds)) (VP (VBD looked) (PP (IN like) (NP (NNS animals) (CC or) (NNS shapes)))) (. .)))', 'lemma': [(u'Some', u'some', u'DT'), (u'clouds', u'cloud', u'NNS'), (u'looked', u'look', u'VBD'), (u'like', u'like', u'IN'), (u'animals', u'animal', u'NNS'), (u'or', u'or', u'CC'), (u'shapes', u'shape', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['Some', 'clouds', 'looked', 'like', 'animals', 'or', 'shapes', '.']}, {'string': ' Bill spotted one that looked like a reindeer.', 'parse': {'tree': '(ROOT (S (NP (NNP Bill)) (VP (VBD spotted) (NP (NP (CD one)) (SBAR (WHNP (WDT that)) (S (VP (VBD looked) (PP (IN like) (NP (DT a) (NN reindeer)))))))) (. .)))', 'lemma': [(u'Bill', u'Bill', u'NNP'), (u'spotted', u'spot', u'VBD'), (u'one', u'one', u'CD'), (u'that', u'that', u'WDT'), (u'looked', u'look', u'VBD'), (u'like', u'like', u'IN'), (u'a', u'a', u'DT'), (u'reindeer', u'reindeer', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Bill', 'spotted', 'one', 'that', 'looked', 'like', 'a', 'reindeer', '.']}, {'string': ' Sarah pointed to one that looked like a drum.', 'parse': {'tree': '(ROOT (S (NP (NNP Sarah)) (VP (VBD pointed) (PP (TO to) (NP (NP (CD one)) (SBAR (WHNP (WDT that)) (S (VP (VBD looked) (PP (IN like) (NP (DT a) (NN drum))))))))) (. .)))', 'lemma': [(u'Sarah', u'Sarah', u'NNP'), (u'pointed', u'point', u'VBD'), (u'to', u'to', u'TO'), (u'one', u'one', u'CD'), (u'that', u'that', u'WDT'), (u'looked', u'look', u'VBD'), (u'like', u'like', u'IN'), (u'a', u'a', u'DT'), (u'drum', u'drum', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Sarah', 'pointed', 'to', 'one', 'that', 'looked', 'like', 'a', 'drum', '.']}, {'string': ' Finally Bill and Sarah got up and brushed off the grass and headed for home.', 'parse': {'tree': '(ROOT (S (ADVP (RB Finally)) (NP (NNP Bill) (CC and) (NNP Sarah)) (VP (VP (VBD got) (PRT (RP up))) (CC and) (VP (VP (VBN brushed) (PRT (RP off)) (NP (DT the) (NN grass))) (CC and) (VP (VBN headed) (PP (IN for) (NP (NN home)))))) (. .)))', 'lemma': [(u'Finally', u'finally', u'RB'), (u'Bill', u'Bill', u'NNP'), (u'and', u'and', u'CC'), (u'Sarah', u'Sarah', u'NNP'), (u'got', u'get', u'VBD'), (u'up', u'up', u'RP'), (u'and', u'and', u'CC'), (u'brushed', u'brush', u'VBN'), (u'off', u'off', u'RP'), (u'the', u'the', u'DT'), (u'grass', u'grass', u'NN'), (u'and', u'and', u'CC'), (u'headed', u'head', u'VBN'), (u'for', u'for', u'IN'), (u'home', u'home', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Finally', 'Bill', 'and', 'Sarah', 'got', 'up', 'and', 'brushed', 'off', 'the', 'grass', 'and', 'headed', 'for', 'home', '.']}], 'questions': [{'question': {'string': ' What kind of sandwiches did Bill and Sarah have?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WHNP (WDT What) (NN kind)) (PP (IN of) (NP (NNS sandwiches)))) (SQ (VBD did) (NP (NNP Bill) (CC and) (NNP Sarah)) (VP (VB have))) (. ?)))', 'lemma': [(u'What', u'what', u'WDT'), (u'kind', u'kind', u'NN'), (u'of', u'of', u'IN'), (u'sandwiches', u'sandwich', u'NNS'), (u'did', u'do', u'VBD'), (u'Bill', u'Bill', u'NNP'), (u'and', u'and', u'CC'), (u'Sarah', u'Sarah', u'NNP'), (u'have', u'have', u'VB'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'kind', 'of', 'sandwiches', 'did', 'Bill', 'and', 'Sarah', 'have', '?']}, 'answers': [{'string': ' Tuna fish and ham salad', 'parse': {'tree': '(ROOT (NP (NP (NNP Tuna)) (NP (NP (NN fish)) (CC and) (NP (NN ham) (NN salad)))))', 'lemma': [(u'Tuna', u'Tuna', u'NNP'), (u'fish', u'fish', u'NN'), (u'and', u'and', u'CC'), (u'ham', u'ham', u'NN'), (u'salad', u'salad', u'NN')]}, 'tokens': ['Tuna', 'fish', 'and', 'ham', 'salad']}, {'string': ' Coke and peanut butter', 'parse': {'tree': '(ROOT (NP (NP (NNP Coke)) (CC and) (NP (NN peanut) (NN butter))))', 'lemma': [(u'Coke', u'Coke', u'NNP'), (u'and', u'and', u'CC'), (u'peanut', u'peanut', u'NN'), (u'butter', u'butter', u'NN')]}, 'tokens': ['Coke', 'and', 'peanut', 'butter']}, {'string': ' Ham salad and peanut butter', 'parse': {'tree': '(ROOT (S (VP (VB Ham) (NP (NN salad) (CC and) (NN peanut) (NN butter)))))', 'lemma': [(u'Ham', u'ham', u'VB'), (u'salad', u'salad', u'NN'), (u'and', u'and', u'CC'), (u'peanut', u'peanut', u'NN'), (u'butter', u'butter', u'NN')]}, 'tokens': ['Ham', 'salad', 'and', 'peanut', 'butter']}, {'string': ' Ham salad and fruit', 'parse': {'tree': '(ROOT (S (VP (VB Ham) (NP (NN salad) (CC and) (NN fruit)))))', 'lemma': [(u'Ham', u'ham', u'VB'), (u'salad', u'salad', u'NN'), (u'and', u'and', u'CC'), (u'fruit', u'fruit', u'NN')]}, 'tokens': ['Ham', 'salad', 'and', 'fruit']}], 'mode': 0}, {'question': {'string': ' Why did Sarah take of her shoes?', 'parse': {'tree': '(ROOT (SBARQ (WHADVP (WRB Why)) (SQ (VBD did) (NP (NNP Sarah)) (VP (VB take) (PP (IN of) (NP (PRP$ her) (NNS shoes))))) (. ?)))', 'lemma': [(u'Why', u'why', u'WRB'), (u'did', u'do', u'VBD'), (u'Sarah', u'Sarah', u'NNP'), (u'take', u'take', u'VB'), (u'of', u'of', u'IN'), (u'her', u'she', u'PRP$'), (u'shoes', u'shoe', u'NNS'), (u'?', u'?', u'.')]}, 'tokens': ['Why', 'did', 'Sarah', 'take', 'of', 'her', 'shoes', '?']}, 'answers': [{'string': " So Bill would n't feel silly", 'parse': {'tree': "(ROOT (S (CC So) (NP (NNP Bill)) (VP (MD would) (RB n't) (VP (VB feel) (ADJP (JJ silly))))))", 'lemma': [(u'So', u'so', u'CC'), (u'Bill', u'Bill', u'NNP'), (u'would', u'would', u'MD'), (u"n't", u'not', u'RB'), (u'feel', u'feel', u'VB'), (u'silly', u'silly', u'JJ')]}, 'tokens': ['So', 'Bill', 'would', "n't", 'feel', 'silly']}, {'string': ' Because her feet were hot', 'parse': {'tree': '(ROOT (SBAR (IN Because) (S (NP (PRP$ her) (NNS feet)) (VP (VBD were) (ADJP (JJ hot))))))', 'lemma': [(u'Because', u'because', u'IN'), (u'her', u'she', u'PRP$'), (u'feet', u'foot', u'NNS'), (u'were', u'be', u'VBD'), (u'hot', u'hot', u'JJ')]}, 'tokens': ['Because', 'her', 'feet', 'were', 'hot']}, {'string': " Because monster hunters do n't wear shoes", 'parse': {'tree': "(ROOT (SBAR (IN Because) (S (NP (NN monster) (NNS hunters)) (VP (VBP do) (RB n't) (VP (VB wear) (NP (NNS shoes)))))))", 'lemma': [(u'Because', u'because', u'IN'), (u'monster', u'monster', u'NN'), (u'hunters', u'hunter', u'NNS'), (u'do', u'do', u'VBP'), (u"n't", u'not', u'RB'), (u'wear', u'wear', u'VB'), (u'shoes', u'shoe', u'NNS')]}, 'tokens': ['Because', 'monster', 'hunters', 'do', "n't", 'wear', 'shoes']}, {'string': ' Because her feet were wet', 'parse': {'tree': '(ROOT (SBAR (IN Because) (S (NP (PRP$ her) (NNS feet)) (VP (VBD were) (ADJP (JJ wet))))))', 'lemma': [(u'Because', u'because', u'IN'), (u'her', u'she', u'PRP$'), (u'feet', u'foot', u'NNS'), (u'were', u'be', u'VBD'), (u'wet', u'wet', u'JJ')]}, 'tokens': ['Because', 'her', 'feet', 'were', 'wet']}], 'mode': 0}, {'question': {'string': ' Where did Bill and Sarah play ball?', 'parse': {'tree': '(ROOT (SBARQ (WHADVP (WRB Where)) (SQ (VBD did) (NP (NNP Bill) (CC and) (NNP Sarah)) (VP (VB play) (NP (NN ball)))) (. ?)))', 'lemma': [(u'Where', u'where', u'WRB'), (u'did', u'do', u'VBD'), (u'Bill', u'Bill', u'NNP'), (u'and', u'and', u'CC'), (u'Sarah', u'Sarah', u'NNP'), (u'play', u'play', u'VB'), (u'ball', u'ball', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['Where', 'did', 'Bill', 'and', 'Sarah', 'play', 'ball', '?']}, 'answers': [{'string': ' On the grass', 'parse': {'tree': '(ROOT (PP (IN On) (NP (DT the) (NN grass))))', 'lemma': [(u'On', u'on', u'IN'), (u'the', u'the', u'DT'), (u'grass', u'grass', u'NN')]}, 'tokens': ['On', 'the', 'grass']}, {'string': ' Under the slide', 'parse': {'tree': '(ROOT (PP (IN Under) (NP (DT the) (NN slide))))', 'lemma': [(u'Under', u'under', u'IN'), (u'the', u'the', u'DT'), (u'slide', u'slide', u'NN')]}, 'tokens': ['Under', 'the', 'slide']}, {'string': ' On the pavement', 'parse': {'tree': '(ROOT (PP (IN On) (NP (DT the) (NN pavement))))', 'lemma': [(u'On', u'on', u'IN'), (u'the', u'the', u'DT'), (u'pavement', u'pavement', u'NN')]}, 'tokens': ['On', 'the', 'pavement']}, {'string': ' In the playground', 'parse': {'tree': '(ROOT (PP (IN In) (NP (DT the) (NN playground))))', 'lemma': [(u'In', u'in', u'IN'), (u'the', u'the', u'DT'), (u'playground', u'playground', u'NN')]}, 'tokens': ['In', 'the', 'playground']}], 'mode': 1}, {'question': {'string': ' What boy does Sarah like to play with?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WDT What) (NN boy)) (SQ (VBZ does) (NP (NNP Sarah)) (VP (VB like) (S (VP (TO to) (VP (VB play) (PP (IN with))))))) (. ?)))', 'lemma': [(u'What', u'what', u'WDT'), (u'boy', u'boy', u'NN'), (u'does', u'do', u'VBZ'), (u'Sarah', u'Sarah', u'NNP'), (u'like', u'like', u'VB'), (u'to', u'to', u'TO'), (u'play', u'play', u'VB'), (u'with', u'with', u'IN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'boy', 'does', 'Sarah', 'like', 'to', 'play', 'with', '?']}, 'answers': [{'string': ' Scott', 'parse': {'tree': '(ROOT (NP (NNP Scott)))', 'lemma': [(u'Scott', u'Scott', u'NNP')]}, 'tokens': ['Scott']}, {'string': ' Mark', 'parse': {'tree': '(ROOT (NP (NNP Mark)))', 'lemma': [(u'Mark', u'Mark', u'NNP')]}, 'tokens': ['Mark']}, {'string': ' Tom', 'parse': {'tree': '(ROOT (NP (NNP Tom)))', 'lemma': [(u'Tom', u'Tom', u'NNP')]}, 'tokens': ['Tom']}, {'string': ' Bill', 'parse': {'tree': '(ROOT (NP (NNP Bill)))', 'lemma': [(u'Bill', u'Bill', u'NNP')]}, 'tokens': ['Bill']}], 'mode': 1}]}
{'sentences': [{'string': ' Shelly is in second grade.', 'parse': {'tree': '(ROOT (S (NP (NNP Shelly)) (VP (VBZ is) (PP (IN in) (NP (JJ second) (NN grade)))) (. .)))', 'lemma': [(u'Shelly', u'Shelly', u'NNP'), (u'is', u'be', u'VBZ'), (u'in', u'in', u'IN'), (u'second', u'second', u'JJ'), (u'grade', u'grade', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Shelly', 'is', 'in', 'second', 'grade', '.']}, {'string': ' She is a new student at her school.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBZ is) (NP (NP (DT a) (JJ new) (NN student)) (PP (IN at) (NP (PRP$ her) (NN school))))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'is', u'be', u'VBZ'), (u'a', u'a', u'DT'), (u'new', u'new', u'JJ'), (u'student', u'student', u'NN'), (u'at', u'at', u'IN'), (u'her', u'she', u'PRP$'), (u'school', u'school', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'is', 'a', 'new', 'student', 'at', 'her', 'school', '.']}, {'string': " Shelly 's family has lived in many different places.", 'parse': {'tree': "(ROOT (S (NP (NP (NNP Shelly) (POS 's)) (NN family)) (VP (VBZ has) (VP (VBN lived) (PP (IN in) (NP (JJ many) (JJ different) (NNS places))))) (. .)))", 'lemma': [(u'Shelly', u'Shelly', u'NNP'), (u"'s", u"'s", u'POS'), (u'family', u'family', u'NN'), (u'has', u'have', u'VBZ'), (u'lived', u'live', u'VBN'), (u'in', u'in', u'IN'), (u'many', u'many', u'JJ'), (u'different', u'different', u'JJ'), (u'places', u'place', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['Shelly', "'s", 'family', 'has', 'lived', 'in', 'many', 'different', 'places', '.']}, {'string': ' Shelly was born in Florida.', 'parse': {'tree': '(ROOT (S (NP (NNP Shelly)) (VP (VBD was) (VP (VBN born) (PP (IN in) (NP (NNP Florida))))) (. .)))', 'lemma': [(u'Shelly', u'Shelly', u'NNP'), (u'was', u'be', u'VBD'), (u'born', u'bear', u'VBN'), (u'in', u'in', u'IN'), (u'Florida', u'Florida', u'NNP'), (u'.', u'.', u'.')]}, 'tokens': ['Shelly', 'was', 'born', 'in', 'Florida', '.']}, {'string': ' Her family moved to Tennessee when she was two years old.', 'parse': {'tree': '(ROOT (S (NP (PRP$ Her) (NN family)) (VP (VBD moved) (PP (TO to) (NP (NNP Tennessee))) (SBAR (WHADVP (WRB when)) (S (NP (PRP she)) (VP (VBD was) (ADJP (NP (CD two) (NNS years)) (JJ old)))))) (. .)))', 'lemma': [(u'Her', u'she', u'PRP$'), (u'family', u'family', u'NN'), (u'moved', u'move', u'VBD'), (u'to', u'to', u'TO'), (u'Tennessee', u'Tennessee', u'NNP'), (u'when', u'when', u'WRB'), (u'she', u'she', u'PRP'), (u'was', u'be', u'VBD'), (u'two', u'two', u'CD'), (u'years', u'year', u'NNS'), (u'old', u'old', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['Her', 'family', 'moved', 'to', 'Tennessee', 'when', 'she', 'was', 'two', 'years', 'old', '.']}, {'string': ' When she was four years old, they moved to Texas.', 'parse': {'tree': '(ROOT (S (SBAR (WHADVP (WRB When)) (S (NP (PRP she)) (VP (VBD was) (ADJP (NP (CD four) (NNS years)) (JJ old))))) (, ,) (NP (PRP they)) (VP (VBD moved) (PP (TO to) (NP (NNP Texas)))) (. .)))', 'lemma': [(u'When', u'when', u'WRB'), (u'she', u'she', u'PRP'), (u'was', u'be', u'VBD'), (u'four', u'four', u'CD'), (u'years', u'year', u'NNS'), (u'old', u'old', u'JJ'), (u',', u',', u','), (u'they', u'they', u'PRP'), (u'moved', u'move', u'VBD'), (u'to', u'to', u'TO'), (u'Texas', u'Texas', u'NNP'), (u'.', u'.', u'.')]}, 'tokens': ['When', 'she', 'was', 'four', 'years', 'old', ',', 'they', 'moved', 'to', 'Texas', '.']}, {'string': ' They moved from there to Arizona, where they now live.', 'parse': {'tree': '(ROOT (S (NP (PRP They)) (VP (VBD moved) (PP (IN from) (NP (RB there))) (PP (TO to) (NP (NNP Arizona))) (, ,) (SBAR (WHADVP (WRB where)) (S (NP (PRP they)) (ADVP (RB now)) (VP (VBP live))))) (. .)))', 'lemma': [(u'They', u'they', u'PRP'), (u'moved', u'move', u'VBD'), (u'from', u'from', u'IN'), (u'there', u'there', u'RB'), (u'to', u'to', u'TO'), (u'Arizona', u'Arizona', u'NNP'), (u',', u',', u','), (u'where', u'where', u'WRB'), (u'they', u'they', u'PRP'), (u'now', u'now', u'RB'), (u'live', u'live', u'VBP'), (u'.', u'.', u'.')]}, 'tokens': ['They', 'moved', 'from', 'there', 'to', 'Arizona', ',', 'where', 'they', 'now', 'live', '.']}, {'string': ' Shelly is upset because she does not have any friends at her new school.', 'parse': {'tree': '(ROOT (S (NP (NNP Shelly)) (VP (VBZ is) (ADJP (JJ upset)) (SBAR (IN because) (S (NP (PRP she)) (VP (VBZ does) (RB not) (VP (VB have) (NP (NP (DT any) (NNS friends)) (PP (IN at) (NP (PRP$ her) (JJ new) (NN school))))))))) (. .)))', 'lemma': [(u'Shelly', u'Shelly', u'NNP'), (u'is', u'be', u'VBZ'), (u'upset', u'upset', u'JJ'), (u'because', u'because', u'IN'), (u'she', u'she', u'PRP'), (u'does', u'do', u'VBZ'), (u'not', u'not', u'RB'), (u'have', u'have', u'VB'), (u'any', u'any', u'DT'), (u'friends', u'friend', u'NNS'), (u'at', u'at', u'IN'), (u'her', u'she', u'PRP$'), (u'new', u'new', u'JJ'), (u'school', u'school', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Shelly', 'is', 'upset', 'because', 'she', 'does', 'not', 'have', 'any', 'friends', 'at', 'her', 'new', 'school', '.']}, {'string': ' She misses her old school.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBZ misses) (NP (PRP$ her) (JJ old) (NN school))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'misses', u'miss', u'VBZ'), (u'her', u'she', u'PRP$'), (u'old', u'old', u'JJ'), (u'school', u'school', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'misses', 'her', 'old', 'school', '.']}, {'string': ' She had lots of friends at her old school.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBD had) (NP (NP (NNS lots)) (PP (IN of) (NP (NNS friends)))) (PP (IN at) (NP (PRP$ her) (JJ old) (NN school)))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'had', u'have', u'VBD'), (u'lots', u'lot', u'NNS'), (u'of', u'of', u'IN'), (u'friends', u'friend', u'NNS'), (u'at', u'at', u'IN'), (u'her', u'she', u'PRP$'), (u'old', u'old', u'JJ'), (u'school', u'school', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'had', 'lots', 'of', 'friends', 'at', 'her', 'old', 'school', '.']}, {'string': ' She really misses her best friend, Julie.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (ADVP (RB really)) (VP (VBZ misses) (NP (NP (PRP$ her) (JJS best) (NN friend)) (, ,) (NP (NNP Julie)))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'really', u'really', u'RB'), (u'misses', u'miss', u'VBZ'), (u'her', u'she', u'PRP$'), (u'best', u'best', u'JJS'), (u'friend', u'friend', u'NN'), (u',', u',', u','), (u'Julie', u'Julie', u'NNP'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'really', 'misses', 'her', 'best', 'friend', ',', 'Julie', '.']}, {'string': ' When she gets to school on the first day, she feels very nervous.', 'parse': {'tree': '(ROOT (S (SBAR (WHADVP (WRB When)) (S (NP (PRP she)) (VP (VBZ gets) (PP (TO to) (NP (NN school))) (PP (IN on) (NP (DT the) (JJ first) (NN day)))))) (, ,) (NP (PRP she)) (VP (VBZ feels) (ADJP (RB very) (JJ nervous))) (. .)))', 'lemma': [(u'When', u'when', u'WRB'), (u'she', u'she', u'PRP'), (u'gets', u'get', u'VBZ'), (u'to', u'to', u'TO'), (u'school', u'school', u'NN'), (u'on', u'on', u'IN'), (u'the', u'the', u'DT'), (u'first', u'first', u'JJ'), (u'day', u'day', u'NN'), (u',', u',', u','), (u'she', u'she', u'PRP'), (u'feels', u'feel', u'VBZ'), (u'very', u'very', u'RB'), (u'nervous', u'nervous', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['When', 'she', 'gets', 'to', 'school', 'on', 'the', 'first', 'day', ',', 'she', 'feels', 'very', 'nervous', '.']}, {'string': ' She wants to go back to her other school.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBZ wants) (S (VP (TO to) (VP (VB go) (PRT (RP back)) (PP (TO to) (NP (PRP$ her) (JJ other) (NN school))))))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'wants', u'want', u'VBZ'), (u'to', u'to', u'TO'), (u'go', u'go', u'VB'), (u'back', u'back', u'RP'), (u'to', u'to', u'TO'), (u'her', u'she', u'PRP$'), (u'other', u'other', u'JJ'), (u'school', u'school', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'wants', 'to', 'go', 'back', 'to', 'her', 'other', 'school', '.']}, {'string': ' She even misses Mrs. Bell, her first grade teacher.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (ADVP (RB even)) (VP (VBZ misses) (NP (NP (NNP Mrs.) (NNP Bell)) (, ,) (NP (PRP$ her) (JJ first) (NN grade) (NN teacher)))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'even', u'even', u'RB'), (u'misses', u'miss', u'VBZ'), (u'Mrs.', u'Mrs.', u'NNP'), (u'Bell', u'Bell', u'NNP'), (u',', u',', u','), (u'her', u'she', u'PRP$'), (u'first', u'first', u'JJ'), (u'grade', u'grade', u'NN'), (u'teacher', u'teacher', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'even', 'misses', 'Mrs.', 'Bell', ',', 'her', 'first', 'grade', 'teacher', '.']}, {'string': ' Her new teacher, Mrs. Borden, makes her stand in front of the class and say something about herself.', 'parse': {'tree': '(ROOT (S (NP (NP (PRP$ Her) (JJ new) (NN teacher)) (, ,) (NP (NNP Mrs.) (NNP Borden)) (, ,)) (VP (VP (VBZ makes) (NP (PRP$ her) (NN stand)) (PP (IN in) (NP (NP (NN front)) (PP (IN of) (NP (DT the) (NN class)))))) (CC and) (VP (VBP say) (NP (NN something)) (PP (IN about) (NP (PRP herself))))) (. .)))', 'lemma': [(u'Her', u'she', u'PRP$'), (u'new', u'new', u'JJ'), (u'teacher', u'teacher', u'NN'), (u',', u',', u','), (u'Mrs.', u'Mrs.', u'NNP'), (u'Borden', u'Borden', u'NNP'), (u',', u',', u','), (u'makes', u'make', u'VBZ'), (u'her', u'she', u'PRP$'), (u'stand', u'stand', u'NN'), (u'in', u'in', u'IN'), (u'front', u'front', u'NN'), (u'of', u'of', u'IN'), (u'the', u'the', u'DT'), (u'class', u'class', u'NN'), (u'and', u'and', u'CC'), (u'say', u'say', u'VBP'), (u'something', u'something', u'NN'), (u'about', u'about', u'IN'), (u'herself', u'herself', u'PRP'), (u'.', u'.', u'.')]}, 'tokens': ['Her', 'new', 'teacher', ',', 'Mrs.', 'Borden', ',', 'makes', 'her', 'stand', 'in', 'front', 'of', 'the', 'class', 'and', 'say', 'something', 'about', 'herself', '.']}, {'string': ' She is so embarrassed!', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBZ is) (ADJP (RB so) (JJ embarrassed))) (. !)))', 'lemma': [(u'She', u'she', u'PRP'), (u'is', u'be', u'VBZ'), (u'so', u'so', u'RB'), (u'embarrassed', u'embarrassed', u'JJ'), (u'!', u'!', u'.')]}, 'tokens': ['She', 'is', 'so', 'embarrassed', '!']}, {'string': ' She is told to sit between two boys, Tim and John.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBZ is) (VP (VBN told) (S (VP (TO to) (VP (VB sit) (PP (IN between) (NP (NP (CD two) (NNS boys)) (, ,) (NP (NNP Tim)) (CC and) (NP (NNP John))))))))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'is', u'be', u'VBZ'), (u'told', u'tell', u'VBN'), (u'to', u'to', u'TO'), (u'sit', u'sit', u'VB'), (u'between', u'between', u'IN'), (u'two', u'two', u'CD'), (u'boys', u'boy', u'NNS'), (u',', u',', u','), (u'Tim', u'Tim', u'NNP'), (u'and', u'and', u'CC'), (u'John', u'John', u'NNP'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'is', 'told', 'to', 'sit', 'between', 'two', 'boys', ',', 'Tim', 'and', 'John', '.']}, {'string': ' When it is time for lunch, Mrs. Borden picks Shelly to lead the line.', 'parse': {'tree': '(ROOT (S (SBAR (WHADVP (WRB When)) (S (NP (PRP it)) (VP (VBZ is) (NP (NP (NN time)) (PP (IN for) (NP (NN lunch))))))) (, ,) (NP (NNP Mrs.) (NNP Borden)) (VP (VBZ picks) (S (NP (NNP Shelly)) (VP (TO to) (VP (VB lead) (NP (DT the) (NN line)))))) (. .)))', 'lemma': [(u'When', u'when', u'WRB'), (u'it', u'it', u'PRP'), (u'is', u'be', u'VBZ'), (u'time', u'time', u'NN'), (u'for', u'for', u'IN'), (u'lunch', u'lunch', u'NN'), (u',', u',', u','), (u'Mrs.', u'Mrs.', u'NNP'), (u'Borden', u'Borden', u'NNP'), (u'picks', u'pick', u'VBZ'), (u'Shelly', u'Shelly', u'NNP'), (u'to', u'to', u'TO'), (u'lead', u'lead', u'VB'), (u'the', u'the', u'DT'), (u'line', u'line', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['When', 'it', 'is', 'time', 'for', 'lunch', ',', 'Mrs.', 'Borden', 'picks', 'Shelly', 'to', 'lead', 'the', 'line', '.']}, {'string': " Maybe, she 's not so bad after all, Shelly thinks.", 'parse': {'tree': "(ROOT (S (ADVP (RB Maybe)) (PRN (, ,) (S (NP (PRP she)) (VP (VBZ 's) (RB not) (ADJP (RB so) (JJ bad) (PP (IN after) (NP (DT all)))))) (, ,)) (NP (NNP Shelly)) (VP (VBZ thinks)) (. .)))", 'lemma': [(u'Maybe', u'maybe', u'RB'), (u',', u',', u','), (u'she', u'she', u'PRP'), (u"'s", u'be', u'VBZ'), (u'not', u'not', u'RB'), (u'so', u'so', u'RB'), (u'bad', u'bad', u'JJ'), (u'after', u'after', u'IN'), (u'all', u'all', u'DT'), (u',', u',', u','), (u'Shelly', u'Shelly', u'NNP'), (u'thinks', u'think', u'VBZ'), (u'.', u'.', u'.')]}, 'tokens': ['Maybe', ',', 'she', "'s", 'not', 'so', 'bad', 'after', 'all', ',', 'Shelly', 'thinks', '.']}, {'string': ' At lunch, she meets Mrs. Stewart.', 'parse': {'tree': '(ROOT (S (PP (IN At) (NP (NN lunch))) (, ,) (NP (PRP she)) (VP (VBZ meets) (NP (NNP Mrs.) (NNP Stewart))) (. .)))', 'lemma': [(u'At', u'at', u'IN'), (u'lunch', u'lunch', u'NN'), (u',', u',', u','), (u'she', u'she', u'PRP'), (u'meets', u'meet', u'VBZ'), (u'Mrs.', u'Mrs.', u'NNP'), (u'Stewart', u'Stewart', u'NNP'), (u'.', u'.', u'.')]}, 'tokens': ['At', 'lunch', ',', 'she', 'meets', 'Mrs.', 'Stewart', '.']}, {'string': ' Mrs. Stewart works in the school office.', 'parse': {'tree': '(ROOT (S (NP (NNP Mrs.) (NNP Stewart)) (VP (VBZ works) (PP (IN in) (NP (DT the) (NN school) (NN office)))) (. .)))', 'lemma': [(u'Mrs.', u'Mrs.', u'NNP'), (u'Stewart', u'Stewart', u'NNP'), (u'works', u'work', u'VBZ'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'school', u'school', u'NN'), (u'office', u'office', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Mrs.', 'Stewart', 'works', 'in', 'the', 'school', 'office', '.']}, {'string': ' She is very nice.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBZ is) (ADJP (RB very) (JJ nice))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'is', u'be', u'VBZ'), (u'very', u'very', u'RB'), (u'nice', u'nice', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'is', 'very', 'nice', '.']}, {'string': ' Shelly finds a seat in the lunchroom.', 'parse': {'tree': '(ROOT (S (NP (NNP Shelly)) (VP (VBZ finds) (NP (NP (DT a) (NN seat)) (PP (IN in) (NP (DT the) (NN lunchroom))))) (. .)))', 'lemma': [(u'Shelly', u'Shelly', u'NNP'), (u'finds', u'find', u'VBZ'), (u'a', u'a', u'DT'), (u'seat', u'seat', u'NN'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'lunchroom', u'lunchroom', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Shelly', 'finds', 'a', 'seat', 'in', 'the', 'lunchroom', '.']}, {'string': ' She smiles at the girl next to her.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBZ smiles) (PP (IN at) (NP (NP (DT the) (NN girl)) (ADVP (JJ next) (PP (TO to) (NP (PRP her))))))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'smiles', u'smile', u'VBZ'), (u'at', u'at', u'IN'), (u'the', u'the', u'DT'), (u'girl', u'girl', u'NN'), (u'next', u'next', u'JJ'), (u'to', u'to', u'TO'), (u'her', u'she', u'PRP'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'smiles', 'at', 'the', 'girl', 'next', 'to', 'her', '.']}, {'string': " The girl 's name is Sue.", 'parse': {'tree': "(ROOT (S (NP (NP (DT The) (NN girl) (POS 's)) (NN name)) (VP (VBZ is) (ADJP (JJ Sue))) (. .)))", 'lemma': [(u'The', u'the', u'DT'), (u'girl', u'girl', u'NN'), (u"'s", u"'s", u'POS'), (u'name', u'name', u'NN'), (u'is', u'be', u'VBZ'), (u'Sue', u'sue', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'girl', "'s", 'name', 'is', 'Sue', '.']}, {'string': ' She is very nice to Shelly.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBZ is) (ADJP (RB very) (JJ nice) (PP (TO to) (NP (NNP Shelly))))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'is', u'be', u'VBZ'), (u'very', u'very', u'RB'), (u'nice', u'nice', u'JJ'), (u'to', u'to', u'TO'), (u'Shelly', u'Shelly', u'NNP'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'is', 'very', 'nice', 'to', 'Shelly', '.']}, {'string': ' She even shares a cookie with Shelly.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (ADVP (RB even)) (VP (VBZ shares) (NP (NP (DT a) (NN cookie)) (PP (IN with) (NP (NNP Shelly))))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'even', u'even', u'RB'), (u'shares', u'share', u'VBZ'), (u'a', u'a', u'DT'), (u'cookie', u'cookie', u'NN'), (u'with', u'with', u'IN'), (u'Shelly', u'Shelly', u'NNP'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'even', 'shares', 'a', 'cookie', 'with', 'Shelly', '.']}, {'string': ' Shelly is very happy that she has a new friend.', 'parse': {'tree': '(ROOT (S (NP (NNP Shelly)) (VP (VBZ is) (ADJP (RB very) (JJ happy)) (SBAR (IN that) (S (NP (PRP she)) (VP (VBZ has) (NP (DT a) (JJ new) (NN friend)))))) (. .)))', 'lemma': [(u'Shelly', u'Shelly', u'NNP'), (u'is', u'be', u'VBZ'), (u'very', u'very', u'RB'), (u'happy', u'happy', u'JJ'), (u'that', u'that', u'IN'), (u'she', u'she', u'PRP'), (u'has', u'have', u'VBZ'), (u'a', u'a', u'DT'), (u'new', u'new', u'JJ'), (u'friend', u'friend', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Shelly', 'is', 'very', 'happy', 'that', 'she', 'has', 'a', 'new', 'friend', '.']}], 'questions': [{'question': {'string': " Who is Shelly 's second grade teacher?", 'parse': {'tree': "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VBZ is) (NP (NP (NNP Shelly) (POS 's)) (JJ second) (NN grade) (NN teacher))) (. ?)))", 'lemma': [(u'Who', u'who', u'WP'), (u'is', u'be', u'VBZ'), (u'Shelly', u'Shelly', u'NNP'), (u"'s", u"'s", u'POS'), (u'second', u'second', u'JJ'), (u'grade', u'grade', u'NN'), (u'teacher', u'teacher', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['Who', 'is', 'Shelly', "'s", 'second', 'grade', 'teacher', '?']}, 'answers': [{'string': ' Sue', 'parse': {'tree': '(ROOT (NP (NNP Sue)))', 'lemma': [(u'Sue', u'Sue', u'NNP')]}, 'tokens': ['Sue']}, {'string': ' Mrs. Stewart', 'parse': {'tree': '(ROOT (NP (NNP Mrs.) (NNP Stewart)))', 'lemma': [(u'Mrs.', u'Mrs.', u'NNP'), (u'Stewart', u'Stewart', u'NNP')]}, 'tokens': ['Mrs.', 'Stewart']}, {'string': ' Mrs. Borden', 'parse': {'tree': '(ROOT (NP (NNP Mrs.) (NNP Borden)))', 'lemma': [(u'Mrs.', u'Mrs.', u'NNP'), (u'Borden', u'Borden', u'NNP')]}, 'tokens': ['Mrs.', 'Borden']}, {'string': ' Mrs. Bell', 'parse': {'tree': '(ROOT (NP (NNP Mrs.) (NNP Bell)))', 'lemma': [(u'Mrs.', u'Mrs.', u'NNP'), (u'Bell', u'Bell', u'NNP')]}, 'tokens': ['Mrs.', 'Bell']}], 'mode': 1}, {'question': {'string': " Where did Shelly 's family move to Arizona from?", 'parse': {'tree': "(ROOT (SBARQ (WHADVP (WRB Where)) (SQ (VBD did) (NP (NP (NNP Shelly) (POS 's)) (NN family)) (VP (VB move) (PP (TO to) (NP (NNP Arizona))) (PP (IN from)))) (. ?)))", 'lemma': [(u'Where', u'where', u'WRB'), (u'did', u'do', u'VBD'), (u'Shelly', u'Shelly', u'NNP'), (u"'s", u"'s", u'POS'), (u'family', u'family', u'NN'), (u'move', u'move', u'VB'), (u'to', u'to', u'TO'), (u'Arizona', u'Arizona', u'NNP'), (u'from', u'from', u'IN'), (u'?', u'?', u'.')]}, 'tokens': ['Where', 'did', 'Shelly', "'s", 'family', 'move', 'to', 'Arizona', 'from', '?']}, 'answers': [{'string': ' Arizona', 'parse': {'tree': '(ROOT (NP (NNP Arizona)))', 'lemma': [(u'Arizona', u'Arizona', u'NNP')]}, 'tokens': ['Arizona']}, {'string': ' Tennessee', 'parse': {'tree': '(ROOT (NP (NNP Tennessee)))', 'lemma': [(u'Tennessee', u'Tennessee', u'NNP')]}, 'tokens': ['Tennessee']}, {'string': ' Florida', 'parse': {'tree': '(ROOT (NP (NNP Florida)))', 'lemma': [(u'Florida', u'Florida', u'NNP')]}, 'tokens': ['Florida']}, {'string': ' Texas', 'parse': {'tree': '(ROOT (NP (NNP Texas)))', 'lemma': [(u'Texas', u'Texas', u'NNP')]}, 'tokens': ['Texas']}], 'mode': 0}, {'question': {'string': ' Where was Shelly born?', 'parse': {'tree': '(ROOT (SBARQ (WHADVP (WRB Where)) (SQ (VBD was) (NP (NNP Shelly)) (VP (VBN born))) (. ?)))', 'lemma': [(u'Where', u'where', u'WRB'), (u'was', u'be', u'VBD'), (u'Shelly', u'Shelly', u'NNP'), (u'born', u'bear', u'VBN'), (u'?', u'?', u'.')]}, 'tokens': ['Where', 'was', 'Shelly', 'born', '?']}, 'answers': [{'string': ' Arizona', 'parse': {'tree': '(ROOT (NP (NNP Arizona)))', 'lemma': [(u'Arizona', u'Arizona', u'NNP')]}, 'tokens': ['Arizona']}, {'string': ' Tennessee', 'parse': {'tree': '(ROOT (NP (NNP Tennessee)))', 'lemma': [(u'Tennessee', u'Tennessee', u'NNP')]}, 'tokens': ['Tennessee']}, {'string': ' Texas', 'parse': {'tree': '(ROOT (NP (NNP Texas)))', 'lemma': [(u'Texas', u'Texas', u'NNP')]}, 'tokens': ['Texas']}, {'string': ' Florida', 'parse': {'tree': '(ROOT (NP (NNP Florida)))', 'lemma': [(u'Florida', u'Florida', u'NNP')]}, 'tokens': ['Florida']}], 'mode': 1}, {'question': {'string': " Who is Shelly 's best friend from her old school?", 'parse': {'tree': "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VBZ is) (NP (NP (NP (NNP Shelly) (POS 's)) (JJS best) (NN friend)) (PP (IN from) (NP (PRP$ her) (JJ old) (NN school))))) (. ?)))", 'lemma': [(u'Who', u'who', u'WP'), (u'is', u'be', u'VBZ'), (u'Shelly', u'Shelly', u'NNP'), (u"'s", u"'s", u'POS'), (u'best', u'best', u'JJS'), (u'friend', u'friend', u'NN'), (u'from', u'from', u'IN'), (u'her', u'she', u'PRP$'), (u'old', u'old', u'JJ'), (u'school', u'school', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['Who', 'is', 'Shelly', "'s", 'best', 'friend', 'from', 'her', 'old', 'school', '?']}, 'answers': [{'string': ' Julie', 'parse': {'tree': '(ROOT (NP (NNP Julie)))', 'lemma': [(u'Julie', u'Julie', u'NNP')]}, 'tokens': ['Julie']}, {'string': ' Sue', 'parse': {'tree': '(ROOT (NP (NNP Sue)))', 'lemma': [(u'Sue', u'Sue', u'NNP')]}, 'tokens': ['Sue']}, {'string': ' Tim', 'parse': {'tree': '(ROOT (NP (NNP Tim)))', 'lemma': [(u'Tim', u'Tim', u'NNP')]}, 'tokens': ['Tim']}, {'string': ' John', 'parse': {'tree': '(ROOT (NP (NNP John)))', 'lemma': [(u'John', u'John', u'NNP')]}, 'tokens': ['John']}], 'mode': 0}]}
{'sentences': [{'string': ' Lions get very lonely sometimes but they have a difficult time trying to make friends.', 'parse': {'tree': '(ROOT (S (S (NP (NNS Lions)) (VP (VBP get) (ADJP (RB very) (JJ lonely) (RB sometimes)))) (CC but) (S (NP (PRP they)) (VP (VBP have) (NP (NP (DT a) (JJ difficult) (NN time)) (VP (VBG trying) (S (VP (TO to) (VP (VB make) (NP (NNS friends))))))))) (. .)))', 'lemma': [(u'Lions', u'lion', u'NNS'), (u'get', u'get', u'VBP'), (u'very', u'very', u'RB'), (u'lonely', u'lonely', u'JJ'), (u'sometimes', u'sometimes', u'RB'), (u'but', u'but', u'CC'), (u'they', u'they', u'PRP'), (u'have', u'have', u'VBP'), (u'a', u'a', u'DT'), (u'difficult', u'difficult', u'JJ'), (u'time', u'time', u'NN'), (u'trying', u'try', u'VBG'), (u'to', u'to', u'TO'), (u'make', u'make', u'VB'), (u'friends', u'friend', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['Lions', 'get', 'very', 'lonely', 'sometimes', 'but', 'they', 'have', 'a', 'difficult', 'time', 'trying', 'to', 'make', 'friends', '.']}, {'string': ' Lions have big teeth, sharp claws, and sometimes, they are very cranky.', 'parse': {'tree': '(ROOT (S (S (NP (NNS Lions)) (VP (VBP have) (NP (JJ big) (NNS teeth) (, ,) (JJ sharp) (NNS claws)))) (, ,) (CC and) (S (ADVP (RB sometimes)) (, ,) (NP (PRP they)) (VP (VBP are) (ADJP (RB very) (JJ cranky)))) (. .)))', 'lemma': [(u'Lions', u'lion', u'NNS'), (u'have', u'have', u'VBP'), (u'big', u'big', u'JJ'), (u'teeth', u'tooth', u'NNS'), (u',', u',', u','), (u'sharp', u'sharp', u'JJ'), (u'claws', u'claw', u'NNS'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'sometimes', u'sometimes', u'RB'), (u',', u',', u','), (u'they', u'they', u'PRP'), (u'are', u'be', u'VBP'), (u'very', u'very', u'RB'), (u'cranky', u'cranky', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['Lions', 'have', 'big', 'teeth', ',', 'sharp', 'claws', ',', 'and', 'sometimes', ',', 'they', 'are', 'very', 'cranky', '.']}, {'string': " They do n't always get along with other animals or humans, so they have to get rid of their anger and their crazy emotions to make and keep friends.", 'parse': {'tree': "(ROOT (S (S (NP (PRP They)) (VP (VBP do) (RB n't) (ADVP (RB always)) (VP (VB get) (PRT (RP along)) (PP (IN with) (NP (JJ other) (NNS animals) (CC or) (NNS humans)))))) (, ,) (IN so) (S (NP (PRP they)) (VP (VBP have) (S (VP (TO to) (VP (VB get) (ADJP (JJ rid)) (PP (IN of) (NP (NP (PRP$ their) (NN anger)) (CC and) (NP (PRP$ their) (JJ crazy) (NNS emotions))))))) (S (VP (TO to) (VP (VB make) (CC and) (VB keep) (NP (NNS friends))))))) (. .)))", 'lemma': [(u'They', u'they', u'PRP'), (u'do', u'do', u'VBP'), (u"n't", u'not', u'RB'), (u'always', u'always', u'RB'), (u'get', u'get', u'VB'), (u'along', u'along', u'RP'), (u'with', u'with', u'IN'), (u'other', u'other', u'JJ'), (u'animals', u'animal', u'NNS'), (u'or', u'or', u'CC'), (u'humans', u'human', u'NNS'), (u',', u',', u','), (u'so', u'so', u'IN'), (u'they', u'they', u'PRP'), (u'have', u'have', u'VBP'), (u'to', u'to', u'TO'), (u'get', u'get', u'VB'), (u'rid', u'rid', u'JJ'), (u'of', u'of', u'IN'), (u'their', u'they', u'PRP$'), (u'anger', u'anger', u'NN'), (u'and', u'and', u'CC'), (u'their', u'they', u'PRP$'), (u'crazy', u'crazy', u'JJ'), (u'emotions', u'emotion', u'NNS'), (u'to', u'to', u'TO'), (u'make', u'make', u'VB'), (u'and', u'and', u'CC'), (u'keep', u'keep', u'VB'), (u'friends', u'friend', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['They', 'do', "n't", 'always', 'get', 'along', 'with', 'other', 'animals', 'or', 'humans', ',', 'so', 'they', 'have', 'to', 'get', 'rid', 'of', 'their', 'anger', 'and', 'their', 'crazy', 'emotions', 'to', 'make', 'and', 'keep', 'friends', '.']}, {'string': ' Zebras and lions like to play tag, but sometimes it gets a little rough and zebra gets hurt.', 'parse': {'tree': '(ROOT (S (S (NP (NNS Zebras) (CC and) (NNS lions)) (VP (VBP like) (S (VP (TO to) (VP (VB play) (NP (NN tag))))))) (, ,) (CC but) (S (S (ADVP (RB sometimes)) (NP (PRP it)) (VP (VBZ gets) (ADJP (NP (DT a) (RB little)) (JJ rough)))) (CC and) (S (NP (NN zebra)) (VP (VBZ gets) (VP (VBN hurt))))) (. .)))', 'lemma': [(u'Zebras', u'zebra', u'NNS'), (u'and', u'and', u'CC'), (u'lions', u'lion', u'NNS'), (u'like', u'like', u'VBP'), (u'to', u'to', u'TO'), (u'play', u'play', u'VB'), (u'tag', u'tag', u'NN'), (u',', u',', u','), (u'but', u'but', u'CC'), (u'sometimes', u'sometimes', u'RB'), (u'it', u'it', u'PRP'), (u'gets', u'get', u'VBZ'), (u'a', u'a', u'DT'), (u'little', u'little', u'RB'), (u'rough', u'rough', u'JJ'), (u'and', u'and', u'CC'), (u'zebra', u'zebra', u'NN'), (u'gets', u'get', u'VBZ'), (u'hurt', u'hurt', u'VBN'), (u'.', u'.', u'.')]}, 'tokens': ['Zebras', 'and', 'lions', 'like', 'to', 'play', 'tag', ',', 'but', 'sometimes', 'it', 'gets', 'a', 'little', 'rough', 'and', 'zebra', 'gets', 'hurt', '.']}, {'string': ' When that happens, a nice lion needs to say sorry and to try to find another friend.', 'parse': {'tree': '(ROOT (S (SBAR (WHADVP (WRB When)) (S (NP (DT that)) (VP (VBZ happens)))) (, ,) (NP (DT a) (JJ nice) (NN lion)) (VP (VBZ needs) (S (VP (VP (TO to) (VP (VB say) (ADJP (JJ sorry)))) (CC and) (VP (TO to) (VP (VB try) (S (VP (TO to) (VP (VB find) (NP (DT another) (NN friend)))))))))) (. .)))', 'lemma': [(u'When', u'when', u'WRB'), (u'that', u'that', u'DT'), (u'happens', u'happen', u'VBZ'), (u',', u',', u','), (u'a', u'a', u'DT'), (u'nice', u'nice', u'JJ'), (u'lion', u'lion', u'NN'), (u'needs', u'need', u'VBZ'), (u'to', u'to', u'TO'), (u'say', u'say', u'VB'), (u'sorry', u'sorry', u'JJ'), (u'and', u'and', u'CC'), (u'to', u'to', u'TO'), (u'try', u'try', u'VB'), (u'to', u'to', u'TO'), (u'find', u'find', u'VB'), (u'another', u'another', u'DT'), (u'friend', u'friend', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['When', 'that', 'happens', ',', 'a', 'nice', 'lion', 'needs', 'to', 'say', 'sorry', 'and', 'to', 'try', 'to', 'find', 'another', 'friend', '.']}, {'string': ' A lion might go up to a chicken and smile, or maybe a lion might bring a horse some flowers or food to make him or her less nervous.', 'parse': {'tree': '(ROOT (S (S (NP (DT A) (NN lion)) (VP (MD might) (VP (VB go) (PRT (RP up)) (PP (TO to) (NP (DT a) (NN chicken) (CC and) (NN smile)))))) (, ,) (CC or) (S (ADVP (RB maybe)) (NP (DT a) (NN lion)) (VP (MD might) (VP (VB bring) (NP (DT a) (NN horse)) (NP (NP (DT some) (NNS flowers)) (CC or) (NP (NN food))) (S (VP (TO to) (VP (VB make) (S (NP (PRP him) (CC or) (PRP her)) (ADJP (RBR less) (JJ nervous))))))))) (. .)))', 'lemma': [(u'A', u'a', u'DT'), (u'lion', u'lion', u'NN'), (u'might', u'might', u'MD'), (u'go', u'go', u'VB'), (u'up', u'up', u'RP'), (u'to', u'to', u'TO'), (u'a', u'a', u'DT'), (u'chicken', u'chicken', u'NN'), (u'and', u'and', u'CC'), (u'smile', u'smile', u'NN'), (u',', u',', u','), (u'or', u'or', u'CC'), (u'maybe', u'maybe', u'RB'), (u'a', u'a', u'DT'), (u'lion', u'lion', u'NN'), (u'might', u'might', u'MD'), (u'bring', u'bring', u'VB'), (u'a', u'a', u'DT'), (u'horse', u'horse', u'NN'), (u'some', u'some', u'DT'), (u'flowers', u'flower', u'NNS'), (u'or', u'or', u'CC'), (u'food', u'food', u'NN'), (u'to', u'to', u'TO'), (u'make', u'make', u'VB'), (u'him', u'he', u'PRP'), (u'or', u'or', u'CC'), (u'her', u'she', u'PRP'), (u'less', u'less', u'RBR'), (u'nervous', u'nervous', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['A', 'lion', 'might', 'go', 'up', 'to', 'a', 'chicken', 'and', 'smile', ',', 'or', 'maybe', 'a', 'lion', 'might', 'bring', 'a', 'horse', 'some', 'flowers', 'or', 'food', 'to', 'make', 'him', 'or', 'her', 'less', 'nervous', '.']}, {'string': " It 's not easy to be friends with a lion, but a friendship takes time and a lot of hard work and that 's what is most important!", 'parse': {'tree': "(ROOT (S (S (NP (PRP It)) (VP (VBZ 's) (RB not) (ADJP (JJ easy) (S (VP (TO to) (VP (VB be) (NP (NP (NNS friends)) (PP (IN with) (NP (DT a) (NN lion)))))))))) (, ,) (CC but) (S (NP (DT a) (NN friendship)) (VP (VBZ takes) (NP (NP (NN time)) (CC and) (NP (NP (DT a) (NN lot)) (PP (IN of) (NP (JJ hard) (NN work)))) (CC and) (SBAR (WHNP (WDT that)) (S (VP (VBZ 's) (SBAR (WHNP (WP what)) (S (VP (VBZ is) (ADJP (RBS most) (JJ important))))))))))) (. !)))", 'lemma': [(u'It', u'it', u'PRP'), (u"'s", u'be', u'VBZ'), (u'not', u'not', u'RB'), (u'easy', u'easy', u'JJ'), (u'to', u'to', u'TO'), (u'be', u'be', u'VB'), (u'friends', u'friend', u'NNS'), (u'with', u'with', u'IN'), (u'a', u'a', u'DT'), (u'lion', u'lion', u'NN'), (u',', u',', u','), (u'but', u'but', u'CC'), (u'a', u'a', u'DT'), (u'friendship', u'friendship', u'NN'), (u'takes', u'take', u'VBZ'), (u'time', u'time', u'NN'), (u'and', u'and', u'CC'), (u'a', u'a', u'DT'), (u'lot', u'lot', u'NN'), (u'of', u'of', u'IN'), (u'hard', u'hard', u'JJ'), (u'work', u'work', u'NN'), (u'and', u'and', u'CC'), (u'that', u'that', u'WDT'), (u"'s", u'be', u'VBZ'), (u'what', u'what', u'WP'), (u'is', u'be', u'VBZ'), (u'most', u'most', u'RBS'), (u'important', u'important', u'JJ'), (u'!', u'!', u'.')]}, 'tokens': ['It', "'s", 'not', 'easy', 'to', 'be', 'friends', 'with', 'a', 'lion', ',', 'but', 'a', 'friendship', 'takes', 'time', 'and', 'a', 'lot', 'of', 'hard', 'work', 'and', 'that', "'s", 'what', 'is', 'most', 'important', '!']}, {'string': ' Also, my auntie always told me to be strong like a lion but to always be nice.', 'parse': {'tree': '(ROOT (S (ADVP (RB Also)) (, ,) (NP (PRP$ my) (NN auntie)) (ADVP (RB always)) (VP (VBD told) (S (NP (PRP me)) (VP (TO to) (VP (VB be) (ADJP (JJ strong) (PP (IN like) (NP (NP (DT a) (NN lion)) (SBAR (CC but) (S (VP (TO to) (ADVP (RB always)) (VP (VB be) (ADJP (JJ nice))))))))))))) (. .)))', 'lemma': [(u'Also', u'also', u'RB'), (u',', u',', u','), (u'my', u'my', u'PRP$'), (u'auntie', u'auntie', u'NN'), (u'always', u'always', u'RB'), (u'told', u'tell', u'VBD'), (u'me', u'I', u'PRP'), (u'to', u'to', u'TO'), (u'be', u'be', u'VB'), (u'strong', u'strong', u'JJ'), (u'like', u'like', u'IN'), (u'a', u'a', u'DT'), (u'lion', u'lion', u'NN'), (u'but', u'but', u'CC'), (u'to', u'to', u'TO'), (u'always', u'always', u'RB'), (u'be', u'be', u'VB'), (u'nice', u'nice', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['Also', ',', 'my', 'auntie', 'always', 'told', 'me', 'to', 'be', 'strong', 'like', 'a', 'lion', 'but', 'to', 'always', 'be', 'nice', '.']}, {'string': ' Having big teeth, sharp claws, and being cranky is not good, and we need to work hard to be the opposite of that to make sure we keep our friends.', 'parse': {'tree': '(ROOT (S (S (S (VP (VP (VBG Having) (NP (NP (JJ big) (NNS teeth)) (, ,) (NP (JJ sharp) (NNS claws)) (, ,))) (CC and) (VP (VBG being) (ADJP (JJ cranky))))) (VP (VBZ is) (RB not) (ADJP (JJ good)))) (, ,) (CC and) (S (NP (PRP we)) (VP (VBP need) (S (VP (TO to) (VP (VB work) (ADJP (JJ hard) (S (VP (TO to) (VP (VB be) (NP (NP (DT the) (NN opposite)) (PP (IN of) (SBAR (WHNP (WDT that)) (S (VP (TO to) (VP (VB make) (ADJP (JJ sure) (SBAR (S (NP (PRP we)) (VP (VBP keep) (NP (PRP$ our) (NNS friends))))))))))))))))))))) (. .)))', 'lemma': [(u'Having', u'have', u'VBG'), (u'big', u'big', u'JJ'), (u'teeth', u'tooth', u'NNS'), (u',', u',', u','), (u'sharp', u'sharp', u'JJ'), (u'claws', u'claw', u'NNS'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'being', u'be', u'VBG'), (u'cranky', u'cranky', u'JJ'), (u'is', u'be', u'VBZ'), (u'not', u'not', u'RB'), (u'good', u'good', u'JJ'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'we', u'we', u'PRP'), (u'need', u'need', u'VBP'), (u'to', u'to', u'TO'), (u'work', u'work', u'VB'), (u'hard', u'hard', u'JJ'), (u'to', u'to', u'TO'), (u'be', u'be', u'VB'), (u'the', u'the', u'DT'), (u'opposite', u'opposite', u'NN'), (u'of', u'of', u'IN'), (u'that', u'that', u'WDT'), (u'to', u'to', u'TO'), (u'make', u'make', u'VB'), (u'sure', u'sure', u'JJ'), (u'we', u'we', u'PRP'), (u'keep', u'keep', u'VBP'), (u'our', u'we', u'PRP$'), (u'friends', u'friend', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['Having', 'big', 'teeth', ',', 'sharp', 'claws', ',', 'and', 'being', 'cranky', 'is', 'not', 'good', ',', 'and', 'we', 'need', 'to', 'work', 'hard', 'to', 'be', 'the', 'opposite', 'of', 'that', 'to', 'make', 'sure', 'we', 'keep', 'our', 'friends', '.']}], 'questions': [{'question': {'string': ' What three bad things does a lion have that scare other animals?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WDT What) (CD three) (ADJP (JJ bad)) (NNS things)) (SQ (VBZ does) (NP (DT a) (NN lion)) (VP (VB have) (S (NP (DT that)) (VP (VB scare) (NP (JJ other) (NNS animals)))))) (. ?)))', 'lemma': [(u'What', u'what', u'WDT'), (u'three', u'three', u'CD'), (u'bad', u'bad', u'JJ'), (u'things', u'thing', u'NNS'), (u'does', u'do', u'VBZ'), (u'a', u'a', u'DT'), (u'lion', u'lion', u'NN'), (u'have', u'have', u'VB'), (u'that', u'that', u'DT'), (u'scare', u'scare', u'VB'), (u'other', u'other', u'JJ'), (u'animals', u'animal', u'NNS'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'three', 'bad', 'things', 'does', 'a', 'lion', 'have', 'that', 'scare', 'other', 'animals', '?']}, 'answers': [{'string': ' Lions have big teeth, sharp claws, and sometimes, they are very cranky.', 'parse': {'tree': '(ROOT (S (S (NP (NNS Lions)) (VP (VBP have) (NP (JJ big) (NNS teeth) (, ,) (JJ sharp) (NNS claws)))) (, ,) (CC and) (S (ADVP (RB sometimes)) (, ,) (NP (PRP they)) (VP (VBP are) (ADJP (RB very) (JJ cranky)))) (. .)))', 'lemma': [(u'Lions', u'lion', u'NNS'), (u'have', u'have', u'VBP'), (u'big', u'big', u'JJ'), (u'teeth', u'tooth', u'NNS'), (u',', u',', u','), (u'sharp', u'sharp', u'JJ'), (u'claws', u'claw', u'NNS'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'sometimes', u'sometimes', u'RB'), (u',', u',', u','), (u'they', u'they', u'PRP'), (u'are', u'be', u'VBP'), (u'very', u'very', u'RB'), (u'cranky', u'cranky', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['Lions', 'have', 'big', 'teeth', ',', 'sharp', 'claws', ',', 'and', 'sometimes', ',', 'they', 'are', 'very', 'cranky', '.']}, {'string': ' Lions have bad hair, bad breath, and a bad attitude.', 'parse': {'tree': '(ROOT (S (NP (NNS Lions)) (VP (VBP have) (NP (NP (JJ bad) (NN hair)) (, ,) (NP (JJ bad) (NN breath)) (, ,) (CC and) (NP (DT a) (JJ bad) (NN attitude)))) (. .)))', 'lemma': [(u'Lions', u'lion', u'NNS'), (u'have', u'have', u'VBP'), (u'bad', u'bad', u'JJ'), (u'hair', u'hair', u'NN'), (u',', u',', u','), (u'bad', u'bad', u'JJ'), (u'breath', u'breath', u'NN'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'a', u'a', u'DT'), (u'bad', u'bad', u'JJ'), (u'attitude', u'attitude', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Lions', 'have', 'bad', 'hair', ',', 'bad', 'breath', ',', 'and', 'a', 'bad', 'attitude', '.']}, {'string': ' Lions have bad breath, sharp claws, and sometimes, they are very cranky.', 'parse': {'tree': '(ROOT (S (S (NP (NNS Lions)) (VP (VBP have) (NP (JJ bad) (NN breath) (, ,) (JJ sharp) (NNS claws)))) (, ,) (CC and) (S (ADVP (RB sometimes)) (, ,) (NP (PRP they)) (VP (VBP are) (ADJP (RB very) (JJ cranky)))) (. .)))', 'lemma': [(u'Lions', u'lion', u'NNS'), (u'have', u'have', u'VBP'), (u'bad', u'bad', u'JJ'), (u'breath', u'breath', u'NN'), (u',', u',', u','), (u'sharp', u'sharp', u'JJ'), (u'claws', u'claw', u'NNS'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'sometimes', u'sometimes', u'RB'), (u',', u',', u','), (u'they', u'they', u'PRP'), (u'are', u'be', u'VBP'), (u'very', u'very', u'RB'), (u'cranky', u'cranky', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['Lions', 'have', 'bad', 'breath', ',', 'sharp', 'claws', ',', 'and', 'sometimes', ',', 'they', 'are', 'very', 'cranky', '.']}, {'string': ' Lions have sharp claws, bad hair, and big teeth.', 'parse': {'tree': '(ROOT (S (NP (NNS Lions)) (VP (VBP have) (NP (NP (JJ sharp) (NNS claws)) (, ,) (NP (JJ bad) (NN hair)) (, ,) (CC and) (NP (JJ big) (NNS teeth)))) (. .)))', 'lemma': [(u'Lions', u'lion', u'NNS'), (u'have', u'have', u'VBP'), (u'sharp', u'sharp', u'JJ'), (u'claws', u'claw', u'NNS'), (u',', u',', u','), (u'bad', u'bad', u'JJ'), (u'hair', u'hair', u'NN'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'big', u'big', u'JJ'), (u'teeth', u'tooth', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['Lions', 'have', 'sharp', 'claws', ',', 'bad', 'hair', ',', 'and', 'big', 'teeth', '.']}], 'mode': 1}, {'question': {'string': ' What is so important to make a friendship last a long time?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (ADJP (RB so) (JJ important) (S (VP (TO to) (VP (VB make) (S (NP (DT a) (NN friendship)) (VP (VB last) (NP (DT a) (JJ long) (NN time))))))))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'is', u'be', u'VBZ'), (u'so', u'so', u'RB'), (u'important', u'important', u'JJ'), (u'to', u'to', u'TO'), (u'make', u'make', u'VB'), (u'a', u'a', u'DT'), (u'friendship', u'friendship', u'NN'), (u'last', u'last', u'VB'), (u'a', u'a', u'DT'), (u'long', u'long', u'JJ'), (u'time', u'time', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'is', 'so', 'important', 'to', 'make', 'a', 'friendship', 'last', 'a', 'long', 'time', '?']}, 'answers': [{'string': ' You need time, hard work, and we need to always be nice.', 'parse': {'tree': '(ROOT (S (S (NP (PRP You)) (VP (VBP need) (NP (NP (NN time)) (, ,) (NP (JJ hard) (NN work))))) (, ,) (CC and) (S (NP (PRP we)) (VP (VBP need) (S (VP (TO to) (ADVP (RB always)) (VP (VB be) (ADJP (JJ nice))))))) (. .)))', 'lemma': [(u'You', u'you', u'PRP'), (u'need', u'need', u'VBP'), (u'time', u'time', u'NN'), (u',', u',', u','), (u'hard', u'hard', u'JJ'), (u'work', u'work', u'NN'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'we', u'we', u'PRP'), (u'need', u'need', u'VBP'), (u'to', u'to', u'TO'), (u'always', u'always', u'RB'), (u'be', u'be', u'VB'), (u'nice', u'nice', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['You', 'need', 'time', ',', 'hard', 'work', ',', 'and', 'we', 'need', 'to', 'always', 'be', 'nice', '.']}, {'string': ' You need to be popular, to do hard work, and we need to always be nice.', 'parse': {'tree': '(ROOT (S (S (NP (PRP You)) (VP (VBP need) (S (VP (TO to) (VP (VB be) (ADJP (JJ popular)) (, ,) (S (VP (TO to) (VP (VB do) (NP (JJ hard) (NN work)))))))))) (, ,) (CC and) (S (NP (PRP we)) (VP (VBP need) (S (VP (TO to) (ADVP (RB always)) (VP (VB be) (ADJP (JJ nice))))))) (. .)))', 'lemma': [(u'You', u'you', u'PRP'), (u'need', u'need', u'VBP'), (u'to', u'to', u'TO'), (u'be', u'be', u'VB'), (u'popular', u'popular', u'JJ'), (u',', u',', u','), (u'to', u'to', u'TO'), (u'do', u'do', u'VB'), (u'hard', u'hard', u'JJ'), (u'work', u'work', u'NN'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'we', u'we', u'PRP'), (u'need', u'need', u'VBP'), (u'to', u'to', u'TO'), (u'always', u'always', u'RB'), (u'be', u'be', u'VB'), (u'nice', u'nice', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['You', 'need', 'to', 'be', 'popular', ',', 'to', 'do', 'hard', 'work', ',', 'and', 'we', 'need', 'to', 'always', 'be', 'nice', '.']}, {'string': ' You need time, to do some work, and we need to always be okay to our friends.', 'parse': {'tree': '(ROOT (S (S (NP (PRP You)) (VP (VBP need) (NP (NN time)) (, ,) (S (VP (TO to) (VP (VB do) (NP (DT some) (NN work))))))) (, ,) (CC and) (S (NP (PRP we)) (VP (VBP need) (S (VP (TO to) (ADVP (RB always)) (VP (VB be) (ADJP (JJ okay) (PP (TO to) (NP (PRP$ our) (NNS friends))))))))) (. .)))', 'lemma': [(u'You', u'you', u'PRP'), (u'need', u'need', u'VBP'), (u'time', u'time', u'NN'), (u',', u',', u','), (u'to', u'to', u'TO'), (u'do', u'do', u'VB'), (u'some', u'some', u'DT'), (u'work', u'work', u'NN'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'we', u'we', u'PRP'), (u'need', u'need', u'VBP'), (u'to', u'to', u'TO'), (u'always', u'always', u'RB'), (u'be', u'be', u'VB'), (u'okay', u'okay', u'JJ'), (u'to', u'to', u'TO'), (u'our', u'we', u'PRP$'), (u'friends', u'friend', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['You', 'need', 'time', ',', 'to', 'do', 'some', 'work', ',', 'and', 'we', 'need', 'to', 'always', 'be', 'okay', 'to', 'our', 'friends', '.']}, {'string': ' You need money, to do hard work, and we need to always be nice.', 'parse': {'tree': '(ROOT (S (S (NP (PRP You)) (VP (VBP need) (NP (NN money)) (, ,) (S (VP (TO to) (VP (VB do) (NP (JJ hard) (NN work))))))) (, ,) (CC and) (S (NP (PRP we)) (VP (VBP need) (S (VP (TO to) (ADVP (RB always)) (VP (VB be) (ADJP (JJ nice))))))) (. .)))', 'lemma': [(u'You', u'you', u'PRP'), (u'need', u'need', u'VBP'), (u'money', u'money', u'NN'), (u',', u',', u','), (u'to', u'to', u'TO'), (u'do', u'do', u'VB'), (u'hard', u'hard', u'JJ'), (u'work', u'work', u'NN'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'we', u'we', u'PRP'), (u'need', u'need', u'VBP'), (u'to', u'to', u'TO'), (u'always', u'always', u'RB'), (u'be', u'be', u'VB'), (u'nice', u'nice', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['You', 'need', 'money', ',', 'to', 'do', 'hard', 'work', ',', 'and', 'we', 'need', 'to', 'always', 'be', 'nice', '.']}], 'mode': 0}, {'question': {'string': ' What other animals do lions try to make friends with?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WDT What) (JJ other) (NNS animals)) (SQ (VBP do) (NP (NNS lions)) (VP (VB try) (S (VP (TO to) (VP (VB make) (NP (NNS friends)) (PP (IN with))))))) (. ?)))', 'lemma': [(u'What', u'what', u'WDT'), (u'other', u'other', u'JJ'), (u'animals', u'animal', u'NNS'), (u'do', u'do', u'VBP'), (u'lions', u'lion', u'NNS'), (u'try', u'try', u'VB'), (u'to', u'to', u'TO'), (u'make', u'make', u'VB'), (u'friends', u'friend', u'NNS'), (u'with', u'with', u'IN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'other', 'animals', 'do', 'lions', 'try', 'to', 'make', 'friends', 'with', '?']}, 'answers': [{'string': ' Zebra, horse, chicken', 'parse': {'tree': '(ROOT (FRAG (NP (NP (NNP Zebra)) (, ,) (NP (NN horse)) (, ,) (NP (NN chicken)))))', 'lemma': [(u'Zebra', u'Zebra', u'NNP'), (u',', u',', u','), (u'horse', u'horse', u'NN'), (u',', u',', u','), (u'chicken', u'chicken', u'NN')]}, 'tokens': ['Zebra', ',', 'horse', ',', 'chicken']}, {'string': ' Chicken, zebra, pig', 'parse': {'tree': '(ROOT (NP (NP (NNP Chicken) (, ,) (NNP zebra)) (, ,) (NP (NN pig))))', 'lemma': [(u'Chicken', u'Chicken', u'NNP'), (u',', u',', u','), (u'zebra', u'zebra', u'NNP'), (u',', u',', u','), (u'pig', u'pig', u'NN')]}, 'tokens': ['Chicken', ',', 'zebra', ',', 'pig']}, {'string': ' Zebra, horse, snake.', 'parse': {'tree': '(ROOT (S (NP (NP (NNP Zebra)) (, ,) (NP (NN horse)) (, ,)) (VP (VBZ snake)) (. .)))', 'lemma': [(u'Zebra', u'Zebra', u'NNP'), (u',', u',', u','), (u'horse', u'horse', u'NN'), (u',', u',', u','), (u'snake', u'snake', u'VBZ'), (u'.', u'.', u'.')]}, 'tokens': ['Zebra', ',', 'horse', ',', 'snake', '.']}, {'string': ' Pig, snake, horse', 'parse': {'tree': '(ROOT (NP (NP (NNP Pig) (, ,) (NNP snake)) (, ,) (NP (NN horse))))', 'lemma': [(u'Pig', u'Pig', u'NNP'), (u',', u',', u','), (u'snake', u'snake', u'NNP'), (u',', u',', u','), (u'horse', u'horse', u'NN')]}, 'tokens': ['Pig', ',', 'snake', ',', 'horse']}], 'mode': 0}, {'question': {'string': ' What might a lion do to make a horse less nervous about being friends?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (MD might) (NP (DT a) (NN lion)) (VP (VB do) (S (VP (TO to) (VP (VB make) (NP (NP (DT a) (NN horse)) (ADJP (RBR less) (JJ nervous))) (PP (IN about) (S (VP (VBG being) (NP (NNS friends)))))))))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'might', u'might', u'MD'), (u'a', u'a', u'DT'), (u'lion', u'lion', u'NN'), (u'do', u'do', u'VB'), (u'to', u'to', u'TO'), (u'make', u'make', u'VB'), (u'a', u'a', u'DT'), (u'horse', u'horse', u'NN'), (u'less', u'less', u'RBR'), (u'nervous', u'nervous', u'JJ'), (u'about', u'about', u'IN'), (u'being', u'be', u'VBG'), (u'friends', u'friend', u'NNS'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'might', 'a', 'lion', 'do', 'to', 'make', 'a', 'horse', 'less', 'nervous', 'about', 'being', 'friends', '?']}, 'answers': [{'string': ' A lion might bring a horse some candy or food to make him or her less nervous.', 'parse': {'tree': '(ROOT (S (NP (DT A) (NN lion)) (VP (MD might) (VP (VB bring) (NP (DT a) (NN horse)) (NP (DT some) (NN candy) (CC or) (NN food) (S (VP (TO to) (VP (VB make) (S (NP (PRP him) (CC or) (PRP her)) (ADJP (RBR less) (JJ nervous))))))))) (. .)))', 'lemma': [(u'A', u'a', u'DT'), (u'lion', u'lion', u'NN'), (u'might', u'might', u'MD'), (u'bring', u'bring', u'VB'), (u'a', u'a', u'DT'), (u'horse', u'horse', u'NN'), (u'some', u'some', u'DT'), (u'candy', u'candy', u'NN'), (u'or', u'or', u'CC'), (u'food', u'food', u'NN'), (u'to', u'to', u'TO'), (u'make', u'make', u'VB'), (u'him', u'he', u'PRP'), (u'or', u'or', u'CC'), (u'her', u'she', u'PRP'), (u'less', u'less', u'RBR'), (u'nervous', u'nervous', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['A', 'lion', 'might', 'bring', 'a', 'horse', 'some', 'candy', 'or', 'food', 'to', 'make', 'him', 'or', 'her', 'less', 'nervous', '.']}, {'string': ' A lion might bring a horse some flowers or food to make him or her less nervous.', 'parse': {'tree': '(ROOT (S (NP (DT A) (NN lion)) (VP (MD might) (VP (VB bring) (NP (DT a) (NN horse)) (NP (NP (DT some) (NNS flowers)) (CC or) (NP (NN food))) (S (VP (TO to) (VP (VB make) (S (NP (PRP him) (CC or) (PRP her)) (ADJP (RBR less) (JJ nervous)))))))) (. .)))', 'lemma': [(u'A', u'a', u'DT'), (u'lion', u'lion', u'NN'), (u'might', u'might', u'MD'), (u'bring', u'bring', u'VB'), (u'a', u'a', u'DT'), (u'horse', u'horse', u'NN'), (u'some', u'some', u'DT'), (u'flowers', u'flower', u'NNS'), (u'or', u'or', u'CC'), (u'food', u'food', u'NN'), (u'to', u'to', u'TO'), (u'make', u'make', u'VB'), (u'him', u'he', u'PRP'), (u'or', u'or', u'CC'), (u'her', u'she', u'PRP'), (u'less', u'less', u'RBR'), (u'nervous', u'nervous', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['A', 'lion', 'might', 'bring', 'a', 'horse', 'some', 'flowers', 'or', 'food', 'to', 'make', 'him', 'or', 'her', 'less', 'nervous', '.']}, {'string': ' A lion might bring a horse some money or food to make him or her less nervous.', 'parse': {'tree': '(ROOT (S (NP (DT A) (NN lion)) (VP (MD might) (VP (VB bring) (NP (DT a) (NN horse)) (NP (DT some) (NN money) (CC or) (NN food) (S (VP (TO to) (VP (VB make) (S (NP (PRP him) (CC or) (PRP her)) (ADJP (RBR less) (JJ nervous))))))))) (. .)))', 'lemma': [(u'A', u'a', u'DT'), (u'lion', u'lion', u'NN'), (u'might', u'might', u'MD'), (u'bring', u'bring', u'VB'), (u'a', u'a', u'DT'), (u'horse', u'horse', u'NN'), (u'some', u'some', u'DT'), (u'money', u'money', u'NN'), (u'or', u'or', u'CC'), (u'food', u'food', u'NN'), (u'to', u'to', u'TO'), (u'make', u'make', u'VB'), (u'him', u'he', u'PRP'), (u'or', u'or', u'CC'), (u'her', u'she', u'PRP'), (u'less', u'less', u'RBR'), (u'nervous', u'nervous', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['A', 'lion', 'might', 'bring', 'a', 'horse', 'some', 'money', 'or', 'food', 'to', 'make', 'him', 'or', 'her', 'less', 'nervous', '.']}, {'string': ' A lion might bring a horse some clothes or food to make him or her less nervous.', 'parse': {'tree': '(ROOT (S (NP (DT A) (NN lion)) (VP (MD might) (VP (VB bring) (NP (DT a) (NN horse)) (NP (NP (DT some) (NNS clothes)) (CC or) (NP (NN food))) (S (VP (TO to) (VP (VB make) (S (NP (PRP him) (CC or) (PRP her)) (ADJP (RBR less) (JJ nervous)))))))) (. .)))', 'lemma': [(u'A', u'a', u'DT'), (u'lion', u'lion', u'NN'), (u'might', u'might', u'MD'), (u'bring', u'bring', u'VB'), (u'a', u'a', u'DT'), (u'horse', u'horse', u'NN'), (u'some', u'some', u'DT'), (u'clothes', u'clothes', u'NNS'), (u'or', u'or', u'CC'), (u'food', u'food', u'NN'), (u'to', u'to', u'TO'), (u'make', u'make', u'VB'), (u'him', u'he', u'PRP'), (u'or', u'or', u'CC'), (u'her', u'she', u'PRP'), (u'less', u'less', u'RBR'), (u'nervous', u'nervous', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['A', 'lion', 'might', 'bring', 'a', 'horse', 'some', 'clothes', 'or', 'food', 'to', 'make', 'him', 'or', 'her', 'less', 'nervous', '.']}], 'mode': 1}]}
{'sentences': [{'string': " Joe 's parents are farmers and they have a huge farm with cows, chickens, and ducks.", 'parse': {'tree': "(ROOT (S (S (NP (NP (NNP Joe) (POS 's)) (NNS parents)) (VP (VBP are) (NP (NNS farmers)))) (CC and) (S (NP (PRP they)) (VP (VBP have) (NP (NP (DT a) (JJ huge) (NN farm)) (PP (IN with) (NP (NNS cows) (, ,) (NNS chickens) (, ,) (CC and) (NNS ducks)))))) (. .)))", 'lemma': [(u'Joe', u'Joe', u'NNP'), (u"'s", u"'s", u'POS'), (u'parents', u'parent', u'NNS'), (u'are', u'be', u'VBP'), (u'farmers', u'farmer', u'NNS'), (u'and', u'and', u'CC'), (u'they', u'they', u'PRP'), (u'have', u'have', u'VBP'), (u'a', u'a', u'DT'), (u'huge', u'huge', u'JJ'), (u'farm', u'farm', u'NN'), (u'with', u'with', u'IN'), (u'cows', u'cow', u'NNS'), (u',', u',', u','), (u'chickens', u'chicken', u'NNS'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'ducks', u'duck', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['Joe', "'s", 'parents', 'are', 'farmers', 'and', 'they', 'have', 'a', 'huge', 'farm', 'with', 'cows', ',', 'chickens', ',', 'and', 'ducks', '.']}, {'string': ' Joe loves the farm and all the things he gets to play around and play on.', 'parse': {'tree': '(ROOT (S (S (NP (NNP Joe)) (VP (VBZ loves) (NP (NP (DT the) (NN farm)) (CC and) (NP (PDT all) (DT the) (NNS things))))) (NP (PRP he)) (VP (VBZ gets) (S (VP (TO to) (VP (VP (VB play) (PRT (RP around))) (CC and) (VP (VB play) (PRT (RP on))))))) (. .)))', 'lemma': [(u'Joe', u'Joe', u'NNP'), (u'loves', u'love', u'VBZ'), (u'the', u'the', u'DT'), (u'farm', u'farm', u'NN'), (u'and', u'and', u'CC'), (u'all', u'all', u'PDT'), (u'the', u'the', u'DT'), (u'things', u'thing', u'NNS'), (u'he', u'he', u'PRP'), (u'gets', u'get', u'VBZ'), (u'to', u'to', u'TO'), (u'play', u'play', u'VB'), (u'around', u'around', u'RP'), (u'and', u'and', u'CC'), (u'play', u'play', u'VB'), (u'on', u'on', u'RP'), (u'.', u'.', u'.')]}, 'tokens': ['Joe', 'loves', 'the', 'farm', 'and', 'all', 'the', 'things', 'he', 'gets', 'to', 'play', 'around', 'and', 'play', 'on', '.']}, {'string': " One day, Joe 's father told him not to get near a tractor that was sitting in the field.", 'parse': {'tree': "(ROOT (S (NP (CD One) (NN day)) (, ,) (NP (NP (NNP Joe) (POS 's)) (NN father)) (VP (VBD told) (S (NP (PRP him)) (RB not) (VP (TO to) (VP (VB get) (PP (IN near) (NP (NP (DT a) (NN tractor)) (SBAR (WHNP (WDT that)) (S (VP (VBD was) (VP (VBG sitting) (PP (IN in) (NP (DT the) (NN field))))))))))))) (. .)))", 'lemma': [(u'One', u'one', u'CD'), (u'day', u'day', u'NN'), (u',', u',', u','), (u'Joe', u'Joe', u'NNP'), (u"'s", u"'s", u'POS'), (u'father', u'father', u'NN'), (u'told', u'tell', u'VBD'), (u'him', u'he', u'PRP'), (u'not', u'not', u'RB'), (u'to', u'to', u'TO'), (u'get', u'get', u'VB'), (u'near', u'near', u'IN'), (u'a', u'a', u'DT'), (u'tractor', u'tractor', u'NN'), (u'that', u'that', u'WDT'), (u'was', u'be', u'VBD'), (u'sitting', u'sit', u'VBG'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'field', u'field', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['One', 'day', ',', 'Joe', "'s", 'father', 'told', 'him', 'not', 'to', 'get', 'near', 'a', 'tractor', 'that', 'was', 'sitting', 'in', 'the', 'field', '.']}, {'string': ' His father was worried that Joe would climb on it and hurt himself.', 'parse': {'tree': '(ROOT (S (NP (PRP$ His) (NN father)) (VP (VBD was) (VP (VBN worried) (SBAR (IN that) (S (NP (NNP Joe)) (VP (MD would) (VP (VP (VB climb) (PP (IN on) (NP (PRP it)))) (CC and) (VP (VB hurt) (NP (PRP himself))))))))) (. .)))', 'lemma': [(u'His', u'he', u'PRP$'), (u'father', u'father', u'NN'), (u'was', u'be', u'VBD'), (u'worried', u'worry', u'VBN'), (u'that', u'that', u'IN'), (u'Joe', u'Joe', u'NNP'), (u'would', u'would', u'MD'), (u'climb', u'climb', u'VB'), (u'on', u'on', u'IN'), (u'it', u'it', u'PRP'), (u'and', u'and', u'CC'), (u'hurt', u'hurt', u'VB'), (u'himself', u'himself', u'PRP'), (u'.', u'.', u'.')]}, 'tokens': ['His', 'father', 'was', 'worried', 'that', 'Joe', 'would', 'climb', 'on', 'it', 'and', 'hurt', 'himself', '.']}, {'string': ' Joe went out to the field and was feeding the horses and cows.', 'parse': {'tree': '(ROOT (S (NP (NNP Joe)) (VP (VP (VBD went) (PRT (RP out)) (PP (TO to) (NP (DT the) (NN field)))) (CC and) (VP (VBD was) (VP (VBG feeding) (NP (DT the) (NNS horses) (CC and) (NNS cows))))) (. .)))', 'lemma': [(u'Joe', u'Joe', u'NNP'), (u'went', u'go', u'VBD'), (u'out', u'out', u'RP'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'field', u'field', u'NN'), (u'and', u'and', u'CC'), (u'was', u'be', u'VBD'), (u'feeding', u'feed', u'VBG'), (u'the', u'the', u'DT'), (u'horses', u'horse', u'NNS'), (u'and', u'and', u'CC'), (u'cows', u'cow', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['Joe', 'went', 'out', 'to', 'the', 'field', 'and', 'was', 'feeding', 'the', 'horses', 'and', 'cows', '.']}, {'string': ' When he was done, he saw the tractor his father told him not to get near.', 'parse': {'tree': '(ROOT (S (SBAR (WHADVP (WRB When)) (S (NP (PRP he)) (VP (VBD was) (VP (VBN done))))) (, ,) (NP (PRP he)) (VP (VBD saw) (NP (NP (DT the) (NN tractor)) (SBAR (S (NP (PRP$ his) (NN father)) (VP (VBD told) (S (NP (PRP him)) (RB not) (VP (TO to) (VP (VB get) (PP (IN near)))))))))) (. .)))', 'lemma': [(u'When', u'when', u'WRB'), (u'he', u'he', u'PRP'), (u'was', u'be', u'VBD'), (u'done', u'do', u'VBN'), (u',', u',', u','), (u'he', u'he', u'PRP'), (u'saw', u'see', u'VBD'), (u'the', u'the', u'DT'), (u'tractor', u'tractor', u'NN'), (u'his', u'he', u'PRP$'), (u'father', u'father', u'NN'), (u'told', u'tell', u'VBD'), (u'him', u'he', u'PRP'), (u'not', u'not', u'RB'), (u'to', u'to', u'TO'), (u'get', u'get', u'VB'), (u'near', u'near', u'IN'), (u'.', u'.', u'.')]}, 'tokens': ['When', 'he', 'was', 'done', ',', 'he', 'saw', 'the', 'tractor', 'his', 'father', 'told', 'him', 'not', 'to', 'get', 'near', '.']}, {'string': " He knew that climbing on the tractor would n't hurt anything, so he did.", 'parse': {'tree': "(ROOT (S (S (NP (PRP He)) (VP (VBD knew) (SBAR (IN that) (S (S (VP (VBG climbing) (PP (IN on) (NP (DT the) (NN tractor))))) (VP (MD would) (RB n't) (VP (VB hurt) (NP (NN anything)))))))) (, ,) (IN so) (S (NP (PRP he)) (VP (VBD did))) (. .)))", 'lemma': [(u'He', u'he', u'PRP'), (u'knew', u'know', u'VBD'), (u'that', u'that', u'IN'), (u'climbing', u'climb', u'VBG'), (u'on', u'on', u'IN'), (u'the', u'the', u'DT'), (u'tractor', u'tractor', u'NN'), (u'would', u'would', u'MD'), (u"n't", u'not', u'RB'), (u'hurt', u'hurt', u'VB'), (u'anything', u'anything', u'NN'), (u',', u',', u','), (u'so', u'so', u'IN'), (u'he', u'he', u'PRP'), (u'did', u'do', u'VBD'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'knew', 'that', 'climbing', 'on', 'the', 'tractor', 'would', "n't", 'hurt', 'anything', ',', 'so', 'he', 'did', '.']}, {'string': ' He climbed on to the seat and sat there.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VP (VBD climbed) (PRT (RP on)) (PP (TO to) (NP (DT the) (NN seat)))) (CC and) (VP (VBD sat) (ADVP (RB there)))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'climbed', u'climb', u'VBD'), (u'on', u'on', u'RP'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'seat', u'seat', u'NN'), (u'and', u'and', u'CC'), (u'sat', u'sit', u'VBD'), (u'there', u'there', u'RB'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'climbed', 'on', 'to', 'the', 'seat', 'and', 'sat', 'there', '.']}, {'string': ' Then, he pretended he was his father and pretended that he was driving the tractor.', 'parse': {'tree': '(ROOT (S (ADVP (RB Then)) (, ,) (NP (PRP he)) (VP (VP (VBD pretended) (SBAR (S (NP (PRP he)) (VP (VBD was) (NP (PRP$ his) (NN father)))))) (CC and) (VP (VBD pretended) (SBAR (IN that) (S (NP (PRP he)) (VP (VBD was) (VP (VBG driving) (NP (DT the) (NN tractor)))))))) (. .)))', 'lemma': [(u'Then', u'then', u'RB'), (u',', u',', u','), (u'he', u'he', u'PRP'), (u'pretended', u'pretend', u'VBD'), (u'he', u'he', u'PRP'), (u'was', u'be', u'VBD'), (u'his', u'he', u'PRP$'), (u'father', u'father', u'NN'), (u'and', u'and', u'CC'), (u'pretended', u'pretend', u'VBD'), (u'that', u'that', u'IN'), (u'he', u'he', u'PRP'), (u'was', u'be', u'VBD'), (u'driving', u'drive', u'VBG'), (u'the', u'the', u'DT'), (u'tractor', u'tractor', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Then', ',', 'he', 'pretended', 'he', 'was', 'his', 'father', 'and', 'pretended', 'that', 'he', 'was', 'driving', 'the', 'tractor', '.']}, {'string': " Joe 's father saw him playing on the tractor and called for him.", 'parse': {'tree': "(ROOT (S (NP (NP (NNP Joe) (POS 's)) (NN father)) (VP (VP (VBD saw) (S (NP (PRP him)) (VP (VBG playing) (PP (IN on) (NP (DT the) (NN tractor)))))) (CC and) (VP (VBD called) (PP (IN for) (NP (PRP him))))) (. .)))", 'lemma': [(u'Joe', u'Joe', u'NNP'), (u"'s", u"'s", u'POS'), (u'father', u'father', u'NN'), (u'saw', u'see', u'VBD'), (u'him', u'he', u'PRP'), (u'playing', u'play', u'VBG'), (u'on', u'on', u'IN'), (u'the', u'the', u'DT'), (u'tractor', u'tractor', u'NN'), (u'and', u'and', u'CC'), (u'called', u'call', u'VBD'), (u'for', u'for', u'IN'), (u'him', u'he', u'PRP'), (u'.', u'.', u'.')]}, 'tokens': ['Joe', "'s", 'father', 'saw', 'him', 'playing', 'on', 'the', 'tractor', 'and', 'called', 'for', 'him', '.']}, {'string': ' Joe heard his father calling for him and got off the tractor really fast.', 'parse': {'tree': '(ROOT (S (NP (NNP Joe)) (VP (VP (VBD heard) (NP (PRP$ his) (NN father) (NN calling)) (PP (IN for) (NP (PRP him)))) (CC and) (VP (VBD got) (PRT (RP off)) (NP (NP (DT the) (NN tractor)) (ADJP (RB really) (JJ fast))))) (. .)))', 'lemma': [(u'Joe', u'Joe', u'NNP'), (u'heard', u'hear', u'VBD'), (u'his', u'he', u'PRP$'), (u'father', u'father', u'NN'), (u'calling', u'calling', u'NN'), (u'for', u'for', u'IN'), (u'him', u'he', u'PRP'), (u'and', u'and', u'CC'), (u'got', u'get', u'VBD'), (u'off', u'off', u'RP'), (u'the', u'the', u'DT'), (u'tractor', u'tractor', u'NN'), (u'really', u'really', u'RB'), (u'fast', u'fast', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['Joe', 'heard', 'his', 'father', 'calling', 'for', 'him', 'and', 'got', 'off', 'the', 'tractor', 'really', 'fast', '.']}, {'string': ' When he did that, he fell off and hurt his arm.', 'parse': {'tree': '(ROOT (S (SBAR (WHADVP (WRB When)) (S (NP (PRP he)) (VP (VBD did) (NP (DT that))))) (, ,) (NP (PRP he)) (VP (VP (VBD fell) (PRT (RP off))) (CC and) (VP (VBD hurt) (NP (PRP$ his) (NN arm)))) (. .)))', 'lemma': [(u'When', u'when', u'WRB'), (u'he', u'he', u'PRP'), (u'did', u'do', u'VBD'), (u'that', u'that', u'DT'), (u',', u',', u','), (u'he', u'he', u'PRP'), (u'fell', u'fall', u'VBD'), (u'off', u'off', u'RP'), (u'and', u'and', u'CC'), (u'hurt', u'hurt', u'VBD'), (u'his', u'he', u'PRP$'), (u'arm', u'arm', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['When', 'he', 'did', 'that', ',', 'he', 'fell', 'off', 'and', 'hurt', 'his', 'arm', '.']}, {'string': ' Joe was in pain and his father came running to check on him and picked him up and sat him on a bench and asked him why he did that.', 'parse': {'tree': '(ROOT (S (S (NP (NNP Joe)) (VP (VBD was) (PP (IN in) (NP (NN pain))))) (CC and) (S (NP (PRP$ his) (NN father)) (VP (VP (VBD came) (S (S (VP (VBG running) (S (VP (TO to) (VP (VB check) (PP (IN on) (NP (PRP him)))))))) (CC and) (S (VP (VP (VBD picked) (NP (PRP him)) (PRT (RP up))) (CC and) (VP (VBD sat) (NP (PRP him)) (PP (IN on) (NP (DT a) (NN bench)))))))) (CC and) (VP (VBD asked) (NP (PRP him)) (SBAR (WHADVP (WRB why)) (S (NP (PRP he)) (VP (VBD did) (NP (DT that)))))))) (. .)))', 'lemma': [(u'Joe', u'Joe', u'NNP'), (u'was', u'be', u'VBD'), (u'in', u'in', u'IN'), (u'pain', u'pain', u'NN'), (u'and', u'and', u'CC'), (u'his', u'he', u'PRP$'), (u'father', u'father', u'NN'), (u'came', u'come', u'VBD'), (u'running', u'run', u'VBG'), (u'to', u'to', u'TO'), (u'check', u'check', u'VB'), (u'on', u'on', u'IN'), (u'him', u'he', u'PRP'), (u'and', u'and', u'CC'), (u'picked', u'pick', u'VBD'), (u'him', u'he', u'PRP'), (u'up', u'up', u'RP'), (u'and', u'and', u'CC'), (u'sat', u'sit', u'VBD'), (u'him', u'he', u'PRP'), (u'on', u'on', u'IN'), (u'a', u'a', u'DT'), (u'bench', u'bench', u'NN'), (u'and', u'and', u'CC'), (u'asked', u'ask', u'VBD'), (u'him', u'he', u'PRP'), (u'why', u'why', u'WRB'), (u'he', u'he', u'PRP'), (u'did', u'do', u'VBD'), (u'that', u'that', u'DT'), (u'.', u'.', u'.')]}, 'tokens': ['Joe', 'was', 'in', 'pain', 'and', 'his', 'father', 'came', 'running', 'to', 'check', 'on', 'him', 'and', 'picked', 'him', 'up', 'and', 'sat', 'him', 'on', 'a', 'bench', 'and', 'asked', 'him', 'why', 'he', 'did', 'that', '.']}, {'string': " Joe looked at his father and said, `` I wanted to be like you. ''", 'parse': {'tree': "(ROOT (S (NP (NNP Joe)) (VP (VP (VBD looked) (PP (IN at) (NP (PRP$ his) (NN father)))) (CC and) (VP (VBD said) (, ,) (`` ``) (S (NP (PRP I)) (VP (VBD wanted) (S (VP (TO to) (VP (VB be) (PP (IN like) (NP (PRP you)))))))))) (. .) ('' '')))", 'lemma': [(u'Joe', u'Joe', u'NNP'), (u'looked', u'look', u'VBD'), (u'at', u'at', u'IN'), (u'his', u'he', u'PRP$'), (u'father', u'father', u'NN'), (u'and', u'and', u'CC'), (u'said', u'say', u'VBD'), (u',', u',', u','), (u'``', u'``', u'``'), (u'I', u'I', u'PRP'), (u'wanted', u'want', u'VBD'), (u'to', u'to', u'TO'), (u'be', u'be', u'VB'), (u'like', u'like', u'IN'), (u'you', u'you', u'PRP'), (u'.', u'.', u'.'), (u"''", u"''", u"''")]}, 'tokens': ['Joe', 'looked', 'at', 'his', 'father', 'and', 'said', ',', '``', 'I', 'wanted', 'to', 'be', 'like', 'you', '.', "''"]}, {'string': " Joe 's father gave him a hug and asked him if he wanted to ride with him on the tractor.", 'parse': {'tree': "(ROOT (S (NP (NP (NNP Joe) (POS 's)) (NN father)) (VP (VP (VBD gave) (NP (PRP him)) (NP (DT a) (NN hug))) (CC and) (VP (VBD asked) (NP (PRP him)) (SBAR (IN if) (S (NP (PRP he)) (VP (VBD wanted) (S (VP (TO to) (VP (VB ride) (PP (IN with) (NP (PRP him))) (PP (IN on) (NP (DT the) (NN tractor))))))))))) (. .)))", 'lemma': [(u'Joe', u'Joe', u'NNP'), (u"'s", u"'s", u'POS'), (u'father', u'father', u'NN'), (u'gave', u'give', u'VBD'), (u'him', u'he', u'PRP'), (u'a', u'a', u'DT'), (u'hug', u'hug', u'NN'), (u'and', u'and', u'CC'), (u'asked', u'ask', u'VBD'), (u'him', u'he', u'PRP'), (u'if', u'if', u'IN'), (u'he', u'he', u'PRP'), (u'wanted', u'want', u'VBD'), (u'to', u'to', u'TO'), (u'ride', u'ride', u'VB'), (u'with', u'with', u'IN'), (u'him', u'he', u'PRP'), (u'on', u'on', u'IN'), (u'the', u'the', u'DT'), (u'tractor', u'tractor', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Joe', "'s", 'father', 'gave', 'him', 'a', 'hug', 'and', 'asked', 'him', 'if', 'he', 'wanted', 'to', 'ride', 'with', 'him', 'on', 'the', 'tractor', '.']}, {'string': ' Joe did and after he got a bandage on his arm, he and his father rode in the field on the tractor.', 'parse': {'tree': '(ROOT (S (S (NP (NNP Joe)) (VP (VBD did))) (CC and) (S (SBAR (IN after) (S (NP (PRP he)) (VP (VBD got) (NP (DT a) (NN bandage)) (PP (IN on) (NP (PRP$ his) (NN arm)))))) (, ,) (NP (NP (PRP he)) (CC and) (NP (PRP$ his) (NN father))) (VP (VBD rode) (PP (IN in) (NP (DT the) (NN field))) (PP (IN on) (NP (DT the) (NN tractor))))) (. .)))', 'lemma': [(u'Joe', u'Joe', u'NNP'), (u'did', u'do', u'VBD'), (u'and', u'and', u'CC'), (u'after', u'after', u'IN'), (u'he', u'he', u'PRP'), (u'got', u'get', u'VBD'), (u'a', u'a', u'DT'), (u'bandage', u'bandage', u'NN'), (u'on', u'on', u'IN'), (u'his', u'he', u'PRP$'), (u'arm', u'arm', u'NN'), (u',', u',', u','), (u'he', u'he', u'PRP'), (u'and', u'and', u'CC'), (u'his', u'he', u'PRP$'), (u'father', u'father', u'NN'), (u'rode', u'ride', u'VBD'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'field', u'field', u'NN'), (u'on', u'on', u'IN'), (u'the', u'the', u'DT'), (u'tractor', u'tractor', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Joe', 'did', 'and', 'after', 'he', 'got', 'a', 'bandage', 'on', 'his', 'arm', ',', 'he', 'and', 'his', 'father', 'rode', 'in', 'the', 'field', 'on', 'the', 'tractor', '.']}], 'questions': [{'question': {'string': ' What was in the field?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD was) (PP (IN in) (NP (DT the) (NN field)))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'was', u'be', u'VBD'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'field', u'field', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'was', 'in', 'the', 'field', '?']}, 'answers': [{'string': ' Ducks, horses, and cows.', 'parse': {'tree': '(ROOT (NP (NP (NNS Ducks)) (, ,) (NP (NP (NNS horses)) (, ,) (CC and) (NP (NNS cows))) (. .)))', 'lemma': [(u'Ducks', u'duck', u'NNS'), (u',', u',', u','), (u'horses', u'horse', u'NNS'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'cows', u'cow', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['Ducks', ',', 'horses', ',', 'and', 'cows', '.']}, {'string': ' A tractor, horses, and cows.', 'parse': {'tree': '(ROOT (NP (NP (DT A) (NN tractor)) (, ,) (NP (NP (NNS horses)) (, ,) (CC and) (NP (NNS cows))) (. .)))', 'lemma': [(u'A', u'a', u'DT'), (u'tractor', u'tractor', u'NN'), (u',', u',', u','), (u'horses', u'horse', u'NNS'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'cows', u'cow', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['A', 'tractor', ',', 'horses', ',', 'and', 'cows', '.']}, {'string': ' Nothing was in the field.', 'parse': {'tree': '(ROOT (S (NP (NN Nothing)) (VP (VBD was) (PP (IN in) (NP (DT the) (NN field)))) (. .)))', 'lemma': [(u'Nothing', u'nothing', u'NN'), (u'was', u'be', u'VBD'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'field', u'field', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Nothing', 'was', 'in', 'the', 'field', '.']}, {'string': ' A tractor and chickens.', 'parse': {'tree': '(ROOT (NP (NP (NP (DT A) (NN tractor)) (CC and) (NP (NNS chickens))) (. .)))', 'lemma': [(u'A', u'a', u'DT'), (u'tractor', u'tractor', u'NN'), (u'and', u'and', u'CC'), (u'chickens', u'chicken', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['A', 'tractor', 'and', 'chickens', '.']}], 'mode': 0}, {'question': {'string': " Why did Joe 's father not want him around the tractor?", 'parse': {'tree': "(ROOT (SBARQ (WHADVP (WRB Why)) (SQ (VBD did) (NP (NP (NNP Joe) (POS 's)) (NN father)) (VP (RB not) (VB want) (NP (PRP him)) (PP (IN around) (NP (DT the) (NN tractor))))) (. ?)))", 'lemma': [(u'Why', u'why', u'WRB'), (u'did', u'do', u'VBD'), (u'Joe', u'Joe', u'NNP'), (u"'s", u"'s", u'POS'), (u'father', u'father', u'NN'), (u'not', u'not', u'RB'), (u'want', u'want', u'VB'), (u'him', u'he', u'PRP'), (u'around', u'around', u'IN'), (u'the', u'the', u'DT'), (u'tractor', u'tractor', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['Why', 'did', 'Joe', "'s", 'father', 'not', 'want', 'him', 'around', 'the', 'tractor', '?']}, 'answers': [{'string': ' He was afraid Joe would have fun.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD was) (ADJP (JJ afraid) (SBAR (S (NP (NNP Joe)) (VP (MD would) (VP (VB have) (NP (NN fun)))))))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'was', u'be', u'VBD'), (u'afraid', u'afraid', u'JJ'), (u'Joe', u'Joe', u'NNP'), (u'would', u'would', u'MD'), (u'have', u'have', u'VB'), (u'fun', u'fun', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'was', 'afraid', 'Joe', 'would', 'have', 'fun', '.']}, {'string': ' He was afraid Joe would never get off the tractor.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD was) (ADJP (JJ afraid) (SBAR (S (NP (NNP Joe)) (VP (MD would) (ADVP (RB never)) (VP (VB get) (PRT (RP off)) (NP (DT the) (NN tractor)))))))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'was', u'be', u'VBD'), (u'afraid', u'afraid', u'JJ'), (u'Joe', u'Joe', u'NNP'), (u'would', u'would', u'MD'), (u'never', u'never', u'RB'), (u'get', u'get', u'VB'), (u'off', u'off', u'RP'), (u'the', u'the', u'DT'), (u'tractor', u'tractor', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'was', 'afraid', 'Joe', 'would', 'never', 'get', 'off', 'the', 'tractor', '.']}, {'string': ' He was afraid Joe would feed the horses and cows.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD was) (ADJP (JJ afraid) (SBAR (S (NP (NNP Joe)) (VP (MD would) (VP (VB feed) (NP (DT the) (NNS horses) (CC and) (NNS cows)))))))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'was', u'be', u'VBD'), (u'afraid', u'afraid', u'JJ'), (u'Joe', u'Joe', u'NNP'), (u'would', u'would', u'MD'), (u'feed', u'feed', u'VB'), (u'the', u'the', u'DT'), (u'horses', u'horse', u'NNS'), (u'and', u'and', u'CC'), (u'cows', u'cow', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'was', 'afraid', 'Joe', 'would', 'feed', 'the', 'horses', 'and', 'cows', '.']}, {'string': ' He was afraid Joe would climb on and hurt himself.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD was) (ADJP (JJ afraid) (SBAR (S (NP (NNP Joe)) (VP (MD would) (VP (VP (VB climb) (PRT (RP on))) (CC and) (VP (VB hurt) (NP (PRP himself))))))))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'was', u'be', u'VBD'), (u'afraid', u'afraid', u'JJ'), (u'Joe', u'Joe', u'NNP'), (u'would', u'would', u'MD'), (u'climb', u'climb', u'VB'), (u'on', u'on', u'RP'), (u'and', u'and', u'CC'), (u'hurt', u'hurt', u'VB'), (u'himself', u'himself', u'PRP'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'was', 'afraid', 'Joe', 'would', 'climb', 'on', 'and', 'hurt', 'himself', '.']}], 'mode': 1}, {'question': {'string': " What did Joe 's father tell him not to do?", 'parse': {'tree': "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD did) (NP (NP (NNP Joe) (POS 's)) (NN father)) (VP (VB tell) (S (NP (PRP him)) (RB not) (VP (TO to) (VP (VB do)))))) (. ?)))", 'lemma': [(u'What', u'what', u'WP'), (u'did', u'do', u'VBD'), (u'Joe', u'Joe', u'NNP'), (u"'s", u"'s", u'POS'), (u'father', u'father', u'NN'), (u'tell', u'tell', u'VB'), (u'him', u'he', u'PRP'), (u'not', u'not', u'RB'), (u'to', u'to', u'TO'), (u'do', u'do', u'VB'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'did', 'Joe', "'s", 'father', 'tell', 'him', 'not', 'to', 'do', '?']}, 'answers': [{'string': ' Get near the tractor.', 'parse': {'tree': '(ROOT (S (VP (VB Get) (PP (IN near) (NP (DT the) (NN tractor)))) (. .)))', 'lemma': [(u'Get', u'get', u'VB'), (u'near', u'near', u'IN'), (u'the', u'the', u'DT'), (u'tractor', u'tractor', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Get', 'near', 'the', 'tractor', '.']}, {'string': ' Ride the cows.', 'parse': {'tree': '(ROOT (S (VP (VB Ride) (NP (DT the) (NNS cows))) (. .)))', 'lemma': [(u'Ride', u'ride', u'VB'), (u'the', u'the', u'DT'), (u'cows', u'cow', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['Ride', 'the', 'cows', '.']}, {'string': ' Ride the tractor real fast.', 'parse': {'tree': '(ROOT (S (VP (VB Ride) (NP (DT the) (NN tractor)) (ADVP (RB real) (RB fast))) (. .)))', 'lemma': [(u'Ride', u'ride', u'VB'), (u'the', u'the', u'DT'), (u'tractor', u'tractor', u'NN'), (u'real', u'real', u'RB'), (u'fast', u'fast', u'RB'), (u'.', u'.', u'.')]}, 'tokens': ['Ride', 'the', 'tractor', 'real', 'fast', '.']}, {'string': ' Feed the cows.', 'parse': {'tree': '(ROOT (S (VP (VB Feed) (NP (DT the) (NNS cows))) (. .)))', 'lemma': [(u'Feed', u'feed', u'VB'), (u'the', u'the', u'DT'), (u'cows', u'cow', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['Feed', 'the', 'cows', '.']}], 'mode': 1}, {'question': {'string': ' What was Joe doing on the tractor?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD was) (NP (NNP Joe)) (VP (VBG doing) (PP (IN on) (NP (DT the) (NN tractor))))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'was', u'be', u'VBD'), (u'Joe', u'Joe', u'NNP'), (u'doing', u'do', u'VBG'), (u'on', u'on', u'IN'), (u'the', u'the', u'DT'), (u'tractor', u'tractor', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'was', 'Joe', 'doing', 'on', 'the', 'tractor', '?']}, 'answers': [{'string': ' Joe sat there and asked his dad to ride with him.', 'parse': {'tree': '(ROOT (S (NP (NNP Joe)) (VP (VP (VBD sat) (ADVP (RB there))) (CC and) (VP (VBD asked) (NP (PRP$ his) (NN dad)) (S (VP (TO to) (VP (VB ride) (PP (IN with) (NP (PRP him)))))))) (. .)))', 'lemma': [(u'Joe', u'Joe', u'NNP'), (u'sat', u'sit', u'VBD'), (u'there', u'there', u'RB'), (u'and', u'and', u'CC'), (u'asked', u'ask', u'VBD'), (u'his', u'he', u'PRP$'), (u'dad', u'dad', u'NN'), (u'to', u'to', u'TO'), (u'ride', u'ride', u'VB'), (u'with', u'with', u'IN'), (u'him', u'he', u'PRP'), (u'.', u'.', u'.')]}, 'tokens': ['Joe', 'sat', 'there', 'and', 'asked', 'his', 'dad', 'to', 'ride', 'with', 'him', '.']}, {'string': ' Joe drove the tractor into a pond.', 'parse': {'tree': '(ROOT (S (NP (NNP Joe)) (VP (VBD drove) (NP (DT the) (NN tractor)) (PP (IN into) (NP (DT a) (NN pond)))) (. .)))', 'lemma': [(u'Joe', u'Joe', u'NNP'), (u'drove', u'drive', u'VBD'), (u'the', u'the', u'DT'), (u'tractor', u'tractor', u'NN'), (u'into', u'into', u'IN'), (u'a', u'a', u'DT'), (u'pond', u'pond', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Joe', 'drove', 'the', 'tractor', 'into', 'a', 'pond', '.']}, {'string': ' Joe sat there and sang and pretending to drive the tractor.', 'parse': {'tree': '(ROOT (S (NP (NNP Joe)) (VP (VP (VBD sat) (ADVP (RB there))) (CC and) (VP (VP (VBD sang)) (CC and) (VP (VBG pretending) (S (VP (TO to) (VP (VB drive) (NP (DT the) (NN tractor)))))))) (. .)))', 'lemma': [(u'Joe', u'Joe', u'NNP'), (u'sat', u'sit', u'VBD'), (u'there', u'there', u'RB'), (u'and', u'and', u'CC'), (u'sang', u'sing', u'VBD'), (u'and', u'and', u'CC'), (u'pretending', u'pretend', u'VBG'), (u'to', u'to', u'TO'), (u'drive', u'drive', u'VB'), (u'the', u'the', u'DT'), (u'tractor', u'tractor', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Joe', 'sat', 'there', 'and', 'sang', 'and', 'pretending', 'to', 'drive', 'the', 'tractor', '.']}, {'string': ' Joe sat there and then pretended he was his father driving the tractor.', 'parse': {'tree': '(ROOT (S (NP (NNP Joe)) (VP (VP (VBD sat) (ADVP (RB there))) (CC and) (ADVP (RB then)) (VP (VBD pretended) (SBAR (S (NP (PRP he)) (VP (VBD was) (NP (PRP$ his) (NN father) (S (VP (VBG driving) (NP (DT the) (NN tractor)))))))))) (. .)))', 'lemma': [(u'Joe', u'Joe', u'NNP'), (u'sat', u'sit', u'VBD'), (u'there', u'there', u'RB'), (u'and', u'and', u'CC'), (u'then', u'then', u'RB'), (u'pretended', u'pretend', u'VBD'), (u'he', u'he', u'PRP'), (u'was', u'be', u'VBD'), (u'his', u'he', u'PRP$'), (u'father', u'father', u'NN'), (u'driving', u'drive', u'VBG'), (u'the', u'the', u'DT'), (u'tractor', u'tractor', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Joe', 'sat', 'there', 'and', 'then', 'pretended', 'he', 'was', 'his', 'father', 'driving', 'the', 'tractor', '.']}], 'mode': 0}]}
{'sentences': [{'string': ' The bird by the river chirped twice before breaking into song, to tell all the other animals to sing along.', 'parse': {'tree': '(ROOT (S (NP (NP (DT The) (NN bird)) (PP (IN by) (NP (DT the) (NN river)))) (VP (VBD chirped) (ADVP (RB twice)) (PP (IN before) (S (VP (VBG breaking) (PP (IN into) (NP (NN song)))))) (, ,) (S (VP (TO to) (VP (VB tell) (NP (PDT all) (DT the) (JJ other) (NNS animals)) (S (VP (TO to) (VP (VB sing) (PRT (RP along))))))))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'bird', u'bird', u'NN'), (u'by', u'by', u'IN'), (u'the', u'the', u'DT'), (u'river', u'river', u'NN'), (u'chirped', u'chirp', u'VBD'), (u'twice', u'twice', u'RB'), (u'before', u'before', u'IN'), (u'breaking', u'break', u'VBG'), (u'into', u'into', u'IN'), (u'song', u'song', u'NN'), (u',', u',', u','), (u'to', u'to', u'TO'), (u'tell', u'tell', u'VB'), (u'all', u'all', u'PDT'), (u'the', u'the', u'DT'), (u'other', u'other', u'JJ'), (u'animals', u'animal', u'NNS'), (u'to', u'to', u'TO'), (u'sing', u'sing', u'VB'), (u'along', u'along', u'RP'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'bird', 'by', 'the', 'river', 'chirped', 'twice', 'before', 'breaking', 'into', 'song', ',', 'to', 'tell', 'all', 'the', 'other', 'animals', 'to', 'sing', 'along', '.']}, {'string': ' The dog barked, the other birds sang, the squirrel squeaked, and the rabbit clapped its ears together.', 'parse': {'tree': '(ROOT (S (S (NP (DT The) (NN dog)) (VP (VBD barked))) (, ,) (S (NP (DT the) (JJ other) (NNS birds)) (VP (VBD sang))) (, ,) (S (NP (DT the) (NN squirrel)) (VP (VBD squeaked))) (, ,) (CC and) (S (NP (DT the) (NN rabbit)) (VP (VBD clapped) (NP (PRP$ its) (NNS ears)) (ADVP (RB together)))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'dog', u'dog', u'NN'), (u'barked', u'bark', u'VBD'), (u',', u',', u','), (u'the', u'the', u'DT'), (u'other', u'other', u'JJ'), (u'birds', u'bird', u'NNS'), (u'sang', u'sing', u'VBD'), (u',', u',', u','), (u'the', u'the', u'DT'), (u'squirrel', u'squirrel', u'NN'), (u'squeaked', u'squeak', u'VBD'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'the', u'the', u'DT'), (u'rabbit', u'rabbit', u'NN'), (u'clapped', u'clap', u'VBD'), (u'its', u'its', u'PRP$'), (u'ears', u'ear', u'NNS'), (u'together', u'together', u'RB'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'dog', 'barked', ',', 'the', 'other', 'birds', 'sang', ',', 'the', 'squirrel', 'squeaked', ',', 'and', 'the', 'rabbit', 'clapped', 'its', 'ears', 'together', '.']}, {'string': ' The cat did not because his mouth was hot from some very strong mustard.', 'parse': {'tree': '(ROOT (S (NP (DT The) (NN cat)) (VP (VBD did) (SBAR (RB not) (IN because) (S (NP (PRP$ his) (NN mouth)) (VP (VBD was) (ADJP (JJ hot) (PP (IN from) (NP (DT some) (ADJP (RB very) (JJ strong)) (NN mustard)))))))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'cat', u'cat', u'NN'), (u'did', u'do', u'VBD'), (u'not', u'not', u'RB'), (u'because', u'because', u'IN'), (u'his', u'he', u'PRP$'), (u'mouth', u'mouth', u'NN'), (u'was', u'be', u'VBD'), (u'hot', u'hot', u'JJ'), (u'from', u'from', u'IN'), (u'some', u'some', u'DT'), (u'very', u'very', u'RB'), (u'strong', u'strong', u'JJ'), (u'mustard', u'mustard', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'cat', 'did', 'not', 'because', 'his', 'mouth', 'was', 'hot', 'from', 'some', 'very', 'strong', 'mustard', '.']}, {'string': " He thought to himself that he would n't have eaten that hot dog if he knew it was on it.", 'parse': {'tree': "(ROOT (S (NP (PRP He)) (VP (VBD thought) (PP (TO to) (NP (PRP himself))) (SBAR (IN that) (S (NP (PRP he)) (VP (MD would) (RB n't) (VP (VB have) (VP (VBN eaten) (NP (DT that) (JJ hot) (NN dog)) (SBAR (IN if) (S (NP (PRP he)) (VP (VBD knew) (SBAR (S (NP (PRP it)) (VP (VBD was) (PP (IN on) (NP (PRP it))))))))))))))) (. .)))", 'lemma': [(u'He', u'he', u'PRP'), (u'thought', u'think', u'VBD'), (u'to', u'to', u'TO'), (u'himself', u'himself', u'PRP'), (u'that', u'that', u'IN'), (u'he', u'he', u'PRP'), (u'would', u'would', u'MD'), (u"n't", u'not', u'RB'), (u'have', u'have', u'VB'), (u'eaten', u'eat', u'VBN'), (u'that', u'that', u'DT'), (u'hot', u'hot', u'JJ'), (u'dog', u'dog', u'NN'), (u'if', u'if', u'IN'), (u'he', u'he', u'PRP'), (u'knew', u'know', u'VBD'), (u'it', u'it', u'PRP'), (u'was', u'be', u'VBD'), (u'on', u'on', u'IN'), (u'it', u'it', u'PRP'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'thought', 'to', 'himself', 'that', 'he', 'would', "n't", 'have', 'eaten', 'that', 'hot', 'dog', 'if', 'he', 'knew', 'it', 'was', 'on', 'it', '.']}, {'string': " He tried to look for water, but that mustard drove his nose crazy and he could n't smell anything.", 'parse': {'tree': "(ROOT (S (S (NP (PRP He)) (VP (VBD tried) (S (VP (TO to) (VP (VB look) (PP (IN for) (NP (NN water)))))))) (, ,) (CC but) (S (S (NP (DT that) (NN mustard)) (VP (VBD drove) (S (NP (PRP$ his) (NN nose)) (ADJP (JJ crazy))))) (CC and) (S (NP (PRP he)) (VP (MD could) (RB n't) (VP (VB smell) (NP (NN anything)))))) (. .)))", 'lemma': [(u'He', u'he', u'PRP'), (u'tried', u'try', u'VBD'), (u'to', u'to', u'TO'), (u'look', u'look', u'VB'), (u'for', u'for', u'IN'), (u'water', u'water', u'NN'), (u',', u',', u','), (u'but', u'but', u'CC'), (u'that', u'that', u'DT'), (u'mustard', u'mustard', u'NN'), (u'drove', u'drive', u'VBD'), (u'his', u'he', u'PRP$'), (u'nose', u'nose', u'NN'), (u'crazy', u'crazy', u'JJ'), (u'and', u'and', u'CC'), (u'he', u'he', u'PRP'), (u'could', u'could', u'MD'), (u"n't", u'not', u'RB'), (u'smell', u'smell', u'VB'), (u'anything', u'anything', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'tried', 'to', 'look', 'for', 'water', ',', 'but', 'that', 'mustard', 'drove', 'his', 'nose', 'crazy', 'and', 'he', 'could', "n't", 'smell', 'anything', '.']}, {'string': ' Not even water.', 'parse': {'tree': '(ROOT (FRAG (RB Not) (RB even) (NP (NN water)) (. .)))', 'lemma': [(u'Not', u'not', u'RB'), (u'even', u'even', u'RB'), (u'water', u'water', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Not', 'even', 'water', '.']}, {'string': ' Luckily for the cat, cats have very good eyes, and he saw a puddle out of the corner of his eye.', 'parse': {'tree': '(ROOT (S (PP (ADVP (RB Luckily)) (IN for) (NP (DT the) (NN cat))) (, ,) (S (NP (NNS cats)) (VP (VBP have) (NP (ADJP (RB very) (JJ good)) (NNS eyes)))) (, ,) (CC and) (S (NP (PRP he)) (VP (VBD saw) (NP (DT a) (NN puddle)) (PRT (RP out)) (PP (IN of) (NP (NP (DT the) (NN corner)) (PP (IN of) (NP (PRP$ his) (NN eye))))))) (. .)))', 'lemma': [(u'Luckily', u'luckily', u'RB'), (u'for', u'for', u'IN'), (u'the', u'the', u'DT'), (u'cat', u'cat', u'NN'), (u',', u',', u','), (u'cats', u'cat', u'NNS'), (u'have', u'have', u'VBP'), (u'very', u'very', u'RB'), (u'good', u'good', u'JJ'), (u'eyes', u'eye', u'NNS'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'he', u'he', u'PRP'), (u'saw', u'see', u'VBD'), (u'a', u'a', u'DT'), (u'puddle', u'puddle', u'NN'), (u'out', u'out', u'RP'), (u'of', u'of', u'IN'), (u'the', u'the', u'DT'), (u'corner', u'corner', u'NN'), (u'of', u'of', u'IN'), (u'his', u'he', u'PRP$'), (u'eye', u'eye', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Luckily', 'for', 'the', 'cat', ',', 'cats', 'have', 'very', 'good', 'eyes', ',', 'and', 'he', 'saw', 'a', 'puddle', 'out', 'of', 'the', 'corner', 'of', 'his', 'eye', '.']}, {'string': ' He ran to it.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD ran) (PP (TO to) (NP (PRP it)))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'ran', u'run', u'VBD'), (u'to', u'to', u'TO'), (u'it', u'it', u'PRP'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'ran', 'to', 'it', '.']}, {'string': ' He wondered why the water was kind of yellow, and thought it must be from the leaves floating in the puddle.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VP (VBD wondered) (SBAR (WHADVP (WRB why)) (S (NP (DT the) (NN water)) (VP (VBD was) (ADJP (ADVP (NN kind) (IN of)) (JJ yellow)))))) (, ,) (CC and) (VP (VBD thought) (SBAR (S (NP (PRP it)) (VP (MD must) (VP (VB be) (PP (IN from) (NP (NP (DT the) (NNS leaves)) (VP (VBG floating) (PP (IN in) (NP (DT the) (NN puddle)))))))))))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'wondered', u'wonder', u'VBD'), (u'why', u'why', u'WRB'), (u'the', u'the', u'DT'), (u'water', u'water', u'NN'), (u'was', u'be', u'VBD'), (u'kind', u'kind', u'NN'), (u'of', u'of', u'IN'), (u'yellow', u'yellow', u'JJ'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'thought', u'think', u'VBD'), (u'it', u'it', u'PRP'), (u'must', u'must', u'MD'), (u'be', u'be', u'VB'), (u'from', u'from', u'IN'), (u'the', u'the', u'DT'), (u'leaves', u'leaf', u'NNS'), (u'floating', u'float', u'VBG'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'puddle', u'puddle', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'wondered', 'why', 'the', 'water', 'was', 'kind', 'of', 'yellow', ',', 'and', 'thought', 'it', 'must', 'be', 'from', 'the', 'leaves', 'floating', 'in', 'the', 'puddle', '.']}, {'string': ' The cat took a big drink.', 'parse': {'tree': '(ROOT (S (NP (DT The) (NN cat)) (VP (VBD took) (NP (DT a) (JJ big) (NN drink))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'cat', u'cat', u'NN'), (u'took', u'take', u'VBD'), (u'a', u'a', u'DT'), (u'big', u'big', u'JJ'), (u'drink', u'drink', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'cat', 'took', 'a', 'big', 'drink', '.']}, {'string': ' It made his tongue felt so much better that it made him want to sing, but the others were done and the bird had flown away.', 'parse': {'tree': '(ROOT (S (S (NP (PRP It)) (VP (VBD made) (SBAR (S (NP (PRP$ his) (NN tongue)) (VP (VBD felt) (ADJP (RB so) (RB much) (JJR better)) (SBAR (IN that) (S (NP (PRP it)) (VP (VBD made) (SBAR (S (NP (PRP him)) (VP (VBP want) (S (VP (TO to) (VP (VB sing))))))))))))))) (, ,) (CC but) (S (S (NP (DT the) (NNS others)) (VP (VBD were) (VP (VBN done)))) (CC and) (S (NP (DT the) (NN bird)) (VP (VBD had) (VP (VBN flown) (PRT (RP away)))))) (. .)))', 'lemma': [(u'It', u'it', u'PRP'), (u'made', u'make', u'VBD'), (u'his', u'he', u'PRP$'), (u'tongue', u'tongue', u'NN'), (u'felt', u'feel', u'VBD'), (u'so', u'so', u'RB'), (u'much', u'much', u'RB'), (u'better', u'better', u'JJR'), (u'that', u'that', u'IN'), (u'it', u'it', u'PRP'), (u'made', u'make', u'VBD'), (u'him', u'he', u'PRP'), (u'want', u'want', u'VBP'), (u'to', u'to', u'TO'), (u'sing', u'sing', u'VB'), (u',', u',', u','), (u'but', u'but', u'CC'), (u'the', u'the', u'DT'), (u'others', u'other', u'NNS'), (u'were', u'be', u'VBD'), (u'done', u'do', u'VBN'), (u'and', u'and', u'CC'), (u'the', u'the', u'DT'), (u'bird', u'bird', u'NN'), (u'had', u'have', u'VBD'), (u'flown', u'fly', u'VBN'), (u'away', u'away', u'RP'), (u'.', u'.', u'.')]}, 'tokens': ['It', 'made', 'his', 'tongue', 'felt', 'so', 'much', 'better', 'that', 'it', 'made', 'him', 'want', 'to', 'sing', ',', 'but', 'the', 'others', 'were', 'done', 'and', 'the', 'bird', 'had', 'flown', 'away', '.']}], 'questions': [{'question': {'string': " What made the cat 's tongue feel better?", 'parse': {'tree': "(ROOT (SBARQ (WHNP (WP What)) (SQ (VP (VBD made) (SBAR (S (NP (NP (DT the) (NN cat) (POS 's)) (NN tongue)) (VP (VBP feel) (ADVP (RBR better))))))) (. ?)))", 'lemma': [(u'What', u'what', u'WP'), (u'made', u'make', u'VBD'), (u'the', u'the', u'DT'), (u'cat', u'cat', u'NN'), (u"'s", u"'s", u'POS'), (u'tongue', u'tongue', u'NN'), (u'feel', u'feel', u'VBP'), (u'better', u'better', u'RBR'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'made', 'the', 'cat', "'s", 'tongue', 'feel', 'better', '?']}, 'answers': [{'string': ' Water', 'parse': {'tree': '(ROOT (NP (NNP Water)))', 'lemma': [(u'Water', u'Water', u'NNP')]}, 'tokens': ['Water']}, {'string': ' The bird.', 'parse': {'tree': '(ROOT (NP (DT The) (NN bird) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'bird', u'bird', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'bird', '.']}, {'string': ' Singing', 'parse': {'tree': '(ROOT (NP (NN Singing)))', 'lemma': [(u'Singing', u'singing', u'NN')]}, 'tokens': ['Singing']}, {'string': ' Mustard', 'parse': {'tree': '(ROOT (NP (NNP Mustard)))', 'lemma': [(u'Mustard', u'Mustard', u'NNP')]}, 'tokens': ['Mustard']}], 'mode': 0}, {'question': {'string': ' Where did the cat find water?', 'parse': {'tree': '(ROOT (SBARQ (WHADVP (WRB Where)) (SQ (VBD did) (NP (DT the) (NN cat)) (VP (VB find) (NP (NN water)))) (. ?)))', 'lemma': [(u'Where', u'where', u'WRB'), (u'did', u'do', u'VBD'), (u'the', u'the', u'DT'), (u'cat', u'cat', u'NN'), (u'find', u'find', u'VB'), (u'water', u'water', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['Where', 'did', 'the', 'cat', 'find', 'water', '?']}, 'answers': [{'string': ' In a water bottle', 'parse': {'tree': '(ROOT (PP (IN In) (NP (DT a) (NN water) (NN bottle))))', 'lemma': [(u'In', u'in', u'IN'), (u'a', u'a', u'DT'), (u'water', u'water', u'NN'), (u'bottle', u'bottle', u'NN')]}, 'tokens': ['In', 'a', 'water', 'bottle']}, {'string': ' In a puddle', 'parse': {'tree': '(ROOT (PP (IN In) (NP (DT a) (NN puddle))))', 'lemma': [(u'In', u'in', u'IN'), (u'a', u'a', u'DT'), (u'puddle', u'puddle', u'NN')]}, 'tokens': ['In', 'a', 'puddle']}, {'string': ' In a water dish', 'parse': {'tree': '(ROOT (PP (IN In) (NP (DT a) (NN water) (NN dish))))', 'lemma': [(u'In', u'in', u'IN'), (u'a', u'a', u'DT'), (u'water', u'water', u'NN'), (u'dish', u'dish', u'NN')]}, 'tokens': ['In', 'a', 'water', 'dish']}, {'string': ' In a river', 'parse': {'tree': '(ROOT (PP (IN In) (NP (DT a) (NN river))))', 'lemma': [(u'In', u'in', u'IN'), (u'a', u'a', u'DT'), (u'river', u'river', u'NN')]}, 'tokens': ['In', 'a', 'river']}], 'mode': 0}, {'question': {'string': ' What was floating in the puddle?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD was) (NP (NP (VBG floating)) (PP (IN in) (NP (DT the) (NN puddle))))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'was', u'be', u'VBD'), (u'floating', u'float', u'VBG'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'puddle', u'puddle', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'was', 'floating', 'in', 'the', 'puddle', '?']}, 'answers': [{'string': ' Mustard', 'parse': {'tree': '(ROOT (NP (NNP Mustard)))', 'lemma': [(u'Mustard', u'Mustard', u'NNP')]}, 'tokens': ['Mustard']}, {'string': ' A rabbit', 'parse': {'tree': '(ROOT (FRAG (NP (DT A) (NN rabbit))))', 'lemma': [(u'A', u'a', u'DT'), (u'rabbit', u'rabbit', u'NN')]}, 'tokens': ['A', 'rabbit']}, {'string': ' Leaves', 'parse': {'tree': '(ROOT (NP (NNS Leaves)))', 'lemma': [(u'Leaves', u'leaf', u'NNS')]}, 'tokens': ['Leaves']}, {'string': ' A bird', 'parse': {'tree': '(ROOT (FRAG (NP (DT A) (NN bird))))', 'lemma': [(u'A', u'a', u'DT'), (u'bird', u'bird', u'NN')]}, 'tokens': ['A', 'bird']}], 'mode': 1}, {'question': {'string': ' Who told the dog to sing along?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP Who)) (SQ (VP (VBD told) (NP (DT the) (NN dog)) (S (VP (TO to) (VP (VB sing) (PRT (RP along))))))) (. ?)))', 'lemma': [(u'Who', u'who', u'WP'), (u'told', u'tell', u'VBD'), (u'the', u'the', u'DT'), (u'dog', u'dog', u'NN'), (u'to', u'to', u'TO'), (u'sing', u'sing', u'VB'), (u'along', u'along', u'RP'), (u'?', u'?', u'.')]}, 'tokens': ['Who', 'told', 'the', 'dog', 'to', 'sing', 'along', '?']}, 'answers': [{'string': ' the squirrel', 'parse': {'tree': '(ROOT (X (DT the) (ADJP (JJ squirrel))))', 'lemma': [(u'the', u'the', u'DT'), (u'squirrel', u'squirrel', u'JJ')]}, 'tokens': ['the', 'squirrel']}, {'string': ' The bird', 'parse': {'tree': '(ROOT (FRAG (NP (DT The) (NN bird))))', 'lemma': [(u'The', u'the', u'DT'), (u'bird', u'bird', u'NN')]}, 'tokens': ['The', 'bird']}, {'string': ' the rabbit', 'parse': {'tree': '(ROOT (FRAG (NP (DT the) (NN rabbit))))', 'lemma': [(u'the', u'the', u'DT'), (u'rabbit', u'rabbit', u'NN')]}, 'tokens': ['the', 'rabbit']}, {'string': ' the cat', 'parse': {'tree': '(ROOT (FRAG (NP (DT the) (NN cat))))', 'lemma': [(u'the', u'the', u'DT'), (u'cat', u'cat', u'NN')]}, 'tokens': ['the', 'cat']}], 'mode': 0}]}
{'sentences': [{'string': " I stepped inside my mother 's car and dropped my backpack on the floor as my face filled with excitement.", 'parse': {'tree': "(ROOT (S (NP (PRP I)) (VP (VP (VBD stepped) (PP (IN inside) (NP (NP (PRP$ my) (NN mother) (POS 's)) (NN car)))) (CC and) (VP (VBD dropped) (NP (PRP$ my) (NN backpack)) (PP (IN on) (NP (DT the) (NN floor))) (PP (IN as) (NP (NP (PRP$ my) (NN face)) (VP (VBN filled) (PP (IN with) (NP (NN excitement)))))))) (. .)))", 'lemma': [(u'I', u'I', u'PRP'), (u'stepped', u'step', u'VBD'), (u'inside', u'inside', u'IN'), (u'my', u'my', u'PRP$'), (u'mother', u'mother', u'NN'), (u"'s", u"'s", u'POS'), (u'car', u'car', u'NN'), (u'and', u'and', u'CC'), (u'dropped', u'drop', u'VBD'), (u'my', u'my', u'PRP$'), (u'backpack', u'backpack', u'NN'), (u'on', u'on', u'IN'), (u'the', u'the', u'DT'), (u'floor', u'floor', u'NN'), (u'as', u'as', u'IN'), (u'my', u'my', u'PRP$'), (u'face', u'face', u'NN'), (u'filled', u'fill', u'VBN'), (u'with', u'with', u'IN'), (u'excitement', u'excitement', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['I', 'stepped', 'inside', 'my', 'mother', "'s", 'car', 'and', 'dropped', 'my', 'backpack', 'on', 'the', 'floor', 'as', 'my', 'face', 'filled', 'with', 'excitement', '.']}, {'string': " Today 's the day that we 're going to the candy store and picking out a new treat to have after dinner.", 'parse': {'tree': "(ROOT (S (NP (NNP Today)) (VP (VBZ 's) (SBAR (NP (DT the) (NN day)) (IN that) (S (NP (PRP we)) (VP (VBP 're) (VP (VP (VBG going) (PP (TO to) (NP (DT the) (NN candy) (NN store)))) (CC and) (VP (VBG picking) (PRT (RP out)) (NP (DT a) (JJ new) (NN treat)) (S (VP (TO to) (VP (VB have) (PP (IN after) (NP (NN dinner)))))))))))) (. .)))", 'lemma': [(u'Today', u'Today', u'NNP'), (u"'s", u'be', u'VBZ'), (u'the', u'the', u'DT'), (u'day', u'day', u'NN'), (u'that', u'that', u'IN'), (u'we', u'we', u'PRP'), (u"'re", u'be', u'VBP'), (u'going', u'go', u'VBG'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'candy', u'candy', u'NN'), (u'store', u'store', u'NN'), (u'and', u'and', u'CC'), (u'picking', u'pick', u'VBG'), (u'out', u'out', u'RP'), (u'a', u'a', u'DT'), (u'new', u'new', u'JJ'), (u'treat', u'treat', u'NN'), (u'to', u'to', u'TO'), (u'have', u'have', u'VB'), (u'after', u'after', u'IN'), (u'dinner', u'dinner', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Today', "'s", 'the', 'day', 'that', 'we', "'re", 'going', 'to', 'the', 'candy', 'store', 'and', 'picking', 'out', 'a', 'new', 'treat', 'to', 'have', 'after', 'dinner', '.']}, {'string': ' Some people may like going to the movies, or the game room, or even to parks, but going to the candy store once a week and getting to see all the different colors and taste all the different treats is my favorite activity.', 'parse': {'tree': '(ROOT (S (S (NP (DT Some) (NNS people)) (VP (MD may) (VP (VB like) (S (VP (VBG going) (PP (PP (TO to) (NP (NP (DT the) (NNS movies)) (, ,) (CC or) (NP (DT the) (NN game) (NN room)))) (, ,) (CC or) (RB even) (PP (TO to) (NP (NNS parks))))))))) (, ,) (CC but) (S (S (VP (VP (VBG going) (PP (TO to) (NP (DT the) (NN candy) (NN store))) (NP (RB once) (DT a) (NN week))) (CC and) (VP (VBG getting) (S (VP (TO to) (VP (VP (VB see) (NP (PDT all) (DT the) (JJ different) (NNS colors))) (CC and) (VP (VB taste) (NP (PDT all) (DT the) (JJ different) (NN treats))))))))) (VP (VBZ is) (NP (PRP$ my) (JJ favorite) (NN activity)))) (. .)))', 'lemma': [(u'Some', u'some', u'DT'), (u'people', u'people', u'NNS'), (u'may', u'may', u'MD'), (u'like', u'like', u'VB'), (u'going', u'go', u'VBG'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'movies', u'movie', u'NNS'), (u',', u',', u','), (u'or', u'or', u'CC'), (u'the', u'the', u'DT'), (u'game', u'game', u'NN'), (u'room', u'room', u'NN'), (u',', u',', u','), (u'or', u'or', u'CC'), (u'even', u'even', u'RB'), (u'to', u'to', u'TO'), (u'parks', u'park', u'NNS'), (u',', u',', u','), (u'but', u'but', u'CC'), (u'going', u'go', u'VBG'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'candy', u'candy', u'NN'), (u'store', u'store', u'NN'), (u'once', u'once', u'RB'), (u'a', u'a', u'DT'), (u'week', u'week', u'NN'), (u'and', u'and', u'CC'), (u'getting', u'get', u'VBG'), (u'to', u'to', u'TO'), (u'see', u'see', u'VB'), (u'all', u'all', u'PDT'), (u'the', u'the', u'DT'), (u'different', u'different', u'JJ'), (u'colors', u'color', u'NNS'), (u'and', u'and', u'CC'), (u'taste', u'taste', u'VB'), (u'all', u'all', u'PDT'), (u'the', u'the', u'DT'), (u'different', u'different', u'JJ'), (u'treats', u'treat', u'NN'), (u'is', u'be', u'VBZ'), (u'my', u'my', u'PRP$'), (u'favorite', u'favorite', u'JJ'), (u'activity', u'activity', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Some', 'people', 'may', 'like', 'going', 'to', 'the', 'movies', ',', 'or', 'the', 'game', 'room', ',', 'or', 'even', 'to', 'parks', ',', 'but', 'going', 'to', 'the', 'candy', 'store', 'once', 'a', 'week', 'and', 'getting', 'to', 'see', 'all', 'the', 'different', 'colors', 'and', 'taste', 'all', 'the', 'different', 'treats', 'is', 'my', 'favorite', 'activity', '.']}, {'string': " As soon as we pull up, she tells me to not run around too much inside, but I 'm so excited I barely hear her.", 'parse': {'tree': "(ROOT (S (SBAR (IN As) (S (S (SBAR (RB soon) (IN as) (S (NP (PRP we)) (VP (VBP pull) (PRT (RP up))))) (, ,) (NP (PRP she)) (VP (VBZ tells) (S (NP (PRP me)) (VP (TO to) (RB not) (VP (VB run) (PRT (RP around)) (ADVP (RB too) (RB much) (RB inside))))))) (, ,) (CC but) (S (NP (PRP I)) (VP (VBP 'm) (ADJP (RB so) (JJ excited)))))) (NP (PRP I)) (ADVP (RB barely)) (VP (VBP hear) (NP (PRP her))) (. .)))", 'lemma': [(u'As', u'as', u'IN'), (u'soon', u'soon', u'RB'), (u'as', u'as', u'IN'), (u'we', u'we', u'PRP'), (u'pull', u'pull', u'VBP'), (u'up', u'up', u'RP'), (u',', u',', u','), (u'she', u'she', u'PRP'), (u'tells', u'tell', u'VBZ'), (u'me', u'I', u'PRP'), (u'to', u'to', u'TO'), (u'not', u'not', u'RB'), (u'run', u'run', u'VB'), (u'around', u'around', u'RP'), (u'too', u'too', u'RB'), (u'much', u'much', u'RB'), (u'inside', u'inside', u'RB'), (u',', u',', u','), (u'but', u'but', u'CC'), (u'I', u'I', u'PRP'), (u"'m", u'be', u'VBP'), (u'so', u'so', u'RB'), (u'excited', u'excited', u'JJ'), (u'I', u'I', u'PRP'), (u'barely', u'barely', u'RB'), (u'hear', u'hear', u'VBP'), (u'her', u'she', u'PRP'), (u'.', u'.', u'.')]}, 'tokens': ['As', 'soon', 'as', 'we', 'pull', 'up', ',', 'she', 'tells', 'me', 'to', 'not', 'run', 'around', 'too', 'much', 'inside', ',', 'but', 'I', "'m", 'so', 'excited', 'I', 'barely', 'hear', 'her', '.']}, {'string': ' She opens the door and we walk inside where the clerk first welcomes us.', 'parse': {'tree': '(ROOT (S (S (NP (PRP She)) (VP (VBZ opens) (NP (DT the) (NN door)))) (CC and) (S (NP (PRP we)) (VP (VBP walk) (ADVP (RB inside)) (SBAR (WHADVP (WRB where)) (S (NP (DT the) (NN clerk)) (ADVP (RB first)) (VP (VBZ welcomes) (NP (PRP us))))))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'opens', u'open', u'VBZ'), (u'the', u'the', u'DT'), (u'door', u'door', u'NN'), (u'and', u'and', u'CC'), (u'we', u'we', u'PRP'), (u'walk', u'walk', u'VBP'), (u'inside', u'inside', u'RB'), (u'where', u'where', u'WRB'), (u'the', u'the', u'DT'), (u'clerk', u'clerk', u'NN'), (u'first', u'first', u'RB'), (u'welcomes', u'welcome', u'VBZ'), (u'us', u'we', u'PRP'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'opens', 'the', 'door', 'and', 'we', 'walk', 'inside', 'where', 'the', 'clerk', 'first', 'welcomes', 'us', '.']}, {'string': " Since we do this each week, he calls me by my name of Trevor and says that he 's come up with a few candies for me to try.", 'parse': {'tree': "(ROOT (S (SBAR (IN Since) (S (NP (PRP we)) (VP (VBP do) (NP (DT this)) (NP (DT each) (NN week))))) (, ,) (NP (PRP he)) (VP (VP (VBZ calls) (NP (PRP me)) (PP (IN by) (NP (NP (PRP$ my) (NN name)) (PP (IN of) (NP (NNP Trevor)))))) (CC and) (VP (VBZ says) (SBAR (IN that) (S (NP (PRP he)) (VP (VBZ 's) (VP (VBN come) (PRT (RP up)) (PP (IN with) (NP (NP (DT a) (JJ few) (NNS candies)) (PP (IN for) (NP (PRP me))))) (S (VP (TO to) (VP (VB try)))))))))) (. .)))", 'lemma': [(u'Since', u'since', u'IN'), (u'we', u'we', u'PRP'), (u'do', u'do', u'VBP'), (u'this', u'this', u'DT'), (u'each', u'each', u'DT'), (u'week', u'week', u'NN'), (u',', u',', u','), (u'he', u'he', u'PRP'), (u'calls', u'call', u'VBZ'), (u'me', u'I', u'PRP'), (u'by', u'by', u'IN'), (u'my', u'my', u'PRP$'), (u'name', u'name', u'NN'), (u'of', u'of', u'IN'), (u'Trevor', u'Trevor', u'NNP'), (u'and', u'and', u'CC'), (u'says', u'say', u'VBZ'), (u'that', u'that', u'IN'), (u'he', u'he', u'PRP'), (u"'s", u'be', u'VBZ'), (u'come', u'come', u'VBN'), (u'up', u'up', u'RP'), (u'with', u'with', u'IN'), (u'a', u'a', u'DT'), (u'few', u'few', u'JJ'), (u'candies', u'candy', u'NNS'), (u'for', u'for', u'IN'), (u'me', u'I', u'PRP'), (u'to', u'to', u'TO'), (u'try', u'try', u'VB'), (u'.', u'.', u'.')]}, 'tokens': ['Since', 'we', 'do', 'this', 'each', 'week', ',', 'he', 'calls', 'me', 'by', 'my', 'name', 'of', 'Trevor', 'and', 'says', 'that', 'he', "'s", 'come', 'up', 'with', 'a', 'few', 'candies', 'for', 'me', 'to', 'try', '.']}, {'string': " I walk over to the table and see three types of M&M 's laid out.", 'parse': {'tree': "(ROOT (S (NP (PRP I)) (VP (VP (VBP walk) (PRT (RP over)) (PP (TO to) (NP (DT the) (NN table)))) (CC and) (VP (VBP see) (SBAR (S (NP (NP (CD three) (NNS types)) (PP (IN of) (NP (NNP M&M)))) (VP (VBZ 's) (VP (VBN laid) (PRT (RP out)))))))) (. .)))", 'lemma': [(u'I', u'I', u'PRP'), (u'walk', u'walk', u'VBP'), (u'over', u'over', u'RP'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'table', u'table', u'NN'), (u'and', u'and', u'CC'), (u'see', u'see', u'VBP'), (u'three', u'three', u'CD'), (u'types', u'type', u'NNS'), (u'of', u'of', u'IN'), (u'M&M', u'M&M', u'NNP'), (u"'s", u'be', u'VBZ'), (u'laid', u'lay', u'VBN'), (u'out', u'out', u'RP'), (u'.', u'.', u'.')]}, 'tokens': ['I', 'walk', 'over', 'to', 'the', 'table', 'and', 'see', 'three', 'types', 'of', 'M&M', "'s", 'laid', 'out', '.']}, {'string': " He knows I 'm not a big fan of peanuts so he left out the peanut kind, instead giving me mint flavored, cookies 'n creme flavored, and white chocolate flavored.", 'parse': {'tree': "(ROOT (S (NP (PRP He)) (VP (VBZ knows) (SBAR (S (NP (PRP I)) (VP (VBP 'm) (RB not) (NP (NP (DT a) (JJ big) (NN fan)) (PP (IN of) (NP (NNS peanuts)))) (SBAR (IN so) (S (NP (PRP he)) (VP (VBD left) (PRT (RP out)) (NP (DT the) (NN peanut) (NN kind)) (, ,) (S (ADVP (RB instead)) (VP (VBG giving) (NP (PRP me)) (NP (NP (NP (NN mint) (NN flavored)) (, ,) (NP (NNS cookies))) (CC 'n) (NP (NP (NN creme)) (VP (VBN flavored))) (, ,) (CC and) (NP (NP (JJ white) (NN chocolate)) (VP (VBN flavored))))))))))))) (. .)))", 'lemma': [(u'He', u'he', u'PRP'), (u'knows', u'know', u'VBZ'), (u'I', u'I', u'PRP'), (u"'m", u'be', u'VBP'), (u'not', u'not', u'RB'), (u'a', u'a', u'DT'), (u'big', u'big', u'JJ'), (u'fan', u'fan', u'NN'), (u'of', u'of', u'IN'), (u'peanuts', u'peanut', u'NNS'), (u'so', u'so', u'IN'), (u'he', u'he', u'PRP'), (u'left', u'leave', u'VBD'), (u'out', u'out', u'RP'), (u'the', u'the', u'DT'), (u'peanut', u'peanut', u'NN'), (u'kind', u'kind', u'NN'), (u',', u',', u','), (u'instead', u'instead', u'RB'), (u'giving', u'give', u'VBG'), (u'me', u'I', u'PRP'), (u'mint', u'mint', u'NN'), (u'flavored', u'flavored', u'NN'), (u',', u',', u','), (u'cookies', u'cookie', u'NNS'), (u"'n", u"'n", u'CC'), (u'creme', u'creme', u'NN'), (u'flavored', u'flavor', u'VBN'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'white', u'white', u'JJ'), (u'chocolate', u'chocolate', u'NN'), (u'flavored', u'flavor', u'VBN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'knows', 'I', "'m", 'not', 'a', 'big', 'fan', 'of', 'peanuts', 'so', 'he', 'left', 'out', 'the', 'peanut', 'kind', ',', 'instead', 'giving', 'me', 'mint', 'flavored', ',', 'cookies', "'n", 'creme', 'flavored', ',', 'and', 'white', 'chocolate', 'flavored', '.']}, {'string': ' They all taste great and the clerk asks which I like the most.', 'parse': {'tree': '(ROOT (S (S (NP (PRP They)) (ADVP (DT all)) (VP (VBP taste) (ADJP (JJ great)))) (CC and) (S (NP (DT the) (NN clerk)) (VP (VBZ asks) (SBAR (WHNP (WDT which)) (S (NP (PRP I)) (VP (VBP like) (NP (DT the) (JJS most))))))) (. .)))', 'lemma': [(u'They', u'they', u'PRP'), (u'all', u'all', u'DT'), (u'taste', u'taste', u'VBP'), (u'great', u'great', u'JJ'), (u'and', u'and', u'CC'), (u'the', u'the', u'DT'), (u'clerk', u'clerk', u'NN'), (u'asks', u'ask', u'VBZ'), (u'which', u'which', u'WDT'), (u'I', u'I', u'PRP'), (u'like', u'like', u'VBP'), (u'the', u'the', u'DT'), (u'most', u'most', u'JJS'), (u'.', u'.', u'.')]}, 'tokens': ['They', 'all', 'taste', 'great', 'and', 'the', 'clerk', 'asks', 'which', 'I', 'like', 'the', 'most', '.']}, {'string': " It takes me a bit to choose, but I finally choose the Mint as this week 's choice.", 'parse': {'tree': "(ROOT (S (S (NP (PRP It)) (VP (VBZ takes) (S (NP (PRP me)) (NP (DT a) (NN bit) (S (VP (TO to) (VP (VB choose)))))))) (, ,) (CC but) (S (NP (PRP I)) (ADVP (RB finally)) (VP (VBP choose) (NP (NP (DT the) (NNP Mint)) (PP (IN as) (NP (NP (DT this) (NN week) (POS 's)) (NN choice)))))) (. .)))", 'lemma': [(u'It', u'it', u'PRP'), (u'takes', u'take', u'VBZ'), (u'me', u'I', u'PRP'), (u'a', u'a', u'DT'), (u'bit', u'bit', u'NN'), (u'to', u'to', u'TO'), (u'choose', u'choose', u'VB'), (u',', u',', u','), (u'but', u'but', u'CC'), (u'I', u'I', u'PRP'), (u'finally', u'finally', u'RB'), (u'choose', u'choose', u'VBP'), (u'the', u'the', u'DT'), (u'Mint', u'Mint', u'NNP'), (u'as', u'as', u'IN'), (u'this', u'this', u'DT'), (u'week', u'week', u'NN'), (u"'s", u"'s", u'POS'), (u'choice', u'choice', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['It', 'takes', 'me', 'a', 'bit', 'to', 'choose', ',', 'but', 'I', 'finally', 'choose', 'the', 'Mint', 'as', 'this', 'week', "'s", 'choice', '.']}, {'string': " He rings us up at the front desk and says that since we buy from his shop so much, he 's going to give us a sale, so we think it 'll be a nickel or a dime or even a quarter off.", 'parse': {'tree': "(ROOT (S (S (NP (PRP He)) (VP (VP (VBZ rings) (NP (PRP us)) (PRT (RP up)) (PP (IN at) (NP (DT the) (JJ front) (NN desk)))) (CC and) (VP (VBZ says) (SBAR (IN that) (S (SBAR (IN since) (S (NP (PRP we)) (VP (VBP buy) (PP (IN from) (NP (PRP$ his) (NN shop))) (ADVP (RB so) (RB much))))) (, ,) (NP (PRP he)) (VP (VBZ 's) (VP (VBG going) (S (VP (TO to) (VP (VB give) (NP (PRP us)) (NP (DT a) (NN sale)))))))))))) (, ,) (IN so) (S (NP (PRP we)) (VP (VBP think) (SBAR (S (NP (PRP it)) (VP (MD 'll) (VP (VB be) (NP (NP (NP (DT a) (NN nickel)) (CC or) (NP (DT a) (NN dime))) (CC or) (NP (RB even) (NP (DT a) (NN quarter)) (ADVP (IN off)))))))))) (. .)))", 'lemma': [(u'He', u'he', u'PRP'), (u'rings', u'ring', u'VBZ'), (u'us', u'we', u'PRP'), (u'up', u'up', u'RP'), (u'at', u'at', u'IN'), (u'the', u'the', u'DT'), (u'front', u'front', u'JJ'), (u'desk', u'desk', u'NN'), (u'and', u'and', u'CC'), (u'says', u'say', u'VBZ'), (u'that', u'that', u'IN'), (u'since', u'since', u'IN'), (u'we', u'we', u'PRP'), (u'buy', u'buy', u'VBP'), (u'from', u'from', u'IN'), (u'his', u'he', u'PRP$'), (u'shop', u'shop', u'NN'), (u'so', u'so', u'RB'), (u'much', u'much', u'RB'), (u',', u',', u','), (u'he', u'he', u'PRP'), (u"'s", u'be', u'VBZ'), (u'going', u'go', u'VBG'), (u'to', u'to', u'TO'), (u'give', u'give', u'VB'), (u'us', u'we', u'PRP'), (u'a', u'a', u'DT'), (u'sale', u'sale', u'NN'), (u',', u',', u','), (u'so', u'so', u'IN'), (u'we', u'we', u'PRP'), (u'think', u'think', u'VBP'), (u'it', u'it', u'PRP'), (u"'ll", u"'ll", u'MD'), (u'be', u'be', u'VB'), (u'a', u'a', u'DT'), (u'nickel', u'nickel', u'NN'), (u'or', u'or', u'CC'), (u'a', u'a', u'DT'), (u'dime', u'dime', u'NN'), (u'or', u'or', u'CC'), (u'even', u'even', u'RB'), (u'a', u'a', u'DT'), (u'quarter', u'quarter', u'NN'), (u'off', u'off', u'IN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'rings', 'us', 'up', 'at', 'the', 'front', 'desk', 'and', 'says', 'that', 'since', 'we', 'buy', 'from', 'his', 'shop', 'so', 'much', ',', 'he', "'s", 'going', 'to', 'give', 'us', 'a', 'sale', ',', 'so', 'we', 'think', 'it', "'ll", 'be', 'a', 'nickel', 'or', 'a', 'dime', 'or', 'even', 'a', 'quarter', 'off', '.']}, {'string': ' Actually, the clerk ends up cutting it half off!', 'parse': {'tree': '(ROOT (S (ADVP (RB Actually)) (, ,) (NP (DT the) (NN clerk)) (VP (VBZ ends) (PRT (RP up)) (S (VP (VBG cutting) (NP (PRP it)) (ADVP (NN half) (IN off))))) (. !)))', 'lemma': [(u'Actually', u'actually', u'RB'), (u',', u',', u','), (u'the', u'the', u'DT'), (u'clerk', u'clerk', u'NN'), (u'ends', u'end', u'VBZ'), (u'up', u'up', u'RP'), (u'cutting', u'cut', u'VBG'), (u'it', u'it', u'PRP'), (u'half', u'half', u'NN'), (u'off', u'off', u'IN'), (u'!', u'!', u'.')]}, 'tokens': ['Actually', ',', 'the', 'clerk', 'ends', 'up', 'cutting', 'it', 'half', 'off', '!']}, {'string': ' We thanked him and went on our way as I tried not to eat all the way home.', 'parse': {'tree': '(ROOT (S (NP (PRP We)) (VP (VP (VBD thanked) (NP (PRP him))) (CC and) (VP (VBD went) (PP (IN on) (NP (PRP$ our) (NN way))) (SBAR (IN as) (S (NP (PRP I)) (VP (VBD tried) (S (RB not) (VP (TO to) (VP (VB eat) (NP (PDT all) (DT the) (NN way) (NN home)))))))))) (. .)))', 'lemma': [(u'We', u'we', u'PRP'), (u'thanked', u'thank', u'VBD'), (u'him', u'he', u'PRP'), (u'and', u'and', u'CC'), (u'went', u'go', u'VBD'), (u'on', u'on', u'IN'), (u'our', u'we', u'PRP$'), (u'way', u'way', u'NN'), (u'as', u'as', u'IN'), (u'I', u'I', u'PRP'), (u'tried', u'try', u'VBD'), (u'not', u'not', u'RB'), (u'to', u'to', u'TO'), (u'eat', u'eat', u'VB'), (u'all', u'all', u'PDT'), (u'the', u'the', u'DT'), (u'way', u'way', u'NN'), (u'home', u'home', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['We', 'thanked', 'him', 'and', 'went', 'on', 'our', 'way', 'as', 'I', 'tried', 'not', 'to', 'eat', 'all', 'the', 'way', 'home', '.']}], 'questions': [{'question': {'string': ' What does the clerk first do upon Trevor and his mom entering the candy shop?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ does) (NP (DT the) (NN clerk) (JJ first)) (VP (VB do) (PP (IN upon) (NP (NP (NNP Trevor)) (CC and) (NP (PRP$ his) (NN mom)))) (S (VP (VBG entering) (NP (DT the) (NN candy) (NN shop)))))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'does', u'do', u'VBZ'), (u'the', u'the', u'DT'), (u'clerk', u'clerk', u'NN'), (u'first', u'first', u'JJ'), (u'do', u'do', u'VB'), (u'upon', u'upon', u'IN'), (u'Trevor', u'Trevor', u'NNP'), (u'and', u'and', u'CC'), (u'his', u'he', u'PRP$'), (u'mom', u'mom', u'NN'), (u'entering', u'enter', u'VBG'), (u'the', u'the', u'DT'), (u'candy', u'candy', u'NN'), (u'shop', u'shop', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'does', 'the', 'clerk', 'first', 'do', 'upon', 'Trevor', 'and', 'his', 'mom', 'entering', 'the', 'candy', 'shop', '?']}, 'answers': [{'string': ' Calls Trevor by his name', 'parse': {'tree': '(ROOT (NP (NP (NNS Calls)) (NP (NP (NNP Trevor)) (PP (IN by) (NP (PRP$ his) (NN name))))))', 'lemma': [(u'Calls', u'call', u'NNS'), (u'Trevor', u'Trevor', u'NNP'), (u'by', u'by', u'IN'), (u'his', u'he', u'PRP$'), (u'name', u'name', u'NN')]}, 'tokens': ['Calls', 'Trevor', 'by', 'his', 'name']}, {'string': " Presents M&M 's for him to try", 'parse': {'tree': "(ROOT (S (NP (NNP Presents) (NNP M&M)) (VP (VBZ 's) (SBAR (IN for) (S (NP (PRP him)) (VP (TO to) (VP (VB try))))))))", 'lemma': [(u'Presents', u'Presents', u'NNP'), (u'M&M', u'M&M', u'NNP'), (u"'s", u'be', u'VBZ'), (u'for', u'for', u'IN'), (u'him', u'he', u'PRP'), (u'to', u'to', u'TO'), (u'try', u'try', u'VB')]}, 'tokens': ['Presents', 'M&M', "'s", 'for', 'him', 'to', 'try']}, {'string': ' Asks Trevor which type of M&M he preferred', 'parse': {'tree': '(ROOT (FRAG (NP (NNP Asks) (NNP Trevor)) (SBAR (WHNP (WHNP (WDT which) (NN type)) (PP (IN of) (NP (NNP M&M)))) (S (NP (PRP he)) (VP (VBD preferred))))))', 'lemma': [(u'Asks', u'Asks', u'NNP'), (u'Trevor', u'Trevor', u'NNP'), (u'which', u'which', u'WDT'), (u'type', u'type', u'NN'), (u'of', u'of', u'IN'), (u'M&M', u'M&M', u'NNP'), (u'he', u'he', u'PRP'), (u'preferred', u'prefer', u'VBD')]}, 'tokens': ['Asks', 'Trevor', 'which', 'type', 'of', 'M&M', 'he', 'preferred']}, {'string': ' Welcomes them', 'parse': {'tree': '(ROOT (SINV (VP (VBZ Welcomes)) (NP (PRP them))))', 'lemma': [(u'Welcomes', u'welcome', u'VBZ'), (u'them', u'they', u'PRP')]}, 'tokens': ['Welcomes', 'them']}], 'mode': 0}, {'question': {'string': " Which type of M&M 's does the clerk not give Trevor to try?", 'parse': {'tree': "(ROOT (SBARQ (WHNP (WHNP (WDT Which) (NN type)) (PP (IN of) (NP (NNP M&M) (POS 's)))) (SQ (VBZ does) (NP (DT the) (NN clerk)) (VP (RB not) (VB give) (S (NP (NNP Trevor)) (VP (TO to) (VP (VB try)))))) (. ?)))", 'lemma': [(u'Which', u'which', u'WDT'), (u'type', u'type', u'NN'), (u'of', u'of', u'IN'), (u'M&M', u'M&M', u'NNP'), (u"'s", u"'s", u'POS'), (u'does', u'do', u'VBZ'), (u'the', u'the', u'DT'), (u'clerk', u'clerk', u'NN'), (u'not', u'not', u'RB'), (u'give', u'give', u'VB'), (u'Trevor', u'Trevor', u'NNP'), (u'to', u'to', u'TO'), (u'try', u'try', u'VB'), (u'?', u'?', u'.')]}, 'tokens': ['Which', 'type', 'of', 'M&M', "'s", 'does', 'the', 'clerk', 'not', 'give', 'Trevor', 'to', 'try', '?']}, 'answers': [{'string': ' Peanut', 'parse': {'tree': '(ROOT (NP (NNP Peanut)))', 'lemma': [(u'Peanut', u'Peanut', u'NNP')]}, 'tokens': ['Peanut']}, {'string': ' Mint', 'parse': {'tree': '(ROOT (NP (NNP Mint)))', 'lemma': [(u'Mint', u'Mint', u'NNP')]}, 'tokens': ['Mint']}, {'string': ' White chocolate', 'parse': {'tree': '(ROOT (NP (NNP White) (NNP chocolate)))', 'lemma': [(u'White', u'White', u'NNP'), (u'chocolate', u'chocolate', u'NNP')]}, 'tokens': ['White', 'chocolate']}, {'string': " Cookies n'creme", 'parse': {'tree': "(ROOT (NP (JJ Cookies) (NN n'creme)))", 'lemma': [(u'Cookies', u'cookies', u'JJ'), (u"n'creme", u"n'creme", u'NN')]}, 'tokens': ['Cookies', "n'creme"]}], 'mode': 1}, {'question': {'string': ' What do Trevor and his mom do once a week?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBP do) (NP (NP (NNP Trevor)) (CC and) (NP (PRP$ his) (NN mom))) (VP (VB do) (ADVP (RB once)) (NP (DT a) (NN week)))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'do', u'do', u'VBP'), (u'Trevor', u'Trevor', u'NNP'), (u'and', u'and', u'CC'), (u'his', u'he', u'PRP$'), (u'mom', u'mom', u'NN'), (u'do', u'do', u'VB'), (u'once', u'once', u'RB'), (u'a', u'a', u'DT'), (u'week', u'week', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'do', 'Trevor', 'and', 'his', 'mom', 'do', 'once', 'a', 'week', '?']}, 'answers': [{'string': ' Visit the game room', 'parse': {'tree': '(ROOT (S (VP (VB Visit) (NP (DT the) (NN game) (NN room)))))', 'lemma': [(u'Visit', u'visit', u'VB'), (u'the', u'the', u'DT'), (u'game', u'game', u'NN'), (u'room', u'room', u'NN')]}, 'tokens': ['Visit', 'the', 'game', 'room']}, {'string': ' Go to the movies', 'parse': {'tree': '(ROOT (S (VP (VB Go) (PP (TO to) (NP (DT the) (NNS movies))))))', 'lemma': [(u'Go', u'go', u'VB'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'movies', u'movie', u'NNS')]}, 'tokens': ['Go', 'to', 'the', 'movies']}, {'string': ' Have fun at parks', 'parse': {'tree': '(ROOT (S (VP (VB Have) (NP (NP (NN fun)) (PP (IN at) (NP (NNS parks)))))))', 'lemma': [(u'Have', u'have', u'VB'), (u'fun', u'fun', u'NN'), (u'at', u'at', u'IN'), (u'parks', u'park', u'NNS')]}, 'tokens': ['Have', 'fun', 'at', 'parks']}, {'string': ' Go to the candy store to pick out an after-dinner treat', 'parse': {'tree': '(ROOT (S (VP (VB Go) (PP (TO to) (NP (DT the) (NN candy) (NN store))) (S (VP (TO to) (VP (VB pick) (PRT (RP out)) (NP (DT an) (JJ after-dinner) (NN treat))))))))', 'lemma': [(u'Go', u'go', u'VB'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'candy', u'candy', u'NN'), (u'store', u'store', u'NN'), (u'to', u'to', u'TO'), (u'pick', u'pick', u'VB'), (u'out', u'out', u'RP'), (u'an', u'a', u'DT'), (u'after-dinner', u'after-dinner', u'JJ'), (u'treat', u'treat', u'NN')]}, 'tokens': ['Go', 'to', 'the', 'candy', 'store', 'to', 'pick', 'out', 'an', 'after-dinner', 'treat']}], 'mode': 1}, {'question': {'string': ' How much money does the clerk take away from their order?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WHADJP (WRB How) (JJ much)) (NN money)) (SQ (VBZ does) (NP (DT the) (NN clerk)) (VP (VB take) (PRT (RP away)) (PP (IN from) (NP (PRP$ their) (NN order))))) (. ?)))', 'lemma': [(u'How', u'how', u'WRB'), (u'much', u'much', u'JJ'), (u'money', u'money', u'NN'), (u'does', u'do', u'VBZ'), (u'the', u'the', u'DT'), (u'clerk', u'clerk', u'NN'), (u'take', u'take', u'VB'), (u'away', u'away', u'RP'), (u'from', u'from', u'IN'), (u'their', u'they', u'PRP$'), (u'order', u'order', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['How', 'much', 'money', 'does', 'the', 'clerk', 'take', 'away', 'from', 'their', 'order', '?']}, 'answers': [{'string': ' A dime', 'parse': {'tree': '(ROOT (FRAG (NP (DT A) (NN dime))))', 'lemma': [(u'A', u'a', u'DT'), (u'dime', u'dime', u'NN')]}, 'tokens': ['A', 'dime']}, {'string': ' A quarter', 'parse': {'tree': '(ROOT (FRAG (NP (DT A) (NN quarter))))', 'lemma': [(u'A', u'a', u'DT'), (u'quarter', u'quarter', u'NN')]}, 'tokens': ['A', 'quarter']}, {'string': ' A nickel', 'parse': {'tree': '(ROOT (FRAG (NP (DT A) (NN nickel))))', 'lemma': [(u'A', u'a', u'DT'), (u'nickel', u'nickel', u'NN')]}, 'tokens': ['A', 'nickel']}, {'string': ' Half off', 'parse': {'tree': '(ROOT (S (VP (VB Half) (PRT (RP off)))))', 'lemma': [(u'Half', u'half', u'VB'), (u'off', u'off', u'RP')]}, 'tokens': ['Half', 'off']}], 'mode': 0}]}
{'sentences': [{'string': ' Once upon a time there was a cow.', 'parse': {'tree': '(ROOT (S (ADVP (RB Once) (PP (IN upon) (NP (DT a) (NN time)))) (NP (EX there)) (VP (VBD was) (NP (DT a) (NN cow))) (. .)))', 'lemma': [(u'Once', u'once', u'RB'), (u'upon', u'upon', u'IN'), (u'a', u'a', u'DT'), (u'time', u'time', u'NN'), (u'there', u'there', u'EX'), (u'was', u'be', u'VBD'), (u'a', u'a', u'DT'), (u'cow', u'cow', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Once', 'upon', 'a', 'time', 'there', 'was', 'a', 'cow', '.']}, {'string': ' It was a very happy cow.', 'parse': {'tree': '(ROOT (S (NP (PRP It)) (VP (VBD was) (NP (DT a) (ADJP (RB very) (JJ happy)) (NN cow))) (. .)))', 'lemma': [(u'It', u'it', u'PRP'), (u'was', u'be', u'VBD'), (u'a', u'a', u'DT'), (u'very', u'very', u'RB'), (u'happy', u'happy', u'JJ'), (u'cow', u'cow', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['It', 'was', 'a', 'very', 'happy', 'cow', '.']}, {'string': ' The cow put his chin in the window.', 'parse': {'tree': '(ROOT (S (NP (DT The) (NN cow)) (VP (VBD put) (NP (PRP$ his) (NN chin)) (PP (IN in) (NP (DT the) (NN window)))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'cow', u'cow', u'NN'), (u'put', u'put', u'VBD'), (u'his', u'he', u'PRP$'), (u'chin', u'chin', u'NN'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'window', u'window', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'cow', 'put', 'his', 'chin', 'in', 'the', 'window', '.']}, {'string': ' Then the cow put a rock in a window.', 'parse': {'tree': '(ROOT (S (RB Then) (NP (DT the) (NN cow)) (VP (VBD put) (NP (DT a) (NN rock)) (PP (IN in) (NP (DT a) (NN window)))) (. .)))', 'lemma': [(u'Then', u'then', u'RB'), (u'the', u'the', u'DT'), (u'cow', u'cow', u'NN'), (u'put', u'put', u'VBD'), (u'a', u'a', u'DT'), (u'rock', u'rock', u'NN'), (u'in', u'in', u'IN'), (u'a', u'a', u'DT'), (u'window', u'window', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Then', 'the', 'cow', 'put', 'a', 'rock', 'in', 'a', 'window', '.']}, {'string': ' The cow was done putting things in the window.', 'parse': {'tree': '(ROOT (S (NP (DT The) (NN cow)) (VP (VBD was) (VP (VBN done) (S (VP (VBG putting) (NP (NNS things)) (PP (IN in) (NP (DT the) (NN window))))))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'cow', u'cow', u'NN'), (u'was', u'be', u'VBD'), (u'done', u'do', u'VBN'), (u'putting', u'put', u'VBG'), (u'things', u'thing', u'NNS'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'window', u'window', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'cow', 'was', 'done', 'putting', 'things', 'in', 'the', 'window', '.']}, {'string': ' The cow talked to his daddy.', 'parse': {'tree': '(ROOT (S (NP (DT The) (NN cow)) (VP (VBD talked) (PP (TO to) (NP (PRP$ his) (NN daddy)))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'cow', u'cow', u'NN'), (u'talked', u'talk', u'VBD'), (u'to', u'to', u'TO'), (u'his', u'he', u'PRP$'), (u'daddy', u'daddy', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'cow', 'talked', 'to', 'his', 'daddy', '.']}, {'string': ' Then the cow talked to his granddaddy.', 'parse': {'tree': '(ROOT (S (RB Then) (NP (DT the) (NN cow)) (VP (VBD talked) (PP (TO to) (NP (PRP$ his) (NN granddaddy)))) (. .)))', 'lemma': [(u'Then', u'then', u'RB'), (u'the', u'the', u'DT'), (u'cow', u'cow', u'NN'), (u'talked', u'talk', u'VBD'), (u'to', u'to', u'TO'), (u'his', u'he', u'PRP$'), (u'granddaddy', u'granddaddy', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Then', 'the', 'cow', 'talked', 'to', 'his', 'granddaddy', '.']}, {'string': ' Then it was time for the cow to eat lunch.', 'parse': {'tree': '(ROOT (S (RB Then) (NP (PRP it)) (VP (VBD was) (NP (NP (NN time)) (PP (IN for) (NP (DT the) (NN cow) (S (VP (TO to) (VP (VB eat) (NP (NN lunch))))))))) (. .)))', 'lemma': [(u'Then', u'then', u'RB'), (u'it', u'it', u'PRP'), (u'was', u'be', u'VBD'), (u'time', u'time', u'NN'), (u'for', u'for', u'IN'), (u'the', u'the', u'DT'), (u'cow', u'cow', u'NN'), (u'to', u'to', u'TO'), (u'eat', u'eat', u'VB'), (u'lunch', u'lunch', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Then', 'it', 'was', 'time', 'for', 'the', 'cow', 'to', 'eat', 'lunch', '.']}, {'string': ' The cow took a long time to eat lunch.', 'parse': {'tree': '(ROOT (S (NP (DT The) (NN cow)) (VP (VBD took) (NP (DT a) (JJ long) (NN time)) (S (VP (TO to) (VP (VB eat) (NP (NN lunch)))))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'cow', u'cow', u'NN'), (u'took', u'take', u'VBD'), (u'a', u'a', u'DT'), (u'long', u'long', u'JJ'), (u'time', u'time', u'NN'), (u'to', u'to', u'TO'), (u'eat', u'eat', u'VB'), (u'lunch', u'lunch', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'cow', 'took', 'a', 'long', 'time', 'to', 'eat', 'lunch', '.']}, {'string': ' The cow ate some chips for lunch.', 'parse': {'tree': '(ROOT (S (NP (DT The) (NN cow)) (VP (VBD ate) (NP (DT some) (NNS chips)) (PP (IN for) (NP (NN lunch)))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'cow', u'cow', u'NN'), (u'ate', u'eat', u'VBD'), (u'some', u'some', u'DT'), (u'chips', u'chip', u'NNS'), (u'for', u'for', u'IN'), (u'lunch', u'lunch', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'cow', 'ate', 'some', 'chips', 'for', 'lunch', '.']}, {'string': " The cow did n't eat a sandwich or a pickle for lunch.", 'parse': {'tree': "(ROOT (S (NP (DT The) (NN cow)) (VP (VBD did) (RB n't) (VP (VB eat) (NP (NP (DT a) (NN sandwich)) (CC or) (NP (DT a) (NN pickle))) (PP (IN for) (NP (NN lunch))))) (. .)))", 'lemma': [(u'The', u'the', u'DT'), (u'cow', u'cow', u'NN'), (u'did', u'do', u'VBD'), (u"n't", u'not', u'RB'), (u'eat', u'eat', u'VB'), (u'a', u'a', u'DT'), (u'sandwich', u'sandwich', u'NN'), (u'or', u'or', u'CC'), (u'a', u'a', u'DT'), (u'pickle', u'pickle', u'NN'), (u'for', u'for', u'IN'), (u'lunch', u'lunch', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'cow', 'did', "n't", 'eat', 'a', 'sandwich', 'or', 'a', 'pickle', 'for', 'lunch', '.']}, {'string': ' The cow was getting very sleepy.', 'parse': {'tree': '(ROOT (S (NP (DT The) (NN cow)) (VP (VBD was) (VP (VBG getting) (ADJP (RB very) (JJ sleepy)))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'cow', u'cow', u'NN'), (u'was', u'be', u'VBD'), (u'getting', u'get', u'VBG'), (u'very', u'very', u'RB'), (u'sleepy', u'sleepy', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'cow', 'was', 'getting', 'very', 'sleepy', '.']}, {'string': ' The cow wanted to take a nap.', 'parse': {'tree': '(ROOT (S (NP (DT The) (NN cow)) (VP (VBD wanted) (S (VP (TO to) (VP (VB take) (NP (DT a) (NN nap)))))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'cow', u'cow', u'NN'), (u'wanted', u'want', u'VBD'), (u'to', u'to', u'TO'), (u'take', u'take', u'VB'), (u'a', u'a', u'DT'), (u'nap', u'nap', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'cow', 'wanted', 'to', 'take', 'a', 'nap', '.']}, {'string': ' The cow went to his bed.', 'parse': {'tree': '(ROOT (S (NP (DT The) (NN cow)) (VP (VBD went) (PP (TO to) (NP (PRP$ his) (NN bed)))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'cow', u'cow', u'NN'), (u'went', u'go', u'VBD'), (u'to', u'to', u'TO'), (u'his', u'he', u'PRP$'), (u'bed', u'bed', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'cow', 'went', 'to', 'his', 'bed', '.']}, {'string': ' There was a book on the bed.', 'parse': {'tree': '(ROOT (S (NP (EX There)) (VP (VBD was) (NP (NP (DT a) (NN book)) (PP (IN on) (NP (DT the) (NN bed))))) (. .)))', 'lemma': [(u'There', u'there', u'EX'), (u'was', u'be', u'VBD'), (u'a', u'a', u'DT'), (u'book', u'book', u'NN'), (u'on', u'on', u'IN'), (u'the', u'the', u'DT'), (u'bed', u'bed', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['There', 'was', 'a', 'book', 'on', 'the', 'bed', '.']}, {'string': ' The cow could not sleep on his bed.', 'parse': {'tree': '(ROOT (S (NP (DT The) (NN cow)) (VP (MD could) (RB not) (VP (VB sleep) (PP (IN on) (NP (PRP$ his) (NN bed))))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'cow', u'cow', u'NN'), (u'could', u'could', u'MD'), (u'not', u'not', u'RB'), (u'sleep', u'sleep', u'VB'), (u'on', u'on', u'IN'), (u'his', u'he', u'PRP$'), (u'bed', u'bed', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'cow', 'could', 'not', 'sleep', 'on', 'his', 'bed', '.']}, {'string': ' The cow took the book off his bed.', 'parse': {'tree': '(ROOT (S (NP (DT The) (NN cow)) (VP (VBD took) (NP (DT the) (NN book)) (PP (IN off) (NP (PRP$ his) (NN bed)))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'cow', u'cow', u'NN'), (u'took', u'take', u'VBD'), (u'the', u'the', u'DT'), (u'book', u'book', u'NN'), (u'off', u'off', u'IN'), (u'his', u'he', u'PRP$'), (u'bed', u'bed', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'cow', 'took', 'the', 'book', 'off', 'his', 'bed', '.']}, {'string': ' Then the cow could take a nap.', 'parse': {'tree': '(ROOT (S (RB Then) (NP (DT the) (NN cow)) (VP (MD could) (VP (VB take) (NP (DT a) (NN nap)))) (. .)))', 'lemma': [(u'Then', u'then', u'RB'), (u'the', u'the', u'DT'), (u'cow', u'cow', u'NN'), (u'could', u'could', u'MD'), (u'take', u'take', u'VB'), (u'a', u'a', u'DT'), (u'nap', u'nap', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Then', 'the', 'cow', 'could', 'take', 'a', 'nap', '.']}, {'string': ' The cow was very happy that it could take a nap on its bed.', 'parse': {'tree': '(ROOT (S (NP (DT The) (NN cow)) (VP (VBD was) (ADJP (RB very) (JJ happy)) (SBAR (IN that) (S (NP (PRP it)) (VP (MD could) (VP (VB take) (NP (DT a) (NN nap)) (PP (IN on) (NP (PRP$ its) (NN bed)))))))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'cow', u'cow', u'NN'), (u'was', u'be', u'VBD'), (u'very', u'very', u'RB'), (u'happy', u'happy', u'JJ'), (u'that', u'that', u'IN'), (u'it', u'it', u'PRP'), (u'could', u'could', u'MD'), (u'take', u'take', u'VB'), (u'a', u'a', u'DT'), (u'nap', u'nap', u'NN'), (u'on', u'on', u'IN'), (u'its', u'its', u'PRP$'), (u'bed', u'bed', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'cow', 'was', 'very', 'happy', 'that', 'it', 'could', 'take', 'a', 'nap', 'on', 'its', 'bed', '.']}, {'string': ' The cow was a good cow.', 'parse': {'tree': '(ROOT (S (NP (DT The) (NN cow)) (VP (VBD was) (NP (DT a) (JJ good) (NN cow))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'cow', u'cow', u'NN'), (u'was', u'be', u'VBD'), (u'a', u'a', u'DT'), (u'good', u'good', u'JJ'), (u'cow', u'cow', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'cow', 'was', 'a', 'good', 'cow', '.']}], 'questions': [{'question': {'string': ' How many things did the cow put in a window?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WHADJP (WRB How) (JJ many)) (NNS things)) (SQ (VBD did) (NP (DT the) (NN cow)) (VP (VB put) (PP (IN in) (NP (DT a) (NN window))))) (. ?)))', 'lemma': [(u'How', u'how', u'WRB'), (u'many', u'many', u'JJ'), (u'things', u'thing', u'NNS'), (u'did', u'do', u'VBD'), (u'the', u'the', u'DT'), (u'cow', u'cow', u'NN'), (u'put', u'put', u'VB'), (u'in', u'in', u'IN'), (u'a', u'a', u'DT'), (u'window', u'window', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['How', 'many', 'things', 'did', 'the', 'cow', 'put', 'in', 'a', 'window', '?']}, 'answers': [{'string': ' two', 'parse': {'tree': '(ROOT (FRAG (NP (CD two))))', 'lemma': [(u'two', u'two', u'CD')]}, 'tokens': ['two']}, {'string': ' three things', 'parse': {'tree': '(ROOT (X (NP (CD three) (NNS things))))', 'lemma': [(u'three', u'three', u'CD'), (u'things', u'thing', u'NNS')]}, 'tokens': ['three', 'things']}, {'string': ' five rocks', 'parse': {'tree': '(ROOT (X (NP (CD five) (NNS rocks))))', 'lemma': [(u'five', u'five', u'CD'), (u'rocks', u'rock', u'NNS')]}, 'tokens': ['five', 'rocks']}, {'string': ' nothing', 'parse': {'tree': '(ROOT (NP (NN nothing)))', 'lemma': [(u'nothing', u'nothing', u'NN')]}, 'tokens': ['nothing']}], 'mode': 0}, {'question': {'string': ' What did the cow take off the bed?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD did) (NP (DT the) (NN cow)) (VP (VB take) (PRT (RP off)) (NP (DT the) (NN bed)))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'did', u'do', u'VBD'), (u'the', u'the', u'DT'), (u'cow', u'cow', u'NN'), (u'take', u'take', u'VB'), (u'off', u'off', u'RP'), (u'the', u'the', u'DT'), (u'bed', u'bed', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'did', 'the', 'cow', 'take', 'off', 'the', 'bed', '?']}, 'answers': [{'string': ' his granddaddy', 'parse': {'tree': '(ROOT (FRAG (NP (PRP$ his) (NN granddaddy))))', 'lemma': [(u'his', u'he', u'PRP$'), (u'granddaddy', u'granddaddy', u'NN')]}, 'tokens': ['his', 'granddaddy']}, {'string': ' a rock', 'parse': {'tree': '(ROOT (FRAG (NP (DT a) (NN rock))))', 'lemma': [(u'a', u'a', u'DT'), (u'rock', u'rock', u'NN')]}, 'tokens': ['a', 'rock']}, {'string': ' a book', 'parse': {'tree': '(ROOT (FRAG (NP (DT a) (NN book))))', 'lemma': [(u'a', u'a', u'DT'), (u'book', u'book', u'NN')]}, 'tokens': ['a', 'book']}, {'string': ' a sandwich', 'parse': {'tree': '(ROOT (FRAG (NP (DT a) (NN sandwich))))', 'lemma': [(u'a', u'a', u'DT'), (u'sandwich', u'sandwich', u'NN')]}, 'tokens': ['a', 'sandwich']}], 'mode': 1}, {'question': {'string': ' What did the cow eat for lunch?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD did) (NP (DT the) (NN cow)) (VP (VB eat) (PP (IN for) (NP (NN lunch))))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'did', u'do', u'VBD'), (u'the', u'the', u'DT'), (u'cow', u'cow', u'NN'), (u'eat', u'eat', u'VB'), (u'for', u'for', u'IN'), (u'lunch', u'lunch', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'did', 'the', 'cow', 'eat', 'for', 'lunch', '?']}, 'answers': [{'string': ' sandwich', 'parse': {'tree': '(ROOT (NP (NN sandwich)))', 'lemma': [(u'sandwich', u'sandwich', u'NN')]}, 'tokens': ['sandwich']}, {'string': ' pickle', 'parse': {'tree': '(ROOT (NP (NN pickle)))', 'lemma': [(u'pickle', u'pickle', u'NN')]}, 'tokens': ['pickle']}, {'string': ' chips', 'parse': {'tree': '(ROOT (NP (NNS chips)))', 'lemma': [(u'chips', u'chip', u'NNS')]}, 'tokens': ['chips']}, {'string': ' popcorn', 'parse': {'tree': '(ROOT (NP (NN popcorn)))', 'lemma': [(u'popcorn', u'popcorn', u'NN')]}, 'tokens': ['popcorn']}], 'mode': 1}, {'question': {'string': ' What two people did the cow talk to?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WDT What) (CD two) (NNS people)) (SQ (VBD did) (NP (DT the) (NN cow)) (VP (VB talk) (PP (TO to)))) (. ?)))', 'lemma': [(u'What', u'what', u'WDT'), (u'two', u'two', u'CD'), (u'people', u'people', u'NNS'), (u'did', u'do', u'VBD'), (u'the', u'the', u'DT'), (u'cow', u'cow', u'NN'), (u'talk', u'talk', u'VB'), (u'to', u'to', u'TO'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'two', 'people', 'did', 'the', 'cow', 'talk', 'to', '?']}, 'answers': [{'string': ' granddaddy and mother', 'parse': {'tree': '(ROOT (NP (NN granddaddy) (CC and) (NN mother)))', 'lemma': [(u'granddaddy', u'granddaddy', u'NN'), (u'and', u'and', u'CC'), (u'mother', u'mother', u'NN')]}, 'tokens': ['granddaddy', 'and', 'mother']}, {'string': ' daddy and granddaddy', 'parse': {'tree': '(ROOT (NP (NN daddy) (CC and) (NN granddaddy)))', 'lemma': [(u'daddy', u'daddy', u'NN'), (u'and', u'and', u'CC'), (u'granddaddy', u'granddaddy', u'NN')]}, 'tokens': ['daddy', 'and', 'granddaddy']}, {'string': ' granddaddy and brother', 'parse': {'tree': '(ROOT (NP (NN granddaddy) (CC and) (NN brother)))', 'lemma': [(u'granddaddy', u'granddaddy', u'NN'), (u'and', u'and', u'CC'), (u'brother', u'brother', u'NN')]}, 'tokens': ['granddaddy', 'and', 'brother']}, {'string': ' daddy and teacher', 'parse': {'tree': '(ROOT (NP (NN daddy) (CC and) (NN teacher)))', 'lemma': [(u'daddy', u'daddy', u'NN'), (u'and', u'and', u'CC'), (u'teacher', u'teacher', u'NN')]}, 'tokens': ['daddy', 'and', 'teacher']}], 'mode': 0}]}
{'sentences': [{'string': ' John wanted to have a birthday party for his son, Mike.', 'parse': {'tree': '(ROOT (S (NP (NNP John)) (VP (VBD wanted) (S (VP (TO to) (VP (VB have) (NP (NP (DT a) (NN birthday) (NN party)) (PP (IN for) (NP (NP (PRP$ his) (NN son)) (, ,) (NP (NNP Mike))))))))) (. .)))', 'lemma': [(u'John', u'John', u'NNP'), (u'wanted', u'want', u'VBD'), (u'to', u'to', u'TO'), (u'have', u'have', u'VB'), (u'a', u'a', u'DT'), (u'birthday', u'birthday', u'NN'), (u'party', u'party', u'NN'), (u'for', u'for', u'IN'), (u'his', u'he', u'PRP$'), (u'son', u'son', u'NN'), (u',', u',', u','), (u'Mike', u'Mike', u'NNP'), (u'.', u'.', u'.')]}, 'tokens': ['John', 'wanted', 'to', 'have', 'a', 'birthday', 'party', 'for', 'his', 'son', ',', 'Mike', '.']}, {'string': ' John and his wife Sara knew that their son loved clowns, as did their daughter Jane.', 'parse': {'tree': '(ROOT (S (NP (NP (NNP John)) (CC and) (NP (PRP$ his) (NN wife) (NNP Sara))) (VP (VBD knew) (SBAR (IN that) (S (NP (PRP$ their) (NN son)) (VP (VBD loved) (NP (NNS clowns)) (, ,) (SBAR (IN as) (S (VP (VBD did) (NP (PRP$ their) (NN daughter) (NNP Jane))))))))) (. .)))', 'lemma': [(u'John', u'John', u'NNP'), (u'and', u'and', u'CC'), (u'his', u'he', u'PRP$'), (u'wife', u'wife', u'NN'), (u'Sara', u'Sara', u'NNP'), (u'knew', u'know', u'VBD'), (u'that', u'that', u'IN'), (u'their', u'they', u'PRP$'), (u'son', u'son', u'NN'), (u'loved', u'love', u'VBD'), (u'clowns', u'clown', u'NNS'), (u',', u',', u','), (u'as', u'as', u'IN'), (u'did', u'do', u'VBD'), (u'their', u'they', u'PRP$'), (u'daughter', u'daughter', u'NN'), (u'Jane', u'Jane', u'NNP'), (u'.', u'.', u'.')]}, 'tokens': ['John', 'and', 'his', 'wife', 'Sara', 'knew', 'that', 'their', 'son', 'loved', 'clowns', ',', 'as', 'did', 'their', 'daughter', 'Jane', '.']}, {'string': ' So they looked up a place to have a clown come to his birthday party.', 'parse': {'tree': '(ROOT (S (IN So) (NP (PRP they)) (VP (VBD looked) (PRT (RP up)) (NP (DT a) (NN place) (S (VP (TO to) (VP (VB have) (NP (NP (DT a) (NN clown)) (VP (VBN come) (PP (TO to) (NP (PRP$ his) (NN birthday) (NN party)))))))))) (. .)))', 'lemma': [(u'So', u'so', u'IN'), (u'they', u'they', u'PRP'), (u'looked', u'look', u'VBD'), (u'up', u'up', u'RP'), (u'a', u'a', u'DT'), (u'place', u'place', u'NN'), (u'to', u'to', u'TO'), (u'have', u'have', u'VB'), (u'a', u'a', u'DT'), (u'clown', u'clown', u'NN'), (u'come', u'come', u'VBN'), (u'to', u'to', u'TO'), (u'his', u'he', u'PRP$'), (u'birthday', u'birthday', u'NN'), (u'party', u'party', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['So', 'they', 'looked', 'up', 'a', 'place', 'to', 'have', 'a', 'clown', 'come', 'to', 'his', 'birthday', 'party', '.']}, {'string': ' When the clown arrived, ten of Mikes friends showed up to watch the show.', 'parse': {'tree': '(ROOT (S (SBAR (WHADVP (WRB When)) (S (NP (DT the) (NN clown)) (VP (VBD arrived)))) (, ,) (NP (NP (CD ten)) (PP (IN of) (NP (NNP Mikes) (NNS friends)))) (VP (VBD showed) (PRT (RP up)) (S (VP (TO to) (VP (VB watch) (NP (DT the) (NN show)))))) (. .)))', 'lemma': [(u'When', u'when', u'WRB'), (u'the', u'the', u'DT'), (u'clown', u'clown', u'NN'), (u'arrived', u'arrive', u'VBD'), (u',', u',', u','), (u'ten', u'ten', u'CD'), (u'of', u'of', u'IN'), (u'Mikes', u'Mikes', u'NNP'), (u'friends', u'friend', u'NNS'), (u'showed', u'show', u'VBD'), (u'up', u'up', u'RP'), (u'to', u'to', u'TO'), (u'watch', u'watch', u'VB'), (u'the', u'the', u'DT'), (u'show', u'show', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['When', 'the', 'clown', 'arrived', ',', 'ten', 'of', 'Mikes', 'friends', 'showed', 'up', 'to', 'watch', 'the', 'show', '.']}, {'string': ' His parents had sent out 12 invites, thinking 6 or 8 kids would come.', 'parse': {'tree': '(ROOT (S (NP (PRP$ His) (NNS parents)) (VP (VBD had) (VP (VBN sent) (PRT (RP out)) (NP (CD 12) (NNS invites)) (, ,) (S (VP (VBG thinking) (SBAR (S (NP (QP (CD 6) (CC or) (CD 8)) (NNS kids)) (VP (MD would) (VP (VB come))))))))) (. .)))', 'lemma': [(u'His', u'he', u'PRP$'), (u'parents', u'parent', u'NNS'), (u'had', u'have', u'VBD'), (u'sent', u'send', u'VBN'), (u'out', u'out', u'RP'), (u'12', u'12', u'CD'), (u'invites', u'invite', u'NNS'), (u',', u',', u','), (u'thinking', u'think', u'VBG'), (u'6', u'6', u'CD'), (u'or', u'or', u'CC'), (u'8', u'8', u'CD'), (u'kids', u'kid', u'NNS'), (u'would', u'would', u'MD'), (u'come', u'come', u'VB'), (u'.', u'.', u'.')]}, 'tokens': ['His', 'parents', 'had', 'sent', 'out', '12', 'invites', ',', 'thinking', '6', 'or', '8', 'kids', 'would', 'come', '.']}, {'string': " The clown started the show by squirting some water from a flower into John 's face.", 'parse': {'tree': "(ROOT (S (NP (DT The) (NN clown)) (VP (VBD started) (NP (DT the) (NN show)) (PP (IN by) (S (VP (VBG squirting) (NP (DT some) (NN water)) (PP (IN from) (NP (DT a) (NN flower))) (PP (IN into) (NP (NP (NNP John) (POS 's)) (NN face))))))) (. .)))", 'lemma': [(u'The', u'the', u'DT'), (u'clown', u'clown', u'NN'), (u'started', u'start', u'VBD'), (u'the', u'the', u'DT'), (u'show', u'show', u'NN'), (u'by', u'by', u'IN'), (u'squirting', u'squirt', u'VBG'), (u'some', u'some', u'DT'), (u'water', u'water', u'NN'), (u'from', u'from', u'IN'), (u'a', u'a', u'DT'), (u'flower', u'flower', u'NN'), (u'into', u'into', u'IN'), (u'John', u'John', u'NNP'), (u"'s", u"'s", u'POS'), (u'face', u'face', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'clown', 'started', 'the', 'show', 'by', 'squirting', 'some', 'water', 'from', 'a', 'flower', 'into', 'John', "'s", 'face', '.']}, {'string': " This caused John 's face to turn red.", 'parse': {'tree': "(ROOT (S (NP (DT This)) (VP (VBD caused) (NP (NP (NNP John) (POS 's)) (NN face) (S (VP (TO to) (VP (VB turn) (ADJP (JJ red))))))) (. .)))", 'lemma': [(u'This', u'this', u'DT'), (u'caused', u'cause', u'VBD'), (u'John', u'John', u'NNP'), (u"'s", u"'s", u'POS'), (u'face', u'face', u'NN'), (u'to', u'to', u'TO'), (u'turn', u'turn', u'VB'), (u'red', u'red', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['This', 'caused', 'John', "'s", 'face', 'to', 'turn', 'red', '.']}, {'string': ' After the show, when everyone had left, it was up to John and Sara to clean up after the party.', 'parse': {'tree': '(ROOT (S (PP (IN After) (NP (DT the) (NN show))) (, ,) (SBAR (WHADVP (WRB when)) (S (NP (NN everyone)) (VP (VBD had) (VP (VBN left))))) (, ,) (NP (PRP it)) (VP (VBD was) (ADVP (RB up) (PP (TO to) (NP (NNP John) (CC and) (NNP Sara)))) (S (VP (TO to) (VP (VB clean) (PRT (RP up)) (PP (IN after) (NP (DT the) (NN party))))))) (. .)))', 'lemma': [(u'After', u'after', u'IN'), (u'the', u'the', u'DT'), (u'show', u'show', u'NN'), (u',', u',', u','), (u'when', u'when', u'WRB'), (u'everyone', u'everyone', u'NN'), (u'had', u'have', u'VBD'), (u'left', u'leave', u'VBN'), (u',', u',', u','), (u'it', u'it', u'PRP'), (u'was', u'be', u'VBD'), (u'up', u'up', u'RB'), (u'to', u'to', u'TO'), (u'John', u'John', u'NNP'), (u'and', u'and', u'CC'), (u'Sara', u'Sara', u'NNP'), (u'to', u'to', u'TO'), (u'clean', u'clean', u'VB'), (u'up', u'up', u'RP'), (u'after', u'after', u'IN'), (u'the', u'the', u'DT'), (u'party', u'party', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['After', 'the', 'show', ',', 'when', 'everyone', 'had', 'left', ',', 'it', 'was', 'up', 'to', 'John', 'and', 'Sara', 'to', 'clean', 'up', 'after', 'the', 'party', '.']}, {'string': ' There was food everywhere; they had had salad and there was lettuce on the ground.', 'parse': {'tree': '(ROOT (S (S (NP (EX There)) (VP (VBD was) (NP (NN food)) (ADVP (RB everywhere)))) (: ;) (S (S (NP (PRP they)) (VP (VBD had) (VP (VBN had) (NP (NN salad))))) (CC and) (S (NP (EX there)) (VP (VBD was) (NP (NP (NN lettuce)) (PP (IN on) (NP (DT the) (NN ground))))))) (. .)))', 'lemma': [(u'There', u'there', u'EX'), (u'was', u'be', u'VBD'), (u'food', u'food', u'NN'), (u'everywhere', u'everywhere', u'RB'), (u';', u';', u':'), (u'they', u'they', u'PRP'), (u'had', u'have', u'VBD'), (u'had', u'have', u'VBN'), (u'salad', u'salad', u'NN'), (u'and', u'and', u'CC'), (u'there', u'there', u'EX'), (u'was', u'be', u'VBD'), (u'lettuce', u'lettuce', u'NN'), (u'on', u'on', u'IN'), (u'the', u'the', u'DT'), (u'ground', u'ground', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['There', 'was', 'food', 'everywhere', ';', 'they', 'had', 'had', 'salad', 'and', 'there', 'was', 'lettuce', 'on', 'the', 'ground', '.']}, {'string': ' Later that evening it was dinnertime and the family had to choose what to eat.', 'parse': {'tree': '(ROOT (S (NP (RB Later) (DT that) (NN evening)) (S (NP (PRP it)) (VP (VBD was) (ADJP (JJ dinnertime)))) (CC and) (S (NP (DT the) (NN family)) (VP (VBD had) (S (VP (TO to) (VP (VB choose) (SBAR (WHNP (WP what)) (S (VP (TO to) (VP (VB eat)))))))))) (. .)))', 'lemma': [(u'Later', u'later', u'RB'), (u'that', u'that', u'DT'), (u'evening', u'evening', u'NN'), (u'it', u'it', u'PRP'), (u'was', u'be', u'VBD'), (u'dinnertime', u'dinnertime', u'JJ'), (u'and', u'and', u'CC'), (u'the', u'the', u'DT'), (u'family', u'family', u'NN'), (u'had', u'have', u'VBD'), (u'to', u'to', u'TO'), (u'choose', u'choose', u'VB'), (u'what', u'what', u'WP'), (u'to', u'to', u'TO'), (u'eat', u'eat', u'VB'), (u'.', u'.', u'.')]}, 'tokens': ['Later', 'that', 'evening', 'it', 'was', 'dinnertime', 'and', 'the', 'family', 'had', 'to', 'choose', 'what', 'to', 'eat', '.']}, {'string': ' The choices were order a pizza, make hamburgers, go get fried chicken or make noodles.', 'parse': {'tree': '(ROOT (S (NP (DT The) (NNS choices)) (VP (VBD were) (VP (VP (VB order) (NP (DT a) (NN pizza))) (, ,) (VP (VB make) (NP (NNS hamburgers))) (, ,) (VP (VB go) (VP (VB get) (NP (JJ fried) (NN chicken)))) (CC or) (VP (VB make) (NP (NNS noodles))))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'choices', u'choice', u'NNS'), (u'were', u'be', u'VBD'), (u'order', u'order', u'VB'), (u'a', u'a', u'DT'), (u'pizza', u'pizza', u'NN'), (u',', u',', u','), (u'make', u'make', u'VB'), (u'hamburgers', u'hamburger', u'NNS'), (u',', u',', u','), (u'go', u'go', u'VB'), (u'get', u'get', u'VB'), (u'fried', u'fried', u'JJ'), (u'chicken', u'chicken', u'NN'), (u'or', u'or', u'CC'), (u'make', u'make', u'VB'), (u'noodles', u'noodle', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'choices', 'were', 'order', 'a', 'pizza', ',', 'make', 'hamburgers', ',', 'go', 'get', 'fried', 'chicken', 'or', 'make', 'noodles', '.']}, {'string': " Since it was Mike 's birthday they let him choose.", 'parse': {'tree': "(ROOT (S (SBAR (IN Since) (S (NP (PRP it)) (VP (VBD was) (NP (NP (NNP Mike) (POS 's)) (NN birthday))))) (NP (PRP they)) (VP (VBD let) (SBAR (S (NP (PRP him)) (VP (VBP choose))))) (. .)))", 'lemma': [(u'Since', u'since', u'IN'), (u'it', u'it', u'PRP'), (u'was', u'be', u'VBD'), (u'Mike', u'Mike', u'NNP'), (u"'s", u"'s", u'POS'), (u'birthday', u'birthday', u'NN'), (u'they', u'they', u'PRP'), (u'let', u'let', u'VBD'), (u'him', u'he', u'PRP'), (u'choose', u'choose', u'VBP'), (u'.', u'.', u'.')]}, 'tokens': ['Since', 'it', 'was', 'Mike', "'s", 'birthday', 'they', 'let', 'him', 'choose', '.']}, {'string': ' He really wanted pizza so they called up Pizza Palace to place their order.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (ADVP (RB really)) (VP (VBD wanted) (NP (NN pizza)) (SBAR (IN so) (S (NP (PRP they)) (VP (VBD called) (PRT (RP up)) (NP (NNP Pizza) (NNP Palace)) (S (VP (TO to) (VP (VB place) (NP (PRP$ their) (NN order))))))))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'really', u'really', u'RB'), (u'wanted', u'want', u'VBD'), (u'pizza', u'pizza', u'NN'), (u'so', u'so', u'IN'), (u'they', u'they', u'PRP'), (u'called', u'call', u'VBD'), (u'up', u'up', u'RP'), (u'Pizza', u'Pizza', u'NNP'), (u'Palace', u'Palace', u'NNP'), (u'to', u'to', u'TO'), (u'place', u'place', u'VB'), (u'their', u'they', u'PRP$'), (u'order', u'order', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'really', 'wanted', 'pizza', 'so', 'they', 'called', 'up', 'Pizza', 'Palace', 'to', 'place', 'their', 'order', '.']}, {'string': ' When the pizza arrived it did not come in a square box like most pizzas.', 'parse': {'tree': '(ROOT (S (SBAR (WHADVP (WRB When)) (S (NP (DT the) (NN pizza)) (VP (VBD arrived)))) (NP (PRP it)) (VP (VBD did) (RB not) (VP (VB come) (PP (IN in) (NP (NP (DT a) (JJ square) (NN box)) (PP (IN like) (NP (JJS most) (NNS pizzas))))))) (. .)))', 'lemma': [(u'When', u'when', u'WRB'), (u'the', u'the', u'DT'), (u'pizza', u'pizza', u'NN'), (u'arrived', u'arrive', u'VBD'), (u'it', u'it', u'PRP'), (u'did', u'do', u'VBD'), (u'not', u'not', u'RB'), (u'come', u'come', u'VB'), (u'in', u'in', u'IN'), (u'a', u'a', u'DT'), (u'square', u'square', u'JJ'), (u'box', u'box', u'NN'), (u'like', u'like', u'IN'), (u'most', u'most', u'JJS'), (u'pizzas', u'pizza', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['When', 'the', 'pizza', 'arrived', 'it', 'did', 'not', 'come', 'in', 'a', 'square', 'box', 'like', 'most', 'pizzas', '.']}, {'string': ' Instead it was in a round box that no one had ever seen.', 'parse': {'tree': '(ROOT (S (ADVP (RB Instead)) (NP (PRP it)) (VP (VBD was) (PP (IN in) (NP (DT a) (NN round) (NN box))) (SBAR (IN that) (S (NP (DT no) (NN one)) (VP (VBD had) (ADVP (RB ever)) (VP (VBN seen)))))) (. .)))', 'lemma': [(u'Instead', u'instead', u'RB'), (u'it', u'it', u'PRP'), (u'was', u'be', u'VBD'), (u'in', u'in', u'IN'), (u'a', u'a', u'DT'), (u'round', u'round', u'NN'), (u'box', u'box', u'NN'), (u'that', u'that', u'IN'), (u'no', u'no', u'DT'), (u'one', u'one', u'NN'), (u'had', u'have', u'VBD'), (u'ever', u'ever', u'RB'), (u'seen', u'see', u'VBN'), (u'.', u'.', u'.')]}, 'tokens': ['Instead', 'it', 'was', 'in', 'a', 'round', 'box', 'that', 'no', 'one', 'had', 'ever', 'seen', '.']}, {'string': ' John gave everybody a slice and then placed Mike in his lap to eat dinner.', 'parse': {'tree': '(ROOT (S (NP (NNP John)) (VP (VP (VBD gave) (NP (NN everybody)) (NP (DT a) (NN slice))) (CC and) (VP (ADVP (RB then)) (VBD placed) (NP (NP (NNP Mike)) (PP (IN in) (NP (PRP$ his) (NN lap) (S (VP (TO to) (VP (VB eat) (NP (NN dinner)))))))))) (. .)))', 'lemma': [(u'John', u'John', u'NNP'), (u'gave', u'give', u'VBD'), (u'everybody', u'everybody', u'NN'), (u'a', u'a', u'DT'), (u'slice', u'slice', u'NN'), (u'and', u'and', u'CC'), (u'then', u'then', u'RB'), (u'placed', u'place', u'VBD'), (u'Mike', u'Mike', u'NNP'), (u'in', u'in', u'IN'), (u'his', u'he', u'PRP$'), (u'lap', u'lap', u'NN'), (u'to', u'to', u'TO'), (u'eat', u'eat', u'VB'), (u'dinner', u'dinner', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['John', 'gave', 'everybody', 'a', 'slice', 'and', 'then', 'placed', 'Mike', 'in', 'his', 'lap', 'to', 'eat', 'dinner', '.']}], 'questions': [{'question': {'string': ' How many of Mikes friends came to the party', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WHADJP (WRB How) (JJ many)) (PP (IN of) (NP (NNP Mikes) (NNS friends)))) (SQ (VP (VBD came) (PP (TO to) (NP (DT the) (NN party)))))))', 'lemma': [(u'How', u'how', u'WRB'), (u'many', u'many', u'JJ'), (u'of', u'of', u'IN'), (u'Mikes', u'Mikes', u'NNP'), (u'friends', u'friend', u'NNS'), (u'came', u'come', u'VBD'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'party', u'party', u'NN')]}, 'tokens': ['How', 'many', 'of', 'Mikes', 'friends', 'came', 'to', 'the', 'party']}, 'answers': [{'string': ' 6', 'parse': {'tree': '(ROOT (FRAG (NP (CD 6))))', 'lemma': [(u'6', u'6', u'CD')]}, 'tokens': ['6']}, {'string': ' 10', 'parse': {'tree': '(ROOT (FRAG (NP (CD 10))))', 'lemma': [(u'10', u'10', u'CD')]}, 'tokens': ['10']}, {'string': ' 8', 'parse': {'tree': '(ROOT (FRAG (NP (CD 8))))', 'lemma': [(u'8', u'8', u'CD')]}, 'tokens': ['8']}, {'string': ' 12', 'parse': {'tree': '(ROOT (FRAG (NP (CD 12))))', 'lemma': [(u'12', u'12', u'CD')]}, 'tokens': ['12']}], 'mode': 1}, {'question': {'string': ' What was picked for dinnertime and by who?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD was) (VP (VBN picked) (PP (IN for) (UCP (ADJP (JJ dinnertime)) (CC and) (PP (IN by) (WHNP (WP who))))))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'was', u'be', u'VBD'), (u'picked', u'pick', u'VBN'), (u'for', u'for', u'IN'), (u'dinnertime', u'dinnertime', u'JJ'), (u'and', u'and', u'CC'), (u'by', u'by', u'IN'), (u'who', u'who', u'WP'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'was', 'picked', 'for', 'dinnertime', 'and', 'by', 'who', '?']}, 'answers': [{'string': ' Noodles, John', 'parse': {'tree': '(ROOT (NP (NP (NNS Noodles)) (, ,) (NP (NNP John))))', 'lemma': [(u'Noodles', u'noodle', u'NNS'), (u',', u',', u','), (u'John', u'John', u'NNP')]}, 'tokens': ['Noodles', ',', 'John']}, {'string': ' Pizza, Mike.', 'parse': {'tree': '(ROOT (NP (NP (NNP Pizza)) (, ,) (NP (NNP Mike)) (. .)))', 'lemma': [(u'Pizza', u'Pizza', u'NNP'), (u',', u',', u','), (u'Mike', u'Mike', u'NNP'), (u'.', u'.', u'.')]}, 'tokens': ['Pizza', ',', 'Mike', '.']}, {'string': ' Salad, Sara', 'parse': {'tree': '(ROOT (NP (NP (NNP Salad)) (, ,) (NP (NNP Sara))))', 'lemma': [(u'Salad', u'Salad', u'NNP'), (u',', u',', u','), (u'Sara', u'Sara', u'NNP')]}, 'tokens': ['Salad', ',', 'Sara']}, {'string': ' Hamburgers, Jane', 'parse': {'tree': '(ROOT (NP (NP (NNS Hamburgers)) (, ,) (NP (NNP Jane))))', 'lemma': [(u'Hamburgers', u'hamburger', u'NNS'), (u',', u',', u','), (u'Jane', u'Jane', u'NNP')]}, 'tokens': ['Hamburgers', ',', 'Jane']}], 'mode': 0}, {'question': {'string': ' What shape box did the pizza come in?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WDT What) (NP (NP (NN shape)) (NP (NN box)))) (SQ (VBD did) (NP (DT the) (NN pizza)) (VP (VB come) (PRT (RP in)))) (. ?)))', 'lemma': [(u'What', u'what', u'WDT'), (u'shape', u'shape', u'NN'), (u'box', u'box', u'NN'), (u'did', u'do', u'VBD'), (u'the', u'the', u'DT'), (u'pizza', u'pizza', u'NN'), (u'come', u'come', u'VB'), (u'in', u'in', u'RP'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'shape', 'box', 'did', 'the', 'pizza', 'come', 'in', '?']}, 'answers': [{'string': ' Triangle', 'parse': {'tree': '(ROOT (NP (NNP Triangle)))', 'lemma': [(u'Triangle', u'Triangle', u'NNP')]}, 'tokens': ['Triangle']}, {'string': ' Square', 'parse': {'tree': '(ROOT (NP (NNP Square)))', 'lemma': [(u'Square', u'Square', u'NNP')]}, 'tokens': ['Square']}, {'string': ' Circle', 'parse': {'tree': '(ROOT (NP (NNP Circle)))', 'lemma': [(u'Circle', u'Circle', u'NNP')]}, 'tokens': ['Circle']}, {'string': ' no box.', 'parse': {'tree': '(ROOT (NP (DT no) (NN box) (. .)))', 'lemma': [(u'no', u'no', u'DT'), (u'box', u'box', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['no', 'box', '.']}], 'mode': 1}, {'question': {'string': ' What performer came to the party, and what was the party for?', 'parse': {'tree': '(ROOT (SBARQ (SBARQ (WHNP (WDT What) (NN performer)) (SQ (VP (VBD came) (PP (TO to) (NP (DT the) (NN party)))))) (, ,) (CC and) (SBARQ (WHNP (WP what)) (SQ (VBD was) (NP (DT the) (NN party)) (PP (IN for))) (. ?))))', 'lemma': [(u'What', u'what', u'WDT'), (u'performer', u'performer', u'NN'), (u'came', u'come', u'VBD'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'party', u'party', u'NN'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'what', u'what', u'WP'), (u'was', u'be', u'VBD'), (u'the', u'the', u'DT'), (u'party', u'party', u'NN'), (u'for', u'for', u'IN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'performer', 'came', 'to', 'the', 'party', ',', 'and', 'what', 'was', 'the', 'party', 'for', '?']}, 'answers': [{'string': " Clown, daughter 's birthday party", 'parse': {'tree': "(ROOT (S (VP (VP (VB Clown)) (, ,) (NP (NP (NN daughter) (POS 's)) (NN birthday) (NN party)))))", 'lemma': [(u'Clown', u'clown', u'VB'), (u',', u',', u','), (u'daughter', u'daughter', u'NN'), (u"'s", u"'s", u'POS'), (u'birthday', u'birthday', u'NN'), (u'party', u'party', u'NN')]}, 'tokens': ['Clown', ',', 'daughter', "'s", 'birthday', 'party']}, {'string': " Magician son 's birthday party", 'parse': {'tree': "(ROOT (NP (NP (JJ Magician) (NN son) (POS 's)) (NN birthday) (NN party)))", 'lemma': [(u'Magician', u'magician', u'JJ'), (u'son', u'son', u'NN'), (u"'s", u"'s", u'POS'), (u'birthday', u'birthday', u'NN'), (u'party', u'party', u'NN')]}, 'tokens': ['Magician', 'son', "'s", 'birthday', 'party']}, {'string': " Magician, daughter 's birthday party.", 'parse': {'tree': "(ROOT (NP (NP (NNP Magician)) (, ,) (NP (NP (NP (NN daughter) (POS 's)) (NN birthday)) (NP (NN party))) (. .)))", 'lemma': [(u'Magician', u'Magician', u'NNP'), (u',', u',', u','), (u'daughter', u'daughter', u'NN'), (u"'s", u"'s", u'POS'), (u'birthday', u'birthday', u'NN'), (u'party', u'party', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Magician', ',', 'daughter', "'s", 'birthday', 'party', '.']}, {'string': " Clown, son 's birthday party", 'parse': {'tree': "(ROOT (S (VP (VP (VB Clown)) (, ,) (NP (NP (NN son) (POS 's)) (NN birthday) (NN party)))))", 'lemma': [(u'Clown', u'clown', u'VB'), (u',', u',', u','), (u'son', u'son', u'NN'), (u"'s", u"'s", u'POS'), (u'birthday', u'birthday', u'NN'), (u'party', u'party', u'NN')]}, 'tokens': ['Clown', ',', 'son', "'s", 'birthday', 'party']}], 'mode': 0}]}
{'sentences': [{'string': ' Once upon a time, there was a squirrel named Joey.', 'parse': {'tree': '(ROOT (S (ADVP (RB Once) (PP (IN upon) (NP (DT a) (NN time)))) (, ,) (NP (EX there)) (VP (VBD was) (NP (NP (DT a) (NN squirrel)) (VP (VBN named) (NP (NNP Joey))))) (. .)))', 'lemma': [(u'Once', u'once', u'RB'), (u'upon', u'upon', u'IN'), (u'a', u'a', u'DT'), (u'time', u'time', u'NN'), (u',', u',', u','), (u'there', u'there', u'EX'), (u'was', u'be', u'VBD'), (u'a', u'a', u'DT'), (u'squirrel', u'squirrel', u'NN'), (u'named', u'name', u'VBN'), (u'Joey', u'Joey', u'NNP'), (u'.', u'.', u'.')]}, 'tokens': ['Once', 'upon', 'a', 'time', ',', 'there', 'was', 'a', 'squirrel', 'named', 'Joey', '.']}, {'string': ' Joey loved to go outside and play with his cousin Jimmy.', 'parse': {'tree': '(ROOT (S (NP (NNP Joey)) (VP (VBD loved) (S (VP (TO to) (VP (VP (VB go) (ADVP (RB outside))) (CC and) (VP (VB play) (PP (IN with) (NP (PRP$ his) (NN cousin) (NN Jimmy)))))))) (. .)))', 'lemma': [(u'Joey', u'Joey', u'NNP'), (u'loved', u'love', u'VBD'), (u'to', u'to', u'TO'), (u'go', u'go', u'VB'), (u'outside', u'outside', u'RB'), (u'and', u'and', u'CC'), (u'play', u'play', u'VB'), (u'with', u'with', u'IN'), (u'his', u'he', u'PRP$'), (u'cousin', u'cousin', u'NN'), (u'Jimmy', u'jimmy', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Joey', 'loved', 'to', 'go', 'outside', 'and', 'play', 'with', 'his', 'cousin', 'Jimmy', '.']}, {'string': ' Joey and Jimmy played silly games together, and were always laughing.', 'parse': {'tree': '(ROOT (S (NP (NNP Joey) (CC and) (NNP Jimmy)) (VP (VP (VBD played) (NP (JJ silly) (NNS games)) (ADVP (RB together))) (, ,) (CC and) (VP (VBD were) (VP (ADVP (RB always)) (VBG laughing)))) (. .)))', 'lemma': [(u'Joey', u'Joey', u'NNP'), (u'and', u'and', u'CC'), (u'Jimmy', u'Jimmy', u'NNP'), (u'played', u'play', u'VBD'), (u'silly', u'silly', u'JJ'), (u'games', u'game', u'NNS'), (u'together', u'together', u'RB'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'were', u'be', u'VBD'), (u'always', u'always', u'RB'), (u'laughing', u'laugh', u'VBG'), (u'.', u'.', u'.')]}, 'tokens': ['Joey', 'and', 'Jimmy', 'played', 'silly', 'games', 'together', ',', 'and', 'were', 'always', 'laughing', '.']}, {'string': " One day, Joey and Jimmy went swimming together at their Aunt Julie 's pond.", 'parse': {'tree': "(ROOT (S (NP (CD One) (NN day)) (, ,) (NP (NNP Joey) (CC and) (NNP Jimmy)) (VP (VBD went) (S (VP (VBG swimming) (ADVP (RB together)) (PP (IN at) (NP (NP (PRP$ their) (NNP Aunt) (NNP Julie) (POS 's)) (NN pond)))))) (. .)))", 'lemma': [(u'One', u'one', u'CD'), (u'day', u'day', u'NN'), (u',', u',', u','), (u'Joey', u'Joey', u'NNP'), (u'and', u'and', u'CC'), (u'Jimmy', u'Jimmy', u'NNP'), (u'went', u'go', u'VBD'), (u'swimming', u'swim', u'VBG'), (u'together', u'together', u'RB'), (u'at', u'at', u'IN'), (u'their', u'they', u'PRP$'), (u'Aunt', u'Aunt', u'NNP'), (u'Julie', u'Julie', u'NNP'), (u"'s", u"'s", u'POS'), (u'pond', u'pond', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['One', 'day', ',', 'Joey', 'and', 'Jimmy', 'went', 'swimming', 'together', 'at', 'their', 'Aunt', 'Julie', "'s", 'pond', '.']}, {'string': ' Joey woke up early in the morning to eat some food before they left.', 'parse': {'tree': '(ROOT (S (NP (NNP Joey)) (VP (VBD woke) (ADVP (RB up) (RB early)) (PP (IN in) (NP (DT the) (NN morning))) (S (VP (TO to) (VP (VB eat) (NP (DT some) (NN food)) (SBAR (IN before) (S (NP (PRP they)) (VP (VBD left)))))))) (. .)))', 'lemma': [(u'Joey', u'Joey', u'NNP'), (u'woke', u'wake', u'VBD'), (u'up', u'up', u'RB'), (u'early', u'early', u'RB'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'morning', u'morning', u'NN'), (u'to', u'to', u'TO'), (u'eat', u'eat', u'VB'), (u'some', u'some', u'DT'), (u'food', u'food', u'NN'), (u'before', u'before', u'IN'), (u'they', u'they', u'PRP'), (u'left', u'leave', u'VBD'), (u'.', u'.', u'.')]}, 'tokens': ['Joey', 'woke', 'up', 'early', 'in', 'the', 'morning', 'to', 'eat', 'some', 'food', 'before', 'they', 'left', '.']}, {'string': " He could n't find anything to eat except for pie!", 'parse': {'tree': "(ROOT (S (NP (PRP He)) (VP (MD could) (RB n't) (VP (VB find) (NP (NN anything)) (S (VP (TO to) (VP (VB eat) (PP (IN except) (PP (IN for) (NP (NN pie))))))))) (. !)))", 'lemma': [(u'He', u'he', u'PRP'), (u'could', u'could', u'MD'), (u"n't", u'not', u'RB'), (u'find', u'find', u'VB'), (u'anything', u'anything', u'NN'), (u'to', u'to', u'TO'), (u'eat', u'eat', u'VB'), (u'except', u'except', u'IN'), (u'for', u'for', u'IN'), (u'pie', u'pie', u'NN'), (u'!', u'!', u'.')]}, 'tokens': ['He', 'could', "n't", 'find', 'anything', 'to', 'eat', 'except', 'for', 'pie', '!']}, {'string': ' Usually, Joey would eat cereal, fruit -LRB- a pear -RRB-, or oatmeal for breakfast.', 'parse': {'tree': '(ROOT (S (ADVP (RB Usually)) (, ,) (NP (NNP Joey)) (VP (MD would) (VP (VB eat) (NP (NP (NN cereal)) (, ,) (NP (NP (NN fruit)) (PRN (-LRB- -LRB-) (NP (DT a) (NN pear)) (-RRB- -RRB-))) (, ,) (CC or) (NP (NP (NN oatmeal)) (PP (IN for) (NP (NN breakfast))))))) (. .)))', 'lemma': [(u'Usually', u'usually', u'RB'), (u',', u',', u','), (u'Joey', u'Joey', u'NNP'), (u'would', u'would', u'MD'), (u'eat', u'eat', u'VB'), (u'cereal', u'cereal', u'NN'), (u',', u',', u','), (u'fruit', u'fruit', u'NN'), (u'-LRB-', u'-lrb-', u'-LRB-'), (u'a', u'a', u'DT'), (u'pear', u'pear', u'NN'), (u'-RRB-', u'-rrb-', u'-RRB-'), (u',', u',', u','), (u'or', u'or', u'CC'), (u'oatmeal', u'oatmeal', u'NN'), (u'for', u'for', u'IN'), (u'breakfast', u'breakfast', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Usually', ',', 'Joey', 'would', 'eat', 'cereal', ',', 'fruit', '-LRB-', 'a', 'pear', '-RRB-', ',', 'or', 'oatmeal', 'for', 'breakfast', '.']}, {'string': ' After he ate, he and Jimmy went to the pond.', 'parse': {'tree': '(ROOT (S (SBAR (IN After) (S (NP (PRP he)) (VP (VBD ate)))) (, ,) (NP (PRP he) (CC and) (NNP Jimmy)) (VP (VBD went) (PP (TO to) (NP (DT the) (NN pond)))) (. .)))', 'lemma': [(u'After', u'after', u'IN'), (u'he', u'he', u'PRP'), (u'ate', u'eat', u'VBD'), (u',', u',', u','), (u'he', u'he', u'PRP'), (u'and', u'and', u'CC'), (u'Jimmy', u'Jimmy', u'NNP'), (u'went', u'go', u'VBD'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'pond', u'pond', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['After', 'he', 'ate', ',', 'he', 'and', 'Jimmy', 'went', 'to', 'the', 'pond', '.']}, {'string': ' On their way there they saw their friend Jack Rabbit.', 'parse': {'tree': '(ROOT (S (PP (IN On) (NP (NP (PRP$ their) (NN way)) (ADVP (RB there)))) (NP (PRP they)) (VP (VBD saw) (S (NP (PRP$ their) (NN friend)) (NP (NNP Jack) (NNP Rabbit)))) (. .)))', 'lemma': [(u'On', u'on', u'IN'), (u'their', u'they', u'PRP$'), (u'way', u'way', u'NN'), (u'there', u'there', u'RB'), (u'they', u'they', u'PRP'), (u'saw', u'see', u'VBD'), (u'their', u'they', u'PRP$'), (u'friend', u'friend', u'NN'), (u'Jack', u'Jack', u'NNP'), (u'Rabbit', u'Rabbit', u'NNP'), (u'.', u'.', u'.')]}, 'tokens': ['On', 'their', 'way', 'there', 'they', 'saw', 'their', 'friend', 'Jack', 'Rabbit', '.']}, {'string': ' They dove into the water and swam for several hours.', 'parse': {'tree': '(ROOT (S (NP (PRP They)) (VP (VBD dove) (PP (IN into) (NP (NP (DT the) (NN water) (CC and) (NN swam)) (PP (IN for) (NP (JJ several) (NNS hours)))))) (. .)))', 'lemma': [(u'They', u'they', u'PRP'), (u'dove', u'dive', u'VBD'), (u'into', u'into', u'IN'), (u'the', u'the', u'DT'), (u'water', u'water', u'NN'), (u'and', u'and', u'CC'), (u'swam', u'swam', u'NN'), (u'for', u'for', u'IN'), (u'several', u'several', u'JJ'), (u'hours', u'hour', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['They', 'dove', 'into', 'the', 'water', 'and', 'swam', 'for', 'several', 'hours', '.']}, {'string': ' The sun was out, but the breeze was cold.', 'parse': {'tree': '(ROOT (S (S (NP (DT The) (NN sun)) (VP (VBD was) (ADVP (RB out)))) (, ,) (CC but) (S (NP (DT the) (NN breeze)) (VP (VBD was) (ADJP (JJ cold)))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'sun', u'sun', u'NN'), (u'was', u'be', u'VBD'), (u'out', u'out', u'RB'), (u',', u',', u','), (u'but', u'but', u'CC'), (u'the', u'the', u'DT'), (u'breeze', u'breeze', u'NN'), (u'was', u'be', u'VBD'), (u'cold', u'cold', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'sun', 'was', 'out', ',', 'but', 'the', 'breeze', 'was', 'cold', '.']}, {'string': ' Joey and Jimmy got out of the water and started walking home.', 'parse': {'tree': '(ROOT (S (NP (NNP Joey) (CC and) (NNP Jimmy)) (VP (VP (VBD got) (PRT (RP out)) (PP (IN of) (NP (DT the) (NN water)))) (CC and) (VP (VBD started) (S (VP (VBG walking) (NP (NN home)))))) (. .)))', 'lemma': [(u'Joey', u'Joey', u'NNP'), (u'and', u'and', u'CC'), (u'Jimmy', u'Jimmy', u'NNP'), (u'got', u'get', u'VBD'), (u'out', u'out', u'RP'), (u'of', u'of', u'IN'), (u'the', u'the', u'DT'), (u'water', u'water', u'NN'), (u'and', u'and', u'CC'), (u'started', u'start', u'VBD'), (u'walking', u'walk', u'VBG'), (u'home', u'home', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Joey', 'and', 'Jimmy', 'got', 'out', 'of', 'the', 'water', 'and', 'started', 'walking', 'home', '.']}, {'string': ' Their fur was wet, and the breeze chilled them.', 'parse': {'tree': '(ROOT (S (S (NP (PRP$ Their) (NN fur)) (VP (VBD was) (ADJP (JJ wet)))) (, ,) (CC and) (S (NP (DT the) (NN breeze)) (VP (VBN chilled) (NP (PRP them)))) (. .)))', 'lemma': [(u'Their', u'they', u'PRP$'), (u'fur', u'fur', u'NN'), (u'was', u'be', u'VBD'), (u'wet', u'wet', u'JJ'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'the', u'the', u'DT'), (u'breeze', u'breeze', u'NN'), (u'chilled', u'chill', u'VBN'), (u'them', u'they', u'PRP'), (u'.', u'.', u'.')]}, 'tokens': ['Their', 'fur', 'was', 'wet', ',', 'and', 'the', 'breeze', 'chilled', 'them', '.']}, {'string': ' When they got home, they dried off, and Jimmy put on his favorite purple shirt.', 'parse': {'tree': '(ROOT (S (S (SBAR (WHADVP (WRB When)) (S (NP (PRP they)) (VP (VBD got) (NP (NN home))))) (, ,) (NP (PRP they)) (VP (VBD dried) (PRT (RP off)))) (, ,) (CC and) (S (NP (NNP Jimmy)) (VP (VBD put) (PP (IN on) (NP (PRP$ his) (JJ favorite) (JJ purple) (NN shirt))))) (. .)))', 'lemma': [(u'When', u'when', u'WRB'), (u'they', u'they', u'PRP'), (u'got', u'get', u'VBD'), (u'home', u'home', u'NN'), (u',', u',', u','), (u'they', u'they', u'PRP'), (u'dried', u'dry', u'VBD'), (u'off', u'off', u'RP'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'Jimmy', u'Jimmy', u'NNP'), (u'put', u'put', u'VBD'), (u'on', u'on', u'IN'), (u'his', u'he', u'PRP$'), (u'favorite', u'favorite', u'JJ'), (u'purple', u'purple', u'JJ'), (u'shirt', u'shirt', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['When', 'they', 'got', 'home', ',', 'they', 'dried', 'off', ',', 'and', 'Jimmy', 'put', 'on', 'his', 'favorite', 'purple', 'shirt', '.']}, {'string': ' Joey put on a blue shirt with red and green dots.', 'parse': {'tree': '(ROOT (S (NP (NNP Joey)) (VP (VBD put) (PP (IN on) (NP (DT a) (JJ blue) (NN shirt))) (PP (IN with) (NP (JJ red) (CC and) (JJ green) (NNS dots)))) (. .)))', 'lemma': [(u'Joey', u'Joey', u'NNP'), (u'put', u'put', u'VBD'), (u'on', u'on', u'IN'), (u'a', u'a', u'DT'), (u'blue', u'blue', u'JJ'), (u'shirt', u'shirt', u'NN'), (u'with', u'with', u'IN'), (u'red', u'red', u'JJ'), (u'and', u'and', u'CC'), (u'green', u'green', u'JJ'), (u'dots', u'dot', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['Joey', 'put', 'on', 'a', 'blue', 'shirt', 'with', 'red', 'and', 'green', 'dots', '.']}, {'string': " The two squirrels ate some food that Joey 's mom, Jasmine, made and went off to bed.", 'parse': {'tree': "(ROOT (S (NP (DT The) (CD two) (NNS squirrels)) (VP (VBD ate) (NP (DT some) (NN food)) (SBAR (IN that) (S (NP (NP (NP (NNP Joey) (POS 's)) (NN mom)) (, ,) (NP (NNP Jasmine)) (, ,)) (VP (VP (VBD made)) (CC and) (VP (VBD went) (PRT (RP off)) (PP (TO to) (NP (NN bed)))))))) (. .)))", 'lemma': [(u'The', u'the', u'DT'), (u'two', u'two', u'CD'), (u'squirrels', u'squirrel', u'NNS'), (u'ate', u'eat', u'VBD'), (u'some', u'some', u'DT'), (u'food', u'food', u'NN'), (u'that', u'that', u'IN'), (u'Joey', u'Joey', u'NNP'), (u"'s", u"'s", u'POS'), (u'mom', u'mom', u'NN'), (u',', u',', u','), (u'Jasmine', u'Jasmine', u'NNP'), (u',', u',', u','), (u'made', u'make', u'VBD'), (u'and', u'and', u'CC'), (u'went', u'go', u'VBD'), (u'off', u'off', u'RP'), (u'to', u'to', u'TO'), (u'bed', u'bed', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'two', 'squirrels', 'ate', 'some', 'food', 'that', 'Joey', "'s", 'mom', ',', 'Jasmine', ',', 'made', 'and', 'went', 'off', 'to', 'bed', '.']}], 'questions': [{'question': {'string': ' What did Joey eat for breakfast?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD did) (NP (NNP Joey)) (VP (VB eat) (PP (IN for) (NP (NN breakfast))))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'did', u'do', u'VBD'), (u'Joey', u'Joey', u'NNP'), (u'eat', u'eat', u'VB'), (u'for', u'for', u'IN'), (u'breakfast', u'breakfast', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'did', 'Joey', 'eat', 'for', 'breakfast', '?']}, 'answers': [{'string': ' Pie', 'parse': {'tree': '(ROOT (NP (NNP Pie)))', 'lemma': [(u'Pie', u'Pie', u'NNP')]}, 'tokens': ['Pie']}, {'string': ' Oatmeal', 'parse': {'tree': '(ROOT (NP (NNP Oatmeal)))', 'lemma': [(u'Oatmeal', u'Oatmeal', u'NNP')]}, 'tokens': ['Oatmeal']}, {'string': ' Cereal', 'parse': {'tree': '(ROOT (NP (NN Cereal)))', 'lemma': [(u'Cereal', u'cereal', u'NN')]}, 'tokens': ['Cereal']}, {'string': ' Pear', 'parse': {'tree': '(ROOT (NP (NNP Pear)))', 'lemma': [(u'Pear', u'Pear', u'NNP')]}, 'tokens': ['Pear']}], 'mode': 0}, {'question': {'string': " What color was Jimmy 's favorite shirt?", 'parse': {'tree': "(ROOT (SBARQ (WHNP (WDT What) (NN color)) (SQ (VBD was) (NP (NP (NNP Jimmy) (POS 's)) (JJ favorite) (NN shirt))) (. ?)))", 'lemma': [(u'What', u'what', u'WDT'), (u'color', u'color', u'NN'), (u'was', u'be', u'VBD'), (u'Jimmy', u'Jimmy', u'NNP'), (u"'s", u"'s", u'POS'), (u'favorite', u'favorite', u'JJ'), (u'shirt', u'shirt', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'color', 'was', 'Jimmy', "'s", 'favorite', 'shirt', '?']}, 'answers': [{'string': ' Green', 'parse': {'tree': '(ROOT (NP (NNP Green)))', 'lemma': [(u'Green', u'Green', u'NNP')]}, 'tokens': ['Green']}, {'string': ' Red', 'parse': {'tree': '(ROOT (NP (NNP Red)))', 'lemma': [(u'Red', u'Red', u'NNP')]}, 'tokens': ['Red']}, {'string': ' Purple', 'parse': {'tree': '(ROOT (NP (NNP Purple)))', 'lemma': [(u'Purple', u'Purple', u'NNP')]}, 'tokens': ['Purple']}, {'string': ' Blue', 'parse': {'tree': '(ROOT (NP (NNP Blue)))', 'lemma': [(u'Blue', u'Blue', u'NNP')]}, 'tokens': ['Blue']}], 'mode': 0}, {'question': {'string': " What was Joey 's cousin 's name?", 'parse': {'tree': "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD was) (NP (NP (NP (NNP Joey) (POS 's)) (NN cousin) (POS 's)) (NN name))) (. ?)))", 'lemma': [(u'What', u'what', u'WP'), (u'was', u'be', u'VBD'), (u'Joey', u'Joey', u'NNP'), (u"'s", u"'s", u'POS'), (u'cousin', u'cousin', u'NN'), (u"'s", u"'s", u'POS'), (u'name', u'name', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'was', 'Joey', "'s", 'cousin', "'s", 'name', '?']}, 'answers': [{'string': ' Julie', 'parse': {'tree': '(ROOT (NP (NNP Julie)))', 'lemma': [(u'Julie', u'Julie', u'NNP')]}, 'tokens': ['Julie']}, {'string': ' Jimmy', 'parse': {'tree': '(ROOT (NP (NNP Jimmy)))', 'lemma': [(u'Jimmy', u'Jimmy', u'NNP')]}, 'tokens': ['Jimmy']}, {'string': ' Jasmine', 'parse': {'tree': '(ROOT (NP (NNP Jasmine)))', 'lemma': [(u'Jasmine', u'Jasmine', u'NNP')]}, 'tokens': ['Jasmine']}, {'string': ' Jack', 'parse': {'tree': '(ROOT (NP (NNP Jack)))', 'lemma': [(u'Jack', u'Jack', u'NNP')]}, 'tokens': ['Jack']}], 'mode': 0}, {'question': {'string': " What was the squirrel 's name?", 'parse': {'tree': "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD was) (NP (NP (DT the) (NN squirrel) (POS 's)) (NN name))) (. ?)))", 'lemma': [(u'What', u'what', u'WP'), (u'was', u'be', u'VBD'), (u'the', u'the', u'DT'), (u'squirrel', u'squirrel', u'NN'), (u"'s", u"'s", u'POS'), (u'name', u'name', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'was', 'the', 'squirrel', "'s", 'name', '?']}, 'answers': [{'string': ' Jimmy', 'parse': {'tree': '(ROOT (NP (NNP Jimmy)))', 'lemma': [(u'Jimmy', u'Jimmy', u'NNP')]}, 'tokens': ['Jimmy']}, {'string': ' Julie', 'parse': {'tree': '(ROOT (NP (NNP Julie)))', 'lemma': [(u'Julie', u'Julie', u'NNP')]}, 'tokens': ['Julie']}, {'string': ' Joey', 'parse': {'tree': '(ROOT (NP (NNP Joey)))', 'lemma': [(u'Joey', u'Joey', u'NNP')]}, 'tokens': ['Joey']}, {'string': ' Jack', 'parse': {'tree': '(ROOT (NP (NNP Jack)))', 'lemma': [(u'Jack', u'Jack', u'NNP')]}, 'tokens': ['Jack']}], 'mode': 1}]}
{'sentences': [{'string': ' Jake was walking to the park to play baseball with his friends.', 'parse': {'tree': '(ROOT (S (NP (NNP Jake)) (VP (VBD was) (VP (VBG walking) (PP (TO to) (NP (DT the) (NN park))) (S (VP (TO to) (VP (VB play) (NP (NN baseball)) (PP (IN with) (NP (PRP$ his) (NNS friends)))))))) (. .)))', 'lemma': [(u'Jake', u'Jake', u'NNP'), (u'was', u'be', u'VBD'), (u'walking', u'walk', u'VBG'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'park', u'park', u'NN'), (u'to', u'to', u'TO'), (u'play', u'play', u'VB'), (u'baseball', u'baseball', u'NN'), (u'with', u'with', u'IN'), (u'his', u'he', u'PRP$'), (u'friends', u'friend', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['Jake', 'was', 'walking', 'to', 'the', 'park', 'to', 'play', 'baseball', 'with', 'his', 'friends', '.']}, {'string': ' He loved being outside on sunny days, and now that school was over for the year, he was playing baseball every day.', 'parse': {'tree': '(ROOT (S (S (NP (PRP He)) (VP (VBD loved) (S (VP (VBG being) (UCP (PP (IN outside) (PP (IN on) (NP (JJ sunny) (NNS days)))) (, ,) (CC and) (ADVP (RB now))))) (SBAR (IN that) (S (NP (NN school)) (VP (VBD was) (ADVP (RB over)) (PP (IN for) (NP (DT the) (NN year)))))))) (, ,) (NP (PRP he)) (VP (VBD was) (VP (VBG playing) (NP (NP (NN baseball)) (NP (DT every) (NN day))))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'loved', u'love', u'VBD'), (u'being', u'be', u'VBG'), (u'outside', u'outside', u'IN'), (u'on', u'on', u'IN'), (u'sunny', u'sunny', u'JJ'), (u'days', u'day', u'NNS'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'now', u'now', u'RB'), (u'that', u'that', u'IN'), (u'school', u'school', u'NN'), (u'was', u'be', u'VBD'), (u'over', u'over', u'RB'), (u'for', u'for', u'IN'), (u'the', u'the', u'DT'), (u'year', u'year', u'NN'), (u',', u',', u','), (u'he', u'he', u'PRP'), (u'was', u'be', u'VBD'), (u'playing', u'play', u'VBG'), (u'baseball', u'baseball', u'NN'), (u'every', u'every', u'DT'), (u'day', u'day', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'loved', 'being', 'outside', 'on', 'sunny', 'days', ',', 'and', 'now', 'that', 'school', 'was', 'over', 'for', 'the', 'year', ',', 'he', 'was', 'playing', 'baseball', 'every', 'day', '.']}, {'string': ' The more he played, the better he got.', 'parse': {'tree': '(ROOT (S (SBAR (X (DT The) (JJR more)) (S (NP (PRP he)) (VP (VBD played)))) (, ,) (X (DT the) (JJR better)) (NP (PRP he)) (VP (VBD got)) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'more', u'more', u'JJR'), (u'he', u'he', u'PRP'), (u'played', u'play', u'VBD'), (u',', u',', u','), (u'the', u'the', u'DT'), (u'better', u'better', u'JJR'), (u'he', u'he', u'PRP'), (u'got', u'get', u'VBD'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'more', 'he', 'played', ',', 'the', 'better', 'he', 'got', '.']}, {'string': ' Only Frank was better than he was.', 'parse': {'tree': '(ROOT (S (RB Only) (NP (NNP Frank)) (VP (VBD was) (ADJP (ADJP (JJR better)) (SBAR (IN than) (S (NP (PRP he)) (VP (VBD was)))))) (. .)))', 'lemma': [(u'Only', u'only', u'RB'), (u'Frank', u'Frank', u'NNP'), (u'was', u'be', u'VBD'), (u'better', u'better', u'JJR'), (u'than', u'than', u'IN'), (u'he', u'he', u'PRP'), (u'was', u'be', u'VBD'), (u'.', u'.', u'.')]}, 'tokens': ['Only', 'Frank', 'was', 'better', 'than', 'he', 'was', '.']}, {'string': ' He liked playing third base, but he often played in the field.', 'parse': {'tree': '(ROOT (S (S (NP (PRP He)) (VP (VBD liked) (S (VP (VBG playing) (NP (JJ third) (NN base)))))) (, ,) (CC but) (S (NP (PRP he)) (ADVP (RB often)) (VP (VBD played) (PP (IN in) (NP (DT the) (NN field))))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'liked', u'like', u'VBD'), (u'playing', u'play', u'VBG'), (u'third', u'third', u'JJ'), (u'base', u'base', u'NN'), (u',', u',', u','), (u'but', u'but', u'CC'), (u'he', u'he', u'PRP'), (u'often', u'often', u'RB'), (u'played', u'play', u'VBD'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'field', u'field', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'liked', 'playing', 'third', 'base', ',', 'but', 'he', 'often', 'played', 'in', 'the', 'field', '.']}, {'string': ' He was carrying his favorite mitt that his Grandfather had bought him.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD was) (VP (VBG carrying) (NP (PRP$ his) (JJ favorite) (NN mitt)) (SBAR (IN that) (S (NP (PRP$ his) (NN Grandfather)) (VP (VBD had) (VP (VBN bought) (NP (PRP him)))))))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'was', u'be', u'VBD'), (u'carrying', u'carry', u'VBG'), (u'his', u'he', u'PRP$'), (u'favorite', u'favorite', u'JJ'), (u'mitt', u'mitt', u'NN'), (u'that', u'that', u'IN'), (u'his', u'he', u'PRP$'), (u'Grandfather', u'grandfather', u'NN'), (u'had', u'have', u'VBD'), (u'bought', u'buy', u'VBN'), (u'him', u'he', u'PRP'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'was', 'carrying', 'his', 'favorite', 'mitt', 'that', 'his', 'Grandfather', 'had', 'bought', 'him', '.']}, {'string': ' His Grandfather had taught him to catch.', 'parse': {'tree': '(ROOT (S (NP (PRP$ His) (NN Grandfather)) (VP (VBD had) (VP (VBN taught) (S (NP (PRP him)) (VP (TO to) (VP (VB catch)))))) (. .)))', 'lemma': [(u'His', u'he', u'PRP$'), (u'Grandfather', u'grandfather', u'NN'), (u'had', u'have', u'VBD'), (u'taught', u'teach', u'VBN'), (u'him', u'he', u'PRP'), (u'to', u'to', u'TO'), (u'catch', u'catch', u'VB'), (u'.', u'.', u'.')]}, 'tokens': ['His', 'Grandfather', 'had', 'taught', 'him', 'to', 'catch', '.']}, {'string': ' He loved spending time with him when he was younger, but he had moved last year.', 'parse': {'tree': '(ROOT (S (S (NP (PRP He)) (VP (VBD loved) (NP (NN spending) (NN time)) (PP (IN with) (NP (PRP him))) (SBAR (WHADVP (WRB when)) (S (NP (PRP he)) (VP (VBD was) (NP (JJR younger))))))) (, ,) (CC but) (S (NP (PRP he)) (VP (VBD had) (VP (VBN moved) (NP (JJ last) (NN year))))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'loved', u'love', u'VBD'), (u'spending', u'spending', u'NN'), (u'time', u'time', u'NN'), (u'with', u'with', u'IN'), (u'him', u'he', u'PRP'), (u'when', u'when', u'WRB'), (u'he', u'he', u'PRP'), (u'was', u'be', u'VBD'), (u'younger', u'younger', u'JJR'), (u',', u',', u','), (u'but', u'but', u'CC'), (u'he', u'he', u'PRP'), (u'had', u'have', u'VBD'), (u'moved', u'move', u'VBN'), (u'last', u'last', u'JJ'), (u'year', u'year', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'loved', 'spending', 'time', 'with', 'him', 'when', 'he', 'was', 'younger', ',', 'but', 'he', 'had', 'moved', 'last', 'year', '.']}, {'string': ' Now he only saw his Grandfather in the summer.', 'parse': {'tree': '(ROOT (S (ADVP (RB Now)) (NP (PRP he)) (VP (ADVP (RB only)) (VBD saw) (NP (PRP$ his) (NN Grandfather)) (PP (IN in) (NP (DT the) (NN summer)))) (. .)))', 'lemma': [(u'Now', u'now', u'RB'), (u'he', u'he', u'PRP'), (u'only', u'only', u'RB'), (u'saw', u'see', u'VBD'), (u'his', u'he', u'PRP$'), (u'Grandfather', u'grandfather', u'NN'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'summer', u'summer', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Now', 'he', 'only', 'saw', 'his', 'Grandfather', 'in', 'the', 'summer', '.']}, {'string': ' Jake was really excited to show him his skills when he came to their next game.', 'parse': {'tree': '(ROOT (S (NP (NNP Jake)) (VP (VBD was) (ADJP (RB really) (JJ excited) (S (VP (TO to) (VP (VB show) (NP (PRP him)) (NP (PRP$ his) (NNS skills)))))) (SBAR (WHADVP (WRB when)) (S (NP (PRP he)) (VP (VBD came) (PP (TO to) (NP (PRP$ their) (JJ next) (NN game))))))) (. .)))', 'lemma': [(u'Jake', u'Jake', u'NNP'), (u'was', u'be', u'VBD'), (u'really', u'really', u'RB'), (u'excited', u'excited', u'JJ'), (u'to', u'to', u'TO'), (u'show', u'show', u'VB'), (u'him', u'he', u'PRP'), (u'his', u'he', u'PRP$'), (u'skills', u'skill', u'NNS'), (u'when', u'when', u'WRB'), (u'he', u'he', u'PRP'), (u'came', u'come', u'VBD'), (u'to', u'to', u'TO'), (u'their', u'they', u'PRP$'), (u'next', u'next', u'JJ'), (u'game', u'game', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Jake', 'was', 'really', 'excited', 'to', 'show', 'him', 'his', 'skills', 'when', 'he', 'came', 'to', 'their', 'next', 'game', '.']}, {'string': ' He could throw really fast now.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (MD could) (VP (VB throw) (ADVP (RB really)) (ADVP (RB fast) (RB now)))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'could', u'could', u'MD'), (u'throw', u'throw', u'VB'), (u'really', u'really', u'RB'), (u'fast', u'fast', u'RB'), (u'now', u'now', u'RB'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'could', 'throw', 'really', 'fast', 'now', '.']}, {'string': ' He was sure his Grandfather would want to sit in the front to watch him.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD was) (ADJP (JJ sure) (SBAR (S (NP (PRP$ his) (NN Grandfather)) (VP (MD would) (VP (VB want) (S (VP (TO to) (VP (VB sit) (PP (IN in) (NP (DT the) (NN front) (S (VP (TO to) (VP (VB watch) (NP (PRP him)))))))))))))))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'was', u'be', u'VBD'), (u'sure', u'sure', u'JJ'), (u'his', u'he', u'PRP$'), (u'Grandfather', u'grandfather', u'NN'), (u'would', u'would', u'MD'), (u'want', u'want', u'VB'), (u'to', u'to', u'TO'), (u'sit', u'sit', u'VB'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'front', u'front', u'NN'), (u'to', u'to', u'TO'), (u'watch', u'watch', u'VB'), (u'him', u'he', u'PRP'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'was', 'sure', 'his', 'Grandfather', 'would', 'want', 'to', 'sit', 'in', 'the', 'front', 'to', 'watch', 'him', '.']}, {'string': ' He knew he would jump up and down.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD knew) (SBAR (S (NP (PRP he)) (VP (MD would) (VP (VB jump) (ADVP (RB up) (CC and) (RB down))))))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'knew', u'know', u'VBD'), (u'he', u'he', u'PRP'), (u'would', u'would', u'MD'), (u'jump', u'jump', u'VB'), (u'up', u'up', u'RB'), (u'and', u'and', u'CC'), (u'down', u'down', u'RB'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'knew', 'he', 'would', 'jump', 'up', 'and', 'down', '.']}, {'string': ' Jake happily ran the rest of the way to the park thinking about how much fun he was going to have playing baseball this year.', 'parse': {'tree': '(ROOT (S (NP (NNP Jake)) (ADVP (RB happily)) (VP (VBD ran) (NP (NP (DT the) (NN rest)) (PP (IN of) (NP (DT the) (NN way)))) (PP (TO to) (NP (NP (DT the) (NN park) (NN thinking)) (SBAR (WHPP (IN about) (WHNP (WHADJP (WRB how) (JJ much)) (NNS fun))) (S (NP (PRP he)) (VP (VBD was) (VP (VBG going) (S (VP (TO to) (VP (VB have) (S (VP (VBG playing) (NP (NN baseball)) (NP (DT this) (NN year)))))))))))))) (. .)))', 'lemma': [(u'Jake', u'Jake', u'NNP'), (u'happily', u'happily', u'RB'), (u'ran', u'run', u'VBD'), (u'the', u'the', u'DT'), (u'rest', u'rest', u'NN'), (u'of', u'of', u'IN'), (u'the', u'the', u'DT'), (u'way', u'way', u'NN'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'park', u'park', u'NN'), (u'thinking', u'thinking', u'NN'), (u'about', u'about', u'IN'), (u'how', u'how', u'WRB'), (u'much', u'much', u'JJ'), (u'fun', u'fun', u'NNS'), (u'he', u'he', u'PRP'), (u'was', u'be', u'VBD'), (u'going', u'go', u'VBG'), (u'to', u'to', u'TO'), (u'have', u'have', u'VB'), (u'playing', u'play', u'VBG'), (u'baseball', u'baseball', u'NN'), (u'this', u'this', u'DT'), (u'year', u'year', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Jake', 'happily', 'ran', 'the', 'rest', 'of', 'the', 'way', 'to', 'the', 'park', 'thinking', 'about', 'how', 'much', 'fun', 'he', 'was', 'going', 'to', 'have', 'playing', 'baseball', 'this', 'year', '.']}], 'questions': [{'question': {'string': ' Who is better than Jake at baseball?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP Who)) (SQ (VBZ is) (NP (NP (JJR better)) (PP (IN than) (NP (NP (NNP Jake)) (PP (IN at) (NP (NN baseball))))))) (. ?)))', 'lemma': [(u'Who', u'who', u'WP'), (u'is', u'be', u'VBZ'), (u'better', u'better', u'JJR'), (u'than', u'than', u'IN'), (u'Jake', u'Jake', u'NNP'), (u'at', u'at', u'IN'), (u'baseball', u'baseball', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['Who', 'is', 'better', 'than', 'Jake', 'at', 'baseball', '?']}, 'answers': [{'string': ' Frank.', 'parse': {'tree': '(ROOT (FRAG (NP (NNP Frank)) (. .)))', 'lemma': [(u'Frank', u'Frank', u'NNP'), (u'.', u'.', u'.')]}, 'tokens': ['Frank', '.']}, {'string': ' His Grandfather.', 'parse': {'tree': '(ROOT (NP (PRP$ His) (NNS Grandfather) (. .)))', 'lemma': [(u'His', u'he', u'PRP$'), (u'Grandfather', u'grandfather', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['His', 'Grandfather', '.']}, {'string': ' No one.', 'parse': {'tree': '(ROOT (NP (DT No) (NN one) (. .)))', 'lemma': [(u'No', u'no', u'DT'), (u'one', u'one', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['No', 'one', '.']}, {'string': ' His Grandmother.', 'parse': {'tree': '(ROOT (NP (PRP$ His) (NNS Grandmother) (. .)))', 'lemma': [(u'His', u'he', u'PRP$'), (u'Grandmother', u'grandmother', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['His', 'Grandmother', '.']}], 'mode': 1}, {'question': {'string': " What did Jake 's Grandfather teach him?", 'parse': {'tree': "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD did) (NP (NP (NNP Jake) (POS 's)) (NNP Grandfather)) (VP (VB teach) (NP (PRP him)))) (. ?)))", 'lemma': [(u'What', u'what', u'WP'), (u'did', u'do', u'VBD'), (u'Jake', u'Jake', u'NNP'), (u"'s", u"'s", u'POS'), (u'Grandfather', u'Grandfather', u'NNP'), (u'teach', u'teach', u'VB'), (u'him', u'he', u'PRP'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'did', 'Jake', "'s", 'Grandfather', 'teach', 'him', '?']}, 'answers': [{'string': ' To run.', 'parse': {'tree': '(ROOT (S (VP (TO To) (VP (VB run))) (. .)))', 'lemma': [(u'To', u'to', u'TO'), (u'run', u'run', u'VB'), (u'.', u'.', u'.')]}, 'tokens': ['To', 'run', '.']}, {'string': ' To catch.', 'parse': {'tree': '(ROOT (S (VP (TO To) (VP (VB catch))) (. .)))', 'lemma': [(u'To', u'to', u'TO'), (u'catch', u'catch', u'VB'), (u'.', u'.', u'.')]}, 'tokens': ['To', 'catch', '.']}, {'string': ' To jump.', 'parse': {'tree': '(ROOT (S (VP (TO To) (VP (VB jump))) (. .)))', 'lemma': [(u'To', u'to', u'TO'), (u'jump', u'jump', u'VB'), (u'.', u'.', u'.')]}, 'tokens': ['To', 'jump', '.']}, {'string': ' To throw.', 'parse': {'tree': '(ROOT (S (VP (TO To) (VP (VB throw))) (. .)))', 'lemma': [(u'To', u'to', u'TO'), (u'throw', u'throw', u'VB'), (u'.', u'.', u'.')]}, 'tokens': ['To', 'throw', '.']}], 'mode': 1}, {'question': {'string': ' How did Jake get so good at baseball?', 'parse': {'tree': '(ROOT (SBARQ (WHADVP (WRB How)) (SQ (VBD did) (NP (NNP Jake)) (VP (VB get) (ADJP (RB so) (JJ good)) (PP (IN at) (NP (NN baseball))))) (. ?)))', 'lemma': [(u'How', u'how', u'WRB'), (u'did', u'do', u'VBD'), (u'Jake', u'Jake', u'NNP'), (u'get', u'get', u'VB'), (u'so', u'so', u'RB'), (u'good', u'good', u'JJ'), (u'at', u'at', u'IN'), (u'baseball', u'baseball', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['How', 'did', 'Jake', 'get', 'so', 'good', 'at', 'baseball', '?']}, 'answers': [{'string': ' He slept with his mitt.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD slept) (PP (IN with) (NP (PRP$ his) (NN mitt)))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'slept', u'sleep', u'VBD'), (u'with', u'with', u'IN'), (u'his', u'he', u'PRP$'), (u'mitt', u'mitt', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'slept', 'with', 'his', 'mitt', '.']}, {'string': ' Frank showed him how.', 'parse': {'tree': '(ROOT (S (NP (NNP Frank)) (VP (VBD showed) (NP (PRP him)) (ADVP (WRB how))) (. .)))', 'lemma': [(u'Frank', u'Frank', u'NNP'), (u'showed', u'show', u'VBD'), (u'him', u'he', u'PRP'), (u'how', u'how', u'WRB'), (u'.', u'.', u'.')]}, 'tokens': ['Frank', 'showed', 'him', 'how', '.']}, {'string': ' He ran a lot.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD ran) (NP (DT a) (NN lot))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'ran', u'run', u'VBD'), (u'a', u'a', u'DT'), (u'lot', u'lot', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'ran', 'a', 'lot', '.']}, {'string': ' He played a lot.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD played) (NP (DT a) (NN lot))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'played', u'play', u'VBD'), (u'a', u'a', u'DT'), (u'lot', u'lot', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'played', 'a', 'lot', '.']}], 'mode': 0}, {'question': {'string': " Why does n't Jake 's Grandfather play baseball with him now?", 'parse': {'tree': "(ROOT (SBARQ (WHADVP (WRB Why)) (SQ (VBZ does) (RB n't) (NP (NNP Jake) (NNP 's) (NNP Grandfather)) (VP (VB play) (NP (NN baseball)) (PP (IN with) (NP (PRP him))) (ADVP (RB now)))) (. ?)))", 'lemma': [(u'Why', u'why', u'WRB'), (u'does', u'do', u'VBZ'), (u"n't", u'not', u'RB'), (u'Jake', u'Jake', u'NNP'), (u"'s", u"'s", u'NNP'), (u'Grandfather', u'Grandfather', u'NNP'), (u'play', u'play', u'VB'), (u'baseball', u'baseball', u'NN'), (u'with', u'with', u'IN'), (u'him', u'he', u'PRP'), (u'now', u'now', u'RB'), (u'?', u'?', u'.')]}, 'tokens': ['Why', 'does', "n't", 'Jake', "'s", 'Grandfather', 'play', 'baseball', 'with', 'him', 'now', '?']}, 'answers': [{'string': ' Jake asked him not too.', 'parse': {'tree': '(ROOT (S (NP (NNP Jake)) (VP (VBD asked) (NP (PRP him)) (ADVP (RB not) (RB too))) (. .)))', 'lemma': [(u'Jake', u'Jake', u'NNP'), (u'asked', u'ask', u'VBD'), (u'him', u'he', u'PRP'), (u'not', u'not', u'RB'), (u'too', u'too', u'RB'), (u'.', u'.', u'.')]}, 'tokens': ['Jake', 'asked', 'him', 'not', 'too', '.']}, {'string': ' He moved away.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD moved) (PRT (RP away))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'moved', u'move', u'VBD'), (u'away', u'away', u'RP'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'moved', 'away', '.']}, {'string': ' His Grandfather hates baseball.', 'parse': {'tree': '(ROOT (S (NP (PRP$ His) (NN Grandfather)) (VP (VBZ hates) (NP (NN baseball))) (. .)))', 'lemma': [(u'His', u'he', u'PRP$'), (u'Grandfather', u'grandfather', u'NN'), (u'hates', u'hate', u'VBZ'), (u'baseball', u'baseball', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['His', 'Grandfather', 'hates', 'baseball', '.']}, {'string': ' His Grandfather died.', 'parse': {'tree': '(ROOT (S (NP (PRP$ His) (NN Grandfather)) (VP (VBD died)) (. .)))', 'lemma': [(u'His', u'he', u'PRP$'), (u'Grandfather', u'grandfather', u'NN'), (u'died', u'die', u'VBD'), (u'.', u'.', u'.')]}, 'tokens': ['His', 'Grandfather', 'died', '.']}], 'mode': 0}]}
{'sentences': [{'string': " It was a cold winter day in John 's city.", 'parse': {'tree': "(ROOT (S (NP (PRP It)) (VP (VBD was) (NP (NP (DT a) (JJ cold) (NN winter) (NN day)) (PP (IN in) (NP (NP (NNP John) (POS 's)) (NN city))))) (. .)))", 'lemma': [(u'It', u'it', u'PRP'), (u'was', u'be', u'VBD'), (u'a', u'a', u'DT'), (u'cold', u'cold', u'JJ'), (u'winter', u'winter', u'NN'), (u'day', u'day', u'NN'), (u'in', u'in', u'IN'), (u'John', u'John', u'NNP'), (u"'s", u"'s", u'POS'), (u'city', u'city', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['It', 'was', 'a', 'cold', 'winter', 'day', 'in', 'John', "'s", 'city', '.']}, {'string': ' It was December and snowing outside.', 'parse': {'tree': '(ROOT (S (NP (PRP It)) (VP (VBD was) (NP (NP (NNP December)) (CC and) (NP (VBG snowing) (NN outside)))) (. .)))', 'lemma': [(u'It', u'it', u'PRP'), (u'was', u'be', u'VBD'), (u'December', u'December', u'NNP'), (u'and', u'and', u'CC'), (u'snowing', u'snow', u'VBG'), (u'outside', u'outside', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['It', 'was', 'December', 'and', 'snowing', 'outside', '.']}, {'string': ' This made John want a bowl of warm soup.', 'parse': {'tree': '(ROOT (S (NP (DT This)) (VP (VBD made) (SBAR (S (NP (NNP John)) (VP (VBP want) (NP (NP (DT a) (NN bowl)) (PP (IN of) (NP (JJ warm) (NN soup)))))))) (. .)))', 'lemma': [(u'This', u'this', u'DT'), (u'made', u'make', u'VBD'), (u'John', u'John', u'NNP'), (u'want', u'want', u'VBP'), (u'a', u'a', u'DT'), (u'bowl', u'bowl', u'NN'), (u'of', u'of', u'IN'), (u'warm', u'warm', u'JJ'), (u'soup', u'soup', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['This', 'made', 'John', 'want', 'a', 'bowl', 'of', 'warm', 'soup', '.']}, {'string': ' John went to the refrigerator to make soup.', 'parse': {'tree': '(ROOT (S (NP (NNP John)) (VP (VBD went) (PP (TO to) (NP (DT the) (NN refrigerator))) (S (VP (TO to) (VP (VB make) (NP (NN soup)))))) (. .)))', 'lemma': [(u'John', u'John', u'NNP'), (u'went', u'go', u'VBD'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'refrigerator', u'refrigerator', u'NN'), (u'to', u'to', u'TO'), (u'make', u'make', u'VB'), (u'soup', u'soup', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['John', 'went', 'to', 'the', 'refrigerator', 'to', 'make', 'soup', '.']}, {'string': ' He looked for the things needed to make the soup.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD looked) (SBAR (IN for) (S (NP (DT the) (NNS things)) (VP (VBD needed) (S (VP (TO to) (VP (VB make) (NP (DT the) (NN soup))))))))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'looked', u'look', u'VBD'), (u'for', u'for', u'IN'), (u'the', u'the', u'DT'), (u'things', u'thing', u'NNS'), (u'needed', u'need', u'VBD'), (u'to', u'to', u'TO'), (u'make', u'make', u'VB'), (u'the', u'the', u'DT'), (u'soup', u'soup', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'looked', 'for', 'the', 'things', 'needed', 'to', 'make', 'the', 'soup', '.']}, {'string': ' He did not see some items he needed.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD did) (RB not) (VP (VB see) (NP (NP (DT some) (NNS items)) (SBAR (S (NP (PRP he)) (VP (VBD needed))))))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'did', u'do', u'VBD'), (u'not', u'not', u'RB'), (u'see', u'see', u'VB'), (u'some', u'some', u'DT'), (u'items', u'item', u'NNS'), (u'he', u'he', u'PRP'), (u'needed', u'need', u'VBD'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'did', 'not', 'see', 'some', 'items', 'he', 'needed', '.']}, {'string': ' John needed to go to the grocery store.', 'parse': {'tree': '(ROOT (S (NP (NNP John)) (VP (VBD needed) (S (VP (TO to) (VP (VB go) (PP (TO to) (NP (DT the) (NN grocery) (NN store))))))) (. .)))', 'lemma': [(u'John', u'John', u'NNP'), (u'needed', u'need', u'VBD'), (u'to', u'to', u'TO'), (u'go', u'go', u'VB'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'grocery', u'grocery', u'NN'), (u'store', u'store', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['John', 'needed', 'to', 'go', 'to', 'the', 'grocery', 'store', '.']}, {'string': ' John wanted to make a list.', 'parse': {'tree': '(ROOT (S (NP (NNP John)) (VP (VBD wanted) (S (VP (TO to) (VP (VB make) (NP (DT a) (NN list)))))) (. .)))', 'lemma': [(u'John', u'John', u'NNP'), (u'wanted', u'want', u'VBD'), (u'to', u'to', u'TO'), (u'make', u'make', u'VB'), (u'a', u'a', u'DT'), (u'list', u'list', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['John', 'wanted', 'to', 'make', 'a', 'list', '.']}, {'string': ' He found a pencil and paper to make a list.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD found) (NP (DT a) (NN pencil) (CC and) (NN paper)) (S (VP (TO to) (VP (VB make) (NP (DT a) (NN list)))))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'found', u'find', u'VBD'), (u'a', u'a', u'DT'), (u'pencil', u'pencil', u'NN'), (u'and', u'and', u'CC'), (u'paper', u'paper', u'NN'), (u'to', u'to', u'TO'), (u'make', u'make', u'VB'), (u'a', u'a', u'DT'), (u'list', u'list', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'found', 'a', 'pencil', 'and', 'paper', 'to', 'make', 'a', 'list', '.']}, {'string': ' He needed sugar, lettuce, tomatoes and cheese.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD needed) (NP (NN sugar) (, ,) (NN lettuce) (, ,) (NN tomatoes) (CC and) (NN cheese))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'needed', u'need', u'VBD'), (u'sugar', u'sugar', u'NN'), (u',', u',', u','), (u'lettuce', u'lettuce', u'NN'), (u',', u',', u','), (u'tomatoes', u'tomato', u'NN'), (u'and', u'and', u'CC'), (u'cheese', u'cheese', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'needed', 'sugar', ',', 'lettuce', ',', 'tomatoes', 'and', 'cheese', '.']}, {'string': ' John wrote down the items.', 'parse': {'tree': '(ROOT (S (NP (NNP John)) (VP (VBD wrote) (PRT (RP down)) (NP (DT the) (NNS items))) (. .)))', 'lemma': [(u'John', u'John', u'NNP'), (u'wrote', u'write', u'VBD'), (u'down', u'down', u'RP'), (u'the', u'the', u'DT'), (u'items', u'item', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['John', 'wrote', 'down', 'the', 'items', '.']}, {'string': ' He put the grocery list in his pocket.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD put) (NP (DT the) (NN grocery) (NN list)) (PP (IN in) (NP (PRP$ his) (NN pocket)))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'put', u'put', u'VBD'), (u'the', u'the', u'DT'), (u'grocery', u'grocery', u'NN'), (u'list', u'list', u'NN'), (u'in', u'in', u'IN'), (u'his', u'he', u'PRP$'), (u'pocket', u'pocket', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'put', 'the', 'grocery', 'list', 'in', 'his', 'pocket', '.']}, {'string': ' He then went to the closet to get dressed.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (ADVP (RB then)) (VP (VBD went) (PP (TO to) (NP (DT the) (NN closet))) (S (VP (TO to) (VP (VB get) (VP (VBN dressed)))))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'then', u'then', u'RB'), (u'went', u'go', u'VBD'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'closet', u'closet', u'NN'), (u'to', u'to', u'TO'), (u'get', u'get', u'VB'), (u'dressed', u'dress', u'VBN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'then', 'went', 'to', 'the', 'closet', 'to', 'get', 'dressed', '.']}, {'string': ' John needed a jacket and gloves for the cold weather.', 'parse': {'tree': '(ROOT (S (NP (NNP John)) (VP (VBD needed) (NP (DT a) (NN jacket) (CC and) (NNS gloves)) (PP (IN for) (NP (DT the) (JJ cold) (NN weather)))) (. .)))', 'lemma': [(u'John', u'John', u'NNP'), (u'needed', u'need', u'VBD'), (u'a', u'a', u'DT'), (u'jacket', u'jacket', u'NN'), (u'and', u'and', u'CC'), (u'gloves', u'glove', u'NNS'), (u'for', u'for', u'IN'), (u'the', u'the', u'DT'), (u'cold', u'cold', u'JJ'), (u'weather', u'weather', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['John', 'needed', 'a', 'jacket', 'and', 'gloves', 'for', 'the', 'cold', 'weather', '.']}, {'string': ' He also put his boots on.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (ADVP (RB also)) (VP (VBD put) (NP (PRP$ his) (NNS boots)) (PP (IN on))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'also', u'also', u'RB'), (u'put', u'put', u'VBD'), (u'his', u'he', u'PRP$'), (u'boots', u'boot', u'NNS'), (u'on', u'on', u'IN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'also', 'put', 'his', 'boots', 'on', '.']}, {'string': ' He remembered to close the front door to his house.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD remembered) (S (VP (TO to) (VP (VB close) (NP (DT the) (JJ front) (NN door)) (PP (TO to) (NP (PRP$ his) (NN house))))))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'remembered', u'remember', u'VBD'), (u'to', u'to', u'TO'), (u'close', u'close', u'VB'), (u'the', u'the', u'DT'), (u'front', u'front', u'JJ'), (u'door', u'door', u'NN'), (u'to', u'to', u'TO'), (u'his', u'he', u'PRP$'), (u'house', u'house', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'remembered', 'to', 'close', 'the', 'front', 'door', 'to', 'his', 'house', '.']}, {'string': ' John used a key to lock his front door.', 'parse': {'tree': '(ROOT (S (NP (NNP John)) (VP (VBD used) (NP (DT a) (NN key) (S (VP (TO to) (VP (VB lock) (NP (PRP$ his) (JJ front) (NN door))))))) (. .)))', 'lemma': [(u'John', u'John', u'NNP'), (u'used', u'use', u'VBD'), (u'a', u'a', u'DT'), (u'key', u'key', u'NN'), (u'to', u'to', u'TO'), (u'lock', u'lock', u'VB'), (u'his', u'he', u'PRP$'), (u'front', u'front', u'JJ'), (u'door', u'door', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['John', 'used', 'a', 'key', 'to', 'lock', 'his', 'front', 'door', '.']}, {'string': ' Then he put the house key is his pocket.', 'parse': {'tree': '(ROOT (S (RB Then) (NP (PRP he)) (VP (VBD put) (SBAR (S (NP (DT the) (NN house) (NN key)) (VP (VBZ is) (NP (PRP$ his) (NN pocket)))))) (. .)))', 'lemma': [(u'Then', u'then', u'RB'), (u'he', u'he', u'PRP'), (u'put', u'put', u'VBD'), (u'the', u'the', u'DT'), (u'house', u'house', u'NN'), (u'key', u'key', u'NN'), (u'is', u'be', u'VBZ'), (u'his', u'he', u'PRP$'), (u'pocket', u'pocket', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Then', 'he', 'put', 'the', 'house', 'key', 'is', 'his', 'pocket', '.']}, {'string': ' The grocery store was around the corner.', 'parse': {'tree': '(ROOT (S (NP (DT The) (NN grocery) (NN store)) (VP (VBD was) (PP (IN around) (NP (DT the) (NN corner)))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'grocery', u'grocery', u'NN'), (u'store', u'store', u'NN'), (u'was', u'be', u'VBD'), (u'around', u'around', u'IN'), (u'the', u'the', u'DT'), (u'corner', u'corner', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'grocery', 'store', 'was', 'around', 'the', 'corner', '.']}, {'string': ' John walked to the grocery store.', 'parse': {'tree': '(ROOT (S (NP (NNP John)) (VP (VBD walked) (PP (TO to) (NP (DT the) (NN grocery) (NN store)))) (. .)))', 'lemma': [(u'John', u'John', u'NNP'), (u'walked', u'walk', u'VBD'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'grocery', u'grocery', u'NN'), (u'store', u'store', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['John', 'walked', 'to', 'the', 'grocery', 'store', '.']}, {'string': ' He grabbed a grocery basket to put his items in.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD grabbed) (NP (DT a) (NN grocery) (NN basket)) (S (VP (TO to) (VP (VB put) (NP (PRP$ his) (NNS items)) (PP (IN in)))))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'grabbed', u'grab', u'VBD'), (u'a', u'a', u'DT'), (u'grocery', u'grocery', u'NN'), (u'basket', u'basket', u'NN'), (u'to', u'to', u'TO'), (u'put', u'put', u'VB'), (u'his', u'he', u'PRP$'), (u'items', u'item', u'NNS'), (u'in', u'in', u'IN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'grabbed', 'a', 'grocery', 'basket', 'to', 'put', 'his', 'items', 'in', '.']}, {'string': ' What did John need?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD did) (NP (NNP John)) (VP (VB need))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'did', u'do', u'VBD'), (u'John', u'John', u'NNP'), (u'need', u'need', u'VB'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'did', 'John', 'need', '?']}, {'string': ' He pulled out his list of items.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD pulled) (PRT (RP out)) (NP (NP (PRP$ his) (NN list)) (PP (IN of) (NP (NNS items))))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'pulled', u'pull', u'VBD'), (u'out', u'out', u'RP'), (u'his', u'he', u'PRP$'), (u'list', u'list', u'NN'), (u'of', u'of', u'IN'), (u'items', u'item', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'pulled', 'out', 'his', 'list', 'of', 'items', '.']}, {'string': ' John found each item and walked back to his house.', 'parse': {'tree': '(ROOT (S (NP (NNP John)) (VP (VP (VBD found) (NP (DT each) (NN item))) (CC and) (VP (VBD walked) (PRT (RP back)) (PP (TO to) (NP (PRP$ his) (NN house))))) (. .)))', 'lemma': [(u'John', u'John', u'NNP'), (u'found', u'find', u'VBD'), (u'each', u'each', u'DT'), (u'item', u'item', u'NN'), (u'and', u'and', u'CC'), (u'walked', u'walk', u'VBD'), (u'back', u'back', u'RP'), (u'to', u'to', u'TO'), (u'his', u'he', u'PRP$'), (u'house', u'house', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['John', 'found', 'each', 'item', 'and', 'walked', 'back', 'to', 'his', 'house', '.']}, {'string': ' On this cold winter day, John can make a bowl of warm soup.', 'parse': {'tree': '(ROOT (S (PP (IN On) (NP (DT this) (JJ cold) (NN winter))) (NP (NN day)) (, ,) (NP (NNP John)) (VP (MD can) (VP (VB make) (NP (NP (DT a) (NN bowl)) (PP (IN of) (NP (JJ warm) (NN soup)))))) (. .)))', 'lemma': [(u'On', u'on', u'IN'), (u'this', u'this', u'DT'), (u'cold', u'cold', u'JJ'), (u'winter', u'winter', u'NN'), (u'day', u'day', u'NN'), (u',', u',', u','), (u'John', u'John', u'NNP'), (u'can', u'can', u'MD'), (u'make', u'make', u'VB'), (u'a', u'a', u'DT'), (u'bowl', u'bowl', u'NN'), (u'of', u'of', u'IN'), (u'warm', u'warm', u'JJ'), (u'soup', u'soup', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['On', 'this', 'cold', 'winter', 'day', ',', 'John', 'can', 'make', 'a', 'bowl', 'of', 'warm', 'soup', '.']}, {'string': ' He has all the items he needed.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBZ has) (NP (NP (PDT all) (DT the) (NNS items)) (SBAR (S (NP (PRP he)) (VP (VBD needed)))))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'has', u'have', u'VBZ'), (u'all', u'all', u'PDT'), (u'the', u'the', u'DT'), (u'items', u'item', u'NNS'), (u'he', u'he', u'PRP'), (u'needed', u'need', u'VBD'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'has', 'all', 'the', 'items', 'he', 'needed', '.']}, {'string': ' John was happy.', 'parse': {'tree': '(ROOT (S (NP (NNP John)) (VP (VBD was) (ADJP (JJ happy))) (. .)))', 'lemma': [(u'John', u'John', u'NNP'), (u'was', u'be', u'VBD'), (u'happy', u'happy', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['John', 'was', 'happy', '.']}], 'questions': [{'question': {'string': ' Why did John want to make soup?', 'parse': {'tree': '(ROOT (SBARQ (WHADVP (WRB Why)) (SQ (VBD did) (NP (NNP John)) (VP (VB want) (S (VP (TO to) (VP (VB make) (NP (NN soup))))))) (. ?)))', 'lemma': [(u'Why', u'why', u'WRB'), (u'did', u'do', u'VBD'), (u'John', u'John', u'NNP'), (u'want', u'want', u'VB'), (u'to', u'to', u'TO'), (u'make', u'make', u'VB'), (u'soup', u'soup', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['Why', 'did', 'John', 'want', 'to', 'make', 'soup', '?']}, 'answers': [{'string': ' It was a hot summer day in June and it was sunny.', 'parse': {'tree': '(ROOT (S (S (NP (PRP It)) (VP (VBD was) (NP (NP (DT a) (JJ hot) (NN summer) (NN day)) (PP (IN in) (NP (NNP June)))))) (CC and) (S (NP (PRP it)) (VP (VBD was) (ADJP (JJ sunny)))) (. .)))', 'lemma': [(u'It', u'it', u'PRP'), (u'was', u'be', u'VBD'), (u'a', u'a', u'DT'), (u'hot', u'hot', u'JJ'), (u'summer', u'summer', u'NN'), (u'day', u'day', u'NN'), (u'in', u'in', u'IN'), (u'June', u'June', u'NNP'), (u'and', u'and', u'CC'), (u'it', u'it', u'PRP'), (u'was', u'be', u'VBD'), (u'sunny', u'sunny', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['It', 'was', 'a', 'hot', 'summer', 'day', 'in', 'June', 'and', 'it', 'was', 'sunny', '.']}, {'string': ' It was a cold winter day in December and it was snowing.', 'parse': {'tree': '(ROOT (S (S (NP (PRP It)) (VP (VBD was) (NP (NP (DT a) (JJ cold) (NN winter) (NN day)) (PP (IN in) (NP (NNP December)))))) (CC and) (S (NP (PRP it)) (VP (VBD was) (VP (VBG snowing)))) (. .)))', 'lemma': [(u'It', u'it', u'PRP'), (u'was', u'be', u'VBD'), (u'a', u'a', u'DT'), (u'cold', u'cold', u'JJ'), (u'winter', u'winter', u'NN'), (u'day', u'day', u'NN'), (u'in', u'in', u'IN'), (u'December', u'December', u'NNP'), (u'and', u'and', u'CC'), (u'it', u'it', u'PRP'), (u'was', u'be', u'VBD'), (u'snowing', u'snow', u'VBG'), (u'.', u'.', u'.')]}, 'tokens': ['It', 'was', 'a', 'cold', 'winter', 'day', 'in', 'December', 'and', 'it', 'was', 'snowing', '.']}, {'string': ' John was sick.', 'parse': {'tree': '(ROOT (S (NP (NNP John)) (VP (VBD was) (ADJP (JJ sick))) (. .)))', 'lemma': [(u'John', u'John', u'NNP'), (u'was', u'be', u'VBD'), (u'sick', u'sick', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['John', 'was', 'sick', '.']}, {'string': ' It was a cold winter day in June.', 'parse': {'tree': '(ROOT (S (NP (PRP It)) (VP (VBD was) (NP (NP (DT a) (JJ cold) (NN winter) (NN day)) (PP (IN in) (NP (NNP June))))) (. .)))', 'lemma': [(u'It', u'it', u'PRP'), (u'was', u'be', u'VBD'), (u'a', u'a', u'DT'), (u'cold', u'cold', u'JJ'), (u'winter', u'winter', u'NN'), (u'day', u'day', u'NN'), (u'in', u'in', u'IN'), (u'June', u'June', u'NNP'), (u'.', u'.', u'.')]}, 'tokens': ['It', 'was', 'a', 'cold', 'winter', 'day', 'in', 'June', '.']}], 'mode': 0}, {'question': {'string': ' What did John put in his pocket after he left the house?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD did) (NP (NNP John)) (VP (VB put) (PP (IN in) (NP (PRP$ his) (NN pocket))) (SBAR (IN after) (S (NP (PRP he)) (VP (VBD left) (NP (DT the) (NN house))))))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'did', u'do', u'VBD'), (u'John', u'John', u'NNP'), (u'put', u'put', u'VB'), (u'in', u'in', u'IN'), (u'his', u'he', u'PRP$'), (u'pocket', u'pocket', u'NN'), (u'after', u'after', u'IN'), (u'he', u'he', u'PRP'), (u'left', u'leave', u'VBD'), (u'the', u'the', u'DT'), (u'house', u'house', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'did', 'John', 'put', 'in', 'his', 'pocket', 'after', 'he', 'left', 'the', 'house', '?']}, 'answers': [{'string': ' A house key and a spoon', 'parse': {'tree': '(ROOT (NP (NP (DT A) (NN house) (NN key)) (CC and) (NP (DT a) (NN spoon))))', 'lemma': [(u'A', u'a', u'DT'), (u'house', u'house', u'NN'), (u'key', u'key', u'NN'), (u'and', u'and', u'CC'), (u'a', u'a', u'DT'), (u'spoon', u'spoon', u'NN')]}, 'tokens': ['A', 'house', 'key', 'and', 'a', 'spoon']}, {'string': ' A pencil and watch', 'parse': {'tree': '(ROOT (NP (NP (DT A) (NN pencil)) (CC and) (NP (NN watch))))', 'lemma': [(u'A', u'a', u'DT'), (u'pencil', u'pencil', u'NN'), (u'and', u'and', u'CC'), (u'watch', u'watch', u'NN')]}, 'tokens': ['A', 'pencil', 'and', 'watch']}, {'string': ' A spoon and a pencil', 'parse': {'tree': '(ROOT (NP (NP (DT A) (NN spoon)) (CC and) (NP (DT a) (NN pencil))))', 'lemma': [(u'A', u'a', u'DT'), (u'spoon', u'spoon', u'NN'), (u'and', u'and', u'CC'), (u'a', u'a', u'DT'), (u'pencil', u'pencil', u'NN')]}, 'tokens': ['A', 'spoon', 'and', 'a', 'pencil']}, {'string': ' A grocery list and a house key', 'parse': {'tree': '(ROOT (NP (NP (DT A) (NN grocery) (NN list)) (CC and) (NP (DT a) (NN house) (NN key))))', 'lemma': [(u'A', u'a', u'DT'), (u'grocery', u'grocery', u'NN'), (u'list', u'list', u'NN'), (u'and', u'and', u'CC'), (u'a', u'a', u'DT'), (u'house', u'house', u'NN'), (u'key', u'key', u'NN')]}, 'tokens': ['A', 'grocery', 'list', 'and', 'a', 'house', 'key']}], 'mode': 0}, {'question': {'string': ' What did John put on for the cold weather?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD did) (NP (NNP John)) (VP (VB put) (PRT (RP on)) (PP (IN for) (NP (DT the) (JJ cold) (NN weather))))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'did', u'do', u'VBD'), (u'John', u'John', u'NNP'), (u'put', u'put', u'VB'), (u'on', u'on', u'RP'), (u'for', u'for', u'IN'), (u'the', u'the', u'DT'), (u'cold', u'cold', u'JJ'), (u'weather', u'weather', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'did', 'John', 'put', 'on', 'for', 'the', 'cold', 'weather', '?']}, 'answers': [{'string': ' Jacket, gloves and boots.', 'parse': {'tree': '(ROOT (NP (NP (NNP Jacket)) (, ,) (NP (NNS gloves) (CC and) (NNS boots)) (. .)))', 'lemma': [(u'Jacket', u'Jacket', u'NNP'), (u',', u',', u','), (u'gloves', u'glove', u'NNS'), (u'and', u'and', u'CC'), (u'boots', u'boot', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['Jacket', ',', 'gloves', 'and', 'boots', '.']}, {'string': ' Sunscreen, sunglasses and sandals.', 'parse': {'tree': '(ROOT (NP (NP (NNP Sunscreen)) (, ,) (NP (NNS sunglasses) (CC and) (NNS sandals)) (. .)))', 'lemma': [(u'Sunscreen', u'Sunscreen', u'NNP'), (u',', u',', u','), (u'sunglasses', u'sunglass', u'NNS'), (u'and', u'and', u'CC'), (u'sandals', u'sandal', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['Sunscreen', ',', 'sunglasses', 'and', 'sandals', '.']}, {'string': ' Raincoat, hat, and rain boots.', 'parse': {'tree': '(ROOT (NP (NP (NN Raincoat) (, ,) (NN hat) (, ,) (CC and) (NN rain)) (NP (NNS boots)) (. .)))', 'lemma': [(u'Raincoat', u'raincoat', u'NN'), (u',', u',', u','), (u'hat', u'hat', u'NN'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'rain', u'rain', u'NN'), (u'boots', u'boot', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['Raincoat', ',', 'hat', ',', 'and', 'rain', 'boots', '.']}, {'string': ' Umbrella, hat, and basket.', 'parse': {'tree': '(ROOT (NP (NP (NNP Umbrella)) (, ,) (NP (NP (NN hat)) (, ,) (CC and) (NP (NN basket))) (. .)))', 'lemma': [(u'Umbrella', u'Umbrella', u'NNP'), (u',', u',', u','), (u'hat', u'hat', u'NN'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'basket', u'basket', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Umbrella', ',', 'hat', ',', 'and', 'basket', '.']}], 'mode': 0}, {'question': {'string': ' Why did John go to the grocery store?', 'parse': {'tree': '(ROOT (SBARQ (WHADVP (WRB Why)) (SQ (VBD did) (NP (NNP John)) (VP (VB go) (PP (TO to) (NP (DT the) (NN grocery) (NN store))))) (. ?)))', 'lemma': [(u'Why', u'why', u'WRB'), (u'did', u'do', u'VBD'), (u'John', u'John', u'NNP'), (u'go', u'go', u'VB'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'grocery', u'grocery', u'NN'), (u'store', u'store', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['Why', 'did', 'John', 'go', 'to', 'the', 'grocery', 'store', '?']}, 'answers': [{'string': ' He needed groceries for his soup.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD needed) (NP (NNS groceries)) (PP (IN for) (NP (PRP$ his) (NN soup)))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'needed', u'need', u'VBD'), (u'groceries', u'grocery', u'NNS'), (u'for', u'for', u'IN'), (u'his', u'he', u'PRP$'), (u'soup', u'soup', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'needed', 'groceries', 'for', 'his', 'soup', '.']}, {'string': ' He needed a jacket and gloves', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD needed) (NP (NP (DT a) (NN jacket)) (CC and) (NP (NNS gloves))))))', 'lemma': [(u'He', u'he', u'PRP'), (u'needed', u'need', u'VBD'), (u'a', u'a', u'DT'), (u'jacket', u'jacket', u'NN'), (u'and', u'and', u'CC'), (u'gloves', u'glove', u'NNS')]}, 'tokens': ['He', 'needed', 'a', 'jacket', 'and', 'gloves']}, {'string': ' Because his house was cold', 'parse': {'tree': '(ROOT (SBAR (IN Because) (S (NP (PRP$ his) (NN house)) (VP (VBD was) (ADJP (JJ cold))))))', 'lemma': [(u'Because', u'because', u'IN'), (u'his', u'he', u'PRP$'), (u'house', u'house', u'NN'), (u'was', u'be', u'VBD'), (u'cold', u'cold', u'JJ')]}, 'tokens': ['Because', 'his', 'house', 'was', 'cold']}, {'string': ' He wanted candy and popcorn', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD wanted) (NP (NN candy) (CC and) (NN popcorn)))))', 'lemma': [(u'He', u'he', u'PRP'), (u'wanted', u'want', u'VBD'), (u'candy', u'candy', u'NN'), (u'and', u'and', u'CC'), (u'popcorn', u'popcorn', u'NN')]}, 'tokens': ['He', 'wanted', 'candy', 'and', 'popcorn']}], 'mode': 1}]}
{'sentences': [{'string': ' Sally the cat went outside to play.', 'parse': {'tree': '(ROOT (S (NP (NP (NNP Sally)) (NP (DT the) (NN cat))) (VP (VBD went) (ADVP (RB outside)) (S (VP (TO to) (VP (VB play))))) (. .)))', 'lemma': [(u'Sally', u'Sally', u'NNP'), (u'the', u'the', u'DT'), (u'cat', u'cat', u'NN'), (u'went', u'go', u'VBD'), (u'outside', u'outside', u'RB'), (u'to', u'to', u'TO'), (u'play', u'play', u'VB'), (u'.', u'.', u'.')]}, 'tokens': ['Sally', 'the', 'cat', 'went', 'outside', 'to', 'play', '.']}, {'string': ' First she went on the trail to the river.', 'parse': {'tree': '(ROOT (S (ADVP (RB First)) (NP (PRP she)) (VP (VBD went) (PP (IN on) (NP (DT the) (NN trail))) (PP (TO to) (NP (DT the) (NN river)))) (. .)))', 'lemma': [(u'First', u'first', u'RB'), (u'she', u'she', u'PRP'), (u'went', u'go', u'VBD'), (u'on', u'on', u'IN'), (u'the', u'the', u'DT'), (u'trail', u'trail', u'NN'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'river', u'river', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['First', 'she', 'went', 'on', 'the', 'trail', 'to', 'the', 'river', '.']}, {'string': ' Sally sat and watched the fish.', 'parse': {'tree': '(ROOT (S (NP (NNP Sally)) (VP (VP (VBD sat)) (CC and) (VP (VBD watched) (NP (DT the) (NN fish)))) (. .)))', 'lemma': [(u'Sally', u'Sally', u'NNP'), (u'sat', u'sit', u'VBD'), (u'and', u'and', u'CC'), (u'watched', u'watch', u'VBD'), (u'the', u'the', u'DT'), (u'fish', u'fish', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Sally', 'sat', 'and', 'watched', 'the', 'fish', '.']}, {'string': ' She wanted to catch a fish.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBD wanted) (S (VP (TO to) (VP (VB catch) (NP (DT a) (NN fish)))))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'wanted', u'want', u'VBD'), (u'to', u'to', u'TO'), (u'catch', u'catch', u'VB'), (u'a', u'a', u'DT'), (u'fish', u'fish', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'wanted', 'to', 'catch', 'a', 'fish', '.']}, {'string': ' The fish swam away too fast.', 'parse': {'tree': '(ROOT (S (NP (DT The) (NN fish)) (VP (VBP swam) (ADVP (RB away) (RB too) (RB fast))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'fish', u'fish', u'NN'), (u'swam', u'swim', u'VBP'), (u'away', u'away', u'RB'), (u'too', u'too', u'RB'), (u'fast', u'fast', u'RB'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'fish', 'swam', 'away', 'too', 'fast', '.']}, {'string': ' Next she went to the field.', 'parse': {'tree': '(ROOT (S (ADVP (RB Next)) (NP (PRP she)) (VP (VBD went) (PP (TO to) (NP (DT the) (NN field)))) (. .)))', 'lemma': [(u'Next', u'next', u'RB'), (u'she', u'she', u'PRP'), (u'went', u'go', u'VBD'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'field', u'field', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Next', 'she', 'went', 'to', 'the', 'field', '.']}, {'string': ' Sally laid down in the grass and took a nap.', 'parse': {'tree': '(ROOT (S (NP (NNP Sally)) (VP (VP (VBD laid) (PRT (RP down)) (PP (IN in) (NP (DT the) (NN grass)))) (CC and) (VP (VBD took) (NP (DT a) (NN nap)))) (. .)))', 'lemma': [(u'Sally', u'Sally', u'NNP'), (u'laid', u'lay', u'VBD'), (u'down', u'down', u'RP'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'grass', u'grass', u'NN'), (u'and', u'and', u'CC'), (u'took', u'take', u'VBD'), (u'a', u'a', u'DT'), (u'nap', u'nap', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Sally', 'laid', 'down', 'in', 'the', 'grass', 'and', 'took', 'a', 'nap', '.']}, {'string': " There 's nothing like a cat nap on a warm day.", 'parse': {'tree': "(ROOT (S (NP (EX There)) (VP (VBZ 's) (NP (NP (NN nothing)) (PP (IN like) (NP (NP (DT a) (NN cat) (NN nap)) (PP (IN on) (NP (DT a) (JJ warm) (NN day))))))) (. .)))", 'lemma': [(u'There', u'there', u'EX'), (u"'s", u'be', u'VBZ'), (u'nothing', u'nothing', u'NN'), (u'like', u'like', u'IN'), (u'a', u'a', u'DT'), (u'cat', u'cat', u'NN'), (u'nap', u'nap', u'NN'), (u'on', u'on', u'IN'), (u'a', u'a', u'DT'), (u'warm', u'warm', u'JJ'), (u'day', u'day', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['There', "'s", 'nothing', 'like', 'a', 'cat', 'nap', 'on', 'a', 'warm', 'day', '.']}, {'string': ' When Sally woke up she saw a mouse.', 'parse': {'tree': '(ROOT (S (SBAR (WHADVP (WRB When)) (S (NP (NNP Sally)) (VP (VBD woke) (PRT (RP up))))) (NP (PRP she)) (VP (VBD saw) (NP (DT a) (NN mouse))) (. .)))', 'lemma': [(u'When', u'when', u'WRB'), (u'Sally', u'Sally', u'NNP'), (u'woke', u'wake', u'VBD'), (u'up', u'up', u'RP'), (u'she', u'she', u'PRP'), (u'saw', u'see', u'VBD'), (u'a', u'a', u'DT'), (u'mouse', u'mouse', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['When', 'Sally', 'woke', 'up', 'she', 'saw', 'a', 'mouse', '.']}, {'string': ' Sally ran after the mouse and tried to catch it.', 'parse': {'tree': '(ROOT (S (NP (NNP Sally)) (VP (VP (VBD ran) (PP (IN after) (NP (DT the) (NN mouse)))) (CC and) (VP (VBD tried) (S (VP (TO to) (VP (VB catch) (NP (PRP it))))))) (. .)))', 'lemma': [(u'Sally', u'Sally', u'NNP'), (u'ran', u'run', u'VBD'), (u'after', u'after', u'IN'), (u'the', u'the', u'DT'), (u'mouse', u'mouse', u'NN'), (u'and', u'and', u'CC'), (u'tried', u'try', u'VBD'), (u'to', u'to', u'TO'), (u'catch', u'catch', u'VB'), (u'it', u'it', u'PRP'), (u'.', u'.', u'.')]}, 'tokens': ['Sally', 'ran', 'after', 'the', 'mouse', 'and', 'tried', 'to', 'catch', 'it', '.']}, {'string': ' The mouse ran into a hole and got away.', 'parse': {'tree': '(ROOT (S (NP (DT The) (NN mouse)) (VP (VP (VBD ran) (PP (IN into) (NP (DT a) (NN hole)))) (CC and) (VP (VBD got) (PRT (RP away)))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'mouse', u'mouse', u'NN'), (u'ran', u'run', u'VBD'), (u'into', u'into', u'IN'), (u'a', u'a', u'DT'), (u'hole', u'hole', u'NN'), (u'and', u'and', u'CC'), (u'got', u'get', u'VBD'), (u'away', u'away', u'RP'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'mouse', 'ran', 'into', 'a', 'hole', 'and', 'got', 'away', '.']}, {'string': " `` That 's okay '' Sally said.", 'parse': {'tree': "(ROOT (S (`` ``) (S (NP (DT That)) (VP (VBZ 's) (ADJP (JJ okay)))) ('' '') (NP (NNP Sally)) (VP (VBD said)) (. .)))", 'lemma': [(u'``', u'``', u'``'), (u'That', u'that', u'DT'), (u"'s", u'be', u'VBZ'), (u'okay', u'okay', u'JJ'), (u"''", u"''", u"''"), (u'Sally', u'Sally', u'NNP'), (u'said', u'say', u'VBD'), (u'.', u'.', u'.')]}, 'tokens': ['``', 'That', "'s", 'okay', "''", 'Sally', 'said', '.']}, {'string': " `` I 'll get him next time. ''", 'parse': {'tree': "(ROOT (S (`` ``) (NP (PRP I)) (VP (MD 'll) (VP (VB get) (NP (PRP him)) (NP (JJ next) (NN time)))) (. .) ('' '')))", 'lemma': [(u'``', u'``', u'``'), (u'I', u'I', u'PRP'), (u"'ll", u"'ll", u'MD'), (u'get', u'get', u'VB'), (u'him', u'he', u'PRP'), (u'next', u'next', u'JJ'), (u'time', u'time', u'NN'), (u'.', u'.', u'.'), (u"''", u"''", u"''")]}, 'tokens': ['``', 'I', "'ll", 'get', 'him', 'next', 'time', '.', "''"]}, {'string': ' Sally went back to the trail and began to walk home.', 'parse': {'tree': '(ROOT (S (NP (NNP Sally)) (VP (VP (VBD went) (PRT (RP back)) (PP (TO to) (NP (DT the) (NN trail)))) (CC and) (VP (VBD began) (S (VP (TO to) (VP (VB walk) (NP (NN home))))))) (. .)))', 'lemma': [(u'Sally', u'Sally', u'NNP'), (u'went', u'go', u'VBD'), (u'back', u'back', u'RP'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'trail', u'trail', u'NN'), (u'and', u'and', u'CC'), (u'began', u'begin', u'VBD'), (u'to', u'to', u'TO'), (u'walk', u'walk', u'VB'), (u'home', u'home', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Sally', 'went', 'back', 'to', 'the', 'trail', 'and', 'began', 'to', 'walk', 'home', '.']}, {'string': ' When she got back to the river she took a drink of water.', 'parse': {'tree': '(ROOT (S (SBAR (WHADVP (WRB When)) (S (NP (PRP she)) (VP (VBD got) (ADVP (RB back)) (PP (TO to) (NP (DT the) (NN river)))))) (NP (PRP she)) (VP (VBD took) (NP (NP (DT a) (NN drink)) (PP (IN of) (NP (NN water))))) (. .)))', 'lemma': [(u'When', u'when', u'WRB'), (u'she', u'she', u'PRP'), (u'got', u'get', u'VBD'), (u'back', u'back', u'RB'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'river', u'river', u'NN'), (u'she', u'she', u'PRP'), (u'took', u'take', u'VBD'), (u'a', u'a', u'DT'), (u'drink', u'drink', u'NN'), (u'of', u'of', u'IN'), (u'water', u'water', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['When', 'she', 'got', 'back', 'to', 'the', 'river', 'she', 'took', 'a', 'drink', 'of', 'water', '.']}, {'string': " `` This water tastes good '' said Sally.", 'parse': {'tree': "(ROOT (SINV (`` ``) (S (NP (DT This) (NN water)) (VP (VBZ tastes) (ADJP (JJ good)))) ('' '') (VP (VBD said)) (NP (NNP Sally)) (. .)))", 'lemma': [(u'``', u'``', u'``'), (u'This', u'this', u'DT'), (u'water', u'water', u'NN'), (u'tastes', u'taste', u'VBZ'), (u'good', u'good', u'JJ'), (u"''", u"''", u"''"), (u'said', u'say', u'VBD'), (u'Sally', u'Sally', u'NNP'), (u'.', u'.', u'.')]}, 'tokens': ['``', 'This', 'water', 'tastes', 'good', "''", 'said', 'Sally', '.']}, {'string': ' When she got back to her house, Sally went inside and ate a cat treat.', 'parse': {'tree': '(ROOT (S (SBAR (WHADVP (WRB When)) (S (NP (PRP she)) (VP (VBD got) (ADVP (RB back)) (PP (TO to) (NP (PRP$ her) (NN house)))))) (, ,) (NP (NNP Sally)) (VP (VP (VBD went) (ADVP (RB inside))) (CC and) (VP (VBD ate) (NP (DT a) (NN cat) (NN treat)))) (. .)))', 'lemma': [(u'When', u'when', u'WRB'), (u'she', u'she', u'PRP'), (u'got', u'get', u'VBD'), (u'back', u'back', u'RB'), (u'to', u'to', u'TO'), (u'her', u'she', u'PRP$'), (u'house', u'house', u'NN'), (u',', u',', u','), (u'Sally', u'Sally', u'NNP'), (u'went', u'go', u'VBD'), (u'inside', u'inside', u'RB'), (u'and', u'and', u'CC'), (u'ate', u'eat', u'VBD'), (u'a', u'a', u'DT'), (u'cat', u'cat', u'NN'), (u'treat', u'treat', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['When', 'she', 'got', 'back', 'to', 'her', 'house', ',', 'Sally', 'went', 'inside', 'and', 'ate', 'a', 'cat', 'treat', '.']}, {'string': ' She spent the rest of day playing with her favorite person.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBD spent) (NP (NP (DT the) (NN rest)) (PP (IN of) (NP (NN day) (NN playing)))) (PP (IN with) (NP (PRP$ her) (JJ favorite) (NN person)))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'spent', u'spend', u'VBD'), (u'the', u'the', u'DT'), (u'rest', u'rest', u'NN'), (u'of', u'of', u'IN'), (u'day', u'day', u'NN'), (u'playing', u'playing', u'NN'), (u'with', u'with', u'IN'), (u'her', u'she', u'PRP$'), (u'favorite', u'favorite', u'JJ'), (u'person', u'person', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'spent', 'the', 'rest', 'of', 'day', 'playing', 'with', 'her', 'favorite', 'person', '.']}, {'string': " `` This was a good day '' said Sally.", 'parse': {'tree': "(ROOT (SINV (`` ``) (S (NP (DT This)) (VP (VBD was) (NP (DT a) (JJ good) (NN day)))) ('' '') (VP (VBD said)) (NP (NNP Sally)) (. .)))", 'lemma': [(u'``', u'``', u'``'), (u'This', u'this', u'DT'), (u'was', u'be', u'VBD'), (u'a', u'a', u'DT'), (u'good', u'good', u'JJ'), (u'day', u'day', u'NN'), (u"''", u"''", u"''"), (u'said', u'say', u'VBD'), (u'Sally', u'Sally', u'NNP'), (u'.', u'.', u'.')]}, 'tokens': ['``', 'This', 'was', 'a', 'good', 'day', "''", 'said', 'Sally', '.']}], 'questions': [{'question': {'string': ' What did Sally do when she got home?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD did) (NP (NNP Sally)) (VP (VB do) (SBAR (WHADVP (WRB when)) (S (NP (PRP she)) (VP (VBD got) (NP (NN home))))))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'did', u'do', u'VBD'), (u'Sally', u'Sally', u'NNP'), (u'do', u'do', u'VB'), (u'when', u'when', u'WRB'), (u'she', u'she', u'PRP'), (u'got', u'get', u'VBD'), (u'home', u'home', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'did', 'Sally', 'do', 'when', 'she', 'got', 'home', '?']}, 'answers': [{'string': ' Sally took a nap.', 'parse': {'tree': '(ROOT (S (NP (NNP Sally)) (VP (VBD took) (NP (DT a) (NN nap))) (. .)))', 'lemma': [(u'Sally', u'Sally', u'NNP'), (u'took', u'take', u'VBD'), (u'a', u'a', u'DT'), (u'nap', u'nap', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Sally', 'took', 'a', 'nap', '.']}, {'string': ' Sally went inside and ate a cat treat. She spent the rest of day playing with her favorite person. She spent the rest of day playing with her favorite person.', 'parse': {'tree': '(ROOT (S (S (NP (NNP Sally)) (VP (VP (VBD went) (ADVP (RB inside))) (CC and) (VP (VBD ate) (NP (NP (DT a) (NN cat)) (FRAG (ADJP (FW treat) (. .)) (S (NP (PRP She)) (VP (VBD spent) (NP (NP (DT the) (NN rest)) (PP (IN of) (NP (NN day) (NN playing)))) (PP (IN with) (NP (PRP$ her) (JJ favorite) (NN person))))) (. .)))))) (NP (PRP She)) (VP (VBD spent) (NP (NP (DT the) (NN rest)) (PP (IN of) (NP (NN day) (NN playing)))) (PP (IN with) (NP (PRP$ her) (JJ favorite) (NN person)))) (. .)))', 'lemma': [(u'Sally', u'Sally', u'NNP'), (u'went', u'go', u'VBD'), (u'inside', u'inside', u'RB'), (u'and', u'and', u'CC'), (u'ate', u'eat', u'VBD'), (u'a', u'a', u'DT'), (u'cat', u'cat', u'NN'), (u'treat', u'treat', u'FW'), (u'.', u'.', u'.'), (u'She', u'she', u'PRP'), (u'spent', u'spend', u'VBD'), (u'the', u'the', u'DT'), (u'rest', u'rest', u'NN'), (u'of', u'of', u'IN'), (u'day', u'day', u'NN'), (u'playing', u'playing', u'NN'), (u'with', u'with', u'IN'), (u'her', u'she', u'PRP$'), (u'favorite', u'favorite', u'JJ'), (u'person', u'person', u'NN'), (u'.', u'.', u'.'), (u'She', u'she', u'PRP'), (u'spent', u'spend', u'VBD'), (u'the', u'the', u'DT'), (u'rest', u'rest', u'NN'), (u'of', u'of', u'IN'), (u'day', u'day', u'NN'), (u'playing', u'playing', u'NN'), (u'with', u'with', u'IN'), (u'her', u'she', u'PRP$'), (u'favorite', u'favorite', u'JJ'), (u'person', u'person', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Sally', 'went', 'inside', 'and', 'ate', 'a', 'cat', 'treat', '.', 'She', 'spent', 'the', 'rest', 'of', 'day', 'playing', 'with', 'her', 'favorite', 'person', '.', 'She', 'spent', 'the', 'rest', 'of', 'day', 'playing', 'with', 'her', 'favorite', 'person', '.']}, {'string': ' Sally watched the fish.', 'parse': {'tree': '(ROOT (S (NP (NNP Sally)) (VP (VBD watched) (NP (DT the) (NN fish))) (. .)))', 'lemma': [(u'Sally', u'Sally', u'NNP'), (u'watched', u'watch', u'VBD'), (u'the', u'the', u'DT'), (u'fish', u'fish', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Sally', 'watched', 'the', 'fish', '.']}, {'string': ' Sally chased a mouse.', 'parse': {'tree': '(ROOT (S (NP (NNP Sally)) (VP (VBD chased) (NP (DT a) (NN mouse))) (. .)))', 'lemma': [(u'Sally', u'Sally', u'NNP'), (u'chased', u'chase', u'VBD'), (u'a', u'a', u'DT'), (u'mouse', u'mouse', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Sally', 'chased', 'a', 'mouse', '.']}], 'mode': 0}, {'question': {'string': ' What did Sally do in the field?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD did) (NP (NNP Sally)) (VP (VB do) (PP (IN in) (NP (DT the) (NN field))))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'did', u'do', u'VBD'), (u'Sally', u'Sally', u'NNP'), (u'do', u'do', u'VB'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'field', u'field', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'did', 'Sally', 'do', 'in', 'the', 'field', '?']}, 'answers': [{'string': ' Sally laid down in the grass and took a nap.', 'parse': {'tree': '(ROOT (S (NP (NNP Sally)) (VP (VP (VBD laid) (PRT (RP down)) (PP (IN in) (NP (DT the) (NN grass)))) (CC and) (VP (VBD took) (NP (DT a) (NN nap)))) (. .)))', 'lemma': [(u'Sally', u'Sally', u'NNP'), (u'laid', u'lay', u'VBD'), (u'down', u'down', u'RP'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'grass', u'grass', u'NN'), (u'and', u'and', u'CC'), (u'took', u'take', u'VBD'), (u'a', u'a', u'DT'), (u'nap', u'nap', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Sally', 'laid', 'down', 'in', 'the', 'grass', 'and', 'took', 'a', 'nap', '.']}, {'string': ' Sally watched the fish.', 'parse': {'tree': '(ROOT (S (NP (NNP Sally)) (VP (VBD watched) (NP (DT the) (NN fish))) (. .)))', 'lemma': [(u'Sally', u'Sally', u'NNP'), (u'watched', u'watch', u'VBD'), (u'the', u'the', u'DT'), (u'fish', u'fish', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Sally', 'watched', 'the', 'fish', '.']}, {'string': ' Sally ate a cat treat.', 'parse': {'tree': '(ROOT (S (NP (NNP Sally)) (VP (VBD ate) (SBAR (S (NP (DT a) (NN cat)) (VP (VBP treat))))) (. .)))', 'lemma': [(u'Sally', u'Sally', u'NNP'), (u'ate', u'eat', u'VBD'), (u'a', u'a', u'DT'), (u'cat', u'cat', u'NN'), (u'treat', u'treat', u'VBP'), (u'.', u'.', u'.')]}, 'tokens': ['Sally', 'ate', 'a', 'cat', 'treat', '.']}, {'string': ' Sally chased a mouse.', 'parse': {'tree': '(ROOT (S (NP (NNP Sally)) (VP (VBD chased) (NP (DT a) (NN mouse))) (. .)))', 'lemma': [(u'Sally', u'Sally', u'NNP'), (u'chased', u'chase', u'VBD'), (u'a', u'a', u'DT'), (u'mouse', u'mouse', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Sally', 'chased', 'a', 'mouse', '.']}], 'mode': 1}, {'question': {'string': ' What did Sally do when she woke up from her nap?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD did) (NP (NNP Sally)) (VP (VB do) (SBAR (WHADVP (WRB when)) (S (NP (PRP she)) (VP (VBD woke) (PRT (RP up)) (PP (IN from) (NP (PRP$ her) (NN nap)))))))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'did', u'do', u'VBD'), (u'Sally', u'Sally', u'NNP'), (u'do', u'do', u'VB'), (u'when', u'when', u'WRB'), (u'she', u'she', u'PRP'), (u'woke', u'wake', u'VBD'), (u'up', u'up', u'RP'), (u'from', u'from', u'IN'), (u'her', u'she', u'PRP$'), (u'nap', u'nap', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'did', 'Sally', 'do', 'when', 'she', 'woke', 'up', 'from', 'her', 'nap', '?']}, 'answers': [{'string': ' Sally ate a cat treat.', 'parse': {'tree': '(ROOT (S (NP (NNP Sally)) (VP (VBD ate) (SBAR (S (NP (DT a) (NN cat)) (VP (VBP treat))))) (. .)))', 'lemma': [(u'Sally', u'Sally', u'NNP'), (u'ate', u'eat', u'VBD'), (u'a', u'a', u'DT'), (u'cat', u'cat', u'NN'), (u'treat', u'treat', u'VBP'), (u'.', u'.', u'.')]}, 'tokens': ['Sally', 'ate', 'a', 'cat', 'treat', '.']}, {'string': ' Sally spent the rest of the day playing with her favorite person.', 'parse': {'tree': '(ROOT (S (NP (NNP Sally)) (VP (VBD spent) (NP (NP (DT the) (NN rest)) (PP (IN of) (NP (DT the) (NN day) (NN playing)))) (PP (IN with) (NP (PRP$ her) (JJ favorite) (NN person)))) (. .)))', 'lemma': [(u'Sally', u'Sally', u'NNP'), (u'spent', u'spend', u'VBD'), (u'the', u'the', u'DT'), (u'rest', u'rest', u'NN'), (u'of', u'of', u'IN'), (u'the', u'the', u'DT'), (u'day', u'day', u'NN'), (u'playing', u'playing', u'NN'), (u'with', u'with', u'IN'), (u'her', u'she', u'PRP$'), (u'favorite', u'favorite', u'JJ'), (u'person', u'person', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Sally', 'spent', 'the', 'rest', 'of', 'the', 'day', 'playing', 'with', 'her', 'favorite', 'person', '.']}, {'string': ' When Sally woke up she saw a mouse. Sally ran after the mouse and tried to catch it.', 'parse': {'tree': '(ROOT (S (SBAR (WHADVP (WRB When)) (S (NP (NNP Sally)) (VP (VBD woke) (PRT (RP up)) (SBAR (S (NP (PRP she)) (VP (VBD saw) (NP (DT a) (NN mouse)))))) (. .))) (NP (NNP Sally)) (VP (VP (VBD ran) (PP (IN after) (NP (DT the) (NN mouse)))) (CC and) (VP (VBD tried) (S (VP (TO to) (VP (VB catch) (NP (PRP it))))))) (. .)))', 'lemma': [(u'When', u'when', u'WRB'), (u'Sally', u'Sally', u'NNP'), (u'woke', u'wake', u'VBD'), (u'up', u'up', u'RP'), (u'she', u'she', u'PRP'), (u'saw', u'see', u'VBD'), (u'a', u'a', u'DT'), (u'mouse', u'mouse', u'NN'), (u'.', u'.', u'.'), (u'Sally', u'Sally', u'NNP'), (u'ran', u'run', u'VBD'), (u'after', u'after', u'IN'), (u'the', u'the', u'DT'), (u'mouse', u'mouse', u'NN'), (u'and', u'and', u'CC'), (u'tried', u'try', u'VBD'), (u'to', u'to', u'TO'), (u'catch', u'catch', u'VB'), (u'it', u'it', u'PRP'), (u'.', u'.', u'.')]}, 'tokens': ['When', 'Sally', 'woke', 'up', 'she', 'saw', 'a', 'mouse', '.', 'Sally', 'ran', 'after', 'the', 'mouse', 'and', 'tried', 'to', 'catch', 'it', '.']}, {'string': ' Sally watched the fish.', 'parse': {'tree': '(ROOT (S (NP (NNP Sally)) (VP (VBD watched) (NP (DT the) (NN fish))) (. .)))', 'lemma': [(u'Sally', u'Sally', u'NNP'), (u'watched', u'watch', u'VBD'), (u'the', u'the', u'DT'), (u'fish', u'fish', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Sally', 'watched', 'the', 'fish', '.']}], 'mode': 0}, {'question': {'string': ' What did Sally do when she got to the river?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD did) (NP (NNP Sally)) (VP (VB do) (SBAR (WHADVP (WRB when)) (S (NP (PRP she)) (VP (VBD got) (PP (TO to) (NP (DT the) (NN river)))))))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'did', u'do', u'VBD'), (u'Sally', u'Sally', u'NNP'), (u'do', u'do', u'VB'), (u'when', u'when', u'WRB'), (u'she', u'she', u'PRP'), (u'got', u'get', u'VBD'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'river', u'river', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'did', 'Sally', 'do', 'when', 'she', 'got', 'to', 'the', 'river', '?']}, 'answers': [{'string': ' Sally played with her favorite person.', 'parse': {'tree': '(ROOT (S (NP (NNP Sally)) (VP (VBD played) (PP (IN with) (NP (PRP$ her) (JJ favorite) (NN person)))) (. .)))', 'lemma': [(u'Sally', u'Sally', u'NNP'), (u'played', u'play', u'VBD'), (u'with', u'with', u'IN'), (u'her', u'she', u'PRP$'), (u'favorite', u'favorite', u'JJ'), (u'person', u'person', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Sally', 'played', 'with', 'her', 'favorite', 'person', '.']}, {'string': ' Sally chased a mouse.', 'parse': {'tree': '(ROOT (S (NP (NNP Sally)) (VP (VBD chased) (NP (DT a) (NN mouse))) (. .)))', 'lemma': [(u'Sally', u'Sally', u'NNP'), (u'chased', u'chase', u'VBD'), (u'a', u'a', u'DT'), (u'mouse', u'mouse', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Sally', 'chased', 'a', 'mouse', '.']}, {'string': ' Sally sat and watched the fish.', 'parse': {'tree': '(ROOT (S (NP (NNP Sally)) (VP (VP (VBD sat)) (CC and) (VP (VBD watched) (NP (DT the) (NN fish)))) (. .)))', 'lemma': [(u'Sally', u'Sally', u'NNP'), (u'sat', u'sit', u'VBD'), (u'and', u'and', u'CC'), (u'watched', u'watch', u'VBD'), (u'the', u'the', u'DT'), (u'fish', u'fish', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Sally', 'sat', 'and', 'watched', 'the', 'fish', '.']}, {'string': ' Sally ate a cat treat.', 'parse': {'tree': '(ROOT (S (NP (NNP Sally)) (VP (VBD ate) (SBAR (S (NP (DT a) (NN cat)) (VP (VBP treat))))) (. .)))', 'lemma': [(u'Sally', u'Sally', u'NNP'), (u'ate', u'eat', u'VBD'), (u'a', u'a', u'DT'), (u'cat', u'cat', u'NN'), (u'treat', u'treat', u'VBP'), (u'.', u'.', u'.')]}, 'tokens': ['Sally', 'ate', 'a', 'cat', 'treat', '.']}], 'mode': 1}]}
{'sentences': [{'string': ' There once was a little monkey who lived in a zoo.', 'parse': {'tree': '(ROOT (S (NP (EX There)) (ADVP (RB once)) (VP (VBD was) (NP (NP (DT a) (JJ little) (NN monkey)) (SBAR (WHNP (WP who)) (S (VP (VBD lived) (PP (IN in) (NP (DT a) (NN zoo)))))))) (. .)))', 'lemma': [(u'There', u'there', u'EX'), (u'once', u'once', u'RB'), (u'was', u'be', u'VBD'), (u'a', u'a', u'DT'), (u'little', u'little', u'JJ'), (u'monkey', u'monkey', u'NN'), (u'who', u'who', u'WP'), (u'lived', u'live', u'VBD'), (u'in', u'in', u'IN'), (u'a', u'a', u'DT'), (u'zoo', u'zoo', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['There', 'once', 'was', 'a', 'little', 'monkey', 'who', 'lived', 'in', 'a', 'zoo', '.']}, {'string': ' He was a tiny brown monkey, smaller than all of the others.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD was) (NP (NP (DT a) (JJ tiny) (JJ brown) (NN monkey)) (, ,) (NP (NP (JJR smaller)) (PP (IN than) (NP (NP (DT all)) (PP (IN of) (NP (DT the) (NNS others)))))))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'was', u'be', u'VBD'), (u'a', u'a', u'DT'), (u'tiny', u'tiny', u'JJ'), (u'brown', u'brown', u'JJ'), (u'monkey', u'monkey', u'NN'), (u',', u',', u','), (u'smaller', u'smaller', u'JJR'), (u'than', u'than', u'IN'), (u'all', u'all', u'DT'), (u'of', u'of', u'IN'), (u'the', u'the', u'DT'), (u'others', u'other', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'was', 'a', 'tiny', 'brown', 'monkey', ',', 'smaller', 'than', 'all', 'of', 'the', 'others', '.']}, {'string': ' He was quieter than the others too.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD was) (NP (NP (NN quieter)) (PP (IN than) (NP (DT the) (NNS others) (RB too))))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'was', u'be', u'VBD'), (u'quieter', u'quieter', u'NN'), (u'than', u'than', u'IN'), (u'the', u'the', u'DT'), (u'others', u'other', u'NNS'), (u'too', u'too', u'RB'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'was', 'quieter', 'than', 'the', 'others', 'too', '.']}, {'string': ' He was so quiet, in fact, that his mommy monkey made him wear a small blue bell around his neck so that she could find him.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD was) (ADJP (RB so) (JJ quiet)) (, ,) (PP (IN in) (NP (NP (NN fact)) (, ,) (SBAR (SBAR (IN that) (S (NP (PRP$ his) (JJ mommy) (NN monkey)) (VP (VBD made) (SBAR (S (NP (PRP him)) (VP (VBP wear) (NP (DT a) (JJ small) (JJ blue) (NN bell)) (PP (IN around) (NP (PRP$ his) (NN neck))))))))) (CC so) (SBAR (IN that) (S (NP (PRP she)) (VP (MD could) (VP (VB find) (NP (PRP him)))))))))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'was', u'be', u'VBD'), (u'so', u'so', u'RB'), (u'quiet', u'quiet', u'JJ'), (u',', u',', u','), (u'in', u'in', u'IN'), (u'fact', u'fact', u'NN'), (u',', u',', u','), (u'that', u'that', u'IN'), (u'his', u'he', u'PRP$'), (u'mommy', u'mommy', u'JJ'), (u'monkey', u'monkey', u'NN'), (u'made', u'make', u'VBD'), (u'him', u'he', u'PRP'), (u'wear', u'wear', u'VBP'), (u'a', u'a', u'DT'), (u'small', u'small', u'JJ'), (u'blue', u'blue', u'JJ'), (u'bell', u'bell', u'NN'), (u'around', u'around', u'IN'), (u'his', u'he', u'PRP$'), (u'neck', u'neck', u'NN'), (u'so', u'so', u'CC'), (u'that', u'that', u'IN'), (u'she', u'she', u'PRP'), (u'could', u'could', u'MD'), (u'find', u'find', u'VB'), (u'him', u'he', u'PRP'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'was', 'so', 'quiet', ',', 'in', 'fact', ',', 'that', 'his', 'mommy', 'monkey', 'made', 'him', 'wear', 'a', 'small', 'blue', 'bell', 'around', 'his', 'neck', 'so', 'that', 'she', 'could', 'find', 'him', '.']}, {'string': ' Even when the little monkey was very quiet, whenever he moved, the bell would jingle and his mother could find him.', 'parse': {'tree': '(ROOT (S (SBAR (RB Even) (WHADVP (WRB when)) (S (NP (DT the) (JJ little) (NN monkey)) (VP (VBD was) (ADJP (RB very) (JJ quiet))))) (, ,) (S (SBAR (WHADVP (WRB whenever)) (S (NP (PRP he)) (VP (VBD moved)))) (, ,) (NP (DT the) (NN bell)) (VP (MD would) (VP (VB jingle)))) (CC and) (S (NP (PRP$ his) (NN mother)) (VP (MD could) (VP (VB find) (NP (PRP him))))) (. .)))', 'lemma': [(u'Even', u'even', u'RB'), (u'when', u'when', u'WRB'), (u'the', u'the', u'DT'), (u'little', u'little', u'JJ'), (u'monkey', u'monkey', u'NN'), (u'was', u'be', u'VBD'), (u'very', u'very', u'RB'), (u'quiet', u'quiet', u'JJ'), (u',', u',', u','), (u'whenever', u'whenever', u'WRB'), (u'he', u'he', u'PRP'), (u'moved', u'move', u'VBD'), (u',', u',', u','), (u'the', u'the', u'DT'), (u'bell', u'bell', u'NN'), (u'would', u'would', u'MD'), (u'jingle', u'jingle', u'VB'), (u'and', u'and', u'CC'), (u'his', u'he', u'PRP$'), (u'mother', u'mother', u'NN'), (u'could', u'could', u'MD'), (u'find', u'find', u'VB'), (u'him', u'he', u'PRP'), (u'.', u'.', u'.')]}, 'tokens': ['Even', 'when', 'the', 'little', 'monkey', 'was', 'very', 'quiet', ',', 'whenever', 'he', 'moved', ',', 'the', 'bell', 'would', 'jingle', 'and', 'his', 'mother', 'could', 'find', 'him', '.']}, {'string': " One day, this little monkey had been running around under the yellow sun for a long time, with his bell going `` jingle jingle. ''", 'parse': {'tree': "(ROOT (S (NP (CD One) (NN day)) (, ,) (NP (DT this) (JJ little) (NN monkey)) (VP (VBD had) (VP (VBN been) (VP (VBG running) (PRT (RP around)) (PP (IN under) (NP (NP (DT the) (JJ yellow) (NN sun)) (PP (IN for) (NP (DT a) (JJ long) (NN time))))) (, ,) (PP (IN with) (NP (NP (PRP$ his) (NN bell)) (VP (VBG going) (`` ``) (NP (JJ jingle) (NN jingle)))))))) (. .) ('' '')))", 'lemma': [(u'One', u'one', u'CD'), (u'day', u'day', u'NN'), (u',', u',', u','), (u'this', u'this', u'DT'), (u'little', u'little', u'JJ'), (u'monkey', u'monkey', u'NN'), (u'had', u'have', u'VBD'), (u'been', u'be', u'VBN'), (u'running', u'run', u'VBG'), (u'around', u'around', u'RP'), (u'under', u'under', u'IN'), (u'the', u'the', u'DT'), (u'yellow', u'yellow', u'JJ'), (u'sun', u'sun', u'NN'), (u'for', u'for', u'IN'), (u'a', u'a', u'DT'), (u'long', u'long', u'JJ'), (u'time', u'time', u'NN'), (u',', u',', u','), (u'with', u'with', u'IN'), (u'his', u'he', u'PRP$'), (u'bell', u'bell', u'NN'), (u'going', u'go', u'VBG'), (u'``', u'``', u'``'), (u'jingle', u'jingle', u'JJ'), (u'jingle', u'jingle', u'NN'), (u'.', u'.', u'.'), (u"''", u"''", u"''")]}, 'tokens': ['One', 'day', ',', 'this', 'little', 'monkey', 'had', 'been', 'running', 'around', 'under', 'the', 'yellow', 'sun', 'for', 'a', 'long', 'time', ',', 'with', 'his', 'bell', 'going', '``', 'jingle', 'jingle', '.', "''"]}, {'string': ' He started to feel tired.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD started) (S (VP (TO to) (VP (VB feel) (ADJP (JJ tired)))))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'started', u'start', u'VBD'), (u'to', u'to', u'TO'), (u'feel', u'feel', u'VB'), (u'tired', u'tired', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'started', 'to', 'feel', 'tired', '.']}, {'string': ' But the other monkeys were still having fun and making a lot of noise.', 'parse': {'tree': '(ROOT (S (CC But) (NP (DT the) (JJ other) (NNS monkeys)) (VP (VBD were) (VP (VP (ADVP (RB still)) (VBG having) (NP (NN fun))) (CC and) (VP (VBG making) (NP (NP (DT a) (NN lot)) (PP (IN of) (NP (NN noise))))))) (. .)))', 'lemma': [(u'But', u'but', u'CC'), (u'the', u'the', u'DT'), (u'other', u'other', u'JJ'), (u'monkeys', u'monkey', u'NNS'), (u'were', u'be', u'VBD'), (u'still', u'still', u'RB'), (u'having', u'have', u'VBG'), (u'fun', u'fun', u'NN'), (u'and', u'and', u'CC'), (u'making', u'make', u'VBG'), (u'a', u'a', u'DT'), (u'lot', u'lot', u'NN'), (u'of', u'of', u'IN'), (u'noise', u'noise', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['But', 'the', 'other', 'monkeys', 'were', 'still', 'having', 'fun', 'and', 'making', 'a', 'lot', 'of', 'noise', '.']}, {'string': ' They were yelling and banging things together.', 'parse': {'tree': '(ROOT (S (NP (PRP They)) (VP (VBD were) (VP (VP (VBG yelling)) (CC and) (VP (VBG banging) (NP (NNS things)) (ADVP (RB together))))) (. .)))', 'lemma': [(u'They', u'they', u'PRP'), (u'were', u'be', u'VBD'), (u'yelling', u'yell', u'VBG'), (u'and', u'and', u'CC'), (u'banging', u'bang', u'VBG'), (u'things', u'thing', u'NNS'), (u'together', u'together', u'RB'), (u'.', u'.', u'.')]}, 'tokens': ['They', 'were', 'yelling', 'and', 'banging', 'things', 'together', '.']}, {'string': ' The little monkey wanted to find somewhere quiet.', 'parse': {'tree': '(ROOT (S (NP (DT The) (JJ little) (NN monkey)) (VP (VBD wanted) (S (VP (TO to) (VP (VB find) (PP (RB somewhere) (ADJP (VB quiet))))))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'little', u'little', u'JJ'), (u'monkey', u'monkey', u'NN'), (u'wanted', u'want', u'VBD'), (u'to', u'to', u'TO'), (u'find', u'find', u'VB'), (u'somewhere', u'somewhere', u'RB'), (u'quiet', u'quiet', u'VB'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'little', 'monkey', 'wanted', 'to', 'find', 'somewhere', 'quiet', '.']}, {'string': ' Finally, he knew what to do: he took off his blue bell.', 'parse': {'tree': '(ROOT (S (S (ADVP (RB Finally)) (, ,) (NP (PRP he)) (VP (VBD knew) (SBAR (WHNP (WP what)) (S (VP (TO to) (VP (VB do))))))) (: :) (S (NP (PRP he)) (VP (VBD took) (PRT (RP off)) (NP (PRP$ his) (JJ blue) (NN bell)))) (. .)))', 'lemma': [(u'Finally', u'finally', u'RB'), (u',', u',', u','), (u'he', u'he', u'PRP'), (u'knew', u'know', u'VBD'), (u'what', u'what', u'WP'), (u'to', u'to', u'TO'), (u'do', u'do', u'VB'), (u':', u':', u':'), (u'he', u'he', u'PRP'), (u'took', u'take', u'VBD'), (u'off', u'off', u'RP'), (u'his', u'he', u'PRP$'), (u'blue', u'blue', u'JJ'), (u'bell', u'bell', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Finally', ',', 'he', 'knew', 'what', 'to', 'do', ':', 'he', 'took', 'off', 'his', 'blue', 'bell', '.']}, {'string': ' He hung it on a branch.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD hung) (NP (PRP it)) (PP (IN on) (NP (DT a) (NN branch)))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'hung', u'hang', u'VBD'), (u'it', u'it', u'PRP'), (u'on', u'on', u'IN'), (u'a', u'a', u'DT'), (u'branch', u'branch', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'hung', 'it', 'on', 'a', 'branch', '.']}, {'string': ' Then he sneaked out of his cage in the zoo.', 'parse': {'tree': '(ROOT (S (RB Then) (NP (PRP he)) (VP (VBD sneaked) (PRT (RP out)) (PP (IN of) (NP (PRP$ his) (NN cage))) (PP (IN in) (NP (DT the) (NN zoo)))) (. .)))', 'lemma': [(u'Then', u'then', u'RB'), (u'he', u'he', u'PRP'), (u'sneaked', u'sneak', u'VBD'), (u'out', u'out', u'RP'), (u'of', u'of', u'IN'), (u'his', u'he', u'PRP$'), (u'cage', u'cage', u'NN'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'zoo', u'zoo', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Then', 'he', 'sneaked', 'out', 'of', 'his', 'cage', 'in', 'the', 'zoo', '.']}, {'string': ' He waited.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD waited)) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'waited', u'wait', u'VBD'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'waited', '.']}, {'string': ' He was very quiet and small.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD was) (ADJP (RB very) (JJ quiet) (CC and) (JJ small))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'was', u'be', u'VBD'), (u'very', u'very', u'RB'), (u'quiet', u'quiet', u'JJ'), (u'and', u'and', u'CC'), (u'small', u'small', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'was', 'very', 'quiet', 'and', 'small', '.']}, {'string': ' He waited until a young girl came walking through the zoo.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD waited) (SBAR (IN until) (S (NP (DT a) (JJ young) (NN girl)) (VP (VBD came) (S (VP (VBG walking) (PP (IN through) (NP (DT the) (NN zoo))))))))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'waited', u'wait', u'VBD'), (u'until', u'until', u'IN'), (u'a', u'a', u'DT'), (u'young', u'young', u'JJ'), (u'girl', u'girl', u'NN'), (u'came', u'come', u'VBD'), (u'walking', u'walk', u'VBG'), (u'through', u'through', u'IN'), (u'the', u'the', u'DT'), (u'zoo', u'zoo', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'waited', 'until', 'a', 'young', 'girl', 'came', 'walking', 'through', 'the', 'zoo', '.']}, {'string': ' She was with her mother and father.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBD was) (PP (IN with) (NP (PRP$ her) (NN mother) (CC and) (NN father)))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'was', u'be', u'VBD'), (u'with', u'with', u'IN'), (u'her', u'she', u'PRP$'), (u'mother', u'mother', u'NN'), (u'and', u'and', u'CC'), (u'father', u'father', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'was', 'with', 'her', 'mother', 'and', 'father', '.']}, {'string': ' Then he jumped into her red backpack.', 'parse': {'tree': '(ROOT (S (RB Then) (NP (PRP he)) (VP (VBD jumped) (PP (IN into) (NP (PRP$ her) (JJ red) (NN backpack)))) (. .)))', 'lemma': [(u'Then', u'then', u'RB'), (u'he', u'he', u'PRP'), (u'jumped', u'jump', u'VBD'), (u'into', u'into', u'IN'), (u'her', u'she', u'PRP$'), (u'red', u'red', u'JJ'), (u'backpack', u'backpack', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Then', 'he', 'jumped', 'into', 'her', 'red', 'backpack', '.']}, {'string': " He was so small that she did n't know he was there.", 'parse': {'tree': "(ROOT (S (NP (PRP He)) (VP (VBD was) (ADJP (RB so) (JJ small)) (SBAR (IN that) (S (NP (PRP she)) (VP (VBD did) (RB n't) (VP (VB know) (SBAR (S (NP (PRP he)) (VP (VBD was) (ADVP (RB there)))))))))) (. .)))", 'lemma': [(u'He', u'he', u'PRP'), (u'was', u'be', u'VBD'), (u'so', u'so', u'RB'), (u'small', u'small', u'JJ'), (u'that', u'that', u'IN'), (u'she', u'she', u'PRP'), (u'did', u'do', u'VBD'), (u"n't", u'not', u'RB'), (u'know', u'know', u'VB'), (u'he', u'he', u'PRP'), (u'was', u'be', u'VBD'), (u'there', u'there', u'RB'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'was', 'so', 'small', 'that', 'she', 'did', "n't", 'know', 'he', 'was', 'there', '.']}, {'string': ' The girl and her mother and father got in their car and went home.', 'parse': {'tree': '(ROOT (S (NP (NP (DT The) (NN girl)) (CC and) (NP (PRP$ her) (NN mother) (CC and) (NN father))) (VP (VP (VBD got) (PP (IN in) (NP (PRP$ their) (NN car)))) (CC and) (VP (VBD went) (NP (NN home)))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'girl', u'girl', u'NN'), (u'and', u'and', u'CC'), (u'her', u'she', u'PRP$'), (u'mother', u'mother', u'NN'), (u'and', u'and', u'CC'), (u'father', u'father', u'NN'), (u'got', u'get', u'VBD'), (u'in', u'in', u'IN'), (u'their', u'they', u'PRP$'), (u'car', u'car', u'NN'), (u'and', u'and', u'CC'), (u'went', u'go', u'VBD'), (u'home', u'home', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'girl', 'and', 'her', 'mother', 'and', 'father', 'got', 'in', 'their', 'car', 'and', 'went', 'home', '.']}, {'string': ' When the girl got home, she set down her backpack.', 'parse': {'tree': '(ROOT (S (SBAR (WHADVP (WRB When)) (S (NP (DT the) (NN girl)) (VP (VBD got) (NP (NN home))))) (, ,) (NP (PRP she)) (VP (VBD set) (PRT (RP down)) (NP (PRP$ her) (NN backpack))) (. .)))', 'lemma': [(u'When', u'when', u'WRB'), (u'the', u'the', u'DT'), (u'girl', u'girl', u'NN'), (u'got', u'get', u'VBD'), (u'home', u'home', u'NN'), (u',', u',', u','), (u'she', u'she', u'PRP'), (u'set', u'set', u'VBD'), (u'down', u'down', u'RP'), (u'her', u'she', u'PRP$'), (u'backpack', u'backpack', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['When', 'the', 'girl', 'got', 'home', ',', 'she', 'set', 'down', 'her', 'backpack', '.']}, {'string': ' Her brother thought he saw her backpack moving.', 'parse': {'tree': '(ROOT (S (NP (PRP$ Her) (NN brother)) (VP (VBD thought) (SBAR (S (NP (PRP he)) (VP (VBD saw) (NP (PRP$ her) (NN backpack)) (S (VP (VBG moving))))))) (. .)))', 'lemma': [(u'Her', u'she', u'PRP$'), (u'brother', u'brother', u'NN'), (u'thought', u'think', u'VBD'), (u'he', u'he', u'PRP'), (u'saw', u'see', u'VBD'), (u'her', u'she', u'PRP$'), (u'backpack', u'backpack', u'NN'), (u'moving', u'move', u'VBG'), (u'.', u'.', u'.')]}, 'tokens': ['Her', 'brother', 'thought', 'he', 'saw', 'her', 'backpack', 'moving', '.']}, {'string': ' Her sister thought she heard something.', 'parse': {'tree': '(ROOT (S (NP (PRP$ Her) (NN sister)) (VP (VBD thought) (SBAR (S (NP (PRP she)) (VP (VBD heard) (NP (NN something)))))) (. .)))', 'lemma': [(u'Her', u'she', u'PRP$'), (u'sister', u'sister', u'NN'), (u'thought', u'think', u'VBD'), (u'she', u'she', u'PRP'), (u'heard', u'hear', u'VBD'), (u'something', u'something', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Her', 'sister', 'thought', 'she', 'heard', 'something', '.']}, {'string': ' But nobody knew that a tiny, sleepy monkey had come home from the zoo.', 'parse': {'tree': '(ROOT (S (CC But) (NP (NN nobody)) (VP (VBD knew) (SBAR (IN that) (S (NP (DT a) (JJ tiny) (, ,) (JJ sleepy) (NN monkey)) (VP (VBD had) (VP (VBN come) (ADVP (RB home)) (PP (IN from) (NP (DT the) (NN zoo)))))))) (. .)))', 'lemma': [(u'But', u'but', u'CC'), (u'nobody', u'nobody', u'NN'), (u'knew', u'know', u'VBD'), (u'that', u'that', u'IN'), (u'a', u'a', u'DT'), (u'tiny', u'tiny', u'JJ'), (u',', u',', u','), (u'sleepy', u'sleepy', u'JJ'), (u'monkey', u'monkey', u'NN'), (u'had', u'have', u'VBD'), (u'come', u'come', u'VBN'), (u'home', u'home', u'RB'), (u'from', u'from', u'IN'), (u'the', u'the', u'DT'), (u'zoo', u'zoo', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['But', 'nobody', 'knew', 'that', 'a', 'tiny', ',', 'sleepy', 'monkey', 'had', 'come', 'home', 'from', 'the', 'zoo', '.']}, {'string': " He was happily sleeping in the girl 's backpack in her quiet house, away from all the other noisy monkeys.", 'parse': {'tree': "(ROOT (S (NP (PRP He)) (VP (VBD was) (ADVP (RB happily)) (VP (VBG sleeping) (PP (IN in) (NP (NP (NP (DT the) (NN girl) (POS 's)) (NN backpack)) (PP (IN in) (NP (PRP$ her) (JJ quiet) (NN house))))) (, ,) (ADVP (RB away) (PP (IN from) (NP (PDT all) (DT the) (JJ other) (JJ noisy) (NNS monkeys)))))) (. .)))", 'lemma': [(u'He', u'he', u'PRP'), (u'was', u'be', u'VBD'), (u'happily', u'happily', u'RB'), (u'sleeping', u'sleep', u'VBG'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'girl', u'girl', u'NN'), (u"'s", u"'s", u'POS'), (u'backpack', u'backpack', u'NN'), (u'in', u'in', u'IN'), (u'her', u'she', u'PRP$'), (u'quiet', u'quiet', u'JJ'), (u'house', u'house', u'NN'), (u',', u',', u','), (u'away', u'away', u'RB'), (u'from', u'from', u'IN'), (u'all', u'all', u'PDT'), (u'the', u'the', u'DT'), (u'other', u'other', u'JJ'), (u'noisy', u'noisy', u'JJ'), (u'monkeys', u'monkey', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'was', 'happily', 'sleeping', 'in', 'the', 'girl', "'s", 'backpack', 'in', 'her', 'quiet', 'house', ',', 'away', 'from', 'all', 'the', 'other', 'noisy', 'monkeys', '.']}], 'questions': [{'question': {'string': " Why did the little monkey jump in the girl 's backpack?", 'parse': {'tree': "(ROOT (SBARQ (WHADVP (WRB Why)) (SQ (VBD did) (NP (DT the) (JJ little) (NN monkey)) (VP (VB jump) (PP (IN in) (NP (NP (DT the) (NN girl) (POS 's)) (NN backpack))))) (. ?)))", 'lemma': [(u'Why', u'why', u'WRB'), (u'did', u'do', u'VBD'), (u'the', u'the', u'DT'), (u'little', u'little', u'JJ'), (u'monkey', u'monkey', u'NN'), (u'jump', u'jump', u'VB'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'girl', u'girl', u'NN'), (u"'s", u"'s", u'POS'), (u'backpack', u'backpack', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['Why', 'did', 'the', 'little', 'monkey', 'jump', 'in', 'the', 'girl', "'s", 'backpack', '?']}, 'answers': [{'string': ' He wanted to yell and bang things together.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD wanted) (S (VP (TO to) (VP (VB yell) (CC and) (VB bang) (NP (NNS things)) (ADVP (RB together)))))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'wanted', u'want', u'VBD'), (u'to', u'to', u'TO'), (u'yell', u'yell', u'VB'), (u'and', u'and', u'CC'), (u'bang', u'bang', u'VB'), (u'things', u'thing', u'NNS'), (u'together', u'together', u'RB'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'wanted', 'to', 'yell', 'and', 'bang', 'things', 'together', '.']}, {'string': ' He was tired and wanted to get away from the noisy monkeys.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VP (VBD was) (ADJP (JJ tired))) (CC and) (VP (VBD wanted) (S (VP (TO to) (VP (VB get) (PRT (RP away)) (PP (IN from) (NP (DT the) (JJ noisy) (NNS monkeys)))))))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'was', u'be', u'VBD'), (u'tired', u'tired', u'JJ'), (u'and', u'and', u'CC'), (u'wanted', u'want', u'VBD'), (u'to', u'to', u'TO'), (u'get', u'get', u'VB'), (u'away', u'away', u'RP'), (u'from', u'from', u'IN'), (u'the', u'the', u'DT'), (u'noisy', u'noisy', u'JJ'), (u'monkeys', u'monkey', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'was', 'tired', 'and', 'wanted', 'to', 'get', 'away', 'from', 'the', 'noisy', 'monkeys', '.']}, {'string': ' He wanted to drive a car.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD wanted) (S (VP (TO to) (VP (VB drive) (NP (DT a) (NN car)))))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'wanted', u'want', u'VBD'), (u'to', u'to', u'TO'), (u'drive', u'drive', u'VB'), (u'a', u'a', u'DT'), (u'car', u'car', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'wanted', 'to', 'drive', 'a', 'car', '.']}, {'string': ' He liked to run around.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD liked) (S (VP (TO to) (VP (VB run) (PRT (RP around)))))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'liked', u'like', u'VBD'), (u'to', u'to', u'TO'), (u'run', u'run', u'VB'), (u'around', u'around', u'RP'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'liked', 'to', 'run', 'around', '.']}], 'mode': 0}, {'question': {'string': " What color was the monkey 's bell?", 'parse': {'tree': "(ROOT (SBARQ (WHNP (WDT What) (NN color)) (SQ (VBD was) (NP (NP (DT the) (NN monkey) (POS 's)) (NN bell))) (. ?)))", 'lemma': [(u'What', u'what', u'WDT'), (u'color', u'color', u'NN'), (u'was', u'be', u'VBD'), (u'the', u'the', u'DT'), (u'monkey', u'monkey', u'NN'), (u"'s", u"'s", u'POS'), (u'bell', u'bell', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'color', 'was', 'the', 'monkey', "'s", 'bell', '?']}, 'answers': [{'string': ' Yellow', 'parse': {'tree': '(ROOT (NP (NNP Yellow)))', 'lemma': [(u'Yellow', u'Yellow', u'NNP')]}, 'tokens': ['Yellow']}, {'string': ' Blue', 'parse': {'tree': '(ROOT (NP (NNP Blue)))', 'lemma': [(u'Blue', u'Blue', u'NNP')]}, 'tokens': ['Blue']}, {'string': ' Brown', 'parse': {'tree': '(ROOT (NP (NNP Brown)))', 'lemma': [(u'Brown', u'Brown', u'NNP')]}, 'tokens': ['Brown']}, {'string': ' Red', 'parse': {'tree': '(ROOT (NP (NNP Red)))', 'lemma': [(u'Red', u'Red', u'NNP')]}, 'tokens': ['Red']}], 'mode': 1}, {'question': {'string': ' Where did the monkey hang his bell?', 'parse': {'tree': '(ROOT (SBARQ (WHADVP (WRB Where)) (SQ (VBD did) (NP (DT the) (NN monkey)) (VP (VB hang) (NP (PRP$ his) (NN bell)))) (. ?)))', 'lemma': [(u'Where', u'where', u'WRB'), (u'did', u'do', u'VBD'), (u'the', u'the', u'DT'), (u'monkey', u'monkey', u'NN'), (u'hang', u'hang', u'VB'), (u'his', u'he', u'PRP$'), (u'bell', u'bell', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['Where', 'did', 'the', 'monkey', 'hang', 'his', 'bell', '?']}, 'answers': [{'string': ' On a car.', 'parse': {'tree': '(ROOT (FRAG (PP (IN On) (NP (DT a) (NN car))) (. .)))', 'lemma': [(u'On', u'on', u'IN'), (u'a', u'a', u'DT'), (u'car', u'car', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['On', 'a', 'car', '.']}, {'string': ' On a branch.', 'parse': {'tree': '(ROOT (FRAG (PP (IN On) (NP (DT a) (NN branch))) (. .)))', 'lemma': [(u'On', u'on', u'IN'), (u'a', u'a', u'DT'), (u'branch', u'branch', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['On', 'a', 'branch', '.']}, {'string': ' On a backpack.', 'parse': {'tree': '(ROOT (FRAG (PP (IN On) (NP (DT a) (NN backpack))) (. .)))', 'lemma': [(u'On', u'on', u'IN'), (u'a', u'a', u'DT'), (u'backpack', u'backpack', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['On', 'a', 'backpack', '.']}, {'string': ' On another monkey.', 'parse': {'tree': '(ROOT (FRAG (PP (IN On) (NP (DT another) (NN monkey))) (. .)))', 'lemma': [(u'On', u'on', u'IN'), (u'another', u'another', u'DT'), (u'monkey', u'monkey', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['On', 'another', 'monkey', '.']}], 'mode': 1}, {'question': {'string': ' Who was walking with the girl at the zoo?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP Who)) (SQ (VBD was) (VP (VBG walking) (PP (IN with) (NP (NP (DT the) (NN girl)) (PP (IN at) (NP (DT the) (NN zoo))))))) (. ?)))', 'lemma': [(u'Who', u'who', u'WP'), (u'was', u'be', u'VBD'), (u'walking', u'walk', u'VBG'), (u'with', u'with', u'IN'), (u'the', u'the', u'DT'), (u'girl', u'girl', u'NN'), (u'at', u'at', u'IN'), (u'the', u'the', u'DT'), (u'zoo', u'zoo', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['Who', 'was', 'walking', 'with', 'the', 'girl', 'at', 'the', 'zoo', '?']}, 'answers': [{'string': ' Her brother', 'parse': {'tree': '(ROOT (FRAG (NP (PRP$ Her) (NN brother))))', 'lemma': [(u'Her', u'she', u'PRP$'), (u'brother', u'brother', u'NN')]}, 'tokens': ['Her', 'brother']}, {'string': ' A mommy monkey', 'parse': {'tree': '(ROOT (NP (DT A) (NN mommy) (NN monkey)))', 'lemma': [(u'A', u'a', u'DT'), (u'mommy', u'mommy', u'NN'), (u'monkey', u'monkey', u'NN')]}, 'tokens': ['A', 'mommy', 'monkey']}, {'string': ' Her mother and father', 'parse': {'tree': '(ROOT (NP (NP (PRP$ Her) (NN mother)) (CC and) (NP (NN father))))', 'lemma': [(u'Her', u'she', u'PRP$'), (u'mother', u'mother', u'NN'), (u'and', u'and', u'CC'), (u'father', u'father', u'NN')]}, 'tokens': ['Her', 'mother', 'and', 'father']}, {'string': ' Her sister', 'parse': {'tree': '(ROOT (FRAG (NP (PRP$ Her) (NN sister))))', 'lemma': [(u'Her', u'she', u'PRP$'), (u'sister', u'sister', u'NN')]}, 'tokens': ['Her', 'sister']}], 'mode': 0}]}
{'sentences': [{'string': ' Jack and Mackenzie wanted to do something fun during their day off from school.', 'parse': {'tree': '(ROOT (S (NP (NNP Jack) (CC and) (NNP Mackenzie)) (VP (VBD wanted) (S (VP (TO to) (VP (VB do) (NP (NN something) (NN fun)) (PP (IN during) (NP (PRP$ their) (NN day))) (PP (RP off) (PP (IN from) (NP (NN school)))))))) (. .)))', 'lemma': [(u'Jack', u'Jack', u'NNP'), (u'and', u'and', u'CC'), (u'Mackenzie', u'Mackenzie', u'NNP'), (u'wanted', u'want', u'VBD'), (u'to', u'to', u'TO'), (u'do', u'do', u'VB'), (u'something', u'something', u'NN'), (u'fun', u'fun', u'NN'), (u'during', u'during', u'IN'), (u'their', u'they', u'PRP$'), (u'day', u'day', u'NN'), (u'off', u'off', u'RP'), (u'from', u'from', u'IN'), (u'school', u'school', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Jack', 'and', 'Mackenzie', 'wanted', 'to', 'do', 'something', 'fun', 'during', 'their', 'day', 'off', 'from', 'school', '.']}, {'string': ' They knew that the library had story time on Monday, Tuesday, and Wednesday.', 'parse': {'tree': '(ROOT (S (NP (PRP They)) (VP (VBD knew) (SBAR (IN that) (S (NP (DT the) (NN library)) (VP (VBD had) (NP (NP (NN story) (NN time)) (PP (IN on) (NP (NNP Monday) (, ,) (NNP Tuesday) (, ,) (CC and) (NNP Wednesday)))))))) (. .)))', 'lemma': [(u'They', u'they', u'PRP'), (u'knew', u'know', u'VBD'), (u'that', u'that', u'IN'), (u'the', u'the', u'DT'), (u'library', u'library', u'NN'), (u'had', u'have', u'VBD'), (u'story', u'story', u'NN'), (u'time', u'time', u'NN'), (u'on', u'on', u'IN'), (u'Monday', u'Monday', u'NNP'), (u',', u',', u','), (u'Tuesday', u'Tuesday', u'NNP'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'Wednesday', u'Wednesday', u'NNP'), (u'.', u'.', u'.')]}, 'tokens': ['They', 'knew', 'that', 'the', 'library', 'had', 'story', 'time', 'on', 'Monday', ',', 'Tuesday', ',', 'and', 'Wednesday', '.']}, {'string': ' Their mother told them they could go to the library every Tuesday for their story time.', 'parse': {'tree': '(ROOT (S (NP (PRP$ Their) (NN mother)) (VP (VBD told) (NP (PRP them)) (SBAR (S (NP (PRP they)) (VP (MD could) (VP (VB go) (PP (TO to) (NP (DT the) (NN library))) (NP (DT every) (NNP Tuesday)) (PP (IN for) (NP (PRP$ their) (NN story) (NN time)))))))) (. .)))', 'lemma': [(u'Their', u'they', u'PRP$'), (u'mother', u'mother', u'NN'), (u'told', u'tell', u'VBD'), (u'them', u'they', u'PRP'), (u'they', u'they', u'PRP'), (u'could', u'could', u'MD'), (u'go', u'go', u'VB'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'library', u'library', u'NN'), (u'every', u'every', u'DT'), (u'Tuesday', u'Tuesday', u'NNP'), (u'for', u'for', u'IN'), (u'their', u'they', u'PRP$'), (u'story', u'story', u'NN'), (u'time', u'time', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Their', 'mother', 'told', 'them', 'they', 'could', 'go', 'to', 'the', 'library', 'every', 'Tuesday', 'for', 'their', 'story', 'time', '.']}, {'string': ' They packed up the car and drove to the library, ready for a fun morning.', 'parse': {'tree': '(ROOT (S (NP (PRP They)) (VP (VP (VBD packed) (PRT (RP up)) (NP (DT the) (NN car))) (CC and) (VP (VBD drove) (PP (TO to) (NP (NP (DT the) (NN library)) (, ,) (ADJP (JJ ready) (PP (IN for) (NP (DT a) (NN fun)))))) (NP (NN morning)))) (. .)))', 'lemma': [(u'They', u'they', u'PRP'), (u'packed', u'pack', u'VBD'), (u'up', u'up', u'RP'), (u'the', u'the', u'DT'), (u'car', u'car', u'NN'), (u'and', u'and', u'CC'), (u'drove', u'drive', u'VBD'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'library', u'library', u'NN'), (u',', u',', u','), (u'ready', u'ready', u'JJ'), (u'for', u'for', u'IN'), (u'a', u'a', u'DT'), (u'fun', u'fun', u'NN'), (u'morning', u'morning', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['They', 'packed', 'up', 'the', 'car', 'and', 'drove', 'to', 'the', 'library', ',', 'ready', 'for', 'a', 'fun', 'morning', '.']}, {'string': ' When they arrived to the story room, there were lots of other children their age, all sitting cross-legged and ready for the story of the day.', 'parse': {'tree': '(ROOT (S (SBAR (WHADVP (WRB When)) (S (NP (PRP they)) (VP (VBD arrived) (PP (TO to) (NP (DT the) (NN story) (NN room)))))) (, ,) (NP (EX there)) (VP (VBD were) (NP (NP (NNS lots)) (PP (IN of) (NP (NP (NP (JJ other) (NNS children)) (NP (PRP$ their) (NN age))) (, ,) (UCP (NP (DT all) (VBG sitting) (NN cross-legged)) (CC and) (ADJP (JJ ready) (PP (IN for) (NP (NP (DT the) (NN story)) (PP (IN of) (NP (DT the) (NN day))))))))))) (. .)))', 'lemma': [(u'When', u'when', u'WRB'), (u'they', u'they', u'PRP'), (u'arrived', u'arrive', u'VBD'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'story', u'story', u'NN'), (u'room', u'room', u'NN'), (u',', u',', u','), (u'there', u'there', u'EX'), (u'were', u'be', u'VBD'), (u'lots', u'lot', u'NNS'), (u'of', u'of', u'IN'), (u'other', u'other', u'JJ'), (u'children', u'child', u'NNS'), (u'their', u'they', u'PRP$'), (u'age', u'age', u'NN'), (u',', u',', u','), (u'all', u'all', u'DT'), (u'sitting', u'sit', u'VBG'), (u'cross-legged', u'cross-legged', u'NN'), (u'and', u'and', u'CC'), (u'ready', u'ready', u'JJ'), (u'for', u'for', u'IN'), (u'the', u'the', u'DT'), (u'story', u'story', u'NN'), (u'of', u'of', u'IN'), (u'the', u'the', u'DT'), (u'day', u'day', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['When', 'they', 'arrived', 'to', 'the', 'story', 'room', ',', 'there', 'were', 'lots', 'of', 'other', 'children', 'their', 'age', ',', 'all', 'sitting', 'cross-legged', 'and', 'ready', 'for', 'the', 'story', 'of', 'the', 'day', '.']}, {'string': " The teacher told them they would be reading `` The Wild Horse ''.", 'parse': {'tree': "(ROOT (S (NP (DT The) (NN teacher)) (VP (VBD told) (NP (PRP them)) (SBAR (S (NP (PRP they)) (VP (MD would) (VP (VB be) (VP (VBG reading) (`` ``) (NP (DT The) (JJ Wild) (NN Horse)) ('' ''))))))) (. .)))", 'lemma': [(u'The', u'the', u'DT'), (u'teacher', u'teacher', u'NN'), (u'told', u'tell', u'VBD'), (u'them', u'they', u'PRP'), (u'they', u'they', u'PRP'), (u'would', u'would', u'MD'), (u'be', u'be', u'VB'), (u'reading', u'read', u'VBG'), (u'``', u'``', u'``'), (u'The', u'the', u'DT'), (u'Wild', u'wild', u'JJ'), (u'Horse', u'horse', u'NN'), (u"''", u"''", u"''"), (u'.', u'.', u'.')]}, 'tokens': ['The', 'teacher', 'told', 'them', 'they', 'would', 'be', 'reading', '``', 'The', 'Wild', 'Horse', "''", '.']}, {'string': ' She began to tell the story of Majestic, the wild horse who could not be calmed.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBD began) (S (VP (TO to) (VP (VB tell) (NP (NP (DT the) (NN story)) (PP (IN of) (NP (NP (NNP Majestic)) (, ,) (NP (NP (DT the) (JJ wild) (NN horse)) (SBAR (WHNP (WP who)) (S (VP (MD could) (RB not) (VP (VB be) (VP (VBN calmed)))))))))))))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'began', u'begin', u'VBD'), (u'to', u'to', u'TO'), (u'tell', u'tell', u'VB'), (u'the', u'the', u'DT'), (u'story', u'story', u'NN'), (u'of', u'of', u'IN'), (u'Majestic', u'Majestic', u'NNP'), (u',', u',', u','), (u'the', u'the', u'DT'), (u'wild', u'wild', u'JJ'), (u'horse', u'horse', u'NN'), (u'who', u'who', u'WP'), (u'could', u'could', u'MD'), (u'not', u'not', u'RB'), (u'be', u'be', u'VB'), (u'calmed', u'calm', u'VBN'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'began', 'to', 'tell', 'the', 'story', 'of', 'Majestic', ',', 'the', 'wild', 'horse', 'who', 'could', 'not', 'be', 'calmed', '.']}, {'string': ' His people had tried and tried to break him, but he was wild at heart.', 'parse': {'tree': '(ROOT (S (S (NP (PRP$ His) (NNS people)) (VP (VBD had) (VP (VBN tried) (CC and) (VBN tried) (S (VP (TO to) (VP (VB break) (NP (PRP him)))))))) (, ,) (CC but) (S (NP (PRP he)) (VP (VBD was) (ADJP (JJ wild) (PP (IN at) (NP (NN heart)))))) (. .)))', 'lemma': [(u'His', u'he', u'PRP$'), (u'people', u'people', u'NNS'), (u'had', u'have', u'VBD'), (u'tried', u'try', u'VBN'), (u'and', u'and', u'CC'), (u'tried', u'try', u'VBN'), (u'to', u'to', u'TO'), (u'break', u'break', u'VB'), (u'him', u'he', u'PRP'), (u',', u',', u','), (u'but', u'but', u'CC'), (u'he', u'he', u'PRP'), (u'was', u'be', u'VBD'), (u'wild', u'wild', u'JJ'), (u'at', u'at', u'IN'), (u'heart', u'heart', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['His', 'people', 'had', 'tried', 'and', 'tried', 'to', 'break', 'him', ',', 'but', 'he', 'was', 'wild', 'at', 'heart', '.']}, {'string': ' Every time they took him to the river to drink, he would run straight into the water and get soaking wet!', 'parse': {'tree': '(ROOT (S (S (NP (DT Every) (NN time)) (NP (PRP they)) (VP (VBD took) (NP (PRP him)) (PP (TO to) (NP (DT the) (NN river))) (S (VP (TO to) (VP (VB drink)))))) (, ,) (NP (PRP he)) (VP (MD would) (VP (VP (VB run) (ADVP (RB straight)) (PP (IN into) (NP (DT the) (NN water)))) (CC and) (VP (VB get) (S (VP (VBG soaking) (ADJP (JJ wet))))))) (. !)))', 'lemma': [(u'Every', u'every', u'DT'), (u'time', u'time', u'NN'), (u'they', u'they', u'PRP'), (u'took', u'take', u'VBD'), (u'him', u'he', u'PRP'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'river', u'river', u'NN'), (u'to', u'to', u'TO'), (u'drink', u'drink', u'VB'), (u',', u',', u','), (u'he', u'he', u'PRP'), (u'would', u'would', u'MD'), (u'run', u'run', u'VB'), (u'straight', u'straight', u'RB'), (u'into', u'into', u'IN'), (u'the', u'the', u'DT'), (u'water', u'water', u'NN'), (u'and', u'and', u'CC'), (u'get', u'get', u'VB'), (u'soaking', u'soak', u'VBG'), (u'wet', u'wet', u'JJ'), (u'!', u'!', u'.')]}, 'tokens': ['Every', 'time', 'they', 'took', 'him', 'to', 'the', 'river', 'to', 'drink', ',', 'he', 'would', 'run', 'straight', 'into', 'the', 'water', 'and', 'get', 'soaking', 'wet', '!']}, {'string': ' He would splash and play until he was ready to go back home, where he would sleep for hours, having worn himself out playing.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (MD would) (VP (VB splash) (CC and) (VB play) (SBAR (IN until) (S (NP (PRP he)) (VP (VBD was) (ADJP (JJ ready) (S (VP (TO to) (VP (VB go) (PRT (RP back)) (NP (NN home))))))))) (, ,) (SBAR (WHADVP (WRB where)) (S (NP (PRP he)) (VP (MD would) (VP (VB sleep) (PP (IN for) (NP (NNS hours))) (, ,) (S (VP (VBG having) (VP (VBN worn) (NP (PRP himself)) (PP (IN out) (NP (NN playing)))))))))))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'would', u'would', u'MD'), (u'splash', u'splash', u'VB'), (u'and', u'and', u'CC'), (u'play', u'play', u'VB'), (u'until', u'until', u'IN'), (u'he', u'he', u'PRP'), (u'was', u'be', u'VBD'), (u'ready', u'ready', u'JJ'), (u'to', u'to', u'TO'), (u'go', u'go', u'VB'), (u'back', u'back', u'RP'), (u'home', u'home', u'NN'), (u',', u',', u','), (u'where', u'where', u'WRB'), (u'he', u'he', u'PRP'), (u'would', u'would', u'MD'), (u'sleep', u'sleep', u'VB'), (u'for', u'for', u'IN'), (u'hours', u'hour', u'NNS'), (u',', u',', u','), (u'having', u'have', u'VBG'), (u'worn', u'wear', u'VBN'), (u'himself', u'himself', u'PRP'), (u'out', u'out', u'IN'), (u'playing', u'playing', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'would', 'splash', 'and', 'play', 'until', 'he', 'was', 'ready', 'to', 'go', 'back', 'home', ',', 'where', 'he', 'would', 'sleep', 'for', 'hours', ',', 'having', 'worn', 'himself', 'out', 'playing', '.']}], 'questions': [{'question': {'string': ' What was the name of the horse?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD was) (NP (NP (DT the) (NN name)) (PP (IN of) (NP (DT the) (NN horse))))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'was', u'be', u'VBD'), (u'the', u'the', u'DT'), (u'name', u'name', u'NN'), (u'of', u'of', u'IN'), (u'the', u'the', u'DT'), (u'horse', u'horse', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'was', 'the', 'name', 'of', 'the', 'horse', '?']}, 'answers': [{'string': ' Majestic', 'parse': {'tree': '(ROOT (NP (NNP Majestic)))', 'lemma': [(u'Majestic', u'Majestic', u'NNP')]}, 'tokens': ['Majestic']}, {'string': ' mother', 'parse': {'tree': '(ROOT (NP (NN mother)))', 'lemma': [(u'mother', u'mother', u'NN')]}, 'tokens': ['mother']}, {'string': ' Mackenzie', 'parse': {'tree': '(ROOT (NP (NNP Mackenzie)))', 'lemma': [(u'Mackenzie', u'Mackenzie', u'NNP')]}, 'tokens': ['Mackenzie']}, {'string': ' Jack', 'parse': {'tree': '(ROOT (NP (NNP Jack)))', 'lemma': [(u'Jack', u'Jack', u'NNP')]}, 'tokens': ['Jack']}], 'mode': 0}, {'question': {'string': ' What did the horse do in the river?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD did) (NP (DT the) (NN horse)) (VP (VB do) (PP (IN in) (NP (DT the) (NN river))))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'did', u'do', u'VBD'), (u'the', u'the', u'DT'), (u'horse', u'horse', u'NN'), (u'do', u'do', u'VB'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'river', u'river', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'did', 'the', 'horse', 'do', 'in', 'the', 'river', '?']}, 'answers': [{'string': ' take a bath', 'parse': {'tree': '(ROOT (S (VP (VB take) (NP (DT a) (NN bath)))))', 'lemma': [(u'take', u'take', u'VB'), (u'a', u'a', u'DT'), (u'bath', u'bath', u'NN')]}, 'tokens': ['take', 'a', 'bath']}, {'string': ' splash and play', 'parse': {'tree': '(ROOT (S (VP (VB splash) (CC and) (VB play))))', 'lemma': [(u'splash', u'splash', u'VB'), (u'and', u'and', u'CC'), (u'play', u'play', u'VB')]}, 'tokens': ['splash', 'and', 'play']}, {'string': ' drink', 'parse': {'tree': '(ROOT (S (VP (VB drink))))', 'lemma': [(u'drink', u'drink', u'VB')]}, 'tokens': ['drink']}, {'string': ' spray water from his mouth', 'parse': {'tree': '(ROOT (NP (NP (NN spray) (NN water)) (PP (IN from) (NP (PRP$ his) (NN mouth)))))', 'lemma': [(u'spray', u'spray', u'NN'), (u'water', u'water', u'NN'), (u'from', u'from', u'IN'), (u'his', u'he', u'PRP$'), (u'mouth', u'mouth', u'NN')]}, 'tokens': ['spray', 'water', 'from', 'his', 'mouth']}], 'mode': 0}, {'question': {'string': ' Where did Jack and Mackenzie go with their mother?', 'parse': {'tree': '(ROOT (SBARQ (WHADVP (WRB Where)) (SQ (VBD did) (NP (NNP Jack) (CC and) (NNP Mackenzie)) (VP (VB go) (PP (IN with) (NP (PRP$ their) (NN mother))))) (. ?)))', 'lemma': [(u'Where', u'where', u'WRB'), (u'did', u'do', u'VBD'), (u'Jack', u'Jack', u'NNP'), (u'and', u'and', u'CC'), (u'Mackenzie', u'Mackenzie', u'NNP'), (u'go', u'go', u'VB'), (u'with', u'with', u'IN'), (u'their', u'they', u'PRP$'), (u'mother', u'mother', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['Where', 'did', 'Jack', 'and', 'Mackenzie', 'go', 'with', 'their', 'mother', '?']}, 'answers': [{'string': ' home', 'parse': {'tree': '(ROOT (NP (NN home)))', 'lemma': [(u'home', u'home', u'NN')]}, 'tokens': ['home']}, {'string': ' library', 'parse': {'tree': '(ROOT (NP (NN library)))', 'lemma': [(u'library', u'library', u'NN')]}, 'tokens': ['library']}, {'string': ' river', 'parse': {'tree': '(ROOT (NP (NN river)))', 'lemma': [(u'river', u'river', u'NN')]}, 'tokens': ['river']}, {'string': ' playground', 'parse': {'tree': '(ROOT (NP (NN playground)))', 'lemma': [(u'playground', u'playground', u'NN')]}, 'tokens': ['playground']}], 'mode': 1}, {'question': {'string': ' What day was story time at the library?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WDT What) (NN day)) (SQ (VBD was) (NP (NP (NN story) (NN time)) (PP (IN at) (NP (DT the) (NN library))))) (. ?)))', 'lemma': [(u'What', u'what', u'WDT'), (u'day', u'day', u'NN'), (u'was', u'be', u'VBD'), (u'story', u'story', u'NN'), (u'time', u'time', u'NN'), (u'at', u'at', u'IN'), (u'the', u'the', u'DT'), (u'library', u'library', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'day', 'was', 'story', 'time', 'at', 'the', 'library', '?']}, 'answers': [{'string': ' Friday', 'parse': {'tree': '(ROOT (NP (NNP Friday)))', 'lemma': [(u'Friday', u'Friday', u'NNP')]}, 'tokens': ['Friday']}, {'string': ' Tuesday', 'parse': {'tree': '(ROOT (NP (NNP Tuesday)))', 'lemma': [(u'Tuesday', u'Tuesday', u'NNP')]}, 'tokens': ['Tuesday']}, {'string': ' Wednesday', 'parse': {'tree': '(ROOT (NP (NNP Wednesday)))', 'lemma': [(u'Wednesday', u'Wednesday', u'NNP')]}, 'tokens': ['Wednesday']}, {'string': ' Monday', 'parse': {'tree': '(ROOT (NP (NNP Monday)))', 'lemma': [(u'Monday', u'Monday', u'NNP')]}, 'tokens': ['Monday']}], 'mode': 0}]}
{'sentences': [{'string': ' Lucy is an eight year old girl who lives with her parents and pet bird.', 'parse': {'tree': '(ROOT (S (NP (NNP Lucy)) (VP (VBZ is) (NP (NP (DT an) (ADJP (NP (CD eight) (NN year)) (JJ old)) (NN girl)) (SBAR (WHNP (WP who)) (S (VP (VBZ lives) (PP (IN with) (NP (NP (PRP$ her) (NNS parents)) (CC and) (NP (JJ pet) (NN bird))))))))) (. .)))', 'lemma': [(u'Lucy', u'Lucy', u'NNP'), (u'is', u'be', u'VBZ'), (u'an', u'a', u'DT'), (u'eight', u'eight', u'CD'), (u'year', u'year', u'NN'), (u'old', u'old', u'JJ'), (u'girl', u'girl', u'NN'), (u'who', u'who', u'WP'), (u'lives', u'live', u'VBZ'), (u'with', u'with', u'IN'), (u'her', u'she', u'PRP$'), (u'parents', u'parent', u'NNS'), (u'and', u'and', u'CC'), (u'pet', u'pet', u'JJ'), (u'bird', u'bird', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Lucy', 'is', 'an', 'eight', 'year', 'old', 'girl', 'who', 'lives', 'with', 'her', 'parents', 'and', 'pet', 'bird', '.']}, {'string': ' One Saturday afternoon, she sits at the kitchen table.', 'parse': {'tree': '(ROOT (S (NP (CD One) (JJ Saturday) (NN afternoon)) (, ,) (NP (PRP she)) (VP (VBZ sits) (PP (IN at) (NP (DT the) (NN kitchen) (NN table)))) (. .)))', 'lemma': [(u'One', u'one', u'CD'), (u'Saturday', u'saturday', u'JJ'), (u'afternoon', u'afternoon', u'NN'), (u',', u',', u','), (u'she', u'she', u'PRP'), (u'sits', u'sit', u'VBZ'), (u'at', u'at', u'IN'), (u'the', u'the', u'DT'), (u'kitchen', u'kitchen', u'NN'), (u'table', u'table', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['One', 'Saturday', 'afternoon', ',', 'she', 'sits', 'at', 'the', 'kitchen', 'table', '.']}, {'string': ' She draws a picture of her family.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBZ draws) (NP (NP (DT a) (NN picture)) (PP (IN of) (NP (PRP$ her) (NN family))))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'draws', u'draw', u'VBZ'), (u'a', u'a', u'DT'), (u'picture', u'picture', u'NN'), (u'of', u'of', u'IN'), (u'her', u'she', u'PRP$'), (u'family', u'family', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'draws', 'a', 'picture', 'of', 'her', 'family', '.']}, {'string': ' She makes sure to draw her mom named Martha wearing a purple dress, because that is her favorite.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBZ makes) (ADJP (JJ sure) (S (VP (TO to) (VP (VB draw) (NP (NP (PRP$ her) (NN mom)) (VP (VBN named) (NP (NP (NNP Martha)) (VP (VBG wearing) (NP (DT a) (JJ purple) (NN dress)))))))))) (, ,) (SBAR (IN because) (S (NP (DT that)) (VP (VBZ is) (NP (PRP$ her) (NN favorite)))))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'makes', u'make', u'VBZ'), (u'sure', u'sure', u'JJ'), (u'to', u'to', u'TO'), (u'draw', u'draw', u'VB'), (u'her', u'she', u'PRP$'), (u'mom', u'mom', u'NN'), (u'named', u'name', u'VBN'), (u'Martha', u'Martha', u'NNP'), (u'wearing', u'wear', u'VBG'), (u'a', u'a', u'DT'), (u'purple', u'purple', u'JJ'), (u'dress', u'dress', u'NN'), (u',', u',', u','), (u'because', u'because', u'IN'), (u'that', u'that', u'DT'), (u'is', u'be', u'VBZ'), (u'her', u'she', u'PRP$'), (u'favorite', u'favorite', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'makes', 'sure', 'to', 'draw', 'her', 'mom', 'named', 'Martha', 'wearing', 'a', 'purple', 'dress', ',', 'because', 'that', 'is', 'her', 'favorite', '.']}, {'string': ' She draws many yellow feathers for her pet bird named Andy.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBZ draws) (NP (NP (JJ many) (JJ yellow) (NNS feathers)) (PP (IN for) (NP (NP (PRP$ her) (JJ pet) (NN bird)) (VP (VBN named) (NP (NNP Andy))))))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'draws', u'draw', u'VBZ'), (u'many', u'many', u'JJ'), (u'yellow', u'yellow', u'JJ'), (u'feathers', u'feather', u'NNS'), (u'for', u'for', u'IN'), (u'her', u'she', u'PRP$'), (u'pet', u'pet', u'JJ'), (u'bird', u'bird', u'NN'), (u'named', u'name', u'VBN'), (u'Andy', u'Andy', u'NNP'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'draws', 'many', 'yellow', 'feathers', 'for', 'her', 'pet', 'bird', 'named', 'Andy', '.']}, {'string': ' After she is done, she gives the picture to her mom.', 'parse': {'tree': '(ROOT (S (SBAR (IN After) (S (NP (PRP she)) (VP (VBZ is) (VP (VBN done))))) (, ,) (NP (PRP she)) (VP (VBZ gives) (NP (DT the) (NN picture)) (PP (TO to) (NP (PRP$ her) (NN mom)))) (. .)))', 'lemma': [(u'After', u'after', u'IN'), (u'she', u'she', u'PRP'), (u'is', u'be', u'VBZ'), (u'done', u'do', u'VBN'), (u',', u',', u','), (u'she', u'she', u'PRP'), (u'gives', u'give', u'VBZ'), (u'the', u'the', u'DT'), (u'picture', u'picture', u'NN'), (u'to', u'to', u'TO'), (u'her', u'she', u'PRP$'), (u'mom', u'mom', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['After', 'she', 'is', 'done', ',', 'she', 'gives', 'the', 'picture', 'to', 'her', 'mom', '.']}, {'string': ' Her mom hangs it up on the silver refrigerator.', 'parse': {'tree': '(ROOT (S (NP (PRP$ Her) (NN mom)) (VP (VBZ hangs) (NP (PRP it)) (PRT (RP up)) (PP (IN on) (NP (DT the) (JJ silver) (NN refrigerator)))) (. .)))', 'lemma': [(u'Her', u'she', u'PRP$'), (u'mom', u'mom', u'NN'), (u'hangs', u'hang', u'VBZ'), (u'it', u'it', u'PRP'), (u'up', u'up', u'RP'), (u'on', u'on', u'IN'), (u'the', u'the', u'DT'), (u'silver', u'silver', u'JJ'), (u'refrigerator', u'refrigerator', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Her', 'mom', 'hangs', 'it', 'up', 'on', 'the', 'silver', 'refrigerator', '.']}, {'string': " The next day, Lucy 's mom comes home with a brown dog named Oliver.", 'parse': {'tree': "(ROOT (S (NP (DT The) (JJ next) (NN day)) (, ,) (NP (NP (NNP Lucy) (POS 's)) (NN mom)) (VP (VBZ comes) (NP (NN home)) (PP (IN with) (NP (NP (DT a) (JJ brown) (NN dog)) (VP (VBN named) (NP (NNP Oliver)))))) (. .)))", 'lemma': [(u'The', u'the', u'DT'), (u'next', u'next', u'JJ'), (u'day', u'day', u'NN'), (u',', u',', u','), (u'Lucy', u'Lucy', u'NNP'), (u"'s", u"'s", u'POS'), (u'mom', u'mom', u'NN'), (u'comes', u'come', u'VBZ'), (u'home', u'home', u'NN'), (u'with', u'with', u'IN'), (u'a', u'a', u'DT'), (u'brown', u'brown', u'JJ'), (u'dog', u'dog', u'NN'), (u'named', u'name', u'VBN'), (u'Oliver', u'Oliver', u'NNP'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'next', 'day', ',', 'Lucy', "'s", 'mom', 'comes', 'home', 'with', 'a', 'brown', 'dog', 'named', 'Oliver', '.']}, {'string': " She tells Lucy that she is pet-sitting, which is like babysitting but with a friend 's dog.", 'parse': {'tree': "(ROOT (S (NP (PRP She)) (VP (VBZ tells) (NP (NNP Lucy)) (SBAR (IN that) (S (NP (PRP she)) (VP (VBZ is) (NP (NP (NN pet-sitting)) (, ,) (SBAR (WHNP (WDT which)) (S (VP (VBZ is) (PP (IN like) (S (VP (VBG babysitting) (PP (CC but) (PP (IN with) (NP (NP (DT a) (NN friend) (POS 's)) (NN dog))))))))))))))) (. .)))", 'lemma': [(u'She', u'she', u'PRP'), (u'tells', u'tell', u'VBZ'), (u'Lucy', u'Lucy', u'NNP'), (u'that', u'that', u'IN'), (u'she', u'she', u'PRP'), (u'is', u'be', u'VBZ'), (u'pet-sitting', u'pet-sitting', u'NN'), (u',', u',', u','), (u'which', u'which', u'WDT'), (u'is', u'be', u'VBZ'), (u'like', u'like', u'IN'), (u'babysitting', u'babysit', u'VBG'), (u'but', u'but', u'CC'), (u'with', u'with', u'IN'), (u'a', u'a', u'DT'), (u'friend', u'friend', u'NN'), (u"'s", u"'s", u'POS'), (u'dog', u'dog', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'tells', 'Lucy', 'that', 'she', 'is', 'pet-sitting', ',', 'which', 'is', 'like', 'babysitting', 'but', 'with', 'a', 'friend', "'s", 'dog', '.']}, {'string': " Lucy 's mom tells her she can play with the dog as long as she takes good care of him.", 'parse': {'tree': "(ROOT (S (NP (NP (NNP Lucy) (POS 's)) (NN mom)) (VP (VBZ tells) (NP (PRP her)) (SBAR (S (NP (PRP she)) (VP (MD can) (VP (VB play) (PP (IN with) (NP (DT the) (NN dog))) (ADVP (ADVP (RB as) (RB long)) (SBAR (IN as) (S (NP (PRP she)) (VP (VBZ takes) (NP (NP (JJ good) (NN care)) (PP (IN of) (NP (PRP him))))))))))))) (. .)))", 'lemma': [(u'Lucy', u'Lucy', u'NNP'), (u"'s", u"'s", u'POS'), (u'mom', u'mom', u'NN'), (u'tells', u'tell', u'VBZ'), (u'her', u'she', u'PRP'), (u'she', u'she', u'PRP'), (u'can', u'can', u'MD'), (u'play', u'play', u'VB'), (u'with', u'with', u'IN'), (u'the', u'the', u'DT'), (u'dog', u'dog', u'NN'), (u'as', u'as', u'RB'), (u'long', u'long', u'RB'), (u'as', u'as', u'IN'), (u'she', u'she', u'PRP'), (u'takes', u'take', u'VBZ'), (u'good', u'good', u'JJ'), (u'care', u'care', u'NN'), (u'of', u'of', u'IN'), (u'him', u'he', u'PRP'), (u'.', u'.', u'.')]}, 'tokens': ['Lucy', "'s", 'mom', 'tells', 'her', 'she', 'can', 'play', 'with', 'the', 'dog', 'as', 'long', 'as', 'she', 'takes', 'good', 'care', 'of', 'him', '.']}, {'string': ' Lucy is excited.', 'parse': {'tree': '(ROOT (S (NP (NNP Lucy)) (VP (VBZ is) (ADJP (JJ excited))) (. .)))', 'lemma': [(u'Lucy', u'Lucy', u'NNP'), (u'is', u'be', u'VBZ'), (u'excited', u'excited', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['Lucy', 'is', 'excited', '.']}, {'string': ' She pets Oliver nicely on his soft back.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBZ pets) (NP (NP (NNP Oliver) (NNP nicely)) (PP (IN on) (NP (PRP$ his) (JJ soft) (NN back))))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'pets', u'pet', u'VBZ'), (u'Oliver', u'Oliver', u'NNP'), (u'nicely', u'nicely', u'NNP'), (u'on', u'on', u'IN'), (u'his', u'he', u'PRP$'), (u'soft', u'soft', u'JJ'), (u'back', u'back', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'pets', 'Oliver', 'nicely', 'on', 'his', 'soft', 'back', '.']}, {'string': ' He wags his tail.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBZ wags) (NP (PRP$ his) (NN tail))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'wags', u'wag', u'VBZ'), (u'his', u'he', u'PRP$'), (u'tail', u'tail', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'wags', 'his', 'tail', '.']}, {'string': " He barks, `` Woof! ''", 'parse': {'tree': "(ROOT (S (NP (PRP He)) (VP (VBZ barks) (, ,) (`` ``) (NP (NNP Woof))) (. !) ('' '')))", 'lemma': [(u'He', u'he', u'PRP'), (u'barks', u'bark', u'VBZ'), (u',', u',', u','), (u'``', u'``', u'``'), (u'Woof', u'Woof', u'NNP'), (u'!', u'!', u'.'), (u"''", u"''", u"''")]}, 'tokens': ['He', 'barks', ',', '``', 'Woof', '!', "''"]}, {'string': ' and shows he wants to play fetch with her.', 'parse': {'tree': '(ROOT (FRAG (CC and) (NP (NP (NNS shows)) (SBAR (S (NP (PRP he)) (VP (VBZ wants) (S (VP (TO to) (VP (VB play) (VP (VB fetch) (PP (IN with) (NP (PRP her)))))))))) (. .))))', 'lemma': [(u'and', u'and', u'CC'), (u'shows', u'show', u'NNS'), (u'he', u'he', u'PRP'), (u'wants', u'want', u'VBZ'), (u'to', u'to', u'TO'), (u'play', u'play', u'VB'), (u'fetch', u'fetch', u'VB'), (u'with', u'with', u'IN'), (u'her', u'she', u'PRP'), (u'.', u'.', u'.')]}, 'tokens': ['and', 'shows', 'he', 'wants', 'to', 'play', 'fetch', 'with', 'her', '.']}, {'string': ' Lucy giggles and throws a ball for him to catch.', 'parse': {'tree': '(ROOT (S (NP (NNP Lucy)) (VP (VBZ giggles) (CC and) (VBZ throws) (NP (NP (DT a) (NN ball)) (PP (IN for) (NP (PRP him))) (S (VP (TO to) (VP (VB catch)))))) (. .)))', 'lemma': [(u'Lucy', u'Lucy', u'NNP'), (u'giggles', u'giggle', u'VBZ'), (u'and', u'and', u'CC'), (u'throws', u'throw', u'VBZ'), (u'a', u'a', u'DT'), (u'ball', u'ball', u'NN'), (u'for', u'for', u'IN'), (u'him', u'he', u'PRP'), (u'to', u'to', u'TO'), (u'catch', u'catch', u'VB'), (u'.', u'.', u'.')]}, 'tokens': ['Lucy', 'giggles', 'and', 'throws', 'a', 'ball', 'for', 'him', 'to', 'catch', '.']}, {'string': ' She wishes her bird could play like this with her every day!', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBZ wishes) (SBAR (S (NP (PRP$ her) (NN bird)) (VP (MD could) (VP (VB play) (PP (IN like) (NP (NP (DT this)) (PP (IN with) (NP (PRP her))))) (NP (DT every) (NN day))))))) (. !)))', 'lemma': [(u'She', u'she', u'PRP'), (u'wishes', u'wish', u'VBZ'), (u'her', u'she', u'PRP$'), (u'bird', u'bird', u'NN'), (u'could', u'could', u'MD'), (u'play', u'play', u'VB'), (u'like', u'like', u'IN'), (u'this', u'this', u'DT'), (u'with', u'with', u'IN'), (u'her', u'she', u'PRP'), (u'every', u'every', u'DT'), (u'day', u'day', u'NN'), (u'!', u'!', u'.')]}, 'tokens': ['She', 'wishes', 'her', 'bird', 'could', 'play', 'like', 'this', 'with', 'her', 'every', 'day', '!']}], 'questions': [{'question': {'string': ' What is the name of the pet bird?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (DT the) (NN name)) (PP (IN of) (NP (DT the) (JJ pet) (NN bird))))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'is', u'be', u'VBZ'), (u'the', u'the', u'DT'), (u'name', u'name', u'NN'), (u'of', u'of', u'IN'), (u'the', u'the', u'DT'), (u'pet', u'pet', u'JJ'), (u'bird', u'bird', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'is', 'the', 'name', 'of', 'the', 'pet', 'bird', '?']}, 'answers': [{'string': ' Andy', 'parse': {'tree': '(ROOT (NP (NNP Andy)))', 'lemma': [(u'Andy', u'Andy', u'NNP')]}, 'tokens': ['Andy']}, {'string': ' Oliver', 'parse': {'tree': '(ROOT (NP (NNP Oliver)))', 'lemma': [(u'Oliver', u'Oliver', u'NNP')]}, 'tokens': ['Oliver']}, {'string': ' Martha', 'parse': {'tree': '(ROOT (NP (NNP Martha)))', 'lemma': [(u'Martha', u'Martha', u'NNP')]}, 'tokens': ['Martha']}, {'string': ' Lucy', 'parse': {'tree': '(ROOT (NP (NNP Lucy)))', 'lemma': [(u'Lucy', u'Lucy', u'NNP')]}, 'tokens': ['Lucy']}], 'mode': 1}, {'question': {'string': " Why ca n't Andy play fetch with Lucy?", 'parse': {'tree': "(ROOT (SBARQ (WHADVP (WRB Why)) (SQ (MD ca) (RB n't) (NP (NNP Andy) (NN play)) (VP (VB fetch) (PP (IN with) (NP (NNP Lucy))))) (. ?)))", 'lemma': [(u'Why', u'why', u'WRB'), (u'ca', u'can', u'MD'), (u"n't", u'not', u'RB'), (u'Andy', u'Andy', u'NNP'), (u'play', u'play', u'NN'), (u'fetch', u'fetch', u'VB'), (u'with', u'with', u'IN'), (u'Lucy', u'Lucy', u'NNP'), (u'?', u'?', u'.')]}, 'tokens': ['Why', 'ca', "n't", 'Andy', 'play', 'fetch', 'with', 'Lucy', '?']}, 'answers': [{'string': " birds ca n't play fetch", 'parse': {'tree': "(ROOT (S (NP (NNS birds)) (VP (MD ca) (RB n't) (VP (VB play) (VP (VB fetch))))))", 'lemma': [(u'birds', u'bird', u'NNS'), (u'ca', u'can', u'MD'), (u"n't", u'not', u'RB'), (u'play', u'play', u'VB'), (u'fetch', u'fetch', u'VB')]}, 'tokens': ['birds', 'ca', "n't", 'play', 'fetch']}, {'string': " Lucy 's mom wo n't let her", 'parse': {'tree': "(ROOT (S (NP (NP (NNP Lucy) (POS 's)) (NN mom)) (VP (MD wo) (RB n't) (VP (VB let) (NP (PRP her))))))", 'lemma': [(u'Lucy', u'Lucy', u'NNP'), (u"'s", u"'s", u'POS'), (u'mom', u'mom', u'NN'), (u'wo', u'will', u'MD'), (u"n't", u'not', u'RB'), (u'let', u'let', u'VB'), (u'her', u'she', u'PRP')]}, 'tokens': ['Lucy', "'s", 'mom', 'wo', "n't", 'let', 'her']}, {'string': " he does n't want to", 'parse': {'tree': "(ROOT (S (NP (PRP he)) (VP (VBZ does) (RB n't) (VP (VB want) (PP (TO to))))))", 'lemma': [(u'he', u'he', u'PRP'), (u'does', u'do', u'VBZ'), (u"n't", u'not', u'RB'), (u'want', u'want', u'VB'), (u'to', u'to', u'TO')]}, 'tokens': ['he', 'does', "n't", 'want', 'to']}, {'string': " he 's not allowed out of his cage", 'parse': {'tree': "(ROOT (S (NP (PRP he)) (VP (VBZ 's) (RB not) (VP (VBN allowed) (PRT (RP out)) (PP (IN of) (NP (PRP$ his) (NN cage)))))))", 'lemma': [(u'he', u'he', u'PRP'), (u"'s", u'be', u'VBZ'), (u'not', u'not', u'RB'), (u'allowed', u'allow', u'VBN'), (u'out', u'out', u'RP'), (u'of', u'of', u'IN'), (u'his', u'he', u'PRP$'), (u'cage', u'cage', u'NN')]}, 'tokens': ['he', "'s", 'not', 'allowed', 'out', 'of', 'his', 'cage']}], 'mode': 0}, {'question': {'string': ' On what day of the week is Martha pet-sitting?', 'parse': {'tree': '(ROOT (SBARQ (WHPP (IN On) (WHNP (WHNP (WP what) (NN day)) (PP (IN of) (NP (DT the) (NN week))))) (SQ (VBZ is) (NP (NNP Martha) (NN pet-sitting))) (. ?)))', 'lemma': [(u'On', u'on', u'IN'), (u'what', u'what', u'WP'), (u'day', u'day', u'NN'), (u'of', u'of', u'IN'), (u'the', u'the', u'DT'), (u'week', u'week', u'NN'), (u'is', u'be', u'VBZ'), (u'Martha', u'Martha', u'NNP'), (u'pet-sitting', u'pet-sitting', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['On', 'what', 'day', 'of', 'the', 'week', 'is', 'Martha', 'pet-sitting', '?']}, 'answers': [{'string': ' Monday', 'parse': {'tree': '(ROOT (NP (NNP Monday)))', 'lemma': [(u'Monday', u'Monday', u'NNP')]}, 'tokens': ['Monday']}, {'string': ' Sunday', 'parse': {'tree': '(ROOT (NP (NNP Sunday)))', 'lemma': [(u'Sunday', u'Sunday', u'NNP')]}, 'tokens': ['Sunday']}, {'string': ' Saturday', 'parse': {'tree': '(ROOT (NP (NNP Saturday)))', 'lemma': [(u'Saturday', u'Saturday', u'NNP')]}, 'tokens': ['Saturday']}, {'string': ' Friday', 'parse': {'tree': '(ROOT (NP (NNP Friday)))', 'lemma': [(u'Friday', u'Friday', u'NNP')]}, 'tokens': ['Friday']}], 'mode': 0}, {'question': {'string': " What is Martha 's favorite color?", 'parse': {'tree': "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (NNP Martha) (POS 's)) (JJ favorite) (NN color))) (. ?)))", 'lemma': [(u'What', u'what', u'WP'), (u'is', u'be', u'VBZ'), (u'Martha', u'Martha', u'NNP'), (u"'s", u"'s", u'POS'), (u'favorite', u'favorite', u'JJ'), (u'color', u'color', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'is', 'Martha', "'s", 'favorite', 'color', '?']}, 'answers': [{'string': ' purple', 'parse': {'tree': '(ROOT (INTJ (UH purple)))', 'lemma': [(u'purple', u'purple', u'UH')]}, 'tokens': ['purple']}, {'string': ' yellow', 'parse': {'tree': '(ROOT (ADJP (JJ yellow)))', 'lemma': [(u'yellow', u'yellow', u'JJ')]}, 'tokens': ['yellow']}, {'string': ' brown', 'parse': {'tree': '(ROOT (INTJ (UH brown)))', 'lemma': [(u'brown', u'brown', u'UH')]}, 'tokens': ['brown']}, {'string': ' silver', 'parse': {'tree': '(ROOT (NP (NN silver)))', 'lemma': [(u'silver', u'silver', u'NN')]}, 'tokens': ['silver']}], 'mode': 1}]}