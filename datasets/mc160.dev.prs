{'sentences': [{'string': " It was Jessie Bear 's birthday.", 'parse': {'tree': "(ROOT (S (NP (PRP It)) (VP (VBD was) (NP (NP (NNP Jessie) (NNP Bear) (POS 's)) (NN birthday))) (. .)))", 'lemma': [(u'It', u'it', u'PRP'), (u'was', u'be', u'VBD'), (u'Jessie', u'Jessie', u'NNP'), (u'Bear', u'Bear', u'NNP'), (u"'s", u"'s", u'POS'), (u'birthday', u'birthday', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['It', 'was', 'Jessie', 'Bear', "'s", 'birthday', '.']}, {'string': ' She was having a party.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBD was) (VP (VBG having) (NP (DT a) (NN party)))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'was', u'be', u'VBD'), (u'having', u'have', u'VBG'), (u'a', u'a', u'DT'), (u'party', u'party', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'was', 'having', 'a', 'party', '.']}, {'string': ' She asked her two best friends to come to the party.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBD asked) (NP (NP (PRP$ her) (CD two) (JJS best) (NNS friends)) (SBAR (S (VP (TO to) (VP (VB come) (PP (TO to) (NP (DT the) (NN party))))))))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'asked', u'ask', u'VBD'), (u'her', u'she', u'PRP$'), (u'two', u'two', u'CD'), (u'best', u'best', u'JJS'), (u'friends', u'friend', u'NNS'), (u'to', u'to', u'TO'), (u'come', u'come', u'VB'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'party', u'party', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'asked', 'her', 'two', 'best', 'friends', 'to', 'come', 'to', 'the', 'party', '.']}, {'string': ' She made a big cake, and hung up some balloons.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VP (VBD made) (NP (DT a) (JJ big) (NN cake))) (, ,) (CC and) (VP (VBD hung) (PRT (RP up)) (NP (DT some) (NNS balloons)))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'made', u'make', u'VBD'), (u'a', u'a', u'DT'), (u'big', u'big', u'JJ'), (u'cake', u'cake', u'NN'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'hung', u'hang', u'VBD'), (u'up', u'up', u'RP'), (u'some', u'some', u'DT'), (u'balloons', u'balloon', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'made', 'a', 'big', 'cake', ',', 'and', 'hung', 'up', 'some', 'balloons', '.']}, {'string': ' Soon her friend Lion came over.', 'parse': {'tree': '(ROOT (S (ADVP (RB Soon)) (NP (PRP$ her) (NN friend) (NNP Lion)) (VP (VBD came) (PRT (RP over))) (. .)))', 'lemma': [(u'Soon', u'soon', u'RB'), (u'her', u'she', u'PRP$'), (u'friend', u'friend', u'NN'), (u'Lion', u'Lion', u'NNP'), (u'came', u'come', u'VBD'), (u'over', u'over', u'RP'), (u'.', u'.', u'.')]}, 'tokens': ['Soon', 'her', 'friend', 'Lion', 'came', 'over', '.']}, {'string': ' Then her friend Tiger came over.', 'parse': {'tree': '(ROOT (S (RB Then) (NP (PRP$ her) (NN friend) (NNP Tiger)) (VP (VBD came) (PRT (RP over))) (. .)))', 'lemma': [(u'Then', u'then', u'RB'), (u'her', u'she', u'PRP$'), (u'friend', u'friend', u'NN'), (u'Tiger', u'Tiger', u'NNP'), (u'came', u'come', u'VBD'), (u'over', u'over', u'RP'), (u'.', u'.', u'.')]}, 'tokens': ['Then', 'her', 'friend', 'Tiger', 'came', 'over', '.']}, {'string': ' Lion and Tiger brought presents with them.', 'parse': {'tree': '(ROOT (S (NP (NNP Lion) (CC and) (NNP Tiger)) (VP (VBD brought) (NP (NNS presents)) (PP (IN with) (NP (PRP them)))) (. .)))', 'lemma': [(u'Lion', u'Lion', u'NNP'), (u'and', u'and', u'CC'), (u'Tiger', u'Tiger', u'NNP'), (u'brought', u'bring', u'VBD'), (u'presents', u'present', u'NNS'), (u'with', u'with', u'IN'), (u'them', u'they', u'PRP'), (u'.', u'.', u'.')]}, 'tokens': ['Lion', 'and', 'Tiger', 'brought', 'presents', 'with', 'them', '.']}, {'string': ' Jessie hugged her friends.', 'parse': {'tree': '(ROOT (S (NP (NNP Jessie)) (VP (VBD hugged) (NP (PRP$ her) (NNS friends))) (. .)))', 'lemma': [(u'Jessie', u'Jessie', u'NNP'), (u'hugged', u'hug', u'VBD'), (u'her', u'she', u'PRP$'), (u'friends', u'friend', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['Jessie', 'hugged', 'her', 'friends', '.']}, {'string': ' She asked them if they would like to have cake.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBD asked) (NP (PRP them)) (SBAR (IN if) (S (NP (PRP they)) (VP (MD would) (VP (VB like) (S (VP (TO to) (VP (VB have) (NP (NN cake)))))))))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'asked', u'ask', u'VBD'), (u'them', u'they', u'PRP'), (u'if', u'if', u'IN'), (u'they', u'they', u'PRP'), (u'would', u'would', u'MD'), (u'like', u'like', u'VB'), (u'to', u'to', u'TO'), (u'have', u'have', u'VB'), (u'cake', u'cake', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'asked', 'them', 'if', 'they', 'would', 'like', 'to', 'have', 'cake', '.']}, {'string': ' Yes!', 'parse': {'tree': '(ROOT (INTJ (UH Yes) (. !)))', 'lemma': [(u'Yes', u'yes', u'UH'), (u'!', u'!', u'.')]}, 'tokens': ['Yes', '!']}, {'string': ' said Lion.', 'parse': {'tree': '(ROOT (S (VP (VBD said) (NP (NNP Lion))) (. .)))', 'lemma': [(u'said', u'say', u'VBD'), (u'Lion', u'Lion', u'NNP'), (u'.', u'.', u'.')]}, 'tokens': ['said', 'Lion', '.']}, {'string': ' Yes yes!', 'parse': {'tree': '(ROOT (FRAG (ADVP (RB Yes)) (NP (RB yes)) (. !)))', 'lemma': [(u'Yes', u'yes', u'RB'), (u'yes', u'yes', u'RB'), (u'!', u'!', u'.')]}, 'tokens': ['Yes', 'yes', '!']}, {'string': ' said Tiger.', 'parse': {'tree': '(ROOT (S (VP (VBD said) (NP (NNP Tiger))) (. .)))', 'lemma': [(u'said', u'say', u'VBD'), (u'Tiger', u'Tiger', u'NNP'), (u'.', u'.', u'.')]}, 'tokens': ['said', 'Tiger', '.']}, {'string': ' Jessie cut the cake, and they all ate it together.', 'parse': {'tree': '(ROOT (S (S (NP (NNP Jessie)) (VP (VBD cut) (NP (DT the) (NN cake)))) (, ,) (CC and) (S (NP (PRP they)) (ADVP (DT all)) (VP (VBD ate) (NP (PRP it)) (ADVP (RB together)))) (. .)))', 'lemma': [(u'Jessie', u'Jessie', u'NNP'), (u'cut', u'cut', u'VBD'), (u'the', u'the', u'DT'), (u'cake', u'cake', u'NN'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'they', u'they', u'PRP'), (u'all', u'all', u'DT'), (u'ate', u'eat', u'VBD'), (u'it', u'it', u'PRP'), (u'together', u'together', u'RB'), (u'.', u'.', u'.')]}, 'tokens': ['Jessie', 'cut', 'the', 'cake', ',', 'and', 'they', 'all', 'ate', 'it', 'together', '.']}, {'string': ' Then Jessie opened her presents.', 'parse': {'tree': '(ROOT (S (RB Then) (NP (NNP Jessie)) (VP (VBD opened) (SBAR (S (NP (PRP her)) (VP (VBZ presents))))) (. .)))', 'lemma': [(u'Then', u'then', u'RB'), (u'Jessie', u'Jessie', u'NNP'), (u'opened', u'open', u'VBD'), (u'her', u'she', u'PRP'), (u'presents', u'present', u'VBZ'), (u'.', u'.', u'.')]}, 'tokens': ['Then', 'Jessie', 'opened', 'her', 'presents', '.']}, {'string': ' She got a new jump rope and a fun game.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBD got) (NP (NP (DT a) (JJ new) (NN jump) (NN rope)) (CC and) (NP (DT a) (NN fun) (NN game)))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'got', u'get', u'VBD'), (u'a', u'a', u'DT'), (u'new', u'new', u'JJ'), (u'jump', u'jump', u'NN'), (u'rope', u'rope', u'NN'), (u'and', u'and', u'CC'), (u'a', u'a', u'DT'), (u'fun', u'fun', u'NN'), (u'game', u'game', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'got', 'a', 'new', 'jump', 'rope', 'and', 'a', 'fun', 'game', '.']}, {'string': ' She asked Lion and Tiger to play the game with her.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBD asked) (S (NP (NNP Lion) (CC and) (NNP Tiger)) (VP (TO to) (VP (VB play) (NP (DT the) (NN game)) (PP (IN with) (NP (PRP her))))))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'asked', u'ask', u'VBD'), (u'Lion', u'Lion', u'NNP'), (u'and', u'and', u'CC'), (u'Tiger', u'Tiger', u'NNP'), (u'to', u'to', u'TO'), (u'play', u'play', u'VB'), (u'the', u'the', u'DT'), (u'game', u'game', u'NN'), (u'with', u'with', u'IN'), (u'her', u'she', u'PRP'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'asked', 'Lion', 'and', 'Tiger', 'to', 'play', 'the', 'game', 'with', 'her', '.']}, {'string': ' The friends played and played.', 'parse': {'tree': '(ROOT (S (NP (DT The) (NNS friends)) (VP (VP (VBD played)) (CC and) (VP (VBD played))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'friends', u'friend', u'NNS'), (u'played', u'play', u'VBD'), (u'and', u'and', u'CC'), (u'played', u'play', u'VBD'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'friends', 'played', 'and', 'played', '.']}, {'string': ' They all had a good time.', 'parse': {'tree': '(ROOT (S (NP (PRP They)) (ADVP (DT all)) (VP (VBD had) (NP (DT a) (JJ good) (NN time))) (. .)))', 'lemma': [(u'They', u'they', u'PRP'), (u'all', u'all', u'DT'), (u'had', u'have', u'VBD'), (u'a', u'a', u'DT'), (u'good', u'good', u'JJ'), (u'time', u'time', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['They', 'all', 'had', 'a', 'good', 'time', '.']}, {'string': ' Soon it was time for the party to be over.', 'parse': {'tree': '(ROOT (S (ADVP (RB Soon)) (NP (PRP it)) (VP (VBD was) (NP (NP (NN time)) (PP (IN for) (NP (DT the) (NN party) (S (VP (TO to) (VP (VB be) (ADJP (RP over))))))))) (. .)))', 'lemma': [(u'Soon', u'soon', u'RB'), (u'it', u'it', u'PRP'), (u'was', u'be', u'VBD'), (u'time', u'time', u'NN'), (u'for', u'for', u'IN'), (u'the', u'the', u'DT'), (u'party', u'party', u'NN'), (u'to', u'to', u'TO'), (u'be', u'be', u'VB'), (u'over', u'over', u'RP'), (u'.', u'.', u'.')]}, 'tokens': ['Soon', 'it', 'was', 'time', 'for', 'the', 'party', 'to', 'be', 'over', '.']}, {'string': ' Lion and Tiger hugged Jessie and said goodbye to her.', 'parse': {'tree': '(ROOT (S (NP (NNP Lion) (CC and) (NNP Tiger)) (VP (VP (VBD hugged) (NP (NNP Jessie))) (CC and) (VP (VBD said) (NP (NN goodbye)) (PP (TO to) (NP (PRP her))))) (. .)))', 'lemma': [(u'Lion', u'Lion', u'NNP'), (u'and', u'and', u'CC'), (u'Tiger', u'Tiger', u'NNP'), (u'hugged', u'hug', u'VBD'), (u'Jessie', u'Jessie', u'NNP'), (u'and', u'and', u'CC'), (u'said', u'say', u'VBD'), (u'goodbye', u'goodbye', u'NN'), (u'to', u'to', u'TO'), (u'her', u'she', u'PRP'), (u'.', u'.', u'.')]}, 'tokens': ['Lion', 'and', 'Tiger', 'hugged', 'Jessie', 'and', 'said', 'goodbye', 'to', 'her', '.']}, {'string': ' Thanks for a great birthday!', 'parse': {'tree': '(ROOT (NP (NP (NNS Thanks)) (PP (IN for) (NP (DT a) (JJ great) (NN birthday))) (. !)))', 'lemma': [(u'Thanks', u'thanks', u'NNS'), (u'for', u'for', u'IN'), (u'a', u'a', u'DT'), (u'great', u'great', u'JJ'), (u'birthday', u'birthday', u'NN'), (u'!', u'!', u'.')]}, 'tokens': ['Thanks', 'for', 'a', 'great', 'birthday', '!']}, {'string': ' Jessie Bear told her two best friends.', 'parse': {'tree': '(ROOT (S (NP (NNP Jessie) (NNP Bear)) (VP (VBD told) (NP (PRP$ her) (ADJP (NP (CD two)) (RB best)) (NNS friends))) (. .)))', 'lemma': [(u'Jessie', u'Jessie', u'NNP'), (u'Bear', u'Bear', u'NNP'), (u'told', u'tell', u'VBD'), (u'her', u'she', u'PRP$'), (u'two', u'two', u'CD'), (u'best', u'best', u'RB'), (u'friends', u'friend', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['Jessie', 'Bear', 'told', 'her', 'two', 'best', 'friends', '.']}], 'questions': [{'question': {'string': ' Who was having a birthday?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP Who)) (SQ (VBD was) (VP (VBG having) (NP (DT a) (NN birthday)))) (. ?)))', 'lemma': [(u'Who', u'who', u'WP'), (u'was', u'be', u'VBD'), (u'having', u'have', u'VBG'), (u'a', u'a', u'DT'), (u'birthday', u'birthday', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['Who', 'was', 'having', 'a', 'birthday', '?']}, 'answers': [{'string': ' Jessie Bear', 'parse': {'tree': '(ROOT (NP (NNP Jessie) (NNP Bear)))', 'lemma': [(u'Jessie', u'Jessie', u'NNP'), (u'Bear', u'Bear', u'NNP')]}, 'tokens': ['Jessie', 'Bear']}, {'string': ' no one', 'parse': {'tree': '(ROOT (FRAG (NP (RB no) (CD one))))', 'lemma': [(u'no', u'no', u'RB'), (u'one', u'one', u'CD')]}, 'tokens': ['no', 'one']}, {'string': ' Lion', 'parse': {'tree': '(ROOT (NP (NNP Lion)))', 'lemma': [(u'Lion', u'Lion', u'NNP')]}, 'tokens': ['Lion']}, {'string': ' Tiger', 'parse': {'tree': '(ROOT (NP (NNP Tiger)))', 'lemma': [(u'Tiger', u'Tiger', u'NNP')]}, 'tokens': ['Tiger']}], 'mode': 1}, {'question': {'string': " Who did n't come to the party?", 'parse': {'tree': "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VP (VBD did) (RB n't) (VP (VB come) (PP (TO to) (NP (DT the) (NN party)))))) (. ?)))", 'lemma': [(u'Who', u'who', u'WP'), (u'did', u'do', u'VBD'), (u"n't", u'not', u'RB'), (u'come', u'come', u'VB'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'party', u'party', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['Who', 'did', "n't", 'come', 'to', 'the', 'party', '?']}, 'answers': [{'string': ' Lion', 'parse': {'tree': '(ROOT (NP (NNP Lion)))', 'lemma': [(u'Lion', u'Lion', u'NNP')]}, 'tokens': ['Lion']}, {'string': ' Tiger', 'parse': {'tree': '(ROOT (NP (NNP Tiger)))', 'lemma': [(u'Tiger', u'Tiger', u'NNP')]}, 'tokens': ['Tiger']}, {'string': ' Snake', 'parse': {'tree': '(ROOT (NP (NNP Snake)))', 'lemma': [(u'Snake', u'Snake', u'NNP')]}, 'tokens': ['Snake']}, {'string': ' Jessie Bear', 'parse': {'tree': '(ROOT (NP (NNP Jessie) (NNP Bear)))', 'lemma': [(u'Jessie', u'Jessie', u'NNP'), (u'Bear', u'Bear', u'NNP')]}, 'tokens': ['Jessie', 'Bear']}], 'mode': 0}, {'question': {'string': ' How did Jessie get ready for the party?', 'parse': {'tree': '(ROOT (SBARQ (WHADVP (WRB How)) (SQ (VBD did) (NP (NNP Jessie)) (VP (VB get) (ADJP (JJ ready)) (PP (IN for) (NP (DT the) (NN party))))) (. ?)))', 'lemma': [(u'How', u'how', u'WRB'), (u'did', u'do', u'VBD'), (u'Jessie', u'Jessie', u'NNP'), (u'get', u'get', u'VB'), (u'ready', u'ready', u'JJ'), (u'for', u'for', u'IN'), (u'the', u'the', u'DT'), (u'party', u'party', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['How', 'did', 'Jessie', 'get', 'ready', 'for', 'the', 'party', '?']}, 'answers': [{'string': ' made cake and juice.', 'parse': {'tree': '(ROOT (S (VP (VP (VBN made) (NP (NN cake))) (CC and) (VP (NN juice))) (. .)))', 'lemma': [(u'made', u'make', u'VBN'), (u'cake', u'cake', u'NN'), (u'and', u'and', u'CC'), (u'juice', u'juice', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['made', 'cake', 'and', 'juice', '.']}, {'string': ' made cake and hung balloons.', 'parse': {'tree': '(ROOT (S (VP (VBN made) (NP (NP (NN cake)) (CC and) (NP (VBN hung) (NNS balloons)))) (. .)))', 'lemma': [(u'made', u'make', u'VBN'), (u'cake', u'cake', u'NN'), (u'and', u'and', u'CC'), (u'hung', u'hang', u'VBN'), (u'balloons', u'balloon', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['made', 'cake', 'and', 'hung', 'balloons', '.']}, {'string': ' made juice and cookies.', 'parse': {'tree': '(ROOT (S (VP (VBN made) (NP (NN juice) (CC and) (NNS cookies))) (. .)))', 'lemma': [(u'made', u'make', u'VBN'), (u'juice', u'juice', u'NN'), (u'and', u'and', u'CC'), (u'cookies', u'cookie', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['made', 'juice', 'and', 'cookies', '.']}, {'string': ' made juice and hung balloons.', 'parse': {'tree': '(ROOT (S (VP (VBN made) (NP (NP (NN juice)) (CC and) (NP (VBN hung) (NNS balloons)))) (. .)))', 'lemma': [(u'made', u'make', u'VBN'), (u'juice', u'juice', u'NN'), (u'and', u'and', u'CC'), (u'hung', u'hang', u'VBN'), (u'balloons', u'balloon', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['made', 'juice', 'and', 'hung', 'balloons', '.']}], 'mode': 0}, {'question': {'string': " How many friends came to Jessie 's party?", 'parse': {'tree': "(ROOT (SBARQ (WHNP (WHADJP (WRB How) (JJ many)) (NNS friends)) (SQ (VP (VBD came) (PP (TO to) (NP (NP (NNP Jessie) (POS 's)) (NN party))))) (. ?)))", 'lemma': [(u'How', u'how', u'WRB'), (u'many', u'many', u'JJ'), (u'friends', u'friend', u'NNS'), (u'came', u'come', u'VBD'), (u'to', u'to', u'TO'), (u'Jessie', u'Jessie', u'NNP'), (u"'s", u"'s", u'POS'), (u'party', u'party', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['How', 'many', 'friends', 'came', 'to', 'Jessie', "'s", 'party', '?']}, 'answers': [{'string': ' one', 'parse': {'tree': '(ROOT (NP (NN one)))', 'lemma': [(u'one', u'one', u'NN')]}, 'tokens': ['one']}, {'string': ' two', 'parse': {'tree': '(ROOT (FRAG (NP (CD two))))', 'lemma': [(u'two', u'two', u'CD')]}, 'tokens': ['two']}, {'string': ' six', 'parse': {'tree': '(ROOT (FRAG (NP (CD six))))', 'lemma': [(u'six', u'six', u'CD')]}, 'tokens': ['six']}, {'string': ' four', 'parse': {'tree': '(ROOT (FRAG (NP (CD four))))', 'lemma': [(u'four', u'four', u'CD')]}, 'tokens': ['four']}], 'mode': 1}]}
{'sentences': [{'string': ' Sally had a very exciting summer vacation.', 'parse': {'tree': '(ROOT (S (NP (NNP Sally)) (VP (VBD had) (NP (DT a) (ADJP (RB very) (JJ exciting)) (NN summer) (NN vacation))) (. .)))', 'lemma': [(u'Sally', u'Sally', u'NNP'), (u'had', u'have', u'VBD'), (u'a', u'a', u'DT'), (u'very', u'very', u'RB'), (u'exciting', u'exciting', u'JJ'), (u'summer', u'summer', u'NN'), (u'vacation', u'vacation', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Sally', 'had', 'a', 'very', 'exciting', 'summer', 'vacation', '.']}, {'string': ' She went to summer camp for the first time.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBD went) (PP (TO to) (NP (NN summer) (NN camp))) (PP (IN for) (NP (DT the) (JJ first) (NN time)))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'went', u'go', u'VBD'), (u'to', u'to', u'TO'), (u'summer', u'summer', u'NN'), (u'camp', u'camp', u'NN'), (u'for', u'for', u'IN'), (u'the', u'the', u'DT'), (u'first', u'first', u'JJ'), (u'time', u'time', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'went', 'to', 'summer', 'camp', 'for', 'the', 'first', 'time', '.']}, {'string': ' She made friends with a girl named Tina.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBD made) (NP (NNS friends)) (PP (IN with) (NP (NP (DT a) (NN girl)) (VP (VBN named) (NP (NNP Tina)))))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'made', u'make', u'VBD'), (u'friends', u'friend', u'NNS'), (u'with', u'with', u'IN'), (u'a', u'a', u'DT'), (u'girl', u'girl', u'NN'), (u'named', u'name', u'VBN'), (u'Tina', u'Tina', u'NNP'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'made', 'friends', 'with', 'a', 'girl', 'named', 'Tina', '.']}, {'string': ' They shared a bunk bed in their cabin.', 'parse': {'tree': '(ROOT (S (NP (PRP They)) (VP (VBD shared) (NP (DT a) (NN bunk) (NN bed)) (PP (IN in) (NP (PRP$ their) (NN cabin)))) (. .)))', 'lemma': [(u'They', u'they', u'PRP'), (u'shared', u'share', u'VBD'), (u'a', u'a', u'DT'), (u'bunk', u'bunk', u'NN'), (u'bed', u'bed', u'NN'), (u'in', u'in', u'IN'), (u'their', u'they', u'PRP$'), (u'cabin', u'cabin', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['They', 'shared', 'a', 'bunk', 'bed', 'in', 'their', 'cabin', '.']}, {'string': " Sally 's favorite activity was walking in the woods because she enjoyed nature.", 'parse': {'tree': "(ROOT (S (NP (NP (NNP Sally) (POS 's)) (JJ favorite) (NN activity)) (VP (VBD was) (VP (VBG walking) (PP (IN in) (NP (DT the) (NNS woods))) (SBAR (IN because) (S (NP (PRP she)) (VP (VBD enjoyed) (NP (NN nature))))))) (. .)))", 'lemma': [(u'Sally', u'Sally', u'NNP'), (u"'s", u"'s", u'POS'), (u'favorite', u'favorite', u'JJ'), (u'activity', u'activity', u'NN'), (u'was', u'be', u'VBD'), (u'walking', u'walk', u'VBG'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'woods', u'wood', u'NNS'), (u'because', u'because', u'IN'), (u'she', u'she', u'PRP'), (u'enjoyed', u'enjoy', u'VBD'), (u'nature', u'nature', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Sally', "'s", 'favorite', 'activity', 'was', 'walking', 'in', 'the', 'woods', 'because', 'she', 'enjoyed', 'nature', '.']}, {'string': ' Tina liked arts and crafts.', 'parse': {'tree': '(ROOT (S (NP (NNP Tina)) (VP (VBD liked) (NP (NNS arts) (CC and) (NNS crafts))) (. .)))', 'lemma': [(u'Tina', u'Tina', u'NNP'), (u'liked', u'like', u'VBD'), (u'arts', u'art', u'NNS'), (u'and', u'and', u'CC'), (u'crafts', u'craft', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['Tina', 'liked', 'arts', 'and', 'crafts', '.']}, {'string': ' Together, they made some art using leaves they found in the woods.', 'parse': {'tree': '(ROOT (S (ADVP (RB Together)) (, ,) (NP (PRP they)) (VP (VBD made) (SBAR (S (NP (NP (DT some) (NN art)) (VP (VBG using))) (VP (VBZ leaves) (SBAR (S (NP (PRP they)) (VP (VBD found) (PP (IN in) (NP (DT the) (NNS woods)))))))))) (. .)))', 'lemma': [(u'Together', u'together', u'RB'), (u',', u',', u','), (u'they', u'they', u'PRP'), (u'made', u'make', u'VBD'), (u'some', u'some', u'DT'), (u'art', u'art', u'NN'), (u'using', u'use', u'VBG'), (u'leaves', u'leave', u'VBZ'), (u'they', u'they', u'PRP'), (u'found', u'find', u'VBD'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'woods', u'wood', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['Together', ',', 'they', 'made', 'some', 'art', 'using', 'leaves', 'they', 'found', 'in', 'the', 'woods', '.']}, {'string': ' Even after she fell in the water, Sally still enjoyed canoeing.', 'parse': {'tree': '(ROOT (S (SBAR (RB Even) (IN after) (S (NP (PRP she)) (VP (VBD fell) (PP (IN in) (NP (DT the) (NN water)))))) (, ,) (NP (NNP Sally)) (ADVP (RB still)) (VP (VBD enjoyed) (S (VP (VBG canoeing)))) (. .)))', 'lemma': [(u'Even', u'even', u'RB'), (u'after', u'after', u'IN'), (u'she', u'she', u'PRP'), (u'fell', u'fall', u'VBD'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'water', u'water', u'NN'), (u',', u',', u','), (u'Sally', u'Sally', u'NNP'), (u'still', u'still', u'RB'), (u'enjoyed', u'enjoy', u'VBD'), (u'canoeing', u'canoe', u'VBG'), (u'.', u'.', u'.')]}, 'tokens': ['Even', 'after', 'she', 'fell', 'in', 'the', 'water', ',', 'Sally', 'still', 'enjoyed', 'canoeing', '.']}, {'string': ' She was sad when the camp was over, but promised to keep in touch with her new friend.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBD was) (ADJP (JJ sad)) (SBAR (WHADVP (WRB when)) (S (NP (DT the) (NN camp)) (VP (VP (VBD was) (ADVP (RB over))) (, ,) (CC but) (VP (VBD promised) (S (VP (TO to) (VP (VB keep) (PP (IN in) (NP (NN touch))) (PP (IN with) (NP (PRP$ her) (JJ new) (NN friend))))))))))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'was', u'be', u'VBD'), (u'sad', u'sad', u'JJ'), (u'when', u'when', u'WRB'), (u'the', u'the', u'DT'), (u'camp', u'camp', u'NN'), (u'was', u'be', u'VBD'), (u'over', u'over', u'RB'), (u',', u',', u','), (u'but', u'but', u'CC'), (u'promised', u'promise', u'VBD'), (u'to', u'to', u'TO'), (u'keep', u'keep', u'VB'), (u'in', u'in', u'IN'), (u'touch', u'touch', u'NN'), (u'with', u'with', u'IN'), (u'her', u'she', u'PRP$'), (u'new', u'new', u'JJ'), (u'friend', u'friend', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'was', 'sad', 'when', 'the', 'camp', 'was', 'over', ',', 'but', 'promised', 'to', 'keep', 'in', 'touch', 'with', 'her', 'new', 'friend', '.']}, {'string': ' Sally went to the beach with her family in the summer as well.', 'parse': {'tree': '(ROOT (S (NP (NNP Sally)) (VP (VBD went) (PP (TO to) (NP (DT the) (NN beach))) (PP (IN with) (NP (NP (PRP$ her) (NN family)) (PP (IN in) (NP (DT the) (NN summer))))) (ADVP (RB as) (RB well))) (. .)))', 'lemma': [(u'Sally', u'Sally', u'NNP'), (u'went', u'go', u'VBD'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'beach', u'beach', u'NN'), (u'with', u'with', u'IN'), (u'her', u'she', u'PRP$'), (u'family', u'family', u'NN'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'summer', u'summer', u'NN'), (u'as', u'as', u'RB'), (u'well', u'well', u'RB'), (u'.', u'.', u'.')]}, 'tokens': ['Sally', 'went', 'to', 'the', 'beach', 'with', 'her', 'family', 'in', 'the', 'summer', 'as', 'well', '.']}, {'string': ' She loves the beach.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBZ loves) (NP (DT the) (NN beach))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'loves', u'love', u'VBZ'), (u'the', u'the', u'DT'), (u'beach', u'beach', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'loves', 'the', 'beach', '.']}, {'string': ' Sally collected shells and mailed some to her friend, Tina, so she could make some arts and crafts with them.', 'parse': {'tree': '(ROOT (S (S (NP (NNP Sally)) (VP (VP (VBD collected) (NP (NNS shells))) (CC and) (VP (VBD mailed) (NP (DT some)) (PP (TO to) (NP (NP (PRP$ her) (NN friend)) (, ,) (NP (NNP Tina))))))) (, ,) (IN so) (S (NP (PRP she)) (VP (MD could) (VP (VB make) (NP (NP (DT some) (NNS arts) (CC and) (NNS crafts)) (PP (IN with) (NP (PRP them))))))) (. .)))', 'lemma': [(u'Sally', u'Sally', u'NNP'), (u'collected', u'collect', u'VBD'), (u'shells', u'shell', u'NNS'), (u'and', u'and', u'CC'), (u'mailed', u'mail', u'VBD'), (u'some', u'some', u'DT'), (u'to', u'to', u'TO'), (u'her', u'she', u'PRP$'), (u'friend', u'friend', u'NN'), (u',', u',', u','), (u'Tina', u'Tina', u'NNP'), (u',', u',', u','), (u'so', u'so', u'IN'), (u'she', u'she', u'PRP'), (u'could', u'could', u'MD'), (u'make', u'make', u'VB'), (u'some', u'some', u'DT'), (u'arts', u'art', u'NNS'), (u'and', u'and', u'CC'), (u'crafts', u'craft', u'NNS'), (u'with', u'with', u'IN'), (u'them', u'they', u'PRP'), (u'.', u'.', u'.')]}, 'tokens': ['Sally', 'collected', 'shells', 'and', 'mailed', 'some', 'to', 'her', 'friend', ',', 'Tina', ',', 'so', 'she', 'could', 'make', 'some', 'arts', 'and', 'crafts', 'with', 'them', '.']}, {'string': ' Sally liked fishing with her brothers, cooking on the grill with her dad, and swimming in the ocean with her mother.', 'parse': {'tree': '(ROOT (S (NP (NNP Sally)) (VP (VBD liked) (S (VP (VP (VBG fishing) (PP (IN with) (NP (PRP$ her) (NNS brothers)))) (, ,) (VP (VBG cooking) (PP (IN on) (NP (NP (DT the) (NN grill)) (PP (IN with) (NP (PRP$ her) (NN dad)))))) (, ,) (CC and) (VP (VBG swimming) (PP (IN in) (NP (NP (DT the) (NN ocean)) (PP (IN with) (NP (PRP$ her) (NN mother))))))))) (. .)))', 'lemma': [(u'Sally', u'Sally', u'NNP'), (u'liked', u'like', u'VBD'), (u'fishing', u'fish', u'VBG'), (u'with', u'with', u'IN'), (u'her', u'she', u'PRP$'), (u'brothers', u'brother', u'NNS'), (u',', u',', u','), (u'cooking', u'cook', u'VBG'), (u'on', u'on', u'IN'), (u'the', u'the', u'DT'), (u'grill', u'grill', u'NN'), (u'with', u'with', u'IN'), (u'her', u'she', u'PRP$'), (u'dad', u'dad', u'NN'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'swimming', u'swim', u'VBG'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'ocean', u'ocean', u'NN'), (u'with', u'with', u'IN'), (u'her', u'she', u'PRP$'), (u'mother', u'mother', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Sally', 'liked', 'fishing', 'with', 'her', 'brothers', ',', 'cooking', 'on', 'the', 'grill', 'with', 'her', 'dad', ',', 'and', 'swimming', 'in', 'the', 'ocean', 'with', 'her', 'mother', '.']}, {'string': ' The summer was fun, but Sally was very excited to go back to school.', 'parse': {'tree': '(ROOT (S (S (NP (DT The) (NN summer)) (VP (VBD was) (NP (NN fun)))) (, ,) (CC but) (S (NP (NNP Sally)) (VP (VBD was) (ADJP (RB very) (JJ excited) (S (VP (TO to) (VP (VB go) (PRT (RP back)) (PP (TO to) (NP (NN school))))))))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'summer', u'summer', u'NN'), (u'was', u'be', u'VBD'), (u'fun', u'fun', u'NN'), (u',', u',', u','), (u'but', u'but', u'CC'), (u'Sally', u'Sally', u'NNP'), (u'was', u'be', u'VBD'), (u'very', u'very', u'RB'), (u'excited', u'excited', u'JJ'), (u'to', u'to', u'TO'), (u'go', u'go', u'VB'), (u'back', u'back', u'RP'), (u'to', u'to', u'TO'), (u'school', u'school', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'summer', 'was', 'fun', ',', 'but', 'Sally', 'was', 'very', 'excited', 'to', 'go', 'back', 'to', 'school', '.']}, {'string': ' She missed her friends and teachers.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBD missed) (NP (PRP$ her) (NNS friends) (CC and) (NNS teachers))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'missed', u'miss', u'VBD'), (u'her', u'she', u'PRP$'), (u'friends', u'friend', u'NNS'), (u'and', u'and', u'CC'), (u'teachers', u'teacher', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'missed', 'her', 'friends', 'and', 'teachers', '.']}, {'string': ' She was excited to tell them about her summer vacation.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBD was) (ADJP (JJ excited) (S (VP (TO to) (VP (VB tell) (NP (PRP them)) (PP (IN about) (NP (PRP$ her) (NN summer) (NN vacation)))))))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'was', u'be', u'VBD'), (u'excited', u'excited', u'JJ'), (u'to', u'to', u'TO'), (u'tell', u'tell', u'VB'), (u'them', u'they', u'PRP'), (u'about', u'about', u'IN'), (u'her', u'she', u'PRP$'), (u'summer', u'summer', u'NN'), (u'vacation', u'vacation', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'was', 'excited', 'to', 'tell', 'them', 'about', 'her', 'summer', 'vacation', '.']}], 'questions': [{'question': {'string': ' Who went to the beach with Sally?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP Who)) (SQ (VP (VBD went) (PP (TO to) (NP (DT the) (NN beach))) (PP (IN with) (NP (NNP Sally))))) (. ?)))', 'lemma': [(u'Who', u'who', u'WP'), (u'went', u'go', u'VBD'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'beach', u'beach', u'NN'), (u'with', u'with', u'IN'), (u'Sally', u'Sally', u'NNP'), (u'?', u'?', u'.')]}, 'tokens': ['Who', 'went', 'to', 'the', 'beach', 'with', 'Sally', '?']}, 'answers': [{'string': ' her sisters', 'parse': {'tree': '(ROOT (S (NP (PRP her)) (VP (VBZ sisters))))', 'lemma': [(u'her', u'she', u'PRP'), (u'sisters', u'sister', u'VBZ')]}, 'tokens': ['her', 'sisters']}, {'string': ' Tina', 'parse': {'tree': '(ROOT (NP (NNP Tina)))', 'lemma': [(u'Tina', u'Tina', u'NNP')]}, 'tokens': ['Tina']}, {'string': ' her brothers, mother, and father', 'parse': {'tree': '(ROOT (FRAG (NP (NP (PRP$ her) (NNS brothers)) (, ,) (NP (NN mother)) (, ,) (CC and) (NP (NN father)))))', 'lemma': [(u'her', u'she', u'PRP$'), (u'brothers', u'brother', u'NNS'), (u',', u',', u','), (u'mother', u'mother', u'NN'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'father', u'father', u'NN')]}, 'tokens': ['her', 'brothers', ',', 'mother', ',', 'and', 'father']}, {'string': ' herself', 'parse': {'tree': '(ROOT (FRAG (NP (PRP herself))))', 'lemma': [(u'herself', u'herself', u'PRP')]}, 'tokens': ['herself']}], 'mode': 0}, {'question': {'string': ' What did Sally promise to do?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD did) (NP (NNP Sally)) (VP (VB promise) (S (VP (TO to) (VP (VB do)))))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'did', u'do', u'VBD'), (u'Sally', u'Sally', u'NNP'), (u'promise', u'promise', u'VB'), (u'to', u'to', u'TO'), (u'do', u'do', u'VB'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'did', 'Sally', 'promise', 'to', 'do', '?']}, 'answers': [{'string': ' Learn to ride a bike.', 'parse': {'tree': '(ROOT (S (NP (NNP Learn)) (VP (TO to) (VP (VB ride) (NP (DT a) (NN bike)))) (. .)))', 'lemma': [(u'Learn', u'Learn', u'NNP'), (u'to', u'to', u'TO'), (u'ride', u'ride', u'VB'), (u'a', u'a', u'DT'), (u'bike', u'bike', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Learn', 'to', 'ride', 'a', 'bike', '.']}, {'string': ' Go to a baseball game.', 'parse': {'tree': '(ROOT (S (VP (VB Go) (PP (TO to) (NP (DT a) (NN baseball) (NN game)))) (. .)))', 'lemma': [(u'Go', u'go', u'VB'), (u'to', u'to', u'TO'), (u'a', u'a', u'DT'), (u'baseball', u'baseball', u'NN'), (u'game', u'game', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Go', 'to', 'a', 'baseball', 'game', '.']}, {'string': ' Go back to the beach.', 'parse': {'tree': '(ROOT (S (VP (VB Go) (PRT (RP back)) (PP (TO to) (NP (DT the) (NN beach)))) (. .)))', 'lemma': [(u'Go', u'go', u'VB'), (u'back', u'back', u'RP'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'beach', u'beach', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Go', 'back', 'to', 'the', 'beach', '.']}, {'string': ' Keep in touch with her new friend, Tina.', 'parse': {'tree': '(ROOT (S (VP (VB Keep) (PP (IN in) (NP (NN touch))) (PP (IN with) (NP (PRP$ her) (JJ new) (NN friend)))) (, ,) (NP (NNP Tina)) (. .)))', 'lemma': [(u'Keep', u'keep', u'VB'), (u'in', u'in', u'IN'), (u'touch', u'touch', u'NN'), (u'with', u'with', u'IN'), (u'her', u'she', u'PRP$'), (u'new', u'new', u'JJ'), (u'friend', u'friend', u'NN'), (u',', u',', u','), (u'Tina', u'Tina', u'NNP'), (u'.', u'.', u'.')]}, 'tokens': ['Keep', 'in', 'touch', 'with', 'her', 'new', 'friend', ',', 'Tina', '.']}], 'mode': 0}, {'question': {'string': ' Why does Sally like walking in the woods?', 'parse': {'tree': '(ROOT (SBARQ (WHADVP (WRB Why)) (SQ (VBZ does) (NP (NNP Sally)) (VP (VB like) (S (VP (VBG walking) (PP (IN in) (NP (DT the) (NNS woods))))))) (. ?)))', 'lemma': [(u'Why', u'why', u'WRB'), (u'does', u'do', u'VBZ'), (u'Sally', u'Sally', u'NNP'), (u'like', u'like', u'VB'), (u'walking', u'walk', u'VBG'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'woods', u'wood', u'NNS'), (u'?', u'?', u'.')]}, 'tokens': ['Why', 'does', 'Sally', 'like', 'walking', 'in', 'the', 'woods', '?']}, 'answers': [{'string': ' She likes to climb trees.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBZ likes) (S (VP (TO to) (VP (VB climb) (NP (NNS trees)))))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'likes', u'like', u'VBZ'), (u'to', u'to', u'TO'), (u'climb', u'climb', u'VB'), (u'trees', u'tree', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'likes', 'to', 'climb', 'trees', '.']}, {'string': ' She likes to play hide and go seek.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBZ likes) (S (VP (TO to) (VP (VB play) (VP (VP (VB hide)) (CC and) (VP (VB go) (VP (VB seek)))))))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'likes', u'like', u'VBZ'), (u'to', u'to', u'TO'), (u'play', u'play', u'VB'), (u'hide', u'hide', u'VB'), (u'and', u'and', u'CC'), (u'go', u'go', u'VB'), (u'seek', u'seek', u'VB'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'likes', 'to', 'play', 'hide', 'and', 'go', 'seek', '.']}, {'string': ' She likes to swim.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBZ likes) (S (VP (TO to) (VP (VB swim))))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'likes', u'like', u'VBZ'), (u'to', u'to', u'TO'), (u'swim', u'swim', u'VB'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'likes', 'to', 'swim', '.']}, {'string': ' She likes nature.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBZ likes) (NP (NN nature))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'likes', u'like', u'VBZ'), (u'nature', u'nature', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'likes', 'nature', '.']}], 'mode': 1}, {'question': {'string': ' What did Sally do this summer?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD did) (NP (NNP Sally)) (VP (VB do) (NP (DT this) (NN summer)))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'did', u'do', u'VBD'), (u'Sally', u'Sally', u'NNP'), (u'do', u'do', u'VB'), (u'this', u'this', u'DT'), (u'summer', u'summer', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'did', 'Sally', 'do', 'this', 'summer', '?']}, 'answers': [{'string': ' She went to summer camp and the beach.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBD went) (PP (TO to) (NP (NP (NN summer) (NN camp)) (CC and) (NP (DT the) (NN beach))))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'went', u'go', u'VBD'), (u'to', u'to', u'TO'), (u'summer', u'summer', u'NN'), (u'camp', u'camp', u'NN'), (u'and', u'and', u'CC'), (u'the', u'the', u'DT'), (u'beach', u'beach', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'went', 'to', 'summer', 'camp', 'and', 'the', 'beach', '.']}, {'string': ' She went to Paris.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBD went) (PP (TO to) (NP (NNP Paris)))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'went', u'go', u'VBD'), (u'to', u'to', u'TO'), (u'Paris', u'Paris', u'NNP'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'went', 'to', 'Paris', '.']}, {'string': ' She went to a baseball game.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBD went) (PP (TO to) (NP (DT a) (NN baseball) (NN game)))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'went', u'go', u'VBD'), (u'to', u'to', u'TO'), (u'a', u'a', u'DT'), (u'baseball', u'baseball', u'NN'), (u'game', u'game', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'went', 'to', 'a', 'baseball', 'game', '.']}, {'string': ' She went to summer school.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBD went) (PP (TO to) (NP (NN summer) (NN school)))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'went', u'go', u'VBD'), (u'to', u'to', u'TO'), (u'summer', u'summer', u'NN'), (u'school', u'school', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'went', 'to', 'summer', 'school', '.']}], 'mode': 0}]}
{'sentences': [{'string': ' Todd lived in a town outside the city.', 'parse': {'tree': '(ROOT (S (NP (NNP Todd)) (VP (VBD lived) (PP (IN in) (NP (DT a) (NN town))) (PP (IN outside) (NP (DT the) (NN city)))) (. .)))', 'lemma': [(u'Todd', u'Todd', u'NNP'), (u'lived', u'live', u'VBD'), (u'in', u'in', u'IN'), (u'a', u'a', u'DT'), (u'town', u'town', u'NN'), (u'outside', u'outside', u'IN'), (u'the', u'the', u'DT'), (u'city', u'city', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Todd', 'lived', 'in', 'a', 'town', 'outside', 'the', 'city', '.']}, {'string': ' Unlike the city the town was peaceful and quiet and full of trees, flowers and animals.', 'parse': {'tree': '(ROOT (S (PP (IN Unlike) (NP (DT the) (NN city))) (NP (DT the) (NN town)) (VP (VBD was) (ADJP (ADJP (JJ peaceful) (CC and) (JJ quiet) (CC and) (JJ full)) (PP (IN of) (NP (NNS trees) (, ,) (NNS flowers) (CC and) (NNS animals))))) (. .)))', 'lemma': [(u'Unlike', u'unlike', u'IN'), (u'the', u'the', u'DT'), (u'city', u'city', u'NN'), (u'the', u'the', u'DT'), (u'town', u'town', u'NN'), (u'was', u'be', u'VBD'), (u'peaceful', u'peaceful', u'JJ'), (u'and', u'and', u'CC'), (u'quiet', u'quiet', u'JJ'), (u'and', u'and', u'CC'), (u'full', u'full', u'JJ'), (u'of', u'of', u'IN'), (u'trees', u'tree', u'NNS'), (u',', u',', u','), (u'flowers', u'flower', u'NNS'), (u'and', u'and', u'CC'), (u'animals', u'animal', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['Unlike', 'the', 'city', 'the', 'town', 'was', 'peaceful', 'and', 'quiet', 'and', 'full', 'of', 'trees', ',', 'flowers', 'and', 'animals', '.']}, {'string': " One day his dad came in from work and said `` Come on, son, I 'm going to take you to the city. ''", 'parse': {'tree': "(ROOT (S (NP (CD One) (NN day)) (NP (PRP$ his) (NN dad)) (VP (VP (VBD came) (PRT (RP in)) (PP (IN from) (NP (NN work)))) (CC and) (VP (VBD said) (SBAR (S (`` ``) (PP (VBN Come) (PP (IN on) (FRAG (, ,) (NP (NN son))))) (, ,) (NP (PRP I)) (VP (VBP 'm) (VP (VBG going) (S (VP (TO to) (VP (VB take) (NP (PRP you)) (PP (TO to) (NP (DT the) (NN city)))))))))))) (. .) ('' '')))", 'lemma': [(u'One', u'one', u'CD'), (u'day', u'day', u'NN'), (u'his', u'he', u'PRP$'), (u'dad', u'dad', u'NN'), (u'came', u'come', u'VBD'), (u'in', u'in', u'RP'), (u'from', u'from', u'IN'), (u'work', u'work', u'NN'), (u'and', u'and', u'CC'), (u'said', u'say', u'VBD'), (u'``', u'``', u'``'), (u'Come', u'come', u'VBN'), (u'on', u'on', u'IN'), (u',', u',', u','), (u'son', u'son', u'NN'), (u',', u',', u','), (u'I', u'I', u'PRP'), (u"'m", u'be', u'VBP'), (u'going', u'go', u'VBG'), (u'to', u'to', u'TO'), (u'take', u'take', u'VB'), (u'you', u'you', u'PRP'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'city', u'city', u'NN'), (u'.', u'.', u'.'), (u"''", u"''", u"''")]}, 'tokens': ['One', 'day', 'his', 'dad', 'came', 'in', 'from', 'work', 'and', 'said', '``', 'Come', 'on', ',', 'son', ',', 'I', "'m", 'going', 'to', 'take', 'you', 'to', 'the', 'city', '.', "''"]}, {'string': ' Todd was very exited so he put on his shoes and ran to the car.', 'parse': {'tree': '(ROOT (S (NP (NNP Todd)) (VP (VBD was) (ADJP (RB very) (JJ exited)) (SBAR (IN so) (S (NP (PRP he)) (VP (VP (VBD put) (PP (IN on) (NP (PRP$ his) (NNS shoes)))) (CC and) (VP (VBD ran) (PP (TO to) (NP (DT the) (NN car)))))))) (. .)))', 'lemma': [(u'Todd', u'Todd', u'NNP'), (u'was', u'be', u'VBD'), (u'very', u'very', u'RB'), (u'exited', u'exited', u'JJ'), (u'so', u'so', u'IN'), (u'he', u'he', u'PRP'), (u'put', u'put', u'VBD'), (u'on', u'on', u'IN'), (u'his', u'he', u'PRP$'), (u'shoes', u'shoe', u'NNS'), (u'and', u'and', u'CC'), (u'ran', u'run', u'VBD'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'car', u'car', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Todd', 'was', 'very', 'exited', 'so', 'he', 'put', 'on', 'his', 'shoes', 'and', 'ran', 'to', 'the', 'car', '.']}, {'string': ' When they got to the city Todd was very surprised there were so many cars and people, everyone seemed to be in a hurry.', 'parse': {'tree': '(ROOT (S (SBAR (WHADVP (WRB When)) (S (NP (PRP they)) (VP (VBD got) (PP (TO to) (NP (DT the) (NN city))) (SBAR (S (NP (NNP Todd)) (VP (VBD was) (ADJP (RB very) (JJ surprised) (SBAR (S (NP (EX there)) (VP (VBD were) (NP (ADJP (RB so) (JJ many)) (NNS cars) (CC and) (NNS people)))))))))))) (, ,) (NP (NN everyone)) (VP (VBD seemed) (S (VP (TO to) (VP (VB be) (PP (IN in) (NP (DT a) (NN hurry))))))) (. .)))', 'lemma': [(u'When', u'when', u'WRB'), (u'they', u'they', u'PRP'), (u'got', u'get', u'VBD'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'city', u'city', u'NN'), (u'Todd', u'Todd', u'NNP'), (u'was', u'be', u'VBD'), (u'very', u'very', u'RB'), (u'surprised', u'surprised', u'JJ'), (u'there', u'there', u'EX'), (u'were', u'be', u'VBD'), (u'so', u'so', u'RB'), (u'many', u'many', u'JJ'), (u'cars', u'car', u'NNS'), (u'and', u'and', u'CC'), (u'people', u'people', u'NNS'), (u',', u',', u','), (u'everyone', u'everyone', u'NN'), (u'seemed', u'seem', u'VBD'), (u'to', u'to', u'TO'), (u'be', u'be', u'VB'), (u'in', u'in', u'IN'), (u'a', u'a', u'DT'), (u'hurry', u'hurry', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['When', 'they', 'got', 'to', 'the', 'city', 'Todd', 'was', 'very', 'surprised', 'there', 'were', 'so', 'many', 'cars', 'and', 'people', ',', 'everyone', 'seemed', 'to', 'be', 'in', 'a', 'hurry', '.']}, {'string': ' There were no trees, no flowers, and no animals.', 'parse': {'tree': '(ROOT (S (NP (EX There)) (VP (VBD were) (NP (NP (DT no) (NNS trees)) (, ,) (NP (DT no) (NNS flowers)) (, ,) (CC and) (NP (DT no) (NNS animals)))) (. .)))', 'lemma': [(u'There', u'there', u'EX'), (u'were', u'be', u'VBD'), (u'no', u'no', u'DT'), (u'trees', u'tree', u'NNS'), (u',', u',', u','), (u'no', u'no', u'DT'), (u'flowers', u'flower', u'NNS'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'no', u'no', u'DT'), (u'animals', u'animal', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['There', 'were', 'no', 'trees', ',', 'no', 'flowers', ',', 'and', 'no', 'animals', '.']}, {'string': ' Todd was so happy to get back home.', 'parse': {'tree': '(ROOT (S (NP (NNP Todd)) (VP (VBD was) (ADJP (RB so) (JJ happy) (S (VP (TO to) (VP (VB get) (PRT (RP back)) (NP (NN home))))))) (. .)))', 'lemma': [(u'Todd', u'Todd', u'NNP'), (u'was', u'be', u'VBD'), (u'so', u'so', u'RB'), (u'happy', u'happy', u'JJ'), (u'to', u'to', u'TO'), (u'get', u'get', u'VB'), (u'back', u'back', u'RP'), (u'home', u'home', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Todd', 'was', 'so', 'happy', 'to', 'get', 'back', 'home', '.']}, {'string': " When his mom asked him about his trip to the city Todd said, `` There 's no place like home. ''", 'parse': {'tree': "(ROOT (S (SBAR (WHADVP (WRB When)) (S (NP (PRP$ his) (NN mom)) (VP (VBD asked) (NP (PRP him)) (PP (IN about) (NP (PRP$ his) (NN trip))) (PP (TO to) (NP (DT the) (NN city)))))) (PRN (S (NP (NNP Todd)) (VP (VBD said)))) (, ,) (`` ``) (NP (EX There)) (VP (VBZ 's) (NP (NP (DT no) (NN place)) (PP (IN like) (NP (NN home))))) (. .) ('' '')))", 'lemma': [(u'When', u'when', u'WRB'), (u'his', u'he', u'PRP$'), (u'mom', u'mom', u'NN'), (u'asked', u'ask', u'VBD'), (u'him', u'he', u'PRP'), (u'about', u'about', u'IN'), (u'his', u'he', u'PRP$'), (u'trip', u'trip', u'NN'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'city', u'city', u'NN'), (u'Todd', u'Todd', u'NNP'), (u'said', u'say', u'VBD'), (u',', u',', u','), (u'``', u'``', u'``'), (u'There', u'there', u'EX'), (u"'s", u'be', u'VBZ'), (u'no', u'no', u'DT'), (u'place', u'place', u'NN'), (u'like', u'like', u'IN'), (u'home', u'home', u'NN'), (u'.', u'.', u'.'), (u"''", u"''", u"''")]}, 'tokens': ['When', 'his', 'mom', 'asked', 'him', 'about', 'his', 'trip', 'to', 'the', 'city', 'Todd', 'said', ',', '``', 'There', "'s", 'no', 'place', 'like', 'home', '.', "''"]}], 'questions': [{'question': {'string': ' Where did Todd visit?', 'parse': {'tree': '(ROOT (SBARQ (WHADVP (WRB Where)) (SQ (VBD did) (NP (NNP Todd)) (VP (VB visit))) (. ?)))', 'lemma': [(u'Where', u'where', u'WRB'), (u'did', u'do', u'VBD'), (u'Todd', u'Todd', u'NNP'), (u'visit', u'visit', u'VB'), (u'?', u'?', u'.')]}, 'tokens': ['Where', 'did', 'Todd', 'visit', '?']}, 'answers': [{'string': ' The city', 'parse': {'tree': '(ROOT (FRAG (NP (DT The) (NN city))))', 'lemma': [(u'The', u'the', u'DT'), (u'city', u'city', u'NN')]}, 'tokens': ['The', 'city']}, {'string': ' His mom', 'parse': {'tree': '(ROOT (FRAG (NP (PRP$ His) (NN mom))))', 'lemma': [(u'His', u'he', u'PRP$'), (u'mom', u'mom', u'NN')]}, 'tokens': ['His', 'mom']}, {'string': ' The town', 'parse': {'tree': '(ROOT (FRAG (NP (DT The) (NN town))))', 'lemma': [(u'The', u'the', u'DT'), (u'town', u'town', u'NN')]}, 'tokens': ['The', 'town']}, {'string': ' The animals', 'parse': {'tree': '(ROOT (FRAG (NP (DT The) (NNS animals))))', 'lemma': [(u'The', u'the', u'DT'), (u'animals', u'animal', u'NNS')]}, 'tokens': ['The', 'animals']}], 'mode': 0}, {'question': {'string': ' What did Todd say when he got home from the city?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD did) (NP (NNP Todd)) (VP (VB say) (SBAR (WHADVP (WRB when)) (S (NP (PRP he)) (VP (VBD got) (NP (NN home)) (PP (IN from) (NP (DT the) (NN city)))))))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'did', u'do', u'VBD'), (u'Todd', u'Todd', u'NNP'), (u'say', u'say', u'VB'), (u'when', u'when', u'WRB'), (u'he', u'he', u'PRP'), (u'got', u'get', u'VBD'), (u'home', u'home', u'NN'), (u'from', u'from', u'IN'), (u'the', u'the', u'DT'), (u'city', u'city', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'did', 'Todd', 'say', 'when', 'he', 'got', 'home', 'from', 'the', 'city', '?']}, 'answers': [{'string': ' There were so many trees and flowers.', 'parse': {'tree': '(ROOT (S (NP (EX There)) (VP (VBD were) (NP (ADJP (RB so) (JJ many)) (NNS trees) (CC and) (NNS flowers))) (. .)))', 'lemma': [(u'There', u'there', u'EX'), (u'were', u'be', u'VBD'), (u'so', u'so', u'RB'), (u'many', u'many', u'JJ'), (u'trees', u'tree', u'NNS'), (u'and', u'and', u'CC'), (u'flowers', u'flower', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['There', 'were', 'so', 'many', 'trees', 'and', 'flowers', '.']}, {'string': ' There were so many people in cars.', 'parse': {'tree': '(ROOT (S (NP (EX There)) (VP (VBD were) (ADVP (RB so)) (NP (NP (JJ many) (NNS people)) (PP (IN in) (NP (NNS cars))))) (. .)))', 'lemma': [(u'There', u'there', u'EX'), (u'were', u'be', u'VBD'), (u'so', u'so', u'RB'), (u'many', u'many', u'JJ'), (u'people', u'people', u'NNS'), (u'in', u'in', u'IN'), (u'cars', u'car', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['There', 'were', 'so', 'many', 'people', 'in', 'cars', '.']}, {'string': " There 's no place like home.", 'parse': {'tree': "(ROOT (S (NP (EX There)) (VP (VBZ 's) (NP (NP (DT no) (NN place)) (PP (IN like) (NP (NN home))))) (. .)))", 'lemma': [(u'There', u'there', u'EX'), (u"'s", u'be', u'VBZ'), (u'no', u'no', u'DT'), (u'place', u'place', u'NN'), (u'like', u'like', u'IN'), (u'home', u'home', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['There', "'s", 'no', 'place', 'like', 'home', '.']}, {'string': ' There were so many animals.', 'parse': {'tree': '(ROOT (S (NP (EX There)) (VP (VBD were) (NP (ADJP (RB so) (JJ many)) (NNS animals))) (. .)))', 'lemma': [(u'There', u'there', u'EX'), (u'were', u'be', u'VBD'), (u'so', u'so', u'RB'), (u'many', u'many', u'JJ'), (u'animals', u'animal', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['There', 'were', 'so', 'many', 'animals', '.']}], 'mode': 0}, {'question': {'string': ' Where does Todd live?', 'parse': {'tree': '(ROOT (SBARQ (WHADVP (WRB Where)) (SQ (VBZ does) (NP (NNP Todd)) (VP (VB live))) (. ?)))', 'lemma': [(u'Where', u'where', u'WRB'), (u'does', u'do', u'VBZ'), (u'Todd', u'Todd', u'NNP'), (u'live', u'live', u'VB'), (u'?', u'?', u'.')]}, 'tokens': ['Where', 'does', 'Todd', 'live', '?']}, 'answers': [{'string': ' The city', 'parse': {'tree': '(ROOT (FRAG (NP (DT The) (NN city))))', 'lemma': [(u'The', u'the', u'DT'), (u'city', u'city', u'NN')]}, 'tokens': ['The', 'city']}, {'string': ' with his mom', 'parse': {'tree': '(ROOT (PP (IN with) (NP (PRP$ his) (NN mom))))', 'lemma': [(u'with', u'with', u'IN'), (u'his', u'he', u'PRP$'), (u'mom', u'mom', u'NN')]}, 'tokens': ['with', 'his', 'mom']}, {'string': ' with his dad', 'parse': {'tree': '(ROOT (PP (IN with) (NP (PRP$ his) (NN dad))))', 'lemma': [(u'with', u'with', u'IN'), (u'his', u'he', u'PRP$'), (u'dad', u'dad', u'NN')]}, 'tokens': ['with', 'his', 'dad']}, {'string': ' In a town.', 'parse': {'tree': '(ROOT (FRAG (PP (IN In) (NP (DT a) (NN town))) (. .)))', 'lemma': [(u'In', u'in', u'IN'), (u'a', u'a', u'DT'), (u'town', u'town', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['In', 'a', 'town', '.']}], 'mode': 1}, {'question': {'string': ' What did Todd see when he got to the city?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD did) (NP (NNP Todd)) (VP (VB see) (SBAR (WHADVP (WRB when)) (S (NP (PRP he)) (VP (VBD got) (PP (TO to) (NP (DT the) (NN city)))))))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'did', u'do', u'VBD'), (u'Todd', u'Todd', u'NNP'), (u'see', u'see', u'VB'), (u'when', u'when', u'WRB'), (u'he', u'he', u'PRP'), (u'got', u'get', u'VBD'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'city', u'city', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'did', 'Todd', 'see', 'when', 'he', 'got', 'to', 'the', 'city', '?']}, 'answers': [{'string': ' lots of animals', 'parse': {'tree': '(ROOT (NP (NP (NNS lots)) (PP (IN of) (NP (NNS animals)))))', 'lemma': [(u'lots', u'lot', u'NNS'), (u'of', u'of', u'IN'), (u'animals', u'animal', u'NNS')]}, 'tokens': ['lots', 'of', 'animals']}, {'string': ' his mom', 'parse': {'tree': '(ROOT (FRAG (NP (PRP$ his) (NN mom))))', 'lemma': [(u'his', u'he', u'PRP$'), (u'mom', u'mom', u'NN')]}, 'tokens': ['his', 'mom']}, {'string': ' lots of trees and flowers', 'parse': {'tree': '(ROOT (NP (NP (NNS lots)) (PP (IN of) (NP (NNS trees) (CC and) (NNS flowers)))))', 'lemma': [(u'lots', u'lot', u'NNS'), (u'of', u'of', u'IN'), (u'trees', u'tree', u'NNS'), (u'and', u'and', u'CC'), (u'flowers', u'flower', u'NNS')]}, 'tokens': ['lots', 'of', 'trees', 'and', 'flowers']}, {'string': ' lots of people and cars', 'parse': {'tree': '(ROOT (NP (NP (NNS lots)) (PP (IN of) (NP (NNS people) (CC and) (NNS cars)))))', 'lemma': [(u'lots', u'lot', u'NNS'), (u'of', u'of', u'IN'), (u'people', u'people', u'NNS'), (u'and', u'and', u'CC'), (u'cars', u'car', u'NNS')]}, 'tokens': ['lots', 'of', 'people', 'and', 'cars']}], 'mode': 0}]}
{'sentences': [{'string': ' Greta ran to the corner with her older brother Tony.', 'parse': {'tree': '(ROOT (S (NP (NNP Greta)) (VP (VBD ran) (PP (TO to) (NP (DT the) (NN corner))) (PP (IN with) (NP (PRP$ her) (JJR older) (NN brother) (NNS Tony)))) (. .)))', 'lemma': [(u'Greta', u'Greta', u'NNP'), (u'ran', u'run', u'VBD'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'corner', u'corner', u'NN'), (u'with', u'with', u'IN'), (u'her', u'she', u'PRP$'), (u'older', u'older', u'JJR'), (u'brother', u'brother', u'NN'), (u'Tony', u'tony', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['Greta', 'ran', 'to', 'the', 'corner', 'with', 'her', 'older', 'brother', 'Tony', '.']}, {'string': ' He had money for the ice cream truck in his pocket and she was very happy.', 'parse': {'tree': '(ROOT (S (S (NP (PRP He)) (VP (VBD had) (NP (NP (NN money)) (PP (IN for) (NP (DT the) (NN ice) (NN cream) (NN truck)))) (PP (IN in) (NP (PRP$ his) (NN pocket))))) (CC and) (S (NP (PRP she)) (VP (VBD was) (ADJP (RB very) (JJ happy)))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'had', u'have', u'VBD'), (u'money', u'money', u'NN'), (u'for', u'for', u'IN'), (u'the', u'the', u'DT'), (u'ice', u'ice', u'NN'), (u'cream', u'cream', u'NN'), (u'truck', u'truck', u'NN'), (u'in', u'in', u'IN'), (u'his', u'he', u'PRP$'), (u'pocket', u'pocket', u'NN'), (u'and', u'and', u'CC'), (u'she', u'she', u'PRP'), (u'was', u'be', u'VBD'), (u'very', u'very', u'RB'), (u'happy', u'happy', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'had', 'money', 'for', 'the', 'ice', 'cream', 'truck', 'in', 'his', 'pocket', 'and', 'she', 'was', 'very', 'happy', '.']}, {'string': ' The ice cream truck had been parked at the curb waiting for children for a very long time.', 'parse': {'tree': '(ROOT (S (NP (DT The) (NN ice) (NN cream) (NN truck)) (VP (VBD had) (VP (VBN been) (VP (VBN parked) (PP (IN at) (NP (NP (DT the) (NN curb)) (VP (VBG waiting) (PP (IN for) (NP (NP (NNS children)) (PP (IN for) (NP (DT a) (ADJP (RB very) (JJ long)) (NN time))))))))))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'ice', u'ice', u'NN'), (u'cream', u'cream', u'NN'), (u'truck', u'truck', u'NN'), (u'had', u'have', u'VBD'), (u'been', u'be', u'VBN'), (u'parked', u'park', u'VBN'), (u'at', u'at', u'IN'), (u'the', u'the', u'DT'), (u'curb', u'curb', u'NN'), (u'waiting', u'wait', u'VBG'), (u'for', u'for', u'IN'), (u'children', u'child', u'NNS'), (u'for', u'for', u'IN'), (u'a', u'a', u'DT'), (u'very', u'very', u'RB'), (u'long', u'long', u'JJ'), (u'time', u'time', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'ice', 'cream', 'truck', 'had', 'been', 'parked', 'at', 'the', 'curb', 'waiting', 'for', 'children', 'for', 'a', 'very', 'long', 'time', '.']}, {'string': ' The ice cream truck driver thought that no more children were coming to get ice cream so he started pulling away from the curb when they got to the corner.', 'parse': {'tree': '(ROOT (S (NP (DT The) (NN ice) (NN cream) (NN truck) (NN driver)) (VP (VBD thought) (SBAR (IN that) (S (NP (DT no) (JJR more) (NNS children)) (VP (VBD were) (VP (VBG coming) (S (VP (TO to) (VP (VB get) (NP (NN ice) (NN cream)) (SBAR (IN so) (S (NP (PRP he)) (VP (VBD started) (S (VP (VBG pulling) (PRT (RP away)) (PP (IN from) (NP (NP (DT the) (NN curb)) (SBAR (WHADVP (WRB when)) (S (NP (PRP they)) (VP (VBD got) (PP (TO to) (NP (DT the) (NN corner))))))))))))))))))))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'ice', u'ice', u'NN'), (u'cream', u'cream', u'NN'), (u'truck', u'truck', u'NN'), (u'driver', u'driver', u'NN'), (u'thought', u'think', u'VBD'), (u'that', u'that', u'IN'), (u'no', u'no', u'DT'), (u'more', u'more', u'JJR'), (u'children', u'child', u'NNS'), (u'were', u'be', u'VBD'), (u'coming', u'come', u'VBG'), (u'to', u'to', u'TO'), (u'get', u'get', u'VB'), (u'ice', u'ice', u'NN'), (u'cream', u'cream', u'NN'), (u'so', u'so', u'IN'), (u'he', u'he', u'PRP'), (u'started', u'start', u'VBD'), (u'pulling', u'pull', u'VBG'), (u'away', u'away', u'RP'), (u'from', u'from', u'IN'), (u'the', u'the', u'DT'), (u'curb', u'curb', u'NN'), (u'when', u'when', u'WRB'), (u'they', u'they', u'PRP'), (u'got', u'get', u'VBD'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'corner', u'corner', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'ice', 'cream', 'truck', 'driver', 'thought', 'that', 'no', 'more', 'children', 'were', 'coming', 'to', 'get', 'ice', 'cream', 'so', 'he', 'started', 'pulling', 'away', 'from', 'the', 'curb', 'when', 'they', 'got', 'to', 'the', 'corner', '.']}, {'string': ' They yelled.', 'parse': {'tree': '(ROOT (S (NP (PRP They)) (VP (VBD yelled)) (. .)))', 'lemma': [(u'They', u'they', u'PRP'), (u'yelled', u'yell', u'VBD'), (u'.', u'.', u'.')]}, 'tokens': ['They', 'yelled', '.']}, {'string': ' They screamed, `` Stop!', 'parse': {'tree': '(ROOT (S (NP (PRP They)) (VP (VBD screamed) (, ,) (`` ``) (INTJ (UH Stop))) (. !)))', 'lemma': [(u'They', u'they', u'PRP'), (u'screamed', u'scream', u'VBD'), (u',', u',', u','), (u'``', u'``', u'``'), (u'Stop', u'stop', u'UH'), (u'!', u'!', u'.')]}, 'tokens': ['They', 'screamed', ',', '``', 'Stop', '!']}, {'string': " Stop! ''", 'parse': {'tree': "(ROOT (S (VP (VB Stop)) (. !) ('' '')))", 'lemma': [(u'Stop', u'stop', u'VB'), (u'!', u'!', u'.'), (u"''", u"''", u"''")]}, 'tokens': ['Stop', '!', "''"]}, {'string': ' and jumped up and down on the side walk trying to get him to see them.', 'parse': {'tree': '(ROOT (S (NP (NNP and)) (VP (VBD jumped) (ADVP (RB up) (CC and) (RB down)) (PP (IN on) (NP (NP (DT the) (NN side) (NN walk)) (VP (VBG trying) (S (VP (TO to) (VP (VB get) (S (NP (PRP him)) (VP (TO to) (VP (VB see) (NP (PRP them)))))))))))) (. .)))', 'lemma': [(u'and', u'and', u'NNP'), (u'jumped', u'jump', u'VBD'), (u'up', u'up', u'RB'), (u'and', u'and', u'CC'), (u'down', u'down', u'RB'), (u'on', u'on', u'IN'), (u'the', u'the', u'DT'), (u'side', u'side', u'NN'), (u'walk', u'walk', u'NN'), (u'trying', u'try', u'VBG'), (u'to', u'to', u'TO'), (u'get', u'get', u'VB'), (u'him', u'he', u'PRP'), (u'to', u'to', u'TO'), (u'see', u'see', u'VB'), (u'them', u'they', u'PRP'), (u'.', u'.', u'.')]}, 'tokens': ['and', 'jumped', 'up', 'and', 'down', 'on', 'the', 'side', 'walk', 'trying', 'to', 'get', 'him', 'to', 'see', 'them', '.']}, {'string': ' The driver of the truck saw them, waved at them and smiled, pulled back to the curb and opened his truck up so that they could see everything that he had for sale.', 'parse': {'tree': '(ROOT (S (NP (NP (DT The) (NN driver)) (PP (IN of) (NP (DT the) (NN truck)))) (VP (VP (VBD saw) (NP (PRP them))) (, ,) (VP (VBD waved) (PP (IN at) (NP (PRP them)))) (CC and) (VP (VBD smiled)) (, ,) (VP (VBD pulled) (PRT (RP back)) (PP (TO to) (NP (DT the) (NN curb)))) (CC and) (VP (VBD opened) (NP (PRP$ his) (NN truck)) (ADVP (ADVP (RB up) (RB so)) (SBAR (IN that) (S (NP (PRP they)) (VP (MD could) (VP (VB see) (NP (NN everything)) (SBAR (IN that) (S (NP (PRP he)) (VP (VBD had) (PP (IN for) (NP (NN sale))))))))))))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'driver', u'driver', u'NN'), (u'of', u'of', u'IN'), (u'the', u'the', u'DT'), (u'truck', u'truck', u'NN'), (u'saw', u'see', u'VBD'), (u'them', u'they', u'PRP'), (u',', u',', u','), (u'waved', u'wave', u'VBD'), (u'at', u'at', u'IN'), (u'them', u'they', u'PRP'), (u'and', u'and', u'CC'), (u'smiled', u'smile', u'VBD'), (u',', u',', u','), (u'pulled', u'pull', u'VBD'), (u'back', u'back', u'RP'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'curb', u'curb', u'NN'), (u'and', u'and', u'CC'), (u'opened', u'open', u'VBD'), (u'his', u'he', u'PRP$'), (u'truck', u'truck', u'NN'), (u'up', u'up', u'RB'), (u'so', u'so', u'RB'), (u'that', u'that', u'IN'), (u'they', u'they', u'PRP'), (u'could', u'could', u'MD'), (u'see', u'see', u'VB'), (u'everything', u'everything', u'NN'), (u'that', u'that', u'IN'), (u'he', u'he', u'PRP'), (u'had', u'have', u'VBD'), (u'for', u'for', u'IN'), (u'sale', u'sale', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'driver', 'of', 'the', 'truck', 'saw', 'them', ',', 'waved', 'at', 'them', 'and', 'smiled', ',', 'pulled', 'back', 'to', 'the', 'curb', 'and', 'opened', 'his', 'truck', 'up', 'so', 'that', 'they', 'could', 'see', 'everything', 'that', 'he', 'had', 'for', 'sale', '.']}, {'string': ' They were so excited.', 'parse': {'tree': '(ROOT (S (NP (PRP They)) (VP (VBD were) (ADJP (RB so) (JJ excited))) (. .)))', 'lemma': [(u'They', u'they', u'PRP'), (u'were', u'be', u'VBD'), (u'so', u'so', u'RB'), (u'excited', u'excited', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['They', 'were', 'so', 'excited', '.']}, {'string': ' They saw some new treats.', 'parse': {'tree': '(ROOT (S (NP (PRP They)) (VP (VBD saw) (NP (DT some) (JJ new) (NN treats))) (. .)))', 'lemma': [(u'They', u'they', u'PRP'), (u'saw', u'see', u'VBD'), (u'some', u'some', u'DT'), (u'new', u'new', u'JJ'), (u'treats', u'treat', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['They', 'saw', 'some', 'new', 'treats', '.']}, {'string': ' Tony wanted to try something new.', 'parse': {'tree': '(ROOT (S (NP (NNP Tony)) (VP (VBD wanted) (S (VP (TO to) (VP (VB try) (NP (NN something) (JJ new)))))) (. .)))', 'lemma': [(u'Tony', u'Tony', u'NNP'), (u'wanted', u'want', u'VBD'), (u'to', u'to', u'TO'), (u'try', u'try', u'VB'), (u'something', u'something', u'NN'), (u'new', u'new', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['Tony', 'wanted', 'to', 'try', 'something', 'new', '.']}, {'string': ' He got an ice cream sundae with chocolate ice cream and nuts.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD got) (NP (DT an) (NN ice) (NN cream) (NN sundae)) (PP (IN with) (NP (NP (NN chocolate) (NN ice) (NN cream)) (CC and) (NP (NNS nuts))))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'got', u'get', u'VBD'), (u'an', u'a', u'DT'), (u'ice', u'ice', u'NN'), (u'cream', u'cream', u'NN'), (u'sundae', u'sundae', u'NN'), (u'with', u'with', u'IN'), (u'chocolate', u'chocolate', u'NN'), (u'ice', u'ice', u'NN'), (u'cream', u'cream', u'NN'), (u'and', u'and', u'CC'), (u'nuts', u'nut', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'got', 'an', 'ice', 'cream', 'sundae', 'with', 'chocolate', 'ice', 'cream', 'and', 'nuts', '.']}, {'string': ' He almost got a snow cone.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (ADVP (RB almost)) (VP (VBD got) (NP (DT a) (NN snow) (NN cone))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'almost', u'almost', u'RB'), (u'got', u'get', u'VBD'), (u'a', u'a', u'DT'), (u'snow', u'snow', u'NN'), (u'cone', u'cone', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'almost', 'got', 'a', 'snow', 'cone', '.']}, {'string': ' Greta looked at everything that the ice cream truck had.', 'parse': {'tree': '(ROOT (S (NP (NNP Greta)) (VP (VBD looked) (PP (IN at) (NP (NN everything))) (SBAR (IN that) (S (NP (DT the) (NN ice) (NN cream) (NN truck)) (VP (VBD had))))) (. .)))', 'lemma': [(u'Greta', u'Greta', u'NNP'), (u'looked', u'look', u'VBD'), (u'at', u'at', u'IN'), (u'everything', u'everything', u'NN'), (u'that', u'that', u'IN'), (u'the', u'the', u'DT'), (u'ice', u'ice', u'NN'), (u'cream', u'cream', u'NN'), (u'truck', u'truck', u'NN'), (u'had', u'have', u'VBD'), (u'.', u'.', u'.')]}, 'tokens': ['Greta', 'looked', 'at', 'everything', 'that', 'the', 'ice', 'cream', 'truck', 'had', '.']}, {'string': ' She saw candy, ice cream cones, snow cones, and everything else.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBD saw) (NP (NP (NN candy)) (, ,) (NP (NN ice) (NN cream) (NNS cones)) (, ,) (NP (NN snow) (NNS cones)) (, ,) (CC and) (NP (NN everything) (RB else)))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'saw', u'see', u'VBD'), (u'candy', u'candy', u'NN'), (u',', u',', u','), (u'ice', u'ice', u'NN'), (u'cream', u'cream', u'NN'), (u'cones', u'cone', u'NNS'), (u',', u',', u','), (u'snow', u'snow', u'NN'), (u'cones', u'cone', u'NNS'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'everything', u'everything', u'NN'), (u'else', u'else', u'RB'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'saw', 'candy', ',', 'ice', 'cream', 'cones', ',', 'snow', 'cones', ',', 'and', 'everything', 'else', '.']}, {'string': ' It all looked so good.', 'parse': {'tree': '(ROOT (S (NP (PRP It)) (ADVP (DT all)) (VP (VBD looked) (ADJP (RB so) (JJ good))) (. .)))', 'lemma': [(u'It', u'it', u'PRP'), (u'all', u'all', u'DT'), (u'looked', u'look', u'VBD'), (u'so', u'so', u'RB'), (u'good', u'good', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['It', 'all', 'looked', 'so', 'good', '.']}, {'string': ' But after looking at everything, she wanted to get an ice cream sandwich.', 'parse': {'tree': '(ROOT (S (CC But) (PP (IN after) (S (VP (VBG looking) (PP (IN at) (NP (NN everything)))))) (, ,) (NP (PRP she)) (VP (VBD wanted) (S (VP (TO to) (VP (VB get) (NP (DT an) (NN ice) (NN cream) (NN sandwich)))))) (. .)))', 'lemma': [(u'But', u'but', u'CC'), (u'after', u'after', u'IN'), (u'looking', u'look', u'VBG'), (u'at', u'at', u'IN'), (u'everything', u'everything', u'NN'), (u',', u',', u','), (u'she', u'she', u'PRP'), (u'wanted', u'want', u'VBD'), (u'to', u'to', u'TO'), (u'get', u'get', u'VB'), (u'an', u'a', u'DT'), (u'ice', u'ice', u'NN'), (u'cream', u'cream', u'NN'), (u'sandwich', u'sandwich', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['But', 'after', 'looking', 'at', 'everything', ',', 'she', 'wanted', 'to', 'get', 'an', 'ice', 'cream', 'sandwich', '.']}, {'string': ' She got the ice cream sandwich.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBD got) (NP (DT the) (NN ice) (NN cream) (NN sandwich))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'got', u'get', u'VBD'), (u'the', u'the', u'DT'), (u'ice', u'ice', u'NN'), (u'cream', u'cream', u'NN'), (u'sandwich', u'sandwich', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'got', 'the', 'ice', 'cream', 'sandwich', '.']}, {'string': ' She bit into it and smiled.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VP (VBD bit) (PP (IN into) (NP (PRP it)))) (CC and) (VP (VBD smiled))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'bit', u'bite', u'VBD'), (u'into', u'into', u'IN'), (u'it', u'it', u'PRP'), (u'and', u'and', u'CC'), (u'smiled', u'smile', u'VBD'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'bit', 'into', 'it', 'and', 'smiled', '.']}, {'string': ' It tasted so good.', 'parse': {'tree': '(ROOT (S (NP (PRP It)) (VP (VBD tasted) (ADJP (RB so) (JJ good))) (. .)))', 'lemma': [(u'It', u'it', u'PRP'), (u'tasted', u'taste', u'VBD'), (u'so', u'so', u'RB'), (u'good', u'good', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['It', 'tasted', 'so', 'good', '.']}, {'string': ' She felt so happy.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBD felt) (ADJP (RB so) (JJ happy))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'felt', u'feel', u'VBD'), (u'so', u'so', u'RB'), (u'happy', u'happy', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'felt', 'so', 'happy', '.']}, {'string': ' Her brother, Tony, was happy too.', 'parse': {'tree': '(ROOT (S (NP (NP (PRP$ Her) (NN brother)) (, ,) (NP (NNP Tony)) (, ,)) (VP (VBD was) (ADJP (JJ happy) (RB too))) (. .)))', 'lemma': [(u'Her', u'she', u'PRP$'), (u'brother', u'brother', u'NN'), (u',', u',', u','), (u'Tony', u'Tony', u'NNP'), (u',', u',', u','), (u'was', u'be', u'VBD'), (u'happy', u'happy', u'JJ'), (u'too', u'too', u'RB'), (u'.', u'.', u'.')]}, 'tokens': ['Her', 'brother', ',', 'Tony', ',', 'was', 'happy', 'too', '.']}, {'string': ' He bit into his ice cream cone sundae and grinned.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VP (VBD bit) (PP (IN into) (NP (PRP$ his) (NN ice) (NN cream) (NN cone) (NN sundae)))) (CC and) (VP (VBD grinned))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'bit', u'bite', u'VBD'), (u'into', u'into', u'IN'), (u'his', u'he', u'PRP$'), (u'ice', u'ice', u'NN'), (u'cream', u'cream', u'NN'), (u'cone', u'cone', u'NN'), (u'sundae', u'sundae', u'NN'), (u'and', u'and', u'CC'), (u'grinned', u'grin', u'VBD'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'bit', 'into', 'his', 'ice', 'cream', 'cone', 'sundae', 'and', 'grinned', '.']}, {'string': ' They walked home with their ice cream and told their mom about how close they came to not getting their ice cream at all.', 'parse': {'tree': '(ROOT (S (NP (PRP They)) (VP (VP (VBD walked) (NP (NN home)) (PP (IN with) (NP (PRP$ their) (NN ice) (NN cream)))) (CC and) (VP (VBD told) (NP (PRP$ their) (NN mom)) (PP (IN about) (SBAR (WHADVP (WRB how) (JJ close)) (S (NP (PRP they)) (VP (VBD came) (S (VP (TO to) (VP (RB not) (S (VP (VBG getting) (NP (PRP$ their) (NN ice) (NN cream)) (ADVP (IN at) (DT all))))))))))))) (. .)))', 'lemma': [(u'They', u'they', u'PRP'), (u'walked', u'walk', u'VBD'), (u'home', u'home', u'NN'), (u'with', u'with', u'IN'), (u'their', u'they', u'PRP$'), (u'ice', u'ice', u'NN'), (u'cream', u'cream', u'NN'), (u'and', u'and', u'CC'), (u'told', u'tell', u'VBD'), (u'their', u'they', u'PRP$'), (u'mom', u'mom', u'NN'), (u'about', u'about', u'IN'), (u'how', u'how', u'WRB'), (u'close', u'close', u'JJ'), (u'they', u'they', u'PRP'), (u'came', u'come', u'VBD'), (u'to', u'to', u'TO'), (u'not', u'not', u'RB'), (u'getting', u'get', u'VBG'), (u'their', u'they', u'PRP$'), (u'ice', u'ice', u'NN'), (u'cream', u'cream', u'NN'), (u'at', u'at', u'IN'), (u'all', u'all', u'DT'), (u'.', u'.', u'.')]}, 'tokens': ['They', 'walked', 'home', 'with', 'their', 'ice', 'cream', 'and', 'told', 'their', 'mom', 'about', 'how', 'close', 'they', 'came', 'to', 'not', 'getting', 'their', 'ice', 'cream', 'at', 'all', '.']}, {'string': ' Their mom was happy that the truck had stopped for them.', 'parse': {'tree': '(ROOT (S (NP (PRP$ Their) (NN mom)) (VP (VBD was) (ADJP (JJ happy)) (SBAR (IN that) (S (NP (DT the) (NN truck)) (VP (VBD had) (VP (VBN stopped) (PP (IN for) (NP (PRP them)))))))) (. .)))', 'lemma': [(u'Their', u'they', u'PRP$'), (u'mom', u'mom', u'NN'), (u'was', u'be', u'VBD'), (u'happy', u'happy', u'JJ'), (u'that', u'that', u'IN'), (u'the', u'the', u'DT'), (u'truck', u'truck', u'NN'), (u'had', u'have', u'VBD'), (u'stopped', u'stop', u'VBN'), (u'for', u'for', u'IN'), (u'them', u'they', u'PRP'), (u'.', u'.', u'.')]}, 'tokens': ['Their', 'mom', 'was', 'happy', 'that', 'the', 'truck', 'had', 'stopped', 'for', 'them', '.']}, {'string': ' She said that they were very lucky to have gotten to the curb before the ice cream truck left.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBD said) (SBAR (IN that) (S (NP (PRP they)) (VP (VBD were) (ADJP (RB very) (JJ lucky) (S (VP (TO to) (VP (VB have) (VP (VBN gotten) (PP (TO to) (NP (DT the) (NN curb)))))))) (SBAR (IN before) (S (NP (DT the) (NN ice) (NN cream) (NN truck)) (VP (VBD left)))))))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'said', u'say', u'VBD'), (u'that', u'that', u'IN'), (u'they', u'they', u'PRP'), (u'were', u'be', u'VBD'), (u'very', u'very', u'RB'), (u'lucky', u'lucky', u'JJ'), (u'to', u'to', u'TO'), (u'have', u'have', u'VB'), (u'gotten', u'get', u'VBN'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'curb', u'curb', u'NN'), (u'before', u'before', u'IN'), (u'the', u'the', u'DT'), (u'ice', u'ice', u'NN'), (u'cream', u'cream', u'NN'), (u'truck', u'truck', u'NN'), (u'left', u'leave', u'VBD'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'said', 'that', 'they', 'were', 'very', 'lucky', 'to', 'have', 'gotten', 'to', 'the', 'curb', 'before', 'the', 'ice', 'cream', 'truck', 'left', '.']}], 'questions': [{'question': {'string': ' What did the driver of the ice cream truck do when Greta and Tony got to the corner?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD did) (NP (NP (DT the) (NN driver)) (PP (IN of) (NP (DT the) (NN ice) (NN cream) (NN truck)))) (VP (VB do) (SBAR (WHADVP (WRB when)) (S (NP (NNP Greta) (CC and) (NNP Tony)) (VP (VBD got) (PP (TO to) (NP (DT the) (NN corner)))))))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'did', u'do', u'VBD'), (u'the', u'the', u'DT'), (u'driver', u'driver', u'NN'), (u'of', u'of', u'IN'), (u'the', u'the', u'DT'), (u'ice', u'ice', u'NN'), (u'cream', u'cream', u'NN'), (u'truck', u'truck', u'NN'), (u'do', u'do', u'VB'), (u'when', u'when', u'WRB'), (u'Greta', u'Greta', u'NNP'), (u'and', u'and', u'CC'), (u'Tony', u'Tony', u'NNP'), (u'got', u'get', u'VBD'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'corner', u'corner', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'did', 'the', 'driver', 'of', 'the', 'ice', 'cream', 'truck', 'do', 'when', 'Greta', 'and', 'Tony', 'got', 'to', 'the', 'corner', '?']}, 'answers': [{'string': ' He started pulling away from the curb.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD started) (S (VP (VBG pulling) (PRT (RP away)) (PP (IN from) (NP (DT the) (NN curb)))))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'started', u'start', u'VBD'), (u'pulling', u'pull', u'VBG'), (u'away', u'away', u'RP'), (u'from', u'from', u'IN'), (u'the', u'the', u'DT'), (u'curb', u'curb', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'started', 'pulling', 'away', 'from', 'the', 'curb', '.']}, {'string': " He played the truck 's jingle.", 'parse': {'tree': "(ROOT (S (NP (PRP He)) (VP (VBD played) (NP (NP (DT the) (NN truck) (POS 's)) (NN jingle))) (. .)))", 'lemma': [(u'He', u'he', u'PRP'), (u'played', u'play', u'VBD'), (u'the', u'the', u'DT'), (u'truck', u'truck', u'NN'), (u"'s", u"'s", u'POS'), (u'jingle', u'jingle', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'played', 'the', 'truck', "'s", 'jingle', '.']}, {'string': ' He stayed parked at the curb.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD stayed) (VP (VBN parked) (PP (IN at) (NP (DT the) (NN curb))))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'stayed', u'stay', u'VBD'), (u'parked', u'park', u'VBN'), (u'at', u'at', u'IN'), (u'the', u'the', u'DT'), (u'curb', u'curb', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'stayed', 'parked', 'at', 'the', 'curb', '.']}, {'string': ' He almost got a snow cone.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (ADVP (RB almost)) (VP (VBD got) (NP (DT a) (NN snow) (NN cone))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'almost', u'almost', u'RB'), (u'got', u'get', u'VBD'), (u'a', u'a', u'DT'), (u'snow', u'snow', u'NN'), (u'cone', u'cone', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'almost', 'got', 'a', 'snow', 'cone', '.']}], 'mode': 0}, {'question': {'string': ' What did the children do when they saw the ice cream truck driver pull away from the curb?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD did) (NP (DT the) (NNS children)) (VP (VB do) (SBAR (WHADVP (WRB when)) (S (NP (PRP they)) (VP (VBD saw) (S (NP (DT the) (NN ice) (NN cream) (NN truck) (NN driver)) (VP (VB pull) (PRT (RP away)) (PP (IN from) (NP (DT the) (NN curb)))))))))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'did', u'do', u'VBD'), (u'the', u'the', u'DT'), (u'children', u'child', u'NNS'), (u'do', u'do', u'VB'), (u'when', u'when', u'WRB'), (u'they', u'they', u'PRP'), (u'saw', u'see', u'VBD'), (u'the', u'the', u'DT'), (u'ice', u'ice', u'NN'), (u'cream', u'cream', u'NN'), (u'truck', u'truck', u'NN'), (u'driver', u'driver', u'NN'), (u'pull', u'pull', u'VB'), (u'away', u'away', u'RP'), (u'from', u'from', u'IN'), (u'the', u'the', u'DT'), (u'curb', u'curb', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'did', 'the', 'children', 'do', 'when', 'they', 'saw', 'the', 'ice', 'cream', 'truck', 'driver', 'pull', 'away', 'from', 'the', 'curb', '?']}, 'answers': [{'string': ' They ran out into the street after the iced cream truck.', 'parse': {'tree': '(ROOT (S (NP (PRP They)) (VP (VBD ran) (PRT (RP out)) (PP (IN into) (NP (DT the) (NN street))) (PP (IN after) (NP (DT the) (JJ iced) (NN cream) (NN truck)))) (. .)))', 'lemma': [(u'They', u'they', u'PRP'), (u'ran', u'run', u'VBD'), (u'out', u'out', u'RP'), (u'into', u'into', u'IN'), (u'the', u'the', u'DT'), (u'street', u'street', u'NN'), (u'after', u'after', u'IN'), (u'the', u'the', u'DT'), (u'iced', u'iced', u'JJ'), (u'cream', u'cream', u'NN'), (u'truck', u'truck', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['They', 'ran', 'out', 'into', 'the', 'street', 'after', 'the', 'iced', 'cream', 'truck', '.']}, {'string': " They screamed, `` Stop! Stop! ''.", 'parse': {'tree': "(ROOT (S (NP (PRP They)) (VP (VBD screamed) (, ,) (`` ``) (INTJ (UH Stop) (. !) (UH Stop) (. !))) ('' '') (. .)))", 'lemma': [(u'They', u'they', u'PRP'), (u'screamed', u'scream', u'VBD'), (u',', u',', u','), (u'``', u'``', u'``'), (u'Stop', u'stop', u'UH'), (u'!', u'!', u'.'), (u'Stop', u'stop', u'UH'), (u'!', u'!', u'.'), (u"''", u"''", u"''"), (u'.', u'.', u'.')]}, 'tokens': ['They', 'screamed', ',', '``', 'Stop', '!', 'Stop', '!', "''", '.']}, {'string': ' They stood on the corner and cried.', 'parse': {'tree': '(ROOT (S (NP (PRP They)) (VP (VP (VBD stood) (PP (IN on) (NP (DT the) (NN corner)))) (CC and) (VP (VBD cried))) (. .)))', 'lemma': [(u'They', u'they', u'PRP'), (u'stood', u'stand', u'VBD'), (u'on', u'on', u'IN'), (u'the', u'the', u'DT'), (u'corner', u'corner', u'NN'), (u'and', u'and', u'CC'), (u'cried', u'cry', u'VBD'), (u'.', u'.', u'.')]}, 'tokens': ['They', 'stood', 'on', 'the', 'corner', 'and', 'cried', '.']}, {'string': ' They ate ice cream.', 'parse': {'tree': '(ROOT (S (NP (PRP They)) (VP (VBD ate) (NP (NN ice) (NN cream))) (. .)))', 'lemma': [(u'They', u'they', u'PRP'), (u'ate', u'eat', u'VBD'), (u'ice', u'ice', u'NN'), (u'cream', u'cream', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['They', 'ate', 'ice', 'cream', '.']}], 'mode': 0}, {'question': {'string': ' What did Tony and Greta get from the iced cream truck?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD did) (NP (NNP Tony) (CC and) (NNP Greta)) (VP (VB get) (PP (IN from) (NP (DT the) (JJ iced) (NN cream) (NN truck))))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'did', u'do', u'VBD'), (u'Tony', u'Tony', u'NNP'), (u'and', u'and', u'CC'), (u'Greta', u'Greta', u'NNP'), (u'get', u'get', u'VB'), (u'from', u'from', u'IN'), (u'the', u'the', u'DT'), (u'iced', u'iced', u'JJ'), (u'cream', u'cream', u'NN'), (u'truck', u'truck', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'did', 'Tony', 'and', 'Greta', 'get', 'from', 'the', 'iced', 'cream', 'truck', '?']}, 'answers': [{'string': ' Tony got a snow cone. Greta got an ice cream sundae.', 'parse': {'tree': '(ROOT (S (NP (NNP Tony)) (VP (VBD got) (NP (NP (DT a) (NN snow)) (SBAR (S (NP (NN cone) (. .) (NNP Greta)) (VP (VBD got) (NP (DT an) (NN ice) (NN cream) (NN sundae))))))) (. .)))', 'lemma': [(u'Tony', u'Tony', u'NNP'), (u'got', u'get', u'VBD'), (u'a', u'a', u'DT'), (u'snow', u'snow', u'NN'), (u'cone', u'cone', u'NN'), (u'.', u'.', u'.'), (u'Greta', u'Greta', u'NNP'), (u'got', u'get', u'VBD'), (u'an', u'a', u'DT'), (u'ice', u'ice', u'NN'), (u'cream', u'cream', u'NN'), (u'sundae', u'sundae', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Tony', 'got', 'a', 'snow', 'cone', '.', 'Greta', 'got', 'an', 'ice', 'cream', 'sundae', '.']}, {'string': ' Tony got a snow cone. Greta got an iced cream cone with chocolate iced cream and nuts.', 'parse': {'tree': '(ROOT (S (NP (NNP Tony)) (VP (VBD got) (NP (NP (DT a) (NN snow)) (SBAR (S (NP (NN cone) (. .) (NNP Greta)) (VP (VBD got) (NP (DT an) (JJ iced) (NN cream) (NN cone)) (PP (IN with) (NP (NP (NN chocolate) (JJ iced) (NN cream)) (CC and) (NP (NNS nuts))))))))) (. .)))', 'lemma': [(u'Tony', u'Tony', u'NNP'), (u'got', u'get', u'VBD'), (u'a', u'a', u'DT'), (u'snow', u'snow', u'NN'), (u'cone', u'cone', u'NN'), (u'.', u'.', u'.'), (u'Greta', u'Greta', u'NNP'), (u'got', u'get', u'VBD'), (u'an', u'a', u'DT'), (u'iced', u'iced', u'JJ'), (u'cream', u'cream', u'NN'), (u'cone', u'cone', u'NN'), (u'with', u'with', u'IN'), (u'chocolate', u'chocolate', u'NN'), (u'iced', u'iced', u'JJ'), (u'cream', u'cream', u'NN'), (u'and', u'and', u'CC'), (u'nuts', u'nut', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['Tony', 'got', 'a', 'snow', 'cone', '.', 'Greta', 'got', 'an', 'iced', 'cream', 'cone', 'with', 'chocolate', 'iced', 'cream', 'and', 'nuts', '.']}, {'string': ' Tony got an ice cream sundae with chocolate ice cream and nuts.', 'parse': {'tree': '(ROOT (S (NP (NNP Tony)) (VP (VBD got) (NP (DT an) (NN ice) (NN cream) (NN sundae)) (PP (IN with) (NP (NP (NN chocolate) (NN ice) (NN cream)) (CC and) (NP (NNS nuts))))) (. .)))', 'lemma': [(u'Tony', u'Tony', u'NNP'), (u'got', u'get', u'VBD'), (u'an', u'a', u'DT'), (u'ice', u'ice', u'NN'), (u'cream', u'cream', u'NN'), (u'sundae', u'sundae', u'NN'), (u'with', u'with', u'IN'), (u'chocolate', u'chocolate', u'NN'), (u'ice', u'ice', u'NN'), (u'cream', u'cream', u'NN'), (u'and', u'and', u'CC'), (u'nuts', u'nut', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['Tony', 'got', 'an', 'ice', 'cream', 'sundae', 'with', 'chocolate', 'ice', 'cream', 'and', 'nuts', '.']}, {'string': ' Greta and Tony ice cream cones.', 'parse': {'tree': '(ROOT (S (NP (NNP Greta) (CC and) (NNP Tony)) (VP (VBZ ice) (NP (NN cream) (NNS cones))) (. .)))', 'lemma': [(u'Greta', u'Greta', u'NNP'), (u'and', u'and', u'CC'), (u'Tony', u'Tony', u'NNP'), (u'ice', u'ice', u'VBZ'), (u'cream', u'cream', u'NN'), (u'cones', u'cone', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['Greta', 'and', 'Tony', 'ice', 'cream', 'cones', '.']}], 'mode': 0}, {'question': {'string': ' What did Greta and Tony do after they got their ice cream?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD did) (NP (NNP Greta) (CC and) (NNP Tony)) (VP (VB do) (SBAR (IN after) (S (NP (PRP they)) (VP (VBD got) (NP (PRP$ their) (NN ice) (NN cream))))))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'did', u'do', u'VBD'), (u'Greta', u'Greta', u'NNP'), (u'and', u'and', u'CC'), (u'Tony', u'Tony', u'NNP'), (u'do', u'do', u'VB'), (u'after', u'after', u'IN'), (u'they', u'they', u'PRP'), (u'got', u'get', u'VBD'), (u'their', u'they', u'PRP$'), (u'ice', u'ice', u'NN'), (u'cream', u'cream', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'did', 'Greta', 'and', 'Tony', 'do', 'after', 'they', 'got', 'their', 'ice', 'cream', '?']}, 'answers': [{'string': " They walked to a friend 's house and talked to his mother about what happened.", 'parse': {'tree': "(ROOT (S (NP (PRP They)) (VP (VP (VBD walked) (PP (TO to) (NP (NP (DT a) (NN friend) (POS 's)) (NN house)))) (CC and) (VP (VBD talked) (PP (TO to) (NP (PRP$ his) (NN mother))) (PP (IN about) (SBAR (WHNP (WP what)) (S (VP (VBD happened))))))) (. .)))", 'lemma': [(u'They', u'they', u'PRP'), (u'walked', u'walk', u'VBD'), (u'to', u'to', u'TO'), (u'a', u'a', u'DT'), (u'friend', u'friend', u'NN'), (u"'s", u"'s", u'POS'), (u'house', u'house', u'NN'), (u'and', u'and', u'CC'), (u'talked', u'talk', u'VBD'), (u'to', u'to', u'TO'), (u'his', u'he', u'PRP$'), (u'mother', u'mother', u'NN'), (u'about', u'about', u'IN'), (u'what', u'what', u'WP'), (u'happened', u'happen', u'VBD'), (u'.', u'.', u'.')]}, 'tokens': ['They', 'walked', 'to', 'a', 'friend', "'s", 'house', 'and', 'talked', 'to', 'his', 'mother', 'about', 'what', 'happened', '.']}, {'string': ' They bit into it.', 'parse': {'tree': '(ROOT (S (NP (PRP They)) (VP (VBD bit) (PP (IN into) (NP (PRP it)))) (. .)))', 'lemma': [(u'They', u'they', u'PRP'), (u'bit', u'bite', u'VBD'), (u'into', u'into', u'IN'), (u'it', u'it', u'PRP'), (u'.', u'.', u'.')]}, 'tokens': ['They', 'bit', 'into', 'it', '.']}, {'string': ' They got in the truck.', 'parse': {'tree': '(ROOT (S (NP (PRP They)) (VP (VBD got) (PP (IN in) (NP (DT the) (NN truck)))) (. .)))', 'lemma': [(u'They', u'they', u'PRP'), (u'got', u'get', u'VBD'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'truck', u'truck', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['They', 'got', 'in', 'the', 'truck', '.']}, {'string': ' They walked home and went outside in their back yard to play.', 'parse': {'tree': '(ROOT (S (NP (PRP They)) (VP (VP (VBD walked) (NP (NN home))) (CC and) (VP (VBD went) (ADVP (IN outside) (PP (IN in) (NP (PRP$ their) (JJ back) (NN yard)))) (S (VP (TO to) (VP (VB play)))))) (. .)))', 'lemma': [(u'They', u'they', u'PRP'), (u'walked', u'walk', u'VBD'), (u'home', u'home', u'NN'), (u'and', u'and', u'CC'), (u'went', u'go', u'VBD'), (u'outside', u'outside', u'IN'), (u'in', u'in', u'IN'), (u'their', u'they', u'PRP$'), (u'back', u'back', u'JJ'), (u'yard', u'yard', u'NN'), (u'to', u'to', u'TO'), (u'play', u'play', u'VB'), (u'.', u'.', u'.')]}, 'tokens': ['They', 'walked', 'home', 'and', 'went', 'outside', 'in', 'their', 'back', 'yard', 'to', 'play', '.']}], 'mode': 0}]}
{'sentences': [{'string': ' My parents, Kelly and Kelley, said that it was that time of year to take a family vacation.', 'parse': {'tree': '(ROOT (S (NP (NP (PRP$ My) (NNS parents)) (, ,) (NP (NNP Kelly) (CC and) (NNP Kelley)) (, ,)) (VP (VBD said) (SBAR (IN that) (S (NP (PRP it)) (VP (VBD was) (NP (NP (DT that) (NN time)) (PP (IN of) (NP (NN year))) (S (VP (TO to) (VP (VB take) (NP (DT a) (NN family) (NN vacation)))))))))) (. .)))', 'lemma': [(u'My', u'my', u'PRP$'), (u'parents', u'parent', u'NNS'), (u',', u',', u','), (u'Kelly', u'Kelly', u'NNP'), (u'and', u'and', u'CC'), (u'Kelley', u'Kelley', u'NNP'), (u',', u',', u','), (u'said', u'say', u'VBD'), (u'that', u'that', u'IN'), (u'it', u'it', u'PRP'), (u'was', u'be', u'VBD'), (u'that', u'that', u'DT'), (u'time', u'time', u'NN'), (u'of', u'of', u'IN'), (u'year', u'year', u'NN'), (u'to', u'to', u'TO'), (u'take', u'take', u'VB'), (u'a', u'a', u'DT'), (u'family', u'family', u'NN'), (u'vacation', u'vacation', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['My', 'parents', ',', 'Kelly', 'and', 'Kelley', ',', 'said', 'that', 'it', 'was', 'that', 'time', 'of', 'year', 'to', 'take', 'a', 'family', 'vacation', '.']}, {'string': " We 've been to big ride parks that have hotels with large pools.", 'parse': {'tree': "(ROOT (S (NP (PRP We)) (VP (VBP 've) (VP (VBN been) (PP (TO to) (NP (NP (JJ big) (NN ride) (NNS parks)) (SBAR (WHNP (WDT that)) (S (VP (VBP have) (NP (NP (NNS hotels)) (PP (IN with) (NP (JJ large) (NNS pools))))))))))) (. .)))", 'lemma': [(u'We', u'we', u'PRP'), (u"'ve", u'have', u'VBP'), (u'been', u'be', u'VBN'), (u'to', u'to', u'TO'), (u'big', u'big', u'JJ'), (u'ride', u'ride', u'NN'), (u'parks', u'park', u'NNS'), (u'that', u'that', u'WDT'), (u'have', u'have', u'VBP'), (u'hotels', u'hotel', u'NNS'), (u'with', u'with', u'IN'), (u'large', u'large', u'JJ'), (u'pools', u'pool', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['We', "'ve", 'been', 'to', 'big', 'ride', 'parks', 'that', 'have', 'hotels', 'with', 'large', 'pools', '.']}, {'string': ' This year my parents wanted to do something different.', 'parse': {'tree': '(ROOT (S (NP (DT This) (NN year)) (NP (PRP$ my) (NNS parents)) (VP (VBD wanted) (S (VP (TO to) (VP (VB do) (S (NP (NN something)) (ADJP (JJ different))))))) (. .)))', 'lemma': [(u'This', u'this', u'DT'), (u'year', u'year', u'NN'), (u'my', u'my', u'PRP$'), (u'parents', u'parent', u'NNS'), (u'wanted', u'want', u'VBD'), (u'to', u'to', u'TO'), (u'do', u'do', u'VB'), (u'something', u'something', u'NN'), (u'different', u'different', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['This', 'year', 'my', 'parents', 'wanted', 'to', 'do', 'something', 'different', '.']}, {'string': ' They wanted to take us all to Elk River Castle.', 'parse': {'tree': '(ROOT (S (NP (PRP They)) (VP (VBD wanted) (S (VP (TO to) (VP (VB take) (S (NP (PRP us)) (RB all) (VP (TO to) (VP (VB Elk) (NP (NNP River) (NNP Castle))))))))) (. .)))', 'lemma': [(u'They', u'they', u'PRP'), (u'wanted', u'want', u'VBD'), (u'to', u'to', u'TO'), (u'take', u'take', u'VB'), (u'us', u'we', u'PRP'), (u'all', u'all', u'RB'), (u'to', u'to', u'TO'), (u'Elk', u'elk', u'VB'), (u'River', u'River', u'NNP'), (u'Castle', u'Castle', u'NNP'), (u'.', u'.', u'.')]}, 'tokens': ['They', 'wanted', 'to', 'take', 'us', 'all', 'to', 'Elk', 'River', 'Castle', '.']}, {'string': ' After lots of planning we hit the road for our trip.', 'parse': {'tree': '(ROOT (S (PP (IN After) (NP (NP (NNS lots)) (PP (IN of) (NP (NN planning))))) (NP (PRP we)) (VP (VBD hit) (NP (DT the) (NN road)) (PP (IN for) (NP (PRP$ our) (NN trip)))) (. .)))', 'lemma': [(u'After', u'after', u'IN'), (u'lots', u'lot', u'NNS'), (u'of', u'of', u'IN'), (u'planning', u'planning', u'NN'), (u'we', u'we', u'PRP'), (u'hit', u'hit', u'VBD'), (u'the', u'the', u'DT'), (u'road', u'road', u'NN'), (u'for', u'for', u'IN'), (u'our', u'we', u'PRP$'), (u'trip', u'trip', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['After', 'lots', 'of', 'planning', 'we', 'hit', 'the', 'road', 'for', 'our', 'trip', '.']}, {'string': ' My Brother Kelsey and I enjoyed the long car ride there.', 'parse': {'tree': '(ROOT (S (NP (NP (NNP My) (NNP Brother) (NNP Kelsey)) (CC and) (NP (PRP I))) (VP (VBD enjoyed) (NP (DT the) (JJ long) (NN car) (NN ride)) (ADVP (RB there))) (. .)))', 'lemma': [(u'My', u'My', u'NNP'), (u'Brother', u'Brother', u'NNP'), (u'Kelsey', u'Kelsey', u'NNP'), (u'and', u'and', u'CC'), (u'I', u'I', u'PRP'), (u'enjoyed', u'enjoy', u'VBD'), (u'the', u'the', u'DT'), (u'long', u'long', u'JJ'), (u'car', u'car', u'NN'), (u'ride', u'ride', u'NN'), (u'there', u'there', u'RB'), (u'.', u'.', u'.')]}, 'tokens': ['My', 'Brother', 'Kelsey', 'and', 'I', 'enjoyed', 'the', 'long', 'car', 'ride', 'there', '.']}, {'string': ' Once we arrive, the castle looked much bigger than we had imagined.', 'parse': {'tree': '(ROOT (S (SBAR (IN Once) (S (NP (PRP we)) (VP (VBP arrive)))) (, ,) (NP (DT the) (NN castle)) (VP (VBD looked) (ADJP (RB much) (JJR bigger)) (SBAR (IN than) (S (NP (PRP we)) (VP (VBD had) (VP (VBN imagined)))))) (. .)))', 'lemma': [(u'Once', u'once', u'IN'), (u'we', u'we', u'PRP'), (u'arrive', u'arrive', u'VBP'), (u',', u',', u','), (u'the', u'the', u'DT'), (u'castle', u'castle', u'NN'), (u'looked', u'look', u'VBD'), (u'much', u'much', u'RB'), (u'bigger', u'bigger', u'JJR'), (u'than', u'than', u'IN'), (u'we', u'we', u'PRP'), (u'had', u'have', u'VBD'), (u'imagined', u'imagine', u'VBN'), (u'.', u'.', u'.')]}, 'tokens': ['Once', 'we', 'arrive', ',', 'the', 'castle', 'looked', 'much', 'bigger', 'than', 'we', 'had', 'imagined', '.']}, {'string': ' There was so much to see and so much to do.', 'parse': {'tree': '(ROOT (S (NP (EX There)) (VP (VBD was) (ADJP (ADJP (RB so) (RB much) (S (VP (TO to) (VP (VB see))))) (CC and) (ADJP (RB so) (RB much) (S (VP (TO to) (VP (VB do))))))) (. .)))', 'lemma': [(u'There', u'there', u'EX'), (u'was', u'be', u'VBD'), (u'so', u'so', u'RB'), (u'much', u'much', u'RB'), (u'to', u'to', u'TO'), (u'see', u'see', u'VB'), (u'and', u'and', u'CC'), (u'so', u'so', u'RB'), (u'much', u'much', u'RB'), (u'to', u'to', u'TO'), (u'do', u'do', u'VB'), (u'.', u'.', u'.')]}, 'tokens': ['There', 'was', 'so', 'much', 'to', 'see', 'and', 'so', 'much', 'to', 'do', '.']}, {'string': ' There was a swimming pool, movie theater and an elevator to take us from floor to floor.', 'parse': {'tree': '(ROOT (S (NP (EX There)) (VP (VBD was) (NP (NP (DT a) (VBG swimming) (NN pool)) (, ,) (NP (NN movie) (NN theater)) (CC and) (NP (DT an) (NN elevator) (S (VP (TO to) (VP (VB take) (NP (PRP us)) (PP (IN from) (NP (NN floor))) (PP (TO to) (NP (NN floor))))))))) (. .)))', 'lemma': [(u'There', u'there', u'EX'), (u'was', u'be', u'VBD'), (u'a', u'a', u'DT'), (u'swimming', u'swim', u'VBG'), (u'pool', u'pool', u'NN'), (u',', u',', u','), (u'movie', u'movie', u'NN'), (u'theater', u'theater', u'NN'), (u'and', u'and', u'CC'), (u'an', u'a', u'DT'), (u'elevator', u'elevator', u'NN'), (u'to', u'to', u'TO'), (u'take', u'take', u'VB'), (u'us', u'we', u'PRP'), (u'from', u'from', u'IN'), (u'floor', u'floor', u'NN'), (u'to', u'to', u'TO'), (u'floor', u'floor', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['There', 'was', 'a', 'swimming', 'pool', ',', 'movie', 'theater', 'and', 'an', 'elevator', 'to', 'take', 'us', 'from', 'floor', 'to', 'floor', '.']}, {'string': ' What a magical place!', 'parse': {'tree': '(ROOT (FRAG (WHNP (WDT What)) (PP (FW a) (NP (JJ magical) (NN place))) (. !)))', 'lemma': [(u'What', u'what', u'WDT'), (u'a', u'a', u'FW'), (u'magical', u'magical', u'JJ'), (u'place', u'place', u'NN'), (u'!', u'!', u'.')]}, 'tokens': ['What', 'a', 'magical', 'place', '!']}, {'string': ' I was so excited because we had the whole place to our family!', 'parse': {'tree': '(ROOT (S (NP (PRP I)) (VP (VBD was) (ADJP (RB so) (JJ excited)) (SBAR (IN because) (S (NP (PRP we)) (VP (VBD had) (NP (NP (DT the) (JJ whole) (NN place)) (PP (TO to) (NP (PRP$ our) (NN family)))))))) (. !)))', 'lemma': [(u'I', u'I', u'PRP'), (u'was', u'be', u'VBD'), (u'so', u'so', u'RB'), (u'excited', u'excited', u'JJ'), (u'because', u'because', u'IN'), (u'we', u'we', u'PRP'), (u'had', u'have', u'VBD'), (u'the', u'the', u'DT'), (u'whole', u'whole', u'JJ'), (u'place', u'place', u'NN'), (u'to', u'to', u'TO'), (u'our', u'we', u'PRP$'), (u'family', u'family', u'NN'), (u'!', u'!', u'.')]}, 'tokens': ['I', 'was', 'so', 'excited', 'because', 'we', 'had', 'the', 'whole', 'place', 'to', 'our', 'family', '!']}, {'string': ' We spent our vacation playing around the huge castle and finding small mysterious places.', 'parse': {'tree': '(ROOT (S (NP (PRP We)) (VP (VBD spent) (NP (PRP$ our) (NN vacation)) (S (VP (VP (VBG playing) (PP (IN around) (NP (DT the) (JJ huge) (NN castle)))) (CC and) (VP (VBG finding) (NP (JJ small) (JJ mysterious) (NNS places)))))) (. .)))', 'lemma': [(u'We', u'we', u'PRP'), (u'spent', u'spend', u'VBD'), (u'our', u'we', u'PRP$'), (u'vacation', u'vacation', u'NN'), (u'playing', u'play', u'VBG'), (u'around', u'around', u'IN'), (u'the', u'the', u'DT'), (u'huge', u'huge', u'JJ'), (u'castle', u'castle', u'NN'), (u'and', u'and', u'CC'), (u'finding', u'find', u'VBG'), (u'small', u'small', u'JJ'), (u'mysterious', u'mysterious', u'JJ'), (u'places', u'place', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['We', 'spent', 'our', 'vacation', 'playing', 'around', 'the', 'huge', 'castle', 'and', 'finding', 'small', 'mysterious', 'places', '.']}, {'string': ' There was even a tiny room in the back of one of the closets.', 'parse': {'tree': '(ROOT (S (NP (EX There)) (VP (VBD was) (ADVP (RB even)) (NP (NP (DT a) (JJ tiny) (NN room)) (PP (IN in) (NP (NP (DT the) (NN back)) (PP (IN of) (NP (CD one))))) (PP (IN of) (NP (DT the) (NNS closets))))) (. .)))', 'lemma': [(u'There', u'there', u'EX'), (u'was', u'be', u'VBD'), (u'even', u'even', u'RB'), (u'a', u'a', u'DT'), (u'tiny', u'tiny', u'JJ'), (u'room', u'room', u'NN'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'back', u'back', u'NN'), (u'of', u'of', u'IN'), (u'one', u'one', u'CD'), (u'of', u'of', u'IN'), (u'the', u'the', u'DT'), (u'closets', u'closet', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['There', 'was', 'even', 'a', 'tiny', 'room', 'in', 'the', 'back', 'of', 'one', 'of', 'the', 'closets', '.']}, {'string': ' My brother, Kelsey, and I played hide and go seek for hours, watched movies and swam until the sun went down.', 'parse': {'tree': '(ROOT (S (NP (NP (PRP$ My) (NN brother)) (, ,) (NP (NNP Kelsey)) (, ,)) (S (CC and) (S (NP (PRP I)) (VP (VBD played) (SBAR (S (S (VP (VB hide) (CC and) (VB go))) (VP (VBP seek) (PP (IN for) (NP (NNS hours))))))))) (, ,) (VP (VBD watched) (NP (NNS movies) (CC and) (NN swam)) (SBAR (IN until) (S (NP (DT the) (NN sun)) (VP (VBD went) (PRT (RP down)))))) (. .)))', 'lemma': [(u'My', u'my', u'PRP$'), (u'brother', u'brother', u'NN'), (u',', u',', u','), (u'Kelsey', u'Kelsey', u'NNP'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'I', u'I', u'PRP'), (u'played', u'play', u'VBD'), (u'hide', u'hide', u'VB'), (u'and', u'and', u'CC'), (u'go', u'go', u'VB'), (u'seek', u'seek', u'VBP'), (u'for', u'for', u'IN'), (u'hours', u'hour', u'NNS'), (u',', u',', u','), (u'watched', u'watch', u'VBD'), (u'movies', u'movie', u'NNS'), (u'and', u'and', u'CC'), (u'swam', u'swam', u'NN'), (u'until', u'until', u'IN'), (u'the', u'the', u'DT'), (u'sun', u'sun', u'NN'), (u'went', u'go', u'VBD'), (u'down', u'down', u'RP'), (u'.', u'.', u'.')]}, 'tokens': ['My', 'brother', ',', 'Kelsey', ',', 'and', 'I', 'played', 'hide', 'and', 'go', 'seek', 'for', 'hours', ',', 'watched', 'movies', 'and', 'swam', 'until', 'the', 'sun', 'went', 'down', '.']}, {'string': ' It was sad when our vacation finally came to an end but we made some amazing memories.', 'parse': {'tree': '(ROOT (S (S (NP (PRP It)) (VP (VBD was) (ADJP (JJ sad)) (SBAR (WHADVP (WRB when)) (S (NP (PRP$ our) (NN vacation)) (ADVP (RB finally)) (VP (VBD came) (PP (TO to) (NP (DT an) (NN end)))))))) (CC but) (S (NP (PRP we)) (VP (VBD made) (NP (DT some) (JJ amazing) (NNS memories)))) (. .)))', 'lemma': [(u'It', u'it', u'PRP'), (u'was', u'be', u'VBD'), (u'sad', u'sad', u'JJ'), (u'when', u'when', u'WRB'), (u'our', u'we', u'PRP$'), (u'vacation', u'vacation', u'NN'), (u'finally', u'finally', u'RB'), (u'came', u'come', u'VBD'), (u'to', u'to', u'TO'), (u'an', u'a', u'DT'), (u'end', u'end', u'NN'), (u'but', u'but', u'CC'), (u'we', u'we', u'PRP'), (u'made', u'make', u'VBD'), (u'some', u'some', u'DT'), (u'amazing', u'amazing', u'JJ'), (u'memories', u'memory', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['It', 'was', 'sad', 'when', 'our', 'vacation', 'finally', 'came', 'to', 'an', 'end', 'but', 'we', 'made', 'some', 'amazing', 'memories', '.']}, {'string': " We 'll never forget our trip to Elk River Castle!", 'parse': {'tree': "(ROOT (S (NP (PRP We)) (VP (MD 'll) (ADVP (RB never)) (VP (VB forget) (NP (PRP$ our) (NN trip)) (PP (TO to) (NP (NNP Elk) (NNP River) (NNP Castle))))) (. !)))", 'lemma': [(u'We', u'we', u'PRP'), (u"'ll", u"'ll", u'MD'), (u'never', u'never', u'RB'), (u'forget', u'forget', u'VB'), (u'our', u'we', u'PRP$'), (u'trip', u'trip', u'NN'), (u'to', u'to', u'TO'), (u'Elk', u'Elk', u'NNP'), (u'River', u'River', u'NNP'), (u'Castle', u'Castle', u'NNP'), (u'!', u'!', u'.')]}, 'tokens': ['We', "'ll", 'never', 'forget', 'our', 'trip', 'to', 'Elk', 'River', 'Castle', '!']}], 'questions': [{'question': {'string': " What was my brother 's name?", 'parse': {'tree': "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD was) (NP (NP (PRP$ my) (NN brother) (POS 's)) (NN name))) (. ?)))", 'lemma': [(u'What', u'what', u'WP'), (u'was', u'be', u'VBD'), (u'my', u'my', u'PRP$'), (u'brother', u'brother', u'NN'), (u"'s", u"'s", u'POS'), (u'name', u'name', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'was', 'my', 'brother', "'s", 'name', '?']}, 'answers': [{'string': ' Kelly', 'parse': {'tree': '(ROOT (NP (NNP Kelly)))', 'lemma': [(u'Kelly', u'Kelly', u'NNP')]}, 'tokens': ['Kelly']}, {'string': ' Kelsey', 'parse': {'tree': '(ROOT (ADVP (RB Kelsey)))', 'lemma': [(u'Kelsey', u'kelsey', u'RB')]}, 'tokens': ['Kelsey']}, {'string': ' Caden', 'parse': {'tree': '(ROOT (NP (NNP Caden)))', 'lemma': [(u'Caden', u'Caden', u'NNP')]}, 'tokens': ['Caden']}, {'string': ' Colby', 'parse': {'tree': '(ROOT (ADVP (RB Colby)))', 'lemma': [(u'Colby', u'colby', u'RB')]}, 'tokens': ['Colby']}], 'mode': 1}, {'question': {'string': ' Where did we go?', 'parse': {'tree': '(ROOT (SBARQ (WHADVP (WRB Where)) (SQ (VBD did) (NP (PRP we)) (VP (VB go))) (. ?)))', 'lemma': [(u'Where', u'where', u'WRB'), (u'did', u'do', u'VBD'), (u'we', u'we', u'PRP'), (u'go', u'go', u'VB'), (u'?', u'?', u'.')]}, 'tokens': ['Where', 'did', 'we', 'go', '?']}, 'answers': [{'string': ' Hood River Castle', 'parse': {'tree': '(ROOT (NP (NNP Hood) (NNP River) (NNP Castle)))', 'lemma': [(u'Hood', u'Hood', u'NNP'), (u'River', u'River', u'NNP'), (u'Castle', u'Castle', u'NNP')]}, 'tokens': ['Hood', 'River', 'Castle']}, {'string': ' Elk River Castle', 'parse': {'tree': '(ROOT (NP (NNP Elk) (NNP River) (NNP Castle)))', 'lemma': [(u'Elk', u'Elk', u'NNP'), (u'River', u'River', u'NNP'), (u'Castle', u'Castle', u'NNP')]}, 'tokens': ['Elk', 'River', 'Castle']}, {'string': ' White Fish Castle', 'parse': {'tree': '(ROOT (NP (NNP White) (NNP Fish) (NNP Castle)))', 'lemma': [(u'White', u'White', u'NNP'), (u'Fish', u'Fish', u'NNP'), (u'Castle', u'Castle', u'NNP')]}, 'tokens': ['White', 'Fish', 'Castle']}, {'string': ' White Salmon Castle', 'parse': {'tree': '(ROOT (NP (NNP White) (NNP Salmon) (NNP Castle)))', 'lemma': [(u'White', u'White', u'NNP'), (u'Salmon', u'Salmon', u'NNP'), (u'Castle', u'Castle', u'NNP')]}, 'tokens': ['White', 'Salmon', 'Castle']}], 'mode': 1}, {'question': {'string': ' What did the castle have?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD did) (NP (DT the) (NN castle)) (VP (VB have))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'did', u'do', u'VBD'), (u'the', u'the', u'DT'), (u'castle', u'castle', u'NN'), (u'have', u'have', u'VB'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'did', 'the', 'castle', 'have', '?']}, 'answers': [{'string': ' A ball room', 'parse': {'tree': '(ROOT (NP (DT A) (NN ball) (NN room)))', 'lemma': [(u'A', u'a', u'DT'), (u'ball', u'ball', u'NN'), (u'room', u'room', u'NN')]}, 'tokens': ['A', 'ball', 'room']}, {'string': ' A movie theater', 'parse': {'tree': '(ROOT (NP (DT A) (NN movie) (NN theater)))', 'lemma': [(u'A', u'a', u'DT'), (u'movie', u'movie', u'NN'), (u'theater', u'theater', u'NN')]}, 'tokens': ['A', 'movie', 'theater']}, {'string': ' A gym', 'parse': {'tree': '(ROOT (NP (NNP A) (NNPS gym)))', 'lemma': [(u'A', u'A', u'NNP'), (u'gym', u'gym', u'NNPS')]}, 'tokens': ['A', 'gym']}, {'string': ' A hot tub', 'parse': {'tree': '(ROOT (FRAG (NP (DT A) (JJ hot) (NN tub))))', 'lemma': [(u'A', u'a', u'DT'), (u'hot', u'hot', u'JJ'), (u'tub', u'tub', u'NN')]}, 'tokens': ['A', 'hot', 'tub']}], 'mode': 0}, {'question': {'string': ' What did we do at the castle?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD did) (NP (PRP we)) (VP (VB do) (PP (IN at) (NP (DT the) (NN castle))))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'did', u'do', u'VBD'), (u'we', u'we', u'PRP'), (u'do', u'do', u'VB'), (u'at', u'at', u'IN'), (u'the', u'the', u'DT'), (u'castle', u'castle', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'did', 'we', 'do', 'at', 'the', 'castle', '?']}, 'answers': [{'string': ' Played ball', 'parse': {'tree': '(ROOT (NP (JJ Played) (NN ball)))', 'lemma': [(u'Played', u'played', u'JJ'), (u'ball', u'ball', u'NN')]}, 'tokens': ['Played', 'ball']}, {'string': ' Fished', 'parse': {'tree': '(ROOT (NP (NNP Fished)))', 'lemma': [(u'Fished', u'Fished', u'NNP')]}, 'tokens': ['Fished']}, {'string': ' Swam in the swimming pool', 'parse': {'tree': '(ROOT (S (VP (VB Swam) (PP (IN in) (NP (DT the) (NN swimming) (NN pool))))))', 'lemma': [(u'Swam', u'swim', u'VB'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'swimming', u'swimming', u'NN'), (u'pool', u'pool', u'NN')]}, 'tokens': ['Swam', 'in', 'the', 'swimming', 'pool']}, {'string': ' Ran in the woods', 'parse': {'tree': '(ROOT (S (VP (VB Ran) (PP (IN in) (NP (DT the) (NNS woods))))))', 'lemma': [(u'Ran', u'run', u'VB'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'woods', u'wood', u'NNS')]}, 'tokens': ['Ran', 'in', 'the', 'woods']}], 'mode': 0}]}
{'sentences': [{'string': ' Once upon a time there a little girl named Ana.', 'parse': {'tree': '(ROOT (S (ADVP (RB Once) (PP (IN upon) (NP (DT a) (NN time)) (ADVP (RB there)))) (NP (DT a) (JJ little) (NN girl)) (VP (VBD named) (NP (NNP Ana))) (. .)))', 'lemma': [(u'Once', u'once', u'RB'), (u'upon', u'upon', u'IN'), (u'a', u'a', u'DT'), (u'time', u'time', u'NN'), (u'there', u'there', u'RB'), (u'a', u'a', u'DT'), (u'little', u'little', u'JJ'), (u'girl', u'girl', u'NN'), (u'named', u'name', u'VBD'), (u'Ana', u'Ana', u'NNP'), (u'.', u'.', u'.')]}, 'tokens': ['Once', 'upon', 'a', 'time', 'there', 'a', 'little', 'girl', 'named', 'Ana', '.']}, {'string': ' Ana was a smart girl.', 'parse': {'tree': '(ROOT (S (NP (NNP Ana)) (VP (VBD was) (NP (DT a) (JJ smart) (NN girl))) (. .)))', 'lemma': [(u'Ana', u'Ana', u'NNP'), (u'was', u'be', u'VBD'), (u'a', u'a', u'DT'), (u'smart', u'smart', u'JJ'), (u'girl', u'girl', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Ana', 'was', 'a', 'smart', 'girl', '.']}, {'string': " Everyone in Ana 's school knew and liked her very much.", 'parse': {'tree': "(ROOT (S (NP (NP (NN Everyone)) (PP (IN in) (NP (NP (NNP Ana) (POS 's)) (NN school)))) (VP (VP (VBD knew)) (CC and) (VP (VBD liked) (S (NP (PRP her)) (ADJP (RB very) (JJ much))))) (. .)))", 'lemma': [(u'Everyone', u'everyone', u'NN'), (u'in', u'in', u'IN'), (u'Ana', u'Ana', u'NNP'), (u"'s", u"'s", u'POS'), (u'school', u'school', u'NN'), (u'knew', u'know', u'VBD'), (u'and', u'and', u'CC'), (u'liked', u'like', u'VBD'), (u'her', u'she', u'PRP'), (u'very', u'very', u'RB'), (u'much', u'much', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['Everyone', 'in', 'Ana', "'s", 'school', 'knew', 'and', 'liked', 'her', 'very', 'much', '.']}, {'string': ' She had a big dream of becoming spelling bee winner.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBD had) (NP (NP (DT a) (JJ big) (NN dream)) (PP (IN of) (S (VP (VBG becoming) (S (VP (VBG spelling) (NP (NN bee) (NN winner))))))))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'had', u'have', u'VBD'), (u'a', u'a', u'DT'), (u'big', u'big', u'JJ'), (u'dream', u'dream', u'NN'), (u'of', u'of', u'IN'), (u'becoming', u'become', u'VBG'), (u'spelling', u'spell', u'VBG'), (u'bee', u'bee', u'NN'), (u'winner', u'winner', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'had', 'a', 'big', 'dream', 'of', 'becoming', 'spelling', 'bee', 'winner', '.']}, {'string': ' Ana studied very hard to be the best she could be at spelling.', 'parse': {'tree': '(ROOT (S (NP (NNP Ana)) (VP (VBD studied) (ADJP (RB very) (JJ hard) (S (VP (TO to) (VP (VB be) (NP (NP (DT the) (JJS best)) (SBAR (S (NP (PRP she)) (VP (MD could) (VP (VB be) (PP (IN at) (NP (NN spelling))))))))))))) (. .)))', 'lemma': [(u'Ana', u'Ana', u'NNP'), (u'studied', u'study', u'VBD'), (u'very', u'very', u'RB'), (u'hard', u'hard', u'JJ'), (u'to', u'to', u'TO'), (u'be', u'be', u'VB'), (u'the', u'the', u'DT'), (u'best', u'best', u'JJS'), (u'she', u'she', u'PRP'), (u'could', u'could', u'MD'), (u'be', u'be', u'VB'), (u'at', u'at', u'IN'), (u'spelling', u'spelling', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Ana', 'studied', 'very', 'hard', 'to', 'be', 'the', 'best', 'she', 'could', 'be', 'at', 'spelling', '.']}, {'string': " Ana 's best friend would help her study every day after school.", 'parse': {'tree': "(ROOT (S (NP (NP (NNP Ana) (POS 's)) (JJS best) (NN friend)) (VP (MD would) (VP (VB help) (NP (PRP$ her) (NN study)) (NP (DT every) (NN day)) (PP (IN after) (NP (NN school))))) (. .)))", 'lemma': [(u'Ana', u'Ana', u'NNP'), (u"'s", u"'s", u'POS'), (u'best', u'best', u'JJS'), (u'friend', u'friend', u'NN'), (u'would', u'would', u'MD'), (u'help', u'help', u'VB'), (u'her', u'she', u'PRP$'), (u'study', u'study', u'NN'), (u'every', u'every', u'DT'), (u'day', u'day', u'NN'), (u'after', u'after', u'IN'), (u'school', u'school', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Ana', "'s", 'best', 'friend', 'would', 'help', 'her', 'study', 'every', 'day', 'after', 'school', '.']}, {'string': ' By the time the spelling bee arrived Ana and her best friend were sure she would win.', 'parse': {'tree': '(ROOT (S (PP (IN By) (NP (DT the) (NN time))) (NP (DT the) (NN spelling) (NN bee)) (VP (VBD arrived) (SBAR (S (NP (NP (NNP Ana)) (CC and) (NP (PRP$ her) (JJS best) (NN friend))) (VP (VBD were) (ADJP (JJ sure) (SBAR (S (NP (PRP she)) (VP (MD would) (VP (VB win)))))))))) (. .)))', 'lemma': [(u'By', u'by', u'IN'), (u'the', u'the', u'DT'), (u'time', u'time', u'NN'), (u'the', u'the', u'DT'), (u'spelling', u'spelling', u'NN'), (u'bee', u'bee', u'NN'), (u'arrived', u'arrive', u'VBD'), (u'Ana', u'Ana', u'NNP'), (u'and', u'and', u'CC'), (u'her', u'she', u'PRP$'), (u'best', u'best', u'JJS'), (u'friend', u'friend', u'NN'), (u'were', u'be', u'VBD'), (u'sure', u'sure', u'JJ'), (u'she', u'she', u'PRP'), (u'would', u'would', u'MD'), (u'win', u'win', u'VB'), (u'.', u'.', u'.')]}, 'tokens': ['By', 'the', 'time', 'the', 'spelling', 'bee', 'arrived', 'Ana', 'and', 'her', 'best', 'friend', 'were', 'sure', 'she', 'would', 'win', '.']}, {'string': ' There were ten students in the spelling bee.', 'parse': {'tree': '(ROOT (S (NP (EX There)) (VP (VBD were) (NP (NP (CD ten) (NNS students)) (PP (IN in) (NP (DT the) (NN spelling) (NN bee))))) (. .)))', 'lemma': [(u'There', u'there', u'EX'), (u'were', u'be', u'VBD'), (u'ten', u'ten', u'CD'), (u'students', u'student', u'NNS'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'spelling', u'spelling', u'NN'), (u'bee', u'bee', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['There', 'were', 'ten', 'students', 'in', 'the', 'spelling', 'bee', '.']}, {'string': ' This made Ana very nervous, but when she looked out and saw her dad cheering her on she knew she could do it.', 'parse': {'tree': '(ROOT (S (S (NP (DT This)) (VP (VBD made) (S (NP (NNP Ana)) (ADJP (RB very) (JJ nervous))))) (, ,) (CC but) (S (SBAR (WHADVP (WRB when)) (S (NP (PRP she)) (VP (VP (VBD looked) (PRT (RP out))) (CC and) (VP (VBD saw) (NP (PRP$ her) (NN dad)) (S (VP (VBG cheering) (NP (PRP her)) (PP (IN on) (NP (PRP she))))))))) (VP (VBD knew) (SBAR (S (NP (PRP she)) (VP (MD could) (VP (VB do) (NP (PRP it)))))))) (. .)))', 'lemma': [(u'This', u'this', u'DT'), (u'made', u'make', u'VBD'), (u'Ana', u'Ana', u'NNP'), (u'very', u'very', u'RB'), (u'nervous', u'nervous', u'JJ'), (u',', u',', u','), (u'but', u'but', u'CC'), (u'when', u'when', u'WRB'), (u'she', u'she', u'PRP'), (u'looked', u'look', u'VBD'), (u'out', u'out', u'RP'), (u'and', u'and', u'CC'), (u'saw', u'see', u'VBD'), (u'her', u'she', u'PRP$'), (u'dad', u'dad', u'NN'), (u'cheering', u'cheer', u'VBG'), (u'her', u'she', u'PRP'), (u'on', u'on', u'IN'), (u'she', u'she', u'PRP'), (u'knew', u'know', u'VBD'), (u'she', u'she', u'PRP'), (u'could', u'could', u'MD'), (u'do', u'do', u'VB'), (u'it', u'it', u'PRP'), (u'.', u'.', u'.')]}, 'tokens': ['This', 'made', 'Ana', 'very', 'nervous', ',', 'but', 'when', 'she', 'looked', 'out', 'and', 'saw', 'her', 'dad', 'cheering', 'her', 'on', 'she', 'knew', 'she', 'could', 'do', 'it', '.']}, {'string': ' The spelling bee had five rounds and Ana made it through them all.', 'parse': {'tree': '(ROOT (SINV (S (NP (DT The) (NN spelling) (NN bee)) (VP (VBD had) (NP (NP (CD five) (NNS rounds)) (CC and) (NP (NNP Ana))))) (VP (VBD made) (NP (PRP it)) (PP (IN through) (NP (PRP them)))) (NP (DT all)) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'spelling', u'spelling', u'NN'), (u'bee', u'bee', u'NN'), (u'had', u'have', u'VBD'), (u'five', u'five', u'CD'), (u'rounds', u'round', u'NNS'), (u'and', u'and', u'CC'), (u'Ana', u'Ana', u'NNP'), (u'made', u'make', u'VBD'), (u'it', u'it', u'PRP'), (u'through', u'through', u'IN'), (u'them', u'they', u'PRP'), (u'all', u'all', u'DT'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'spelling', 'bee', 'had', 'five', 'rounds', 'and', 'Ana', 'made', 'it', 'through', 'them', 'all', '.']}, {'string': ' She was now in the finals.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBD was) (ADVP (RB now)) (PP (IN in) (NP (DT the) (NNS finals)))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'was', u'be', u'VBD'), (u'now', u'now', u'RB'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'finals', u'final', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'was', 'now', 'in', 'the', 'finals', '.']}, {'string': ' During the final round James, the boy she was in the finals with, was given a really hard word and he spelled it wrong.', 'parse': {'tree': '(ROOT (S (PP (IN During) (NP (DT the) (JJ final) (NN round))) (S (NP (NP (NNP James)) (, ,) (NP (NP (DT the) (NN boy)) (SBAR (S (NP (PRP she)) (VP (VBD was) (PP (IN in) (NP (DT the) (NNS finals))) (PP (IN with)))))) (, ,)) (VP (VBD was) (VP (VBN given) (NP (DT a) (ADJP (RB really) (JJ hard)) (NN word))))) (CC and) (S (NP (PRP he)) (VP (VBN spelled) (S (NP (PRP it)) (ADJP (JJ wrong))))) (. .)))', 'lemma': [(u'During', u'during', u'IN'), (u'the', u'the', u'DT'), (u'final', u'final', u'JJ'), (u'round', u'round', u'NN'), (u'James', u'James', u'NNP'), (u',', u',', u','), (u'the', u'the', u'DT'), (u'boy', u'boy', u'NN'), (u'she', u'she', u'PRP'), (u'was', u'be', u'VBD'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'finals', u'final', u'NNS'), (u'with', u'with', u'IN'), (u',', u',', u','), (u'was', u'be', u'VBD'), (u'given', u'give', u'VBN'), (u'a', u'a', u'DT'), (u'really', u'really', u'RB'), (u'hard', u'hard', u'JJ'), (u'word', u'word', u'NN'), (u'and', u'and', u'CC'), (u'he', u'he', u'PRP'), (u'spelled', u'spell', u'VBN'), (u'it', u'it', u'PRP'), (u'wrong', u'wrong', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['During', 'the', 'final', 'round', 'James', ',', 'the', 'boy', 'she', 'was', 'in', 'the', 'finals', 'with', ',', 'was', 'given', 'a', 'really', 'hard', 'word', 'and', 'he', 'spelled', 'it', 'wrong', '.']}, {'string': ' All Ana had to do was spell this last word and she would be the winner.', 'parse': {'tree': '(ROOT (S (S (NP (DT All) (NNP Ana)) (VP (VBD had) (S (VP (TO to) (VP (VB do) (SBAR (S (VP (VBD was) (S (VP (VB spell) (NP (DT this) (JJ last) (NN word)))))))))))) (CC and) (S (NP (PRP she)) (VP (MD would) (VP (VB be) (NP (DT the) (NN winner))))) (. .)))', 'lemma': [(u'All', u'all', u'DT'), (u'Ana', u'Ana', u'NNP'), (u'had', u'have', u'VBD'), (u'to', u'to', u'TO'), (u'do', u'do', u'VB'), (u'was', u'be', u'VBD'), (u'spell', u'spell', u'VB'), (u'this', u'this', u'DT'), (u'last', u'last', u'JJ'), (u'word', u'word', u'NN'), (u'and', u'and', u'CC'), (u'she', u'she', u'PRP'), (u'would', u'would', u'MD'), (u'be', u'be', u'VB'), (u'the', u'the', u'DT'), (u'winner', u'winner', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['All', 'Ana', 'had', 'to', 'do', 'was', 'spell', 'this', 'last', 'word', 'and', 'she', 'would', 'be', 'the', 'winner', '.']}, {'string': ' Ana stepped to the microphone, thought really hard and spelled the word.', 'parse': {'tree': '(ROOT (S (NP (NNP Ana)) (VP (VBD stepped) (PP (TO to) (NP (NP (DT the) (NN microphone)) (, ,) (VP (VP (VBN thought) (S (ADJP (RB really) (JJ hard)))) (CC and) (VP (VBN spelled) (NP (DT the) (NN word))))))) (. .)))', 'lemma': [(u'Ana', u'Ana', u'NNP'), (u'stepped', u'step', u'VBD'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'microphone', u'microphone', u'NN'), (u',', u',', u','), (u'thought', u'think', u'VBN'), (u'really', u'really', u'RB'), (u'hard', u'hard', u'JJ'), (u'and', u'and', u'CC'), (u'spelled', u'spell', u'VBN'), (u'the', u'the', u'DT'), (u'word', u'word', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Ana', 'stepped', 'to', 'the', 'microphone', ',', 'thought', 'really', 'hard', 'and', 'spelled', 'the', 'word', '.']}, {'string': " She waited and finally her teacher said `` That is correct ''.", 'parse': {'tree': "(ROOT (S (S (NP (PRP She)) (VP (VBD waited))) (CC and) (S (ADVP (RB finally)) (NP (PRP$ her) (NN teacher)) (VP (VBD said) (S (`` ``) (NP (DT That)) (VP (VBZ is) (ADJP (JJ correct))) ('' '')))) (. .)))", 'lemma': [(u'She', u'she', u'PRP'), (u'waited', u'wait', u'VBD'), (u'and', u'and', u'CC'), (u'finally', u'finally', u'RB'), (u'her', u'she', u'PRP$'), (u'teacher', u'teacher', u'NN'), (u'said', u'say', u'VBD'), (u'``', u'``', u'``'), (u'That', u'that', u'DT'), (u'is', u'be', u'VBZ'), (u'correct', u'correct', u'JJ'), (u"''", u"''", u"''"), (u'.', u'.', u'.')]}, 'tokens': ['She', 'waited', 'and', 'finally', 'her', 'teacher', 'said', '``', 'That', 'is', 'correct', "''", '.']}, {'string': ' Ana had won the spelling bee.', 'parse': {'tree': '(ROOT (S (NP (NNP Ana)) (VP (VBD had) (VP (VBN won) (NP (DT the) (NN spelling) (NN bee)))) (. .)))', 'lemma': [(u'Ana', u'Ana', u'NNP'), (u'had', u'have', u'VBD'), (u'won', u'win', u'VBN'), (u'the', u'the', u'DT'), (u'spelling', u'spelling', u'NN'), (u'bee', u'bee', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Ana', 'had', 'won', 'the', 'spelling', 'bee', '.']}, {'string': ' Ana was so happy.', 'parse': {'tree': '(ROOT (S (NP (NNP Ana)) (VP (VBD was) (ADJP (RB so) (JJ happy))) (. .)))', 'lemma': [(u'Ana', u'Ana', u'NNP'), (u'was', u'be', u'VBD'), (u'so', u'so', u'RB'), (u'happy', u'happy', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['Ana', 'was', 'so', 'happy', '.']}, {'string': ' She won a trophy.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBD won) (NP (DT a) (NN trophy))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'won', u'win', u'VBD'), (u'a', u'a', u'DT'), (u'trophy', u'trophy', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'won', 'a', 'trophy', '.']}, {'string': ' Ana also won a big yellow ribbon.', 'parse': {'tree': '(ROOT (S (NP (NNP Ana)) (ADVP (RB also)) (VP (VBD won) (NP (DT a) (JJ big) (JJ yellow) (NN ribbon))) (. .)))', 'lemma': [(u'Ana', u'Ana', u'NNP'), (u'also', u'also', u'RB'), (u'won', u'win', u'VBD'), (u'a', u'a', u'DT'), (u'big', u'big', u'JJ'), (u'yellow', u'yellow', u'JJ'), (u'ribbon', u'ribbon', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Ana', 'also', 'won', 'a', 'big', 'yellow', 'ribbon', '.']}, {'string': ' The whole school was also happy, and everyone clapped for her.', 'parse': {'tree': '(ROOT (S (S (NP (DT The) (JJ whole) (NN school)) (VP (VBD was) (ADVP (RB also)) (ADJP (JJ happy)))) (, ,) (CC and) (S (NP (NN everyone)) (VP (VBD clapped) (PP (IN for) (NP (PRP her))))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'whole', u'whole', u'JJ'), (u'school', u'school', u'NN'), (u'was', u'be', u'VBD'), (u'also', u'also', u'RB'), (u'happy', u'happy', u'JJ'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'everyone', u'everyone', u'NN'), (u'clapped', u'clap', u'VBD'), (u'for', u'for', u'IN'), (u'her', u'she', u'PRP'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'whole', 'school', 'was', 'also', 'happy', ',', 'and', 'everyone', 'clapped', 'for', 'her', '.']}, {'string': ' The whole school went outside.', 'parse': {'tree': '(ROOT (S (NP (DT The) (JJ whole) (NN school)) (VP (VBD went) (ADVP (RB outside))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'whole', u'whole', u'JJ'), (u'school', u'school', u'NN'), (u'went', u'go', u'VBD'), (u'outside', u'outside', u'RB'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'whole', 'school', 'went', 'outside', '.']}, {'string': ' They had a picnic to celebrate Ana winning.', 'parse': {'tree': '(ROOT (S (NP (PRP They)) (VP (VBD had) (NP (DT a) (NN picnic) (S (VP (TO to) (VP (VB celebrate) (NP (NNP Ana) (VBG winning))))))) (. .)))', 'lemma': [(u'They', u'they', u'PRP'), (u'had', u'have', u'VBD'), (u'a', u'a', u'DT'), (u'picnic', u'picnic', u'NN'), (u'to', u'to', u'TO'), (u'celebrate', u'celebrate', u'VB'), (u'Ana', u'Ana', u'NNP'), (u'winning', u'win', u'VBG'), (u'.', u'.', u'.')]}, 'tokens': ['They', 'had', 'a', 'picnic', 'to', 'celebrate', 'Ana', 'winning', '.']}], 'questions': [{'question': {'string': ' What made Ana very nervous?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VP (VBD made) (S (NP (NNP Ana)) (ADJP (RB very) (JJ nervous))))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'made', u'make', u'VBD'), (u'Ana', u'Ana', u'NNP'), (u'very', u'very', u'RB'), (u'nervous', u'nervous', u'JJ'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'made', 'Ana', 'very', 'nervous', '?']}, 'answers': [{'string': ' The other ten students', 'parse': {'tree': '(ROOT (NP (NP (DT The) (JJ other)) (NP (CD ten) (NNS students))))', 'lemma': [(u'The', u'the', u'DT'), (u'other', u'other', u'JJ'), (u'ten', u'ten', u'CD'), (u'students', u'student', u'NNS')]}, 'tokens': ['The', 'other', 'ten', 'students']}, {'string': ' Her best friend', 'parse': {'tree': '(ROOT (NP (NP (PRP$ Her) (JJS best)) (NP (NN friend))))', 'lemma': [(u'Her', u'she', u'PRP$'), (u'best', u'best', u'JJS'), (u'friend', u'friend', u'NN')]}, 'tokens': ['Her', 'best', 'friend']}, {'string': ' The bright lights', 'parse': {'tree': '(ROOT (FRAG (NP (DT The) (JJ bright) (NNS lights))))', 'lemma': [(u'The', u'the', u'DT'), (u'bright', u'bright', u'JJ'), (u'lights', u'light', u'NNS')]}, 'tokens': ['The', 'bright', 'lights']}, {'string': ' The big stage', 'parse': {'tree': '(ROOT (FRAG (NP (DT The) (JJ big) (NN stage))))', 'lemma': [(u'The', u'the', u'DT'), (u'big', u'big', u'JJ'), (u'stage', u'stage', u'NN')]}, 'tokens': ['The', 'big', 'stage']}], 'mode': 0}, {'question': {'string': ' Where did the school have the picnic?', 'parse': {'tree': '(ROOT (SBARQ (WHADVP (WRB Where)) (SQ (VBD did) (NP (DT the) (NN school)) (VP (VB have) (NP (DT the) (NN picnic)))) (. ?)))', 'lemma': [(u'Where', u'where', u'WRB'), (u'did', u'do', u'VBD'), (u'the', u'the', u'DT'), (u'school', u'school', u'NN'), (u'have', u'have', u'VB'), (u'the', u'the', u'DT'), (u'picnic', u'picnic', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['Where', 'did', 'the', 'school', 'have', 'the', 'picnic', '?']}, 'answers': [{'string': ' The gym', 'parse': {'tree': '(ROOT (FRAG (NP (DT The) (NN gym))))', 'lemma': [(u'The', u'the', u'DT'), (u'gym', u'gym', u'NN')]}, 'tokens': ['The', 'gym']}, {'string': " Ana 's house", 'parse': {'tree': "(ROOT (NP (NP (NNP Ana) (POS 's)) (NN house)))", 'lemma': [(u'Ana', u'Ana', u'NNP'), (u"'s", u"'s", u'POS'), (u'house', u'house', u'NN')]}, 'tokens': ['Ana', "'s", 'house']}, {'string': ' Outside', 'parse': {'tree': '(ROOT (ADVP (JJ Outside)))', 'lemma': [(u'Outside', u'outside', u'JJ')]}, 'tokens': ['Outside']}, {'string': " Ana 's classroom", 'parse': {'tree': "(ROOT (NP (NP (NNP Ana) (POS 's)) (NN classroom)))", 'lemma': [(u'Ana', u'Ana', u'NNP'), (u"'s", u"'s", u'POS'), (u'classroom', u'classroom', u'NN')]}, 'tokens': ['Ana', "'s", 'classroom']}], 'mode': 0}, {'question': {'string': " What was Ana 's big dream?", 'parse': {'tree': "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD was) (NP (NP (NNP Ana) (POS 's)) (JJ big) (NN dream))) (. ?)))", 'lemma': [(u'What', u'what', u'WP'), (u'was', u'be', u'VBD'), (u'Ana', u'Ana', u'NNP'), (u"'s", u"'s", u'POS'), (u'big', u'big', u'JJ'), (u'dream', u'dream', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'was', 'Ana', "'s", 'big', 'dream', '?']}, 'answers': [{'string': ' Becoming a ballerina', 'parse': {'tree': '(ROOT (S (VP (VBG Becoming) (NP (DT a) (NN ballerina)))))', 'lemma': [(u'Becoming', u'become', u'VBG'), (u'a', u'a', u'DT'), (u'ballerina', u'ballerina', u'NN')]}, 'tokens': ['Becoming', 'a', 'ballerina']}, {'string': ' Becoming a famous singer', 'parse': {'tree': '(ROOT (S (VP (VBG Becoming) (NP (DT a) (JJ famous) (NN singer)))))', 'lemma': [(u'Becoming', u'become', u'VBG'), (u'a', u'a', u'DT'), (u'famous', u'famous', u'JJ'), (u'singer', u'singer', u'NN')]}, 'tokens': ['Becoming', 'a', 'famous', 'singer']}, {'string': ' Becoming class president', 'parse': {'tree': '(ROOT (S (VP (VBG Becoming) (NP (NN class) (NN president)))))', 'lemma': [(u'Becoming', u'become', u'VBG'), (u'class', u'class', u'NN'), (u'president', u'president', u'NN')]}, 'tokens': ['Becoming', 'class', 'president']}, {'string': ' Becoming spelling bee winner', 'parse': {'tree': '(ROOT (S (VP (VBG Becoming) (S (VP (VBG spelling) (NP (NN bee) (NN winner)))))))', 'lemma': [(u'Becoming', u'become', u'VBG'), (u'spelling', u'spell', u'VBG'), (u'bee', u'bee', u'NN'), (u'winner', u'winner', u'NN')]}, 'tokens': ['Becoming', 'spelling', 'bee', 'winner']}], 'mode': 1}, {'question': {'string': ' Who helped Ana study everyday?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP Who)) (SQ (VP (VBD helped) (NP (NNP Ana) (NN study)) (NP (NN everyday)))) (. ?)))', 'lemma': [(u'Who', u'who', u'WP'), (u'helped', u'help', u'VBD'), (u'Ana', u'Ana', u'NNP'), (u'study', u'study', u'NN'), (u'everyday', u'everyday', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['Who', 'helped', 'Ana', 'study', 'everyday', '?']}, 'answers': [{'string': ' Her dad', 'parse': {'tree': '(ROOT (FRAG (NP (PRP$ Her) (NN dad))))', 'lemma': [(u'Her', u'she', u'PRP$'), (u'dad', u'dad', u'NN')]}, 'tokens': ['Her', 'dad']}, {'string': ' Her best friend', 'parse': {'tree': '(ROOT (NP (NP (PRP$ Her) (JJS best)) (NP (NN friend))))', 'lemma': [(u'Her', u'she', u'PRP$'), (u'best', u'best', u'JJS'), (u'friend', u'friend', u'NN')]}, 'tokens': ['Her', 'best', 'friend']}, {'string': ' Her mom', 'parse': {'tree': '(ROOT (FRAG (NP (PRP$ Her) (NN mom))))', 'lemma': [(u'Her', u'she', u'PRP$'), (u'mom', u'mom', u'NN')]}, 'tokens': ['Her', 'mom']}, {'string': ' Her sister', 'parse': {'tree': '(ROOT (FRAG (NP (PRP$ Her) (NN sister))))', 'lemma': [(u'Her', u'she', u'PRP$'), (u'sister', u'sister', u'NN')]}, 'tokens': ['Her', 'sister']}], 'mode': 1}]}
{'sentences': [{'string': ' Roger was a grasshopper.', 'parse': {'tree': '(ROOT (S (NP (NNP Roger)) (VP (VBD was) (NP (DT a) (NN grasshopper))) (. .)))', 'lemma': [(u'Roger', u'Roger', u'NNP'), (u'was', u'be', u'VBD'), (u'a', u'a', u'DT'), (u'grasshopper', u'grasshopper', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Roger', 'was', 'a', 'grasshopper', '.']}, {'string': ' He loved to hop.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD loved) (PP (TO to) (NP (NN hop)))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'loved', u'love', u'VBD'), (u'to', u'to', u'TO'), (u'hop', u'hop', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'loved', 'to', 'hop', '.']}, {'string': ' He hopped everywhere by himself.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD hopped) (ADVP (RB everywhere)) (PP (IN by) (NP (PRP himself)))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'hopped', u'hop', u'VBD'), (u'everywhere', u'everywhere', u'RB'), (u'by', u'by', u'IN'), (u'himself', u'himself', u'PRP'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'hopped', 'everywhere', 'by', 'himself', '.']}, {'string': ' One day when he was hopping around he bumped into a frog sitting on a log.', 'parse': {'tree': '(ROOT (S (NP (CD One) (NN day) (SBAR (WHADVP (WRB when)) (S (NP (PRP he)) (VP (VBD was) (VP (VBG hopping) (PRT (RP around)) (NP (PRP he))))))) (VP (VBD bumped) (PP (IN into) (NP (NP (DT a) (NN frog)) (VP (VBG sitting) (PP (IN on) (NP (DT a) (NN log))))))) (. .)))', 'lemma': [(u'One', u'one', u'CD'), (u'day', u'day', u'NN'), (u'when', u'when', u'WRB'), (u'he', u'he', u'PRP'), (u'was', u'be', u'VBD'), (u'hopping', u'hop', u'VBG'), (u'around', u'around', u'RP'), (u'he', u'he', u'PRP'), (u'bumped', u'bump', u'VBD'), (u'into', u'into', u'IN'), (u'a', u'a', u'DT'), (u'frog', u'frog', u'NN'), (u'sitting', u'sit', u'VBG'), (u'on', u'on', u'IN'), (u'a', u'a', u'DT'), (u'log', u'log', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['One', 'day', 'when', 'he', 'was', 'hopping', 'around', 'he', 'bumped', 'into', 'a', 'frog', 'sitting', 'on', 'a', 'log', '.']}, {'string': ' The frog told him his name was Gilbert.', 'parse': {'tree': '(ROOT (S (NP (DT The) (NN frog)) (VP (VBD told) (NP (PRP him)) (SBAR (S (NP (PRP$ his) (NN name)) (VP (VBD was) (NP (NNP Gilbert)))))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'frog', u'frog', u'NN'), (u'told', u'tell', u'VBD'), (u'him', u'he', u'PRP'), (u'his', u'he', u'PRP$'), (u'name', u'name', u'NN'), (u'was', u'be', u'VBD'), (u'Gilbert', u'Gilbert', u'NNP'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'frog', 'told', 'him', 'his', 'name', 'was', 'Gilbert', '.']}, {'string': ' Gilbert told Roger that it had been a long time since he bumped into anybody.', 'parse': {'tree': '(ROOT (S (NP (NNP Gilbert)) (VP (VBD told) (NP (NNP Roger)) (SBAR (IN that) (S (NP (PRP it)) (VP (VBD had) (VP (VBN been) (NP (DT a) (JJ long) (NN time)) (SBAR (IN since) (S (NP (PRP he)) (VP (VBD bumped) (PP (IN into) (NP (NN anybody))))))))))) (. .)))', 'lemma': [(u'Gilbert', u'Gilbert', u'NNP'), (u'told', u'tell', u'VBD'), (u'Roger', u'Roger', u'NNP'), (u'that', u'that', u'IN'), (u'it', u'it', u'PRP'), (u'had', u'have', u'VBD'), (u'been', u'be', u'VBN'), (u'a', u'a', u'DT'), (u'long', u'long', u'JJ'), (u'time', u'time', u'NN'), (u'since', u'since', u'IN'), (u'he', u'he', u'PRP'), (u'bumped', u'bump', u'VBD'), (u'into', u'into', u'IN'), (u'anybody', u'anybody', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Gilbert', 'told', 'Roger', 'that', 'it', 'had', 'been', 'a', 'long', 'time', 'since', 'he', 'bumped', 'into', 'anybody', '.']}, {'string': ' Roger told him that since both grasshoppers and frogs like to jump they would make great friends.', 'parse': {'tree': '(ROOT (S (NP (NNP Roger)) (VP (VBD told) (NP (PRP him)) (SBAR (IN that) (IN since) (S (NP (DT both) (NNS grasshoppers) (CC and) (NNS frogs)) (VP (VBP like) (S (VP (TO to) (VP (VB jump) (SBAR (S (NP (PRP they)) (VP (MD would) (VP (VB make) (NP (JJ great) (NNS friends))))))))))))) (. .)))', 'lemma': [(u'Roger', u'Roger', u'NNP'), (u'told', u'tell', u'VBD'), (u'him', u'he', u'PRP'), (u'that', u'that', u'IN'), (u'since', u'since', u'IN'), (u'both', u'both', u'DT'), (u'grasshoppers', u'grasshopper', u'NNS'), (u'and', u'and', u'CC'), (u'frogs', u'frog', u'NNS'), (u'like', u'like', u'VBP'), (u'to', u'to', u'TO'), (u'jump', u'jump', u'VB'), (u'they', u'they', u'PRP'), (u'would', u'would', u'MD'), (u'make', u'make', u'VB'), (u'great', u'great', u'JJ'), (u'friends', u'friend', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['Roger', 'told', 'him', 'that', 'since', 'both', 'grasshoppers', 'and', 'frogs', 'like', 'to', 'jump', 'they', 'would', 'make', 'great', 'friends', '.']}, {'string': ' The next day they were hopping through a field and they saw something very strange.', 'parse': {'tree': '(ROOT (S (NP (DT The) (JJ next) (NN day)) (S (NP (PRP they)) (VP (VBD were) (VP (VBG hopping) (PP (IN through) (NP (DT a) (NN field)))))) (CC and) (S (NP (PRP they)) (VP (VBD saw) (NP (NP (NN something)) (ADJP (RB very) (JJ strange))))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'next', u'next', u'JJ'), (u'day', u'day', u'NN'), (u'they', u'they', u'PRP'), (u'were', u'be', u'VBD'), (u'hopping', u'hop', u'VBG'), (u'through', u'through', u'IN'), (u'a', u'a', u'DT'), (u'field', u'field', u'NN'), (u'and', u'and', u'CC'), (u'they', u'they', u'PRP'), (u'saw', u'see', u'VBD'), (u'something', u'something', u'NN'), (u'very', u'very', u'RB'), (u'strange', u'strange', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'next', 'day', 'they', 'were', 'hopping', 'through', 'a', 'field', 'and', 'they', 'saw', 'something', 'very', 'strange', '.']}, {'string': ' In a pond they saw a spider floating on a lily pad.', 'parse': {'tree': '(ROOT (S (PP (IN In) (NP (DT a) (NN pond))) (NP (PRP they)) (VP (VBD saw) (NP (NP (DT a) (NN spider)) (VP (VBG floating) (PP (IN on) (NP (DT a) (NN lily) (NN pad)))))) (. .)))', 'lemma': [(u'In', u'in', u'IN'), (u'a', u'a', u'DT'), (u'pond', u'pond', u'NN'), (u'they', u'they', u'PRP'), (u'saw', u'see', u'VBD'), (u'a', u'a', u'DT'), (u'spider', u'spider', u'NN'), (u'floating', u'float', u'VBG'), (u'on', u'on', u'IN'), (u'a', u'a', u'DT'), (u'lily', u'lily', u'NN'), (u'pad', u'pad', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['In', 'a', 'pond', 'they', 'saw', 'a', 'spider', 'floating', 'on', 'a', 'lily', 'pad', '.']}, {'string': ' The spider was very sad because he did not have any friends.', 'parse': {'tree': '(ROOT (S (NP (DT The) (NN spider)) (VP (VBD was) (ADJP (RB very) (JJ sad)) (SBAR (IN because) (S (NP (PRP he)) (VP (VBD did) (RB not) (VP (VB have) (NP (DT any) (NNS friends))))))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'spider', u'spider', u'NN'), (u'was', u'be', u'VBD'), (u'very', u'very', u'RB'), (u'sad', u'sad', u'JJ'), (u'because', u'because', u'IN'), (u'he', u'he', u'PRP'), (u'did', u'do', u'VBD'), (u'not', u'not', u'RB'), (u'have', u'have', u'VB'), (u'any', u'any', u'DT'), (u'friends', u'friend', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'spider', 'was', 'very', 'sad', 'because', 'he', 'did', 'not', 'have', 'any', 'friends', '.']}, {'string': " Roger and Gilbert asked him why he did n't have any friends.", 'parse': {'tree': "(ROOT (S (NP (NNP Roger) (CC and) (NNP Gilbert)) (VP (VBD asked) (NP (PRP him)) (SBAR (WHADVP (WRB why)) (S (NP (PRP he)) (VP (VBD did) (RB n't) (VP (VB have) (NP (DT any) (NNS friends))))))) (. .)))", 'lemma': [(u'Roger', u'Roger', u'NNP'), (u'and', u'and', u'CC'), (u'Gilbert', u'Gilbert', u'NNP'), (u'asked', u'ask', u'VBD'), (u'him', u'he', u'PRP'), (u'why', u'why', u'WRB'), (u'he', u'he', u'PRP'), (u'did', u'do', u'VBD'), (u"n't", u'not', u'RB'), (u'have', u'have', u'VB'), (u'any', u'any', u'DT'), (u'friends', u'friend', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['Roger', 'and', 'Gilbert', 'asked', 'him', 'why', 'he', 'did', "n't", 'have', 'any', 'friends', '.']}, {'string': ' The spider told them that everybody would scream and run away when they saw him.', 'parse': {'tree': '(ROOT (S (NP (DT The) (NN spider)) (VP (VBD told) (NP (PRP them)) (SBAR (IN that) (S (NP (NN everybody)) (VP (MD would) (VP (VP (VB scream)) (CC and) (VP (VB run) (PRT (RP away)) (SBAR (WHADVP (WRB when)) (S (NP (PRP they)) (VP (VBD saw) (NP (PRP him))))))))))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'spider', u'spider', u'NN'), (u'told', u'tell', u'VBD'), (u'them', u'they', u'PRP'), (u'that', u'that', u'IN'), (u'everybody', u'everybody', u'NN'), (u'would', u'would', u'MD'), (u'scream', u'scream', u'VB'), (u'and', u'and', u'CC'), (u'run', u'run', u'VB'), (u'away', u'away', u'RP'), (u'when', u'when', u'WRB'), (u'they', u'they', u'PRP'), (u'saw', u'see', u'VBD'), (u'him', u'he', u'PRP'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'spider', 'told', 'them', 'that', 'everybody', 'would', 'scream', 'and', 'run', 'away', 'when', 'they', 'saw', 'him', '.']}, {'string': " Roger and Gilbert told him that he did n't look scary to them and that he could come along with them if he wanted.", 'parse': {'tree': "(ROOT (S (NP (NNP Roger) (CC and) (NNP Gilbert)) (VP (VBD told) (NP (PRP him)) (SBAR (SBAR (IN that) (S (NP (PRP he)) (VP (VBD did) (RB n't) (VP (VB look) (ADJP (JJ scary) (PP (TO to) (NP (PRP them)))))))) (CC and) (SBAR (IN that) (S (NP (PRP he)) (VP (MD could) (VP (VB come) (PRT (RP along)) (PP (IN with) (NP (PRP them))) (SBAR (IN if) (S (NP (PRP he)) (VP (VBD wanted)))))))))) (. .)))", 'lemma': [(u'Roger', u'Roger', u'NNP'), (u'and', u'and', u'CC'), (u'Gilbert', u'Gilbert', u'NNP'), (u'told', u'tell', u'VBD'), (u'him', u'he', u'PRP'), (u'that', u'that', u'IN'), (u'he', u'he', u'PRP'), (u'did', u'do', u'VBD'), (u"n't", u'not', u'RB'), (u'look', u'look', u'VB'), (u'scary', u'scary', u'JJ'), (u'to', u'to', u'TO'), (u'them', u'they', u'PRP'), (u'and', u'and', u'CC'), (u'that', u'that', u'IN'), (u'he', u'he', u'PRP'), (u'could', u'could', u'MD'), (u'come', u'come', u'VB'), (u'along', u'along', u'RP'), (u'with', u'with', u'IN'), (u'them', u'they', u'PRP'), (u'if', u'if', u'IN'), (u'he', u'he', u'PRP'), (u'wanted', u'want', u'VBD'), (u'.', u'.', u'.')]}, 'tokens': ['Roger', 'and', 'Gilbert', 'told', 'him', 'that', 'he', 'did', "n't", 'look', 'scary', 'to', 'them', 'and', 'that', 'he', 'could', 'come', 'along', 'with', 'them', 'if', 'he', 'wanted', '.']}, {'string': ' So Sam the spider said yes, and the three of them began a life time friendship full of adventures.', 'parse': {'tree': '(ROOT (S (CC So) (S (NP (NP (NNP Sam)) (NP (DT the) (NN spider))) (VP (VBD said) (INTJ (UH yes)))) (, ,) (CC and) (S (NP (NP (DT the) (CD three)) (PP (IN of) (NP (PRP them)))) (VP (VBD began) (NP (NP (DT a) (NN life) (NN time) (NN friendship)) (PP (JJ full) (IN of) (NP (NNS adventures)))))) (. .)))', 'lemma': [(u'So', u'so', u'CC'), (u'Sam', u'Sam', u'NNP'), (u'the', u'the', u'DT'), (u'spider', u'spider', u'NN'), (u'said', u'say', u'VBD'), (u'yes', u'yes', u'UH'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'the', u'the', u'DT'), (u'three', u'three', u'CD'), (u'of', u'of', u'IN'), (u'them', u'they', u'PRP'), (u'began', u'begin', u'VBD'), (u'a', u'a', u'DT'), (u'life', u'life', u'NN'), (u'time', u'time', u'NN'), (u'friendship', u'friendship', u'NN'), (u'full', u'full', u'JJ'), (u'of', u'of', u'IN'), (u'adventures', u'adventure', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['So', 'Sam', 'the', 'spider', 'said', 'yes', ',', 'and', 'the', 'three', 'of', 'them', 'began', 'a', 'life', 'time', 'friendship', 'full', 'of', 'adventures', '.']}], 'questions': [{'question': {'string': ' What did Roger like to do?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD did) (NP (NNP Roger)) (VP (VB like) (S (VP (TO to) (VP (VB do)))))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'did', u'do', u'VBD'), (u'Roger', u'Roger', u'NNP'), (u'like', u'like', u'VB'), (u'to', u'to', u'TO'), (u'do', u'do', u'VB'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'did', 'Roger', 'like', 'to', 'do', '?']}, 'answers': [{'string': ' Bump.', 'parse': {'tree': '(ROOT (S (VP (VB Bump)) (. .)))', 'lemma': [(u'Bump', u'bump', u'VB'), (u'.', u'.', u'.')]}, 'tokens': ['Bump', '.']}, {'string': ' Hop.', 'parse': {'tree': '(ROOT (S (VP (VB Hop)) (. .)))', 'lemma': [(u'Hop', u'hop', u'VB'), (u'.', u'.', u'.')]}, 'tokens': ['Hop', '.']}, {'string': ' Swim.', 'parse': {'tree': '(ROOT (S (VP (VB Swim)) (. .)))', 'lemma': [(u'Swim', u'swim', u'VB'), (u'.', u'.', u'.')]}, 'tokens': ['Swim', '.']}, {'string': ' Float.', 'parse': {'tree': '(ROOT (S (VP (VB Float)) (. .)))', 'lemma': [(u'Float', u'float', u'VB'), (u'.', u'.', u'.')]}, 'tokens': ['Float', '.']}], 'mode': 0}, {'question': {'string': ' What was the spider sitting on in the pond?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD was) (NP (DT the) (NN spider)) (VP (VBG sitting) (PRT (RP on)) (PP (IN in) (NP (DT the) (NN pond))))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'was', u'be', u'VBD'), (u'the', u'the', u'DT'), (u'spider', u'spider', u'NN'), (u'sitting', u'sit', u'VBG'), (u'on', u'on', u'RP'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'pond', u'pond', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'was', 'the', 'spider', 'sitting', 'on', 'in', 'the', 'pond', '?']}, 'answers': [{'string': ' branch', 'parse': {'tree': '(ROOT (NP (NN branch)))', 'lemma': [(u'branch', u'branch', u'NN')]}, 'tokens': ['branch']}, {'string': ' Lily pad', 'parse': {'tree': '(ROOT (NP (NNP Lily) (NNP pad)))', 'lemma': [(u'Lily', u'Lily', u'NNP'), (u'pad', u'pad', u'NNP')]}, 'tokens': ['Lily', 'pad']}, {'string': ' land', 'parse': {'tree': '(ROOT (NP (NN land)))', 'lemma': [(u'land', u'land', u'NN')]}, 'tokens': ['land']}, {'string': ' log', 'parse': {'tree': '(ROOT (S (VP (VB log))))', 'lemma': [(u'log', u'log', u'VB')]}, 'tokens': ['log']}], 'mode': 1}, {'question': {'string': ' What character is not in the story?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WDT What) (NN character)) (SQ (VP (VBZ is) (RB not) (PP (IN in) (NP (DT the) (NN story))))) (. ?)))', 'lemma': [(u'What', u'what', u'WDT'), (u'character', u'character', u'NN'), (u'is', u'be', u'VBZ'), (u'not', u'not', u'RB'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'story', u'story', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'character', 'is', 'not', 'in', 'the', 'story', '?']}, 'answers': [{'string': ' spider', 'parse': {'tree': '(ROOT (NP (NN spider)))', 'lemma': [(u'spider', u'spider', u'NN')]}, 'tokens': ['spider']}, {'string': ' lady bug', 'parse': {'tree': '(ROOT (NP (NN lady) (NN bug)))', 'lemma': [(u'lady', u'lady', u'NN'), (u'bug', u'bug', u'NN')]}, 'tokens': ['lady', 'bug']}, {'string': ' grasshopper', 'parse': {'tree': '(ROOT (NP (NN grasshopper)))', 'lemma': [(u'grasshopper', u'grasshopper', u'NN')]}, 'tokens': ['grasshopper']}, {'string': ' frog', 'parse': {'tree': '(ROOT (NP (NN frog)))', 'lemma': [(u'frog', u'frog', u'NN')]}, 'tokens': ['frog']}], 'mode': 0}, {'question': {'string': " What was the spider 's name?", 'parse': {'tree': "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD was) (NP (NP (DT the) (NN spider) (POS 's)) (NN name))) (. ?)))", 'lemma': [(u'What', u'what', u'WP'), (u'was', u'be', u'VBD'), (u'the', u'the', u'DT'), (u'spider', u'spider', u'NN'), (u"'s", u"'s", u'POS'), (u'name', u'name', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'was', 'the', 'spider', "'s", 'name', '?']}, 'answers': [{'string': ' Roger', 'parse': {'tree': '(ROOT (NP (NNP Roger)))', 'lemma': [(u'Roger', u'Roger', u'NNP')]}, 'tokens': ['Roger']}, {'string': ' Sarah', 'parse': {'tree': '(ROOT (NP (NNP Sarah)))', 'lemma': [(u'Sarah', u'Sarah', u'NNP')]}, 'tokens': ['Sarah']}, {'string': ' Gilbert', 'parse': {'tree': '(ROOT (NP (NNP Gilbert)))', 'lemma': [(u'Gilbert', u'Gilbert', u'NNP')]}, 'tokens': ['Gilbert']}, {'string': ' Sam', 'parse': {'tree': '(ROOT (NP (NNP Sam)))', 'lemma': [(u'Sam', u'Sam', u'NNP')]}, 'tokens': ['Sam']}], 'mode': 1}]}
{'sentences': [{'string': ' The cute red ball rolled over to the blue ball and said hello.', 'parse': {'tree': '(ROOT (S (NP (DT The) (ADJP (JJ cute) (JJ red)) (NN ball)) (VP (VP (VBD rolled) (PRT (RP over)) (PP (TO to) (NP (DT the) (JJ blue) (NN ball)))) (CC and) (VP (VBD said) (NP (UH hello)))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'cute', u'cute', u'JJ'), (u'red', u'red', u'JJ'), (u'ball', u'ball', u'NN'), (u'rolled', u'roll', u'VBD'), (u'over', u'over', u'RP'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'blue', u'blue', u'JJ'), (u'ball', u'ball', u'NN'), (u'and', u'and', u'CC'), (u'said', u'say', u'VBD'), (u'hello', u'hello', u'UH'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'cute', 'red', 'ball', 'rolled', 'over', 'to', 'the', 'blue', 'ball', 'and', 'said', 'hello', '.']}, {'string': ' The blue ball was scared and went to cry to the green ball.', 'parse': {'tree': '(ROOT (S (NP (DT The) (JJ blue) (NN ball)) (VP (VP (VBD was) (ADJP (VBN scared))) (CC and) (VP (VBD went) (S (VP (TO to) (VP (VB cry) (PP (TO to) (NP (DT the) (JJ green) (NN ball)))))))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'blue', u'blue', u'JJ'), (u'ball', u'ball', u'NN'), (u'was', u'be', u'VBD'), (u'scared', u'scare', u'VBN'), (u'and', u'and', u'CC'), (u'went', u'go', u'VBD'), (u'to', u'to', u'TO'), (u'cry', u'cry', u'VB'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'green', u'green', u'JJ'), (u'ball', u'ball', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'blue', 'ball', 'was', 'scared', 'and', 'went', 'to', 'cry', 'to', 'the', 'green', 'ball', '.']}, {'string': ' The green ball laughed at the blue ball.', 'parse': {'tree': '(ROOT (S (NP (DT The) (JJ green) (NN ball)) (VP (VBD laughed) (PP (IN at) (NP (DT the) (JJ blue) (NN ball)))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'green', u'green', u'JJ'), (u'ball', u'ball', u'NN'), (u'laughed', u'laugh', u'VBD'), (u'at', u'at', u'IN'), (u'the', u'the', u'DT'), (u'blue', u'blue', u'JJ'), (u'ball', u'ball', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'green', 'ball', 'laughed', 'at', 'the', 'blue', 'ball', '.']}, {'string': ' Then the green ball told the orange ball that blue ball was stupid.', 'parse': {'tree': '(ROOT (S (RB Then) (NP (DT the) (JJ green) (NN ball)) (VP (VBD told) (NP (DT the) (JJ orange) (NN ball)) (SBAR (IN that) (S (NP (JJ blue) (NN ball)) (VP (VBD was) (ADJP (JJ stupid)))))) (. .)))', 'lemma': [(u'Then', u'then', u'RB'), (u'the', u'the', u'DT'), (u'green', u'green', u'JJ'), (u'ball', u'ball', u'NN'), (u'told', u'tell', u'VBD'), (u'the', u'the', u'DT'), (u'orange', u'orange', u'JJ'), (u'ball', u'ball', u'NN'), (u'that', u'that', u'IN'), (u'blue', u'blue', u'JJ'), (u'ball', u'ball', u'NN'), (u'was', u'be', u'VBD'), (u'stupid', u'stupid', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['Then', 'the', 'green', 'ball', 'told', 'the', 'orange', 'ball', 'that', 'blue', 'ball', 'was', 'stupid', '.']}, {'string': ' Most felt this was not good to do and so they punished the green ball by taking away all his air.', 'parse': {'tree': '(ROOT (S (S (NP (JJS Most)) (VP (VBD felt) (SBAR (S (NP (DT this)) (VP (VBD was) (RB not) (ADJP (JJ good) (S (VP (TO to) (VP (VB do)))))))))) (CC and) (RB so) (S (NP (PRP they)) (VP (VBN punished) (NP (DT the) (JJ green) (NN ball)) (PP (IN by) (S (VP (VBG taking) (PRT (RP away)) (NP (PDT all) (PRP$ his) (NN air))))))) (. .)))', 'lemma': [(u'Most', u'most', u'JJS'), (u'felt', u'feel', u'VBD'), (u'this', u'this', u'DT'), (u'was', u'be', u'VBD'), (u'not', u'not', u'RB'), (u'good', u'good', u'JJ'), (u'to', u'to', u'TO'), (u'do', u'do', u'VB'), (u'and', u'and', u'CC'), (u'so', u'so', u'RB'), (u'they', u'they', u'PRP'), (u'punished', u'punish', u'VBN'), (u'the', u'the', u'DT'), (u'green', u'green', u'JJ'), (u'ball', u'ball', u'NN'), (u'by', u'by', u'IN'), (u'taking', u'take', u'VBG'), (u'away', u'away', u'RP'), (u'all', u'all', u'PDT'), (u'his', u'he', u'PRP$'), (u'air', u'air', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Most', 'felt', 'this', 'was', 'not', 'good', 'to', 'do', 'and', 'so', 'they', 'punished', 'the', 'green', 'ball', 'by', 'taking', 'away', 'all', 'his', 'air', '.']}, {'string': ' From that day on everyone saw the air-less green ball and knew that they could not do or say any bad things.', 'parse': {'tree': '(ROOT (S (PP (IN From) (NP (DT that))) (NP (NN day)) (PP (IN on) (NP (NN everyone))) (VP (VP (VBD saw) (NP (DT the) (JJ air-less) (JJ green) (NN ball))) (CC and) (VP (VBD knew) (SBAR (IN that) (S (NP (PRP they)) (VP (MD could) (RB not) (VP (VB do) (CC or) (VB say) (NP (DT any) (JJ bad) (NNS things)))))))) (. .)))', 'lemma': [(u'From', u'from', u'IN'), (u'that', u'that', u'DT'), (u'day', u'day', u'NN'), (u'on', u'on', u'IN'), (u'everyone', u'everyone', u'NN'), (u'saw', u'see', u'VBD'), (u'the', u'the', u'DT'), (u'air-less', u'air-less', u'JJ'), (u'green', u'green', u'JJ'), (u'ball', u'ball', u'NN'), (u'and', u'and', u'CC'), (u'knew', u'know', u'VBD'), (u'that', u'that', u'IN'), (u'they', u'they', u'PRP'), (u'could', u'could', u'MD'), (u'not', u'not', u'RB'), (u'do', u'do', u'VB'), (u'or', u'or', u'CC'), (u'say', u'say', u'VB'), (u'any', u'any', u'DT'), (u'bad', u'bad', u'JJ'), (u'things', u'thing', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['From', 'that', 'day', 'on', 'everyone', 'saw', 'the', 'air-less', 'green', 'ball', 'and', 'knew', 'that', 'they', 'could', 'not', 'do', 'or', 'say', 'any', 'bad', 'things', '.']}, {'string': ' This is how the trouble started.', 'parse': {'tree': '(ROOT (S (NP (DT This)) (VP (VBZ is) (SBAR (WHADVP (WRB how)) (S (NP (DT the) (NN trouble)) (VP (VBD started))))) (. .)))', 'lemma': [(u'This', u'this', u'DT'), (u'is', u'be', u'VBZ'), (u'how', u'how', u'WRB'), (u'the', u'the', u'DT'), (u'trouble', u'trouble', u'NN'), (u'started', u'start', u'VBD'), (u'.', u'.', u'.')]}, 'tokens': ['This', 'is', 'how', 'the', 'trouble', 'started', '.']}, {'string': ' The purple ball used the fear of everyone to become the leader that they all feared.', 'parse': {'tree': '(ROOT (S (NP (DT The) (JJ purple) (NN ball)) (VP (VBD used) (NP (NP (DT the) (NN fear)) (PP (IN of) (NP (NN everyone)))) (S (VP (TO to) (VP (VB become) (NP (DT the) (NN leader)) (SBAR (IN that) (S (NP (PRP they)) (ADVP (DT all)) (VP (VBD feared)))))))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'purple', u'purple', u'JJ'), (u'ball', u'ball', u'NN'), (u'used', u'use', u'VBD'), (u'the', u'the', u'DT'), (u'fear', u'fear', u'NN'), (u'of', u'of', u'IN'), (u'everyone', u'everyone', u'NN'), (u'to', u'to', u'TO'), (u'become', u'become', u'VB'), (u'the', u'the', u'DT'), (u'leader', u'leader', u'NN'), (u'that', u'that', u'IN'), (u'they', u'they', u'PRP'), (u'all', u'all', u'DT'), (u'feared', u'fear', u'VBD'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'purple', 'ball', 'used', 'the', 'fear', 'of', 'everyone', 'to', 'become', 'the', 'leader', 'that', 'they', 'all', 'feared', '.']}, {'string': ' The purple ball was mean to everyone.', 'parse': {'tree': '(ROOT (S (NP (DT The) (JJ purple) (NN ball)) (VP (VBD was) (S (VP (VB mean) (PP (TO to) (NP (NN everyone)))))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'purple', u'purple', u'JJ'), (u'ball', u'ball', u'NN'), (u'was', u'be', u'VBD'), (u'mean', u'mean', u'VB'), (u'to', u'to', u'TO'), (u'everyone', u'everyone', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'purple', 'ball', 'was', 'mean', 'to', 'everyone', '.']}, {'string': ' Until one day the red ball spoke up and got all the other colored balls together and they took the air from the purple ball and put it in the green ball.', 'parse': {'tree': '(ROOT (S (S (PP (IN Until) (NP (CD one) (NN day))) (NP (DT the) (JJ red) (NN ball)) (VP (VP (VBD spoke) (PRT (RP up))) (CC and) (VP (VBD got) (S (NP (PDT all) (DT the) (JJ other) (JJ colored) (NNS balls)) (ADJP (RB together)))))) (CC and) (S (NP (PRP they)) (VP (VP (VBD took) (NP (DT the) (NN air)) (PP (IN from) (NP (DT the) (JJ purple) (NN ball)))) (CC and) (VP (VBD put) (NP (PRP it)) (PP (IN in) (NP (DT the) (JJ green) (NN ball)))))) (. .)))', 'lemma': [(u'Until', u'until', u'IN'), (u'one', u'one', u'CD'), (u'day', u'day', u'NN'), (u'the', u'the', u'DT'), (u'red', u'red', u'JJ'), (u'ball', u'ball', u'NN'), (u'spoke', u'speak', u'VBD'), (u'up', u'up', u'RP'), (u'and', u'and', u'CC'), (u'got', u'get', u'VBD'), (u'all', u'all', u'PDT'), (u'the', u'the', u'DT'), (u'other', u'other', u'JJ'), (u'colored', u'colored', u'JJ'), (u'balls', u'ball', u'NNS'), (u'together', u'together', u'RB'), (u'and', u'and', u'CC'), (u'they', u'they', u'PRP'), (u'took', u'take', u'VBD'), (u'the', u'the', u'DT'), (u'air', u'air', u'NN'), (u'from', u'from', u'IN'), (u'the', u'the', u'DT'), (u'purple', u'purple', u'JJ'), (u'ball', u'ball', u'NN'), (u'and', u'and', u'CC'), (u'put', u'put', u'VBD'), (u'it', u'it', u'PRP'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'green', u'green', u'JJ'), (u'ball', u'ball', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Until', 'one', 'day', 'the', 'red', 'ball', 'spoke', 'up', 'and', 'got', 'all', 'the', 'other', 'colored', 'balls', 'together', 'and', 'they', 'took', 'the', 'air', 'from', 'the', 'purple', 'ball', 'and', 'put', 'it', 'in', 'the', 'green', 'ball', '.']}, {'string': ' Sadly, the green ball had been without air for too long and was dead.', 'parse': {'tree': '(ROOT (S (ADVP (RB Sadly)) (, ,) (NP (DT the) (JJ green) (NN ball)) (VP (VP (VBD had) (VP (VBN been) (PP (IN without) (NP (NN air))) (PP (IN for) (ADJP (RB too) (JJ long))))) (CC and) (VP (VBD was) (ADJP (JJ dead)))) (. .)))', 'lemma': [(u'Sadly', u'sadly', u'RB'), (u',', u',', u','), (u'the', u'the', u'DT'), (u'green', u'green', u'JJ'), (u'ball', u'ball', u'NN'), (u'had', u'have', u'VBD'), (u'been', u'be', u'VBN'), (u'without', u'without', u'IN'), (u'air', u'air', u'NN'), (u'for', u'for', u'IN'), (u'too', u'too', u'RB'), (u'long', u'long', u'JJ'), (u'and', u'and', u'CC'), (u'was', u'be', u'VBD'), (u'dead', u'dead', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['Sadly', ',', 'the', 'green', 'ball', 'had', 'been', 'without', 'air', 'for', 'too', 'long', 'and', 'was', 'dead', '.']}], 'questions': [{'question': {'string': ' What color ball was the third brought up in the story?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WDT What) (NN color) (NN ball)) (SQ (VBD was) (NP (DT the) (JJ third)) (VP (VBN brought) (PRT (RP up)) (PP (IN in) (NP (DT the) (NN story))))) (. ?)))', 'lemma': [(u'What', u'what', u'WDT'), (u'color', u'color', u'NN'), (u'ball', u'ball', u'NN'), (u'was', u'be', u'VBD'), (u'the', u'the', u'DT'), (u'third', u'third', u'JJ'), (u'brought', u'bring', u'VBN'), (u'up', u'up', u'RP'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'story', u'story', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'color', 'ball', 'was', 'the', 'third', 'brought', 'up', 'in', 'the', 'story', '?']}, 'answers': [{'string': ' green', 'parse': {'tree': '(ROOT (ADJP (JJ green)))', 'lemma': [(u'green', u'green', u'JJ')]}, 'tokens': ['green']}, {'string': ' blue', 'parse': {'tree': '(ROOT (ADJP (JJ blue)))', 'lemma': [(u'blue', u'blue', u'JJ')]}, 'tokens': ['blue']}, {'string': ' red', 'parse': {'tree': '(ROOT (NP (NN red)))', 'lemma': [(u'red', u'red', u'NN')]}, 'tokens': ['red']}, {'string': ' purple', 'parse': {'tree': '(ROOT (INTJ (UH purple)))', 'lemma': [(u'purple', u'purple', u'UH')]}, 'tokens': ['purple']}], 'mode': 0}, {'question': {'string': ' Which color ball became the leader?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WDT Which) (NN color) (NN ball)) (SQ (VP (VBD became) (NP (DT the) (NN leader)))) (. ?)))', 'lemma': [(u'Which', u'which', u'WDT'), (u'color', u'color', u'NN'), (u'ball', u'ball', u'NN'), (u'became', u'become', u'VBD'), (u'the', u'the', u'DT'), (u'leader', u'leader', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['Which', 'color', 'ball', 'became', 'the', 'leader', '?']}, 'answers': [{'string': ' green', 'parse': {'tree': '(ROOT (ADJP (JJ green)))', 'lemma': [(u'green', u'green', u'JJ')]}, 'tokens': ['green']}, {'string': ' blue', 'parse': {'tree': '(ROOT (ADJP (JJ blue)))', 'lemma': [(u'blue', u'blue', u'JJ')]}, 'tokens': ['blue']}, {'string': ' red', 'parse': {'tree': '(ROOT (NP (NN red)))', 'lemma': [(u'red', u'red', u'NN')]}, 'tokens': ['red']}, {'string': ' purple', 'parse': {'tree': '(ROOT (INTJ (UH purple)))', 'lemma': [(u'purple', u'purple', u'UH')]}, 'tokens': ['purple']}], 'mode': 1}, {'question': {'string': ' What color of ball scared the blue ball?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WHNP (WDT What) (NN color)) (PP (IN of) (NP (NN ball)))) (SQ (VP (VBD scared) (NP (DT the) (JJ blue) (NN ball)))) (. ?)))', 'lemma': [(u'What', u'what', u'WDT'), (u'color', u'color', u'NN'), (u'of', u'of', u'IN'), (u'ball', u'ball', u'NN'), (u'scared', u'scare', u'VBD'), (u'the', u'the', u'DT'), (u'blue', u'blue', u'JJ'), (u'ball', u'ball', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'color', 'of', 'ball', 'scared', 'the', 'blue', 'ball', '?']}, 'answers': [{'string': ' purple', 'parse': {'tree': '(ROOT (INTJ (UH purple)))', 'lemma': [(u'purple', u'purple', u'UH')]}, 'tokens': ['purple']}, {'string': ' red', 'parse': {'tree': '(ROOT (NP (NN red)))', 'lemma': [(u'red', u'red', u'NN')]}, 'tokens': ['red']}, {'string': ' orange', 'parse': {'tree': '(ROOT (NP (NN orange)))', 'lemma': [(u'orange', u'orange', u'NN')]}, 'tokens': ['orange']}, {'string': ' green', 'parse': {'tree': '(ROOT (ADJP (JJ green)))', 'lemma': [(u'green', u'green', u'JJ')]}, 'tokens': ['green']}], 'mode': 0}, {'question': {'string': ' At they end of the story, what was the state of the green ball.', 'parse': {'tree': '(ROOT (S (PP (IN At) (NP (NP (PRP they) (NN end)) (PP (IN of) (NP (DT the) (NN story))))) (, ,) (NP (WDT what)) (VP (VBD was) (NP (NP (DT the) (NN state)) (PP (IN of) (NP (DT the) (JJ green) (NN ball))))) (. .)))', 'lemma': [(u'At', u'at', u'IN'), (u'they', u'they', u'PRP'), (u'end', u'end', u'NN'), (u'of', u'of', u'IN'), (u'the', u'the', u'DT'), (u'story', u'story', u'NN'), (u',', u',', u','), (u'what', u'what', u'WDT'), (u'was', u'be', u'VBD'), (u'the', u'the', u'DT'), (u'state', u'state', u'NN'), (u'of', u'of', u'IN'), (u'the', u'the', u'DT'), (u'green', u'green', u'JJ'), (u'ball', u'ball', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['At', 'they', 'end', 'of', 'the', 'story', ',', 'what', 'was', 'the', 'state', 'of', 'the', 'green', 'ball', '.']}, 'answers': [{'string': ' cute', 'parse': {'tree': '(ROOT (ADJP (JJ cute)))', 'lemma': [(u'cute', u'cute', u'JJ')]}, 'tokens': ['cute']}, {'string': ' dead', 'parse': {'tree': '(ROOT (ADJP (JJ dead)))', 'lemma': [(u'dead', u'dead', u'JJ')]}, 'tokens': ['dead']}, {'string': ' fear', 'parse': {'tree': '(ROOT (NP (NN fear)))', 'lemma': [(u'fear', u'fear', u'NN')]}, 'tokens': ['fear']}, {'string': ' taking', 'parse': {'tree': '(ROOT (S (VP (VBG taking))))', 'lemma': [(u'taking', u'take', u'VBG')]}, 'tokens': ['taking']}], 'mode': 1}]}
{'sentences': [{'string': ' Sara wanted to play on a baseball team.', 'parse': {'tree': '(ROOT (S (NP (NNP Sara)) (VP (VBD wanted) (S (VP (TO to) (VP (VB play) (PP (IN on) (NP (DT a) (NN baseball) (NN team))))))) (. .)))', 'lemma': [(u'Sara', u'Sara', u'NNP'), (u'wanted', u'want', u'VBD'), (u'to', u'to', u'TO'), (u'play', u'play', u'VB'), (u'on', u'on', u'IN'), (u'a', u'a', u'DT'), (u'baseball', u'baseball', u'NN'), (u'team', u'team', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Sara', 'wanted', 'to', 'play', 'on', 'a', 'baseball', 'team', '.']}, {'string': ' She had never tried to swing a bat and hit a baseball before.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBD had) (ADVP (RB never)) (VP (VBN tried) (S (VP (TO to) (VP (VP (VB swing) (NP (DT a) (NN bat))) (CC and) (VP (VB hit) (NP (DT a) (NN baseball)) (ADVP (RB before)))))))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'had', u'have', u'VBD'), (u'never', u'never', u'RB'), (u'tried', u'try', u'VBN'), (u'to', u'to', u'TO'), (u'swing', u'swing', u'VB'), (u'a', u'a', u'DT'), (u'bat', u'bat', u'NN'), (u'and', u'and', u'CC'), (u'hit', u'hit', u'VB'), (u'a', u'a', u'DT'), (u'baseball', u'baseball', u'NN'), (u'before', u'before', u'RB'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'had', 'never', 'tried', 'to', 'swing', 'a', 'bat', 'and', 'hit', 'a', 'baseball', 'before', '.']}, {'string': ' Her Dad gave her a bat and together they went to the park to practice.', 'parse': {'tree': '(ROOT (S (S (NP (PRP$ Her) (NN Dad)) (VP (VBD gave) (NP (PRP her)) (NP (DT a) (NN bat)))) (CC and) (S (ADVP (RB together)) (NP (PRP they)) (VP (VBD went) (PP (TO to) (NP (DT the) (NN park))) (PP (TO to) (NP (NN practice))))) (. .)))', 'lemma': [(u'Her', u'she', u'PRP$'), (u'Dad', u'dad', u'NN'), (u'gave', u'give', u'VBD'), (u'her', u'she', u'PRP'), (u'a', u'a', u'DT'), (u'bat', u'bat', u'NN'), (u'and', u'and', u'CC'), (u'together', u'together', u'RB'), (u'they', u'they', u'PRP'), (u'went', u'go', u'VBD'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'park', u'park', u'NN'), (u'to', u'to', u'TO'), (u'practice', u'practice', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Her', 'Dad', 'gave', 'her', 'a', 'bat', 'and', 'together', 'they', 'went', 'to', 'the', 'park', 'to', 'practice', '.']}, {'string': ' Sara wondered if she could hit a ball.', 'parse': {'tree': '(ROOT (S (NP (NNP Sara)) (VP (VBD wondered) (SBAR (IN if) (S (NP (PRP she)) (VP (MD could) (VP (VB hit) (NP (DT a) (NN ball))))))) (. .)))', 'lemma': [(u'Sara', u'Sara', u'NNP'), (u'wondered', u'wonder', u'VBD'), (u'if', u'if', u'IN'), (u'she', u'she', u'PRP'), (u'could', u'could', u'MD'), (u'hit', u'hit', u'VB'), (u'a', u'a', u'DT'), (u'ball', u'ball', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Sara', 'wondered', 'if', 'she', 'could', 'hit', 'a', 'ball', '.']}, {'string': " She was n't sure if she would be any good.", 'parse': {'tree': "(ROOT (S (NP (PRP She)) (VP (VBD was) (RB n't) (ADJP (JJ sure)) (SBAR (IN if) (S (NP (PRP she)) (VP (MD would) (VP (VB be) (ADJP (RB any) (JJ good))))))) (. .)))", 'lemma': [(u'She', u'she', u'PRP'), (u'was', u'be', u'VBD'), (u"n't", u'not', u'RB'), (u'sure', u'sure', u'JJ'), (u'if', u'if', u'IN'), (u'she', u'she', u'PRP'), (u'would', u'would', u'MD'), (u'be', u'be', u'VB'), (u'any', u'any', u'RB'), (u'good', u'good', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'was', "n't", 'sure', 'if', 'she', 'would', 'be', 'any', 'good', '.']}, {'string': ' She really wanted to play on a team and wear a real uniform.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (ADVP (RB really)) (VP (VBD wanted) (S (VP (TO to) (VP (VP (VB play) (PP (IN on) (NP (DT a) (NN team)))) (CC and) (VP (VB wear) (NP (DT a) (JJ real) (NN uniform))))))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'really', u'really', u'RB'), (u'wanted', u'want', u'VBD'), (u'to', u'to', u'TO'), (u'play', u'play', u'VB'), (u'on', u'on', u'IN'), (u'a', u'a', u'DT'), (u'team', u'team', u'NN'), (u'and', u'and', u'CC'), (u'wear', u'wear', u'VB'), (u'a', u'a', u'DT'), (u'real', u'real', u'JJ'), (u'uniform', u'uniform', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'really', 'wanted', 'to', 'play', 'on', 'a', 'team', 'and', 'wear', 'a', 'real', 'uniform', '.']}, {'string': " She could n't wait to get to the park and test out her bat.", 'parse': {'tree': "(ROOT (S (NP (PRP She)) (VP (MD could) (RB n't) (VP (VB wait) (S (VP (TO to) (VP (VP (VB get) (PP (TO to) (NP (DT the) (NN park)))) (CC and) (VP (NN test) (PRT (RP out)) (NP (PRP$ her) (NN bat)))))))) (. .)))", 'lemma': [(u'She', u'she', u'PRP'), (u'could', u'could', u'MD'), (u"n't", u'not', u'RB'), (u'wait', u'wait', u'VB'), (u'to', u'to', u'TO'), (u'get', u'get', u'VB'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'park', u'park', u'NN'), (u'and', u'and', u'CC'), (u'test', u'test', u'NN'), (u'out', u'out', u'RP'), (u'her', u'she', u'PRP$'), (u'bat', u'bat', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'could', "n't", 'wait', 'to', 'get', 'to', 'the', 'park', 'and', 'test', 'out', 'her', 'bat', '.']}, {'string': ' When Sara and her Dad reached the park, Sara grabbed the bat and stood a few steps away from her Dad.', 'parse': {'tree': '(ROOT (S (SBAR (WHADVP (WRB When)) (S (NP (NP (NNP Sara)) (CC and) (NP (PRP$ her) (NNP Dad))) (VP (VBD reached) (NP (DT the) (NN park))))) (, ,) (NP (NNP Sara)) (VP (VP (VBD grabbed) (NP (DT the) (NN bat))) (CC and) (VP (VBD stood) (NP (DT a) (JJ few) (NNS steps)) (PRT (RP away)) (PP (IN from) (NP (PRP$ her) (NN Dad))))) (. .)))', 'lemma': [(u'When', u'when', u'WRB'), (u'Sara', u'Sara', u'NNP'), (u'and', u'and', u'CC'), (u'her', u'she', u'PRP$'), (u'Dad', u'Dad', u'NNP'), (u'reached', u'reach', u'VBD'), (u'the', u'the', u'DT'), (u'park', u'park', u'NN'), (u',', u',', u','), (u'Sara', u'Sara', u'NNP'), (u'grabbed', u'grab', u'VBD'), (u'the', u'the', u'DT'), (u'bat', u'bat', u'NN'), (u'and', u'and', u'CC'), (u'stood', u'stand', u'VBD'), (u'a', u'a', u'DT'), (u'few', u'few', u'JJ'), (u'steps', u'step', u'NNS'), (u'away', u'away', u'RP'), (u'from', u'from', u'IN'), (u'her', u'she', u'PRP$'), (u'Dad', u'dad', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['When', 'Sara', 'and', 'her', 'Dad', 'reached', 'the', 'park', ',', 'Sara', 'grabbed', 'the', 'bat', 'and', 'stood', 'a', 'few', 'steps', 'away', 'from', 'her', 'Dad', '.']}, {'string': ' Sara waited as her Dad pitched the ball to her.', 'parse': {'tree': '(ROOT (S (NP (NNP Sara)) (VP (VBD waited) (SBAR (IN as) (S (NP (PRP$ her) (NN Dad)) (VP (VBD pitched) (NP (DT the) (NN ball)) (PP (TO to) (NP (PRP her))))))) (. .)))', 'lemma': [(u'Sara', u'Sara', u'NNP'), (u'waited', u'wait', u'VBD'), (u'as', u'as', u'IN'), (u'her', u'she', u'PRP$'), (u'Dad', u'dad', u'NN'), (u'pitched', u'pitch', u'VBD'), (u'the', u'the', u'DT'), (u'ball', u'ball', u'NN'), (u'to', u'to', u'TO'), (u'her', u'she', u'PRP'), (u'.', u'.', u'.')]}, 'tokens': ['Sara', 'waited', 'as', 'her', 'Dad', 'pitched', 'the', 'ball', 'to', 'her', '.']}, {'string': ' Her heart was beating fast.', 'parse': {'tree': '(ROOT (S (NP (PRP$ Her) (NN heart)) (VP (VBD was) (VP (VBG beating) (ADVP (RB fast)))) (. .)))', 'lemma': [(u'Her', u'she', u'PRP$'), (u'heart', u'heart', u'NN'), (u'was', u'be', u'VBD'), (u'beating', u'beat', u'VBG'), (u'fast', u'fast', u'RB'), (u'.', u'.', u'.')]}, 'tokens': ['Her', 'heart', 'was', 'beating', 'fast', '.']}, {'string': ' She missed the first few pitches.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBD missed) (NP (DT the) (JJ first) (JJ few) (NNS pitches))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'missed', u'miss', u'VBD'), (u'the', u'the', u'DT'), (u'first', u'first', u'JJ'), (u'few', u'few', u'JJ'), (u'pitches', u'pitch', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'missed', 'the', 'first', 'few', 'pitches', '.']}, {'string': ' She felt like quitting but kept trying.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VP (VBD felt) (PP (IN like) (NP (NN quitting)))) (CC but) (VP (VBD kept) (S (VP (VBG trying))))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'felt', u'feel', u'VBD'), (u'like', u'like', u'IN'), (u'quitting', u'quitting', u'NN'), (u'but', u'but', u'CC'), (u'kept', u'keep', u'VBD'), (u'trying', u'try', u'VBG'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'felt', 'like', 'quitting', 'but', 'kept', 'trying', '.']}, {'string': ' Soon she was hitting the ball very far.', 'parse': {'tree': '(ROOT (S (ADVP (RB Soon)) (NP (PRP she)) (VP (VBD was) (VP (VBG hitting) (NP (DT the) (NN ball)) (ADVP (RB very) (RB far)))) (. .)))', 'lemma': [(u'Soon', u'soon', u'RB'), (u'she', u'she', u'PRP'), (u'was', u'be', u'VBD'), (u'hitting', u'hit', u'VBG'), (u'the', u'the', u'DT'), (u'ball', u'ball', u'NN'), (u'very', u'very', u'RB'), (u'far', u'far', u'RB'), (u'.', u'.', u'.')]}, 'tokens': ['Soon', 'she', 'was', 'hitting', 'the', 'ball', 'very', 'far', '.']}, {'string': " She was very happy and she could n't wait to sign up for a real team.", 'parse': {'tree': "(ROOT (S (S (NP (PRP She)) (VP (VBD was) (ADJP (RB very) (JJ happy)))) (CC and) (S (NP (PRP she)) (VP (MD could) (RB n't) (VP (VB wait) (S (VP (TO to) (VP (VB sign) (PRT (RP up)) (PP (IN for) (NP (DT a) (JJ real) (NN team))))))))) (. .)))", 'lemma': [(u'She', u'she', u'PRP'), (u'was', u'be', u'VBD'), (u'very', u'very', u'RB'), (u'happy', u'happy', u'JJ'), (u'and', u'and', u'CC'), (u'she', u'she', u'PRP'), (u'could', u'could', u'MD'), (u"n't", u'not', u'RB'), (u'wait', u'wait', u'VB'), (u'to', u'to', u'TO'), (u'sign', u'sign', u'VB'), (u'up', u'up', u'RP'), (u'for', u'for', u'IN'), (u'a', u'a', u'DT'), (u'real', u'real', u'JJ'), (u'team', u'team', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'was', 'very', 'happy', 'and', 'she', 'could', "n't", 'wait', 'to', 'sign', 'up', 'for', 'a', 'real', 'team', '.']}, {'string': ' Her Dad was very proud of her for not giving up.', 'parse': {'tree': '(ROOT (S (NP (PRP$ Her) (NN Dad)) (VP (VBD was) (ADJP (RB very) (JJ proud) (PP (IN of) (NP (PRP her)))) (PP (IN for) (S (RB not) (VP (VBG giving) (PRT (RP up)))))) (. .)))', 'lemma': [(u'Her', u'she', u'PRP$'), (u'Dad', u'dad', u'NN'), (u'was', u'be', u'VBD'), (u'very', u'very', u'RB'), (u'proud', u'proud', u'JJ'), (u'of', u'of', u'IN'), (u'her', u'she', u'PRP'), (u'for', u'for', u'IN'), (u'not', u'not', u'RB'), (u'giving', u'give', u'VBG'), (u'up', u'up', u'RP'), (u'.', u'.', u'.')]}, 'tokens': ['Her', 'Dad', 'was', 'very', 'proud', 'of', 'her', 'for', 'not', 'giving', 'up', '.']}], 'questions': [{'question': {'string': ' Why was Sara practicing?', 'parse': {'tree': '(ROOT (SBARQ (WHADVP (WRB Why)) (SQ (VBD was) (NP (NNP Sara)) (VP (VBG practicing))) (. ?)))', 'lemma': [(u'Why', u'why', u'WRB'), (u'was', u'be', u'VBD'), (u'Sara', u'Sara', u'NNP'), (u'practicing', u'practice', u'VBG'), (u'?', u'?', u'.')]}, 'tokens': ['Why', 'was', 'Sara', 'practicing', '?']}, 'answers': [{'string': ' She wanted to show off', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBD wanted) (S (VP (TO to) (VP (VB show) (PRT (RP off))))))))', 'lemma': [(u'She', u'she', u'PRP'), (u'wanted', u'want', u'VBD'), (u'to', u'to', u'TO'), (u'show', u'show', u'VB'), (u'off', u'off', u'RP')]}, 'tokens': ['She', 'wanted', 'to', 'show', 'off']}, {'string': " She did n't want to do her homework", 'parse': {'tree': "(ROOT (S (NP (PRP She)) (VP (VBD did) (RB n't) (VP (VB want) (S (VP (TO to) (VP (VB do) (NP (PRP$ her) (NN homework)))))))))", 'lemma': [(u'She', u'she', u'PRP'), (u'did', u'do', u'VBD'), (u"n't", u'not', u'RB'), (u'want', u'want', u'VB'), (u'to', u'to', u'TO'), (u'do', u'do', u'VB'), (u'her', u'she', u'PRP$'), (u'homework', u'homework', u'NN')]}, 'tokens': ['She', 'did', "n't", 'want', 'to', 'do', 'her', 'homework']}, {'string': ' She wanted to play on a team', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBD wanted) (S (VP (TO to) (VP (VB play) (PP (IN on) (NP (DT a) (NN team)))))))))', 'lemma': [(u'She', u'she', u'PRP'), (u'wanted', u'want', u'VBD'), (u'to', u'to', u'TO'), (u'play', u'play', u'VB'), (u'on', u'on', u'IN'), (u'a', u'a', u'DT'), (u'team', u'team', u'NN')]}, 'tokens': ['She', 'wanted', 'to', 'play', 'on', 'a', 'team']}, {'string': ' She was bored', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBD was) (ADJP (VBN bored)))))', 'lemma': [(u'She', u'she', u'PRP'), (u'was', u'be', u'VBD'), (u'bored', u'bore', u'VBN')]}, 'tokens': ['She', 'was', 'bored']}], 'mode': 0}, {'question': {'string': ' Who pitched the ball to Sara?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP Who)) (SQ (VP (VBD pitched) (NP (DT the) (NN ball)) (PP (TO to) (NP (NNP Sara))))) (. ?)))', 'lemma': [(u'Who', u'who', u'WP'), (u'pitched', u'pitch', u'VBD'), (u'the', u'the', u'DT'), (u'ball', u'ball', u'NN'), (u'to', u'to', u'TO'), (u'Sara', u'Sara', u'NNP'), (u'?', u'?', u'.')]}, 'tokens': ['Who', 'pitched', 'the', 'ball', 'to', 'Sara', '?']}, 'answers': [{'string': ' Her Mom', 'parse': {'tree': '(ROOT (FRAG (NP (PRP$ Her) (NN Mom))))', 'lemma': [(u'Her', u'she', u'PRP$'), (u'Mom', u'mom', u'NN')]}, 'tokens': ['Her', 'Mom']}, {'string': ' Her Sister', 'parse': {'tree': '(ROOT (NP (NNP Her) (NNP Sister)))', 'lemma': [(u'Her', u'Her', u'NNP'), (u'Sister', u'Sister', u'NNP')]}, 'tokens': ['Her', 'Sister']}, {'string': ' Her Dad', 'parse': {'tree': '(ROOT (NP (NNP Her) (NNP Dad)))', 'lemma': [(u'Her', u'Her', u'NNP'), (u'Dad', u'Dad', u'NNP')]}, 'tokens': ['Her', 'Dad']}, {'string': ' Her Brother', 'parse': {'tree': '(ROOT (NP (NNP Her) (NNP Brother)))', 'lemma': [(u'Her', u'Her', u'NNP'), (u'Brother', u'Brother', u'NNP')]}, 'tokens': ['Her', 'Brother']}], 'mode': 1}, {'question': {'string': " Why was Sara 's Dad proud of her?", 'parse': {'tree': "(ROOT (SBARQ (WHADVP (WRB Why)) (SQ (VBD was) (NP (NP (NP (NNP Sara) (POS 's)) (NNP Dad) (NNP proud)) (PP (IN of) (NP (PRP her))))) (. ?)))", 'lemma': [(u'Why', u'why', u'WRB'), (u'was', u'be', u'VBD'), (u'Sara', u'Sara', u'NNP'), (u"'s", u"'s", u'POS'), (u'Dad', u'Dad', u'NNP'), (u'proud', u'proud', u'NNP'), (u'of', u'of', u'IN'), (u'her', u'she', u'PRP'), (u'?', u'?', u'.')]}, 'tokens': ['Why', 'was', 'Sara', "'s", 'Dad', 'proud', 'of', 'her', '?']}, 'answers': [{'string': " She did n't get dirty", 'parse': {'tree': "(ROOT (S (NP (PRP She)) (VP (VBD did) (RB n't) (VP (VB get) (ADJP (JJ dirty))))))", 'lemma': [(u'She', u'she', u'PRP'), (u'did', u'do', u'VBD'), (u"n't", u'not', u'RB'), (u'get', u'get', u'VB'), (u'dirty', u'dirty', u'JJ')]}, 'tokens': ['She', 'did', "n't", 'get', 'dirty']}, {'string': " She did n't break the bat", 'parse': {'tree': "(ROOT (S (NP (PRP She)) (VP (VBD did) (RB n't) (VP (VB break) (NP (DT the) (NN bat))))))", 'lemma': [(u'She', u'she', u'PRP'), (u'did', u'do', u'VBD'), (u"n't", u'not', u'RB'), (u'break', u'break', u'VB'), (u'the', u'the', u'DT'), (u'bat', u'bat', u'NN')]}, 'tokens': ['She', 'did', "n't", 'break', 'the', 'bat']}, {'string': " She did n't quit", 'parse': {'tree': "(ROOT (S (NP (PRP She)) (VP (VBD did) (RB n't) (VP (VB quit)))))", 'lemma': [(u'She', u'she', u'PRP'), (u'did', u'do', u'VBD'), (u"n't", u'not', u'RB'), (u'quit', u'quit', u'VB')]}, 'tokens': ['She', 'did', "n't", 'quit']}, {'string': ' She was better than her Dad', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBD was) (ADJP (JJR better)) (PP (IN than) (NP (PRP$ her) (NN Dad))))))', 'lemma': [(u'She', u'she', u'PRP'), (u'was', u'be', u'VBD'), (u'better', u'better', u'JJR'), (u'than', u'than', u'IN'), (u'her', u'she', u'PRP$'), (u'Dad', u'dad', u'NN')]}, 'tokens': ['She', 'was', 'better', 'than', 'her', 'Dad']}], 'mode': 0}, {'question': {'string': ' Where did Sara go to practice hitting the ball?', 'parse': {'tree': '(ROOT (SBARQ (WHADVP (WRB Where)) (SQ (VBD did) (NP (NNP Sara)) (VP (VB go) (S (VP (TO to) (VP (VB practice) (S (VP (VBG hitting) (NP (DT the) (NN ball))))))))) (. ?)))', 'lemma': [(u'Where', u'where', u'WRB'), (u'did', u'do', u'VBD'), (u'Sara', u'Sara', u'NNP'), (u'go', u'go', u'VB'), (u'to', u'to', u'TO'), (u'practice', u'practice', u'VB'), (u'hitting', u'hit', u'VBG'), (u'the', u'the', u'DT'), (u'ball', u'ball', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['Where', 'did', 'Sara', 'go', 'to', 'practice', 'hitting', 'the', 'ball', '?']}, 'answers': [{'string': ' A stadium', 'parse': {'tree': '(ROOT (FRAG (NP (DT A) (NN stadium))))', 'lemma': [(u'A', u'a', u'DT'), (u'stadium', u'stadium', u'NN')]}, 'tokens': ['A', 'stadium']}, {'string': ' Her yard', 'parse': {'tree': '(ROOT (FRAG (NP (PRP$ Her) (NN yard))))', 'lemma': [(u'Her', u'she', u'PRP$'), (u'yard', u'yard', u'NN')]}, 'tokens': ['Her', 'yard']}, {'string': ' The park', 'parse': {'tree': '(ROOT (FRAG (NP (DT The) (NN park))))', 'lemma': [(u'The', u'the', u'DT'), (u'park', u'park', u'NN')]}, 'tokens': ['The', 'park']}, {'string': ' Her bedroom', 'parse': {'tree': '(ROOT (FRAG (NP (PRP$ Her) (NN bedroom))))', 'lemma': [(u'Her', u'she', u'PRP$'), (u'bedroom', u'bedroom', u'NN')]}, 'tokens': ['Her', 'bedroom']}], 'mode': 1}]}
{'sentences': [{'string': ' Peter was a very sad puppy.', 'parse': {'tree': '(ROOT (S (NP (NNP Peter)) (VP (VBD was) (NP (DT a) (ADJP (RB very) (JJ sad)) (NN puppy))) (. .)))', 'lemma': [(u'Peter', u'Peter', u'NNP'), (u'was', u'be', u'VBD'), (u'a', u'a', u'DT'), (u'very', u'very', u'RB'), (u'sad', u'sad', u'JJ'), (u'puppy', u'puppy', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Peter', 'was', 'a', 'very', 'sad', 'puppy', '.']}, {'string': ' He had been inside of the pet store for a very long time.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD had) (VP (VBN been) (ADVP (RB inside)) (PP (IN of) (NP (NP (DT the) (JJ pet) (NN store)) (PP (IN for) (NP (DT a) (ADJP (RB very) (JJ long)) (NN time))))))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'had', u'have', u'VBD'), (u'been', u'be', u'VBN'), (u'inside', u'inside', u'RB'), (u'of', u'of', u'IN'), (u'the', u'the', u'DT'), (u'pet', u'pet', u'JJ'), (u'store', u'store', u'NN'), (u'for', u'for', u'IN'), (u'a', u'a', u'DT'), (u'very', u'very', u'RB'), (u'long', u'long', u'JJ'), (u'time', u'time', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'had', 'been', 'inside', 'of', 'the', 'pet', 'store', 'for', 'a', 'very', 'long', 'time', '.']}, {'string': ' In fact, he had been there for three months!', 'parse': {'tree': '(ROOT (S (PP (IN In) (NP (NN fact))) (, ,) (NP (PRP he)) (VP (VBD had) (VP (VBN been) (ADVP (RB there)) (PP (IN for) (NP (CD three) (NNS months))))) (. !)))', 'lemma': [(u'In', u'in', u'IN'), (u'fact', u'fact', u'NN'), (u',', u',', u','), (u'he', u'he', u'PRP'), (u'had', u'have', u'VBD'), (u'been', u'be', u'VBN'), (u'there', u'there', u'RB'), (u'for', u'for', u'IN'), (u'three', u'three', u'CD'), (u'months', u'month', u'NNS'), (u'!', u'!', u'.')]}, 'tokens': ['In', 'fact', ',', 'he', 'had', 'been', 'there', 'for', 'three', 'months', '!']}, {'string': ' Peter had seen many other puppies find a person; he began to wonder why he could not get one.', 'parse': {'tree': '(ROOT (S (S (NP (NNP Peter)) (VP (VBD had) (VP (VBN seen) (S (NP (JJ many) (JJ other) (NNS puppies)) (VP (VB find) (NP (DT a) (NN person))))))) (: ;) (S (NP (PRP he)) (VP (VBD began) (S (VP (TO to) (VP (VB wonder) (SBAR (WHADVP (WRB why)) (S (NP (PRP he)) (VP (MD could) (RB not) (VP (VB get) (NP (CD one))))))))))) (. .)))', 'lemma': [(u'Peter', u'Peter', u'NNP'), (u'had', u'have', u'VBD'), (u'seen', u'see', u'VBN'), (u'many', u'many', u'JJ'), (u'other', u'other', u'JJ'), (u'puppies', u'puppy', u'NNS'), (u'find', u'find', u'VB'), (u'a', u'a', u'DT'), (u'person', u'person', u'NN'), (u';', u';', u':'), (u'he', u'he', u'PRP'), (u'began', u'begin', u'VBD'), (u'to', u'to', u'TO'), (u'wonder', u'wonder', u'VB'), (u'why', u'why', u'WRB'), (u'he', u'he', u'PRP'), (u'could', u'could', u'MD'), (u'not', u'not', u'RB'), (u'get', u'get', u'VB'), (u'one', u'one', u'CD'), (u'.', u'.', u'.')]}, 'tokens': ['Peter', 'had', 'seen', 'many', 'other', 'puppies', 'find', 'a', 'person', ';', 'he', 'began', 'to', 'wonder', 'why', 'he', 'could', 'not', 'get', 'one', '.']}, {'string': ' He thought that maybe his fur was not pretty enough or maybe his bark was not loud enough.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD thought) (SBAR (IN that) (S (S (ADVP (RB maybe)) (NP (PRP$ his) (NN fur)) (VP (VBD was) (RB not) (ADJP (RB pretty) (JJ enough)))) (CC or) (S (ADVP (RB maybe)) (NP (PRP$ his) (NN bark)) (VP (VBD was) (RB not) (ADJP (JJ loud) (RB enough))))))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'thought', u'think', u'VBD'), (u'that', u'that', u'IN'), (u'maybe', u'maybe', u'RB'), (u'his', u'he', u'PRP$'), (u'fur', u'fur', u'NN'), (u'was', u'be', u'VBD'), (u'not', u'not', u'RB'), (u'pretty', u'pretty', u'RB'), (u'enough', u'enough', u'JJ'), (u'or', u'or', u'CC'), (u'maybe', u'maybe', u'RB'), (u'his', u'he', u'PRP$'), (u'bark', u'bark', u'NN'), (u'was', u'be', u'VBD'), (u'not', u'not', u'RB'), (u'loud', u'loud', u'JJ'), (u'enough', u'enough', u'RB'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'thought', 'that', 'maybe', 'his', 'fur', 'was', 'not', 'pretty', 'enough', 'or', 'maybe', 'his', 'bark', 'was', 'not', 'loud', 'enough', '.']}, {'string': ' He tried and tried to please every person who came to the store, but they all picked smaller puppies.', 'parse': {'tree': '(ROOT (S (S (NP (PRP He)) (VP (VP (VBD tried)) (CC and) (VP (VBD tried) (S (VP (TO to) (VP (VB please) (NP (NP (DT every) (NN person)) (SBAR (WHNP (WP who)) (S (VP (VBD came) (PP (TO to) (NP (DT the) (NN store))))))))))))) (, ,) (CC but) (S (NP (PRP they)) (ADVP (DT all)) (VP (VBD picked) (NP (JJR smaller) (NNS puppies)))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'tried', u'try', u'VBD'), (u'and', u'and', u'CC'), (u'tried', u'try', u'VBD'), (u'to', u'to', u'TO'), (u'please', u'please', u'VB'), (u'every', u'every', u'DT'), (u'person', u'person', u'NN'), (u'who', u'who', u'WP'), (u'came', u'come', u'VBD'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'store', u'store', u'NN'), (u',', u',', u','), (u'but', u'but', u'CC'), (u'they', u'they', u'PRP'), (u'all', u'all', u'DT'), (u'picked', u'pick', u'VBD'), (u'smaller', u'smaller', u'JJR'), (u'puppies', u'puppy', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'tried', 'and', 'tried', 'to', 'please', 'every', 'person', 'who', 'came', 'to', 'the', 'store', ',', 'but', 'they', 'all', 'picked', 'smaller', 'puppies', '.']}, {'string': ' However, one day all of this changed.', 'parse': {'tree': '(ROOT (S (ADVP (RB However)) (, ,) (NP (CD one) (NN day)) (NP (NP (DT all)) (PP (IN of) (NP (DT this)))) (VP (VBD changed)) (. .)))', 'lemma': [(u'However', u'however', u'RB'), (u',', u',', u','), (u'one', u'one', u'CD'), (u'day', u'day', u'NN'), (u'all', u'all', u'DT'), (u'of', u'of', u'IN'), (u'this', u'this', u'DT'), (u'changed', u'change', u'VBD'), (u'.', u'.', u'.')]}, 'tokens': ['However', ',', 'one', 'day', 'all', 'of', 'this', 'changed', '.']}, {'string': ' Sammie came into the store looking for a golden puppy.', 'parse': {'tree': '(ROOT (S (NP (NNP Sammie)) (VP (VBD came) (PP (IN into) (NP (NP (DT the) (NN store)) (VP (VBG looking) (PP (IN for) (NP (DT a) (JJ golden) (NN puppy))))))) (. .)))', 'lemma': [(u'Sammie', u'Sammie', u'NNP'), (u'came', u'come', u'VBD'), (u'into', u'into', u'IN'), (u'the', u'the', u'DT'), (u'store', u'store', u'NN'), (u'looking', u'look', u'VBG'), (u'for', u'for', u'IN'), (u'a', u'a', u'DT'), (u'golden', u'golden', u'JJ'), (u'puppy', u'puppy', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Sammie', 'came', 'into', 'the', 'store', 'looking', 'for', 'a', 'golden', 'puppy', '.']}, {'string': ' She wanted a puppy she could snuggle with.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBD wanted) (NP (NP (DT a) (NN puppy)) (SBAR (S (NP (PRP she)) (VP (MD could) (VP (VB snuggle) (PP (IN with)))))))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'wanted', u'want', u'VBD'), (u'a', u'a', u'DT'), (u'puppy', u'puppy', u'NN'), (u'she', u'she', u'PRP'), (u'could', u'could', u'MD'), (u'snuggle', u'snuggle', u'VB'), (u'with', u'with', u'IN'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'wanted', 'a', 'puppy', 'she', 'could', 'snuggle', 'with', '.']}, {'string': ' It so happened that Peter was very sad and tired that day.', 'parse': {'tree': '(ROOT (S (NP (PRP It)) (ADVP (RB so)) (VP (VBD happened) (SBAR (IN that) (S (NP (NNP Peter)) (VP (VBD was) (ADJP (RB very) (JJ sad) (CC and) (JJ tired)) (NP (DT that) (NN day)))))) (. .)))', 'lemma': [(u'It', u'it', u'PRP'), (u'so', u'so', u'RB'), (u'happened', u'happen', u'VBD'), (u'that', u'that', u'IN'), (u'Peter', u'Peter', u'NNP'), (u'was', u'be', u'VBD'), (u'very', u'very', u'RB'), (u'sad', u'sad', u'JJ'), (u'and', u'and', u'CC'), (u'tired', u'tired', u'JJ'), (u'that', u'that', u'DT'), (u'day', u'day', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['It', 'so', 'happened', 'that', 'Peter', 'was', 'very', 'sad', 'and', 'tired', 'that', 'day', '.']}, {'string': ' Sammie came to hold him.', 'parse': {'tree': '(ROOT (S (NP (NNP Sammie)) (VP (VBD came) (S (VP (TO to) (VP (VB hold) (NP (PRP him)))))) (. .)))', 'lemma': [(u'Sammie', u'Sammie', u'NNP'), (u'came', u'come', u'VBD'), (u'to', u'to', u'TO'), (u'hold', u'hold', u'VB'), (u'him', u'he', u'PRP'), (u'.', u'.', u'.')]}, 'tokens': ['Sammie', 'came', 'to', 'hold', 'him', '.']}, {'string': ' Peter wanted to show off his bark, but he was too tired.', 'parse': {'tree': '(ROOT (S (S (NP (NNP Peter)) (VP (VBD wanted) (S (VP (TO to) (VP (VB show) (PRT (RP off)) (NP (PRP$ his) (NN bark))))))) (, ,) (CC but) (S (NP (PRP he)) (VP (VBD was) (ADJP (RB too) (JJ tired)))) (. .)))', 'lemma': [(u'Peter', u'Peter', u'NNP'), (u'wanted', u'want', u'VBD'), (u'to', u'to', u'TO'), (u'show', u'show', u'VB'), (u'off', u'off', u'RP'), (u'his', u'he', u'PRP$'), (u'bark', u'bark', u'NN'), (u',', u',', u','), (u'but', u'but', u'CC'), (u'he', u'he', u'PRP'), (u'was', u'be', u'VBD'), (u'too', u'too', u'RB'), (u'tired', u'tired', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['Peter', 'wanted', 'to', 'show', 'off', 'his', 'bark', ',', 'but', 'he', 'was', 'too', 'tired', '.']}, {'string': ' He fell right to sleep.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD fell) (ADJP (JJ right) (S (VP (TO to) (VP (VB sleep)))))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'fell', u'fall', u'VBD'), (u'right', u'right', u'JJ'), (u'to', u'to', u'TO'), (u'sleep', u'sleep', u'VB'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'fell', 'right', 'to', 'sleep', '.']}, {'string': ' Sammie loved him at once and loved holding him in her arms.', 'parse': {'tree': '(ROOT (S (NP (NNP Sammie)) (VP (VP (VBD loved) (NP (PRP him)) (PP (IN at) (NP (RB once)))) (CC and) (VP (VBD loved) (S (VP (VBG holding) (NP (PRP him)) (PP (IN in) (NP (PRP$ her) (NNS arms))))))) (. .)))', 'lemma': [(u'Sammie', u'Sammie', u'NNP'), (u'loved', u'love', u'VBD'), (u'him', u'he', u'PRP'), (u'at', u'at', u'IN'), (u'once', u'once', u'RB'), (u'and', u'and', u'CC'), (u'loved', u'love', u'VBD'), (u'holding', u'hold', u'VBG'), (u'him', u'he', u'PRP'), (u'in', u'in', u'IN'), (u'her', u'she', u'PRP$'), (u'arms', u'arm', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['Sammie', 'loved', 'him', 'at', 'once', 'and', 'loved', 'holding', 'him', 'in', 'her', 'arms', '.']}, {'string': ' Sammie took Peter home that day, and they made lots of fun memories.', 'parse': {'tree': '(ROOT (S (S (NP (NNP Sammie)) (VP (VBD took) (NP (NNP Peter) (NN home)) (NP (DT that) (NN day)))) (, ,) (CC and) (S (NP (PRP they)) (VP (VBD made) (NP (NP (NNS lots)) (PP (IN of) (NP (NN fun) (NNS memories)))))) (. .)))', 'lemma': [(u'Sammie', u'Sammie', u'NNP'), (u'took', u'take', u'VBD'), (u'Peter', u'Peter', u'NNP'), (u'home', u'home', u'NN'), (u'that', u'that', u'DT'), (u'day', u'day', u'NN'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'they', u'they', u'PRP'), (u'made', u'make', u'VBD'), (u'lots', u'lot', u'NNS'), (u'of', u'of', u'IN'), (u'fun', u'fun', u'NN'), (u'memories', u'memory', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['Sammie', 'took', 'Peter', 'home', 'that', 'day', ',', 'and', 'they', 'made', 'lots', 'of', 'fun', 'memories', '.']}], 'questions': [{'question': {'string': ' What did Peter want to do when Sammie came?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD did) (NP (NNP Peter)) (VP (VB want) (S (VP (TO to) (VP (VB do) (SBAR (WHADVP (WRB when)) (S (NP (NNP Sammie)) (VP (VBD came))))))))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'did', u'do', u'VBD'), (u'Peter', u'Peter', u'NNP'), (u'want', u'want', u'VB'), (u'to', u'to', u'TO'), (u'do', u'do', u'VB'), (u'when', u'when', u'WRB'), (u'Sammie', u'Sammie', u'NNP'), (u'came', u'come', u'VBD'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'did', 'Peter', 'want', 'to', 'do', 'when', 'Sammie', 'came', '?']}, 'answers': [{'string': ' He wanted to show off his fur', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD wanted) (S (VP (TO to) (VP (VB show) (PRT (RP off)) (NP (PRP$ his) (NN fur))))))))', 'lemma': [(u'He', u'he', u'PRP'), (u'wanted', u'want', u'VBD'), (u'to', u'to', u'TO'), (u'show', u'show', u'VB'), (u'off', u'off', u'RP'), (u'his', u'he', u'PRP$'), (u'fur', u'fur', u'NN')]}, 'tokens': ['He', 'wanted', 'to', 'show', 'off', 'his', 'fur']}, {'string': ' He wanted to be beautiful', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD wanted) (S (VP (TO to) (VP (VB be) (ADJP (JJ beautiful))))))))', 'lemma': [(u'He', u'he', u'PRP'), (u'wanted', u'want', u'VBD'), (u'to', u'to', u'TO'), (u'be', u'be', u'VB'), (u'beautiful', u'beautiful', u'JJ')]}, 'tokens': ['He', 'wanted', 'to', 'be', 'beautiful']}, {'string': ' He wanted to snuggle with her', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD wanted) (S (VP (TO to) (VP (VB snuggle) (PP (IN with) (NP (PRP her)))))))))', 'lemma': [(u'He', u'he', u'PRP'), (u'wanted', u'want', u'VBD'), (u'to', u'to', u'TO'), (u'snuggle', u'snuggle', u'VB'), (u'with', u'with', u'IN'), (u'her', u'she', u'PRP')]}, 'tokens': ['He', 'wanted', 'to', 'snuggle', 'with', 'her']}, {'string': ' He wanted to show off his bark', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD wanted) (S (VP (TO to) (VP (VB show) (PRT (RP off)) (NP (PRP$ his) (NN bark))))))))', 'lemma': [(u'He', u'he', u'PRP'), (u'wanted', u'want', u'VBD'), (u'to', u'to', u'TO'), (u'show', u'show', u'VB'), (u'off', u'off', u'RP'), (u'his', u'he', u'PRP$'), (u'bark', u'bark', u'NN')]}, 'tokens': ['He', 'wanted', 'to', 'show', 'off', 'his', 'bark']}], 'mode': 0}, {'question': {'string': ' Where was Peter?', 'parse': {'tree': '(ROOT (SBARQ (WHADVP (WRB Where)) (SQ (VBD was) (NP (NNP Peter))) (. ?)))', 'lemma': [(u'Where', u'where', u'WRB'), (u'was', u'be', u'VBD'), (u'Peter', u'Peter', u'NNP'), (u'?', u'?', u'.')]}, 'tokens': ['Where', 'was', 'Peter', '?']}, 'answers': [{'string': ' Sad and tired', 'parse': {'tree': '(ROOT (NP (NNS Sad) (CC and) (NNS tired)))', 'lemma': [(u'Sad', u'sad', u'NNS'), (u'and', u'and', u'CC'), (u'tired', u'tired', u'NNS')]}, 'tokens': ['Sad', 'and', 'tired']}, {'string': ' At the pet store', 'parse': {'tree': '(ROOT (PP (IN At) (NP (DT the) (JJ pet) (NN store))))', 'lemma': [(u'At', u'at', u'IN'), (u'the', u'the', u'DT'), (u'pet', u'pet', u'JJ'), (u'store', u'store', u'NN')]}, 'tokens': ['At', 'the', 'pet', 'store']}, {'string': ' Home', 'parse': {'tree': '(ROOT (NP (NNP Home)))', 'lemma': [(u'Home', u'Home', u'NNP')]}, 'tokens': ['Home']}, {'string': ' At the park practicing his bark', 'parse': {'tree': '(ROOT (PP (IN At) (NP (NP (DT the) (NN park)) (VP (VBG practicing) (NP (PRP$ his) (NN bark))))))', 'lemma': [(u'At', u'at', u'IN'), (u'the', u'the', u'DT'), (u'park', u'park', u'NN'), (u'practicing', u'practice', u'VBG'), (u'his', u'he', u'PRP$'), (u'bark', u'bark', u'NN')]}, 'tokens': ['At', 'the', 'park', 'practicing', 'his', 'bark']}], 'mode': 1}, {'question': {'string': ' What did Peter actually do when Sammie came?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD did) (NP (NNP Peter)) (VP (ADVP (RB actually)) (VB do) (SBAR (WHADVP (WRB when)) (S (NP (NNP Sammie)) (VP (VBD came)))))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'did', u'do', u'VBD'), (u'Peter', u'Peter', u'NNP'), (u'actually', u'actually', u'RB'), (u'do', u'do', u'VB'), (u'when', u'when', u'WRB'), (u'Sammie', u'Sammie', u'NNP'), (u'came', u'come', u'VBD'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'did', 'Peter', 'actually', 'do', 'when', 'Sammie', 'came', '?']}, 'answers': [{'string': ' Peter showed off his fur', 'parse': {'tree': '(ROOT (S (NP (NNP Peter)) (VP (VBD showed) (PRT (RP off)) (NP (PRP$ his) (NN fur)))))', 'lemma': [(u'Peter', u'Peter', u'NNP'), (u'showed', u'show', u'VBD'), (u'off', u'off', u'RP'), (u'his', u'he', u'PRP$'), (u'fur', u'fur', u'NN')]}, 'tokens': ['Peter', 'showed', 'off', 'his', 'fur']}, {'string': ' Peter showed off his bark', 'parse': {'tree': '(ROOT (S (NP (NNP Peter)) (VP (VBD showed) (PRT (RP off)) (NP (PRP$ his) (NN bark)))))', 'lemma': [(u'Peter', u'Peter', u'NNP'), (u'showed', u'show', u'VBD'), (u'off', u'off', u'RP'), (u'his', u'he', u'PRP$'), (u'bark', u'bark', u'NN')]}, 'tokens': ['Peter', 'showed', 'off', 'his', 'bark']}, {'string': ' Peter fell asleep', 'parse': {'tree': '(ROOT (S (NP (NNP Peter)) (VP (VBD fell) (ADJP (RB asleep)))))', 'lemma': [(u'Peter', u'Peter', u'NNP'), (u'fell', u'fall', u'VBD'), (u'asleep', u'asleep', u'RB')]}, 'tokens': ['Peter', 'fell', 'asleep']}, {'string': ' Peter wondered if he would be a good enough puppy', 'parse': {'tree': '(ROOT (S (NP (NNP Peter)) (VP (VBD wondered) (SBAR (IN if) (S (NP (PRP he)) (VP (MD would) (VP (VB be) (NP (DT a) (JJ good) (JJ enough) (NN puppy)))))))))', 'lemma': [(u'Peter', u'Peter', u'NNP'), (u'wondered', u'wonder', u'VBD'), (u'if', u'if', u'IN'), (u'he', u'he', u'PRP'), (u'would', u'would', u'MD'), (u'be', u'be', u'VB'), (u'a', u'a', u'DT'), (u'good', u'good', u'JJ'), (u'enough', u'enough', u'JJ'), (u'puppy', u'puppy', u'NN')]}, 'tokens': ['Peter', 'wondered', 'if', 'he', 'would', 'be', 'a', 'good', 'enough', 'puppy']}], 'mode': 0}, {'question': {'string': ' What kind of puppy did Sammie want?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WHNP (WDT What) (NN kind)) (PP (IN of) (NP (NN puppy)))) (SQ (VBD did) (NP (NNP Sammie)) (VP (VB want))) (. ?)))', 'lemma': [(u'What', u'what', u'WDT'), (u'kind', u'kind', u'NN'), (u'of', u'of', u'IN'), (u'puppy', u'puppy', u'NN'), (u'did', u'do', u'VBD'), (u'Sammie', u'Sammie', u'NNP'), (u'want', u'want', u'VB'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'kind', 'of', 'puppy', 'did', 'Sammie', 'want', '?']}, 'answers': [{'string': ' A golden puppy that was small', 'parse': {'tree': '(ROOT (S (NP (NP (DT A) (JJ golden) (NN puppy)) (SBAR (WHNP (WDT that)) (S (VP (VBD was) (ADJP (JJ small))))))))', 'lemma': [(u'A', u'a', u'DT'), (u'golden', u'golden', u'JJ'), (u'puppy', u'puppy', u'NN'), (u'that', u'that', u'WDT'), (u'was', u'be', u'VBD'), (u'small', u'small', u'JJ')]}, 'tokens': ['A', 'golden', 'puppy', 'that', 'was', 'small']}, {'string': ' A golden puppy with shiny fur', 'parse': {'tree': '(ROOT (NP (NP (DT A) (JJ golden) (NN puppy)) (PP (IN with) (NP (JJ shiny) (NN fur)))))', 'lemma': [(u'A', u'a', u'DT'), (u'golden', u'golden', u'JJ'), (u'puppy', u'puppy', u'NN'), (u'with', u'with', u'IN'), (u'shiny', u'shiny', u'JJ'), (u'fur', u'fur', u'NN')]}, 'tokens': ['A', 'golden', 'puppy', 'with', 'shiny', 'fur']}, {'string': ' A puppy with a loud bark she could snuggle with', 'parse': {'tree': '(ROOT (FRAG (NP (DT A) (NN puppy)) (PP (IN with) (NP (NP (DT a) (JJ loud) (NN bark)) (SBAR (S (NP (PRP she)) (VP (MD could) (VP (VB snuggle) (PP (IN with))))))))))', 'lemma': [(u'A', u'a', u'DT'), (u'puppy', u'puppy', u'NN'), (u'with', u'with', u'IN'), (u'a', u'a', u'DT'), (u'loud', u'loud', u'JJ'), (u'bark', u'bark', u'NN'), (u'she', u'she', u'PRP'), (u'could', u'could', u'MD'), (u'snuggle', u'snuggle', u'VB'), (u'with', u'with', u'IN')]}, 'tokens': ['A', 'puppy', 'with', 'a', 'loud', 'bark', 'she', 'could', 'snuggle', 'with']}, {'string': ' A golden puppy she could snuggle with', 'parse': {'tree': '(ROOT (FRAG (NP (NP (DT A) (JJ golden) (NN puppy)) (SBAR (S (NP (PRP she)) (VP (MD could) (VP (VB snuggle) (PP (IN with)))))))))', 'lemma': [(u'A', u'a', u'DT'), (u'golden', u'golden', u'JJ'), (u'puppy', u'puppy', u'NN'), (u'she', u'she', u'PRP'), (u'could', u'could', u'MD'), (u'snuggle', u'snuggle', u'VB'), (u'with', u'with', u'IN')]}, 'tokens': ['A', 'golden', 'puppy', 'she', 'could', 'snuggle', 'with']}], 'mode': 0}]}
{'sentences': [{'string': ' Luna the hawk wanted some socks.', 'parse': {'tree': '(ROOT (S (NP (NP (NNP Luna)) (NP (DT the) (NN hawk))) (VP (VBD wanted) (NP (DT some) (NNS socks))) (. .)))', 'lemma': [(u'Luna', u'Luna', u'NNP'), (u'the', u'the', u'DT'), (u'hawk', u'hawk', u'NN'), (u'wanted', u'want', u'VBD'), (u'some', u'some', u'DT'), (u'socks', u'sock', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['Luna', 'the', 'hawk', 'wanted', 'some', 'socks', '.']}, {'string': ' It was the middle of winter and sitting on tree branches made her feet very cold.', 'parse': {'tree': '(ROOT (S (NP (PRP It)) (VP (VBD was) (NP (NP (DT the) (NN middle)) (PP (IN of) (NP (NP (NN winter) (CC and) (VBG sitting)) (PP (IN on) (NP (NP (NN tree) (NNS branches)) (VP (VBN made) (S (NP (PRP$ her) (NNS feet)) (ADJP (RB very) (JJ cold)))))))))) (. .)))', 'lemma': [(u'It', u'it', u'PRP'), (u'was', u'be', u'VBD'), (u'the', u'the', u'DT'), (u'middle', u'middle', u'NN'), (u'of', u'of', u'IN'), (u'winter', u'winter', u'NN'), (u'and', u'and', u'CC'), (u'sitting', u'sit', u'VBG'), (u'on', u'on', u'IN'), (u'tree', u'tree', u'NN'), (u'branches', u'branch', u'NNS'), (u'made', u'make', u'VBN'), (u'her', u'she', u'PRP$'), (u'feet', u'foot', u'NNS'), (u'very', u'very', u'RB'), (u'cold', u'cold', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['It', 'was', 'the', 'middle', 'of', 'winter', 'and', 'sitting', 'on', 'tree', 'branches', 'made', 'her', 'feet', 'very', 'cold', '.']}, {'string': ' Luna hoped that her friends could help her find some socks.', 'parse': {'tree': '(ROOT (S (NP (NNP Luna)) (VP (VBD hoped) (SBAR (IN that) (S (NP (PRP$ her) (NNS friends)) (VP (MD could) (VP (VB help) (S (NP (PRP her)) (VP (VB find) (NP (DT some) (NNS socks))))))))) (. .)))', 'lemma': [(u'Luna', u'Luna', u'NNP'), (u'hoped', u'hope', u'VBD'), (u'that', u'that', u'IN'), (u'her', u'she', u'PRP$'), (u'friends', u'friend', u'NNS'), (u'could', u'could', u'MD'), (u'help', u'help', u'VB'), (u'her', u'she', u'PRP'), (u'find', u'find', u'VB'), (u'some', u'some', u'DT'), (u'socks', u'sock', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['Luna', 'hoped', 'that', 'her', 'friends', 'could', 'help', 'her', 'find', 'some', 'socks', '.']}, {'string': ' She flew to the old maple tree where Olive the owl lived.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBD flew) (PP (TO to) (NP (DT the) (JJ old) (NN maple) (NN tree))) (SBAR (WHADVP (WRB where)) (S (NP (JJ Olive) (DT the) (NN owl)) (VP (VBD lived))))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'flew', u'fly', u'VBD'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'old', u'old', u'JJ'), (u'maple', u'maple', u'NN'), (u'tree', u'tree', u'NN'), (u'where', u'where', u'WRB'), (u'Olive', u'olive', u'JJ'), (u'the', u'the', u'DT'), (u'owl', u'owl', u'NN'), (u'lived', u'live', u'VBD'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'flew', 'to', 'the', 'old', 'maple', 'tree', 'where', 'Olive', 'the', 'owl', 'lived', '.']}, {'string': " `` Olive, may I please borrow a pair of your socks? ''", 'parse': {'tree': "(ROOT (S (`` ``) (NP (NNP Olive)) (PRN (, ,) (SINV (VP (MD may)) (NP (PRP I)))) (VP (VBP please) (VP (VB borrow) (NP (NP (DT a) (NN pair)) (PP (IN of) (NP (PRP$ your) (NNS socks)))))) (. ?) ('' '')))", 'lemma': [(u'``', u'``', u'``'), (u'Olive', u'Olive', u'NNP'), (u',', u',', u','), (u'may', u'may', u'MD'), (u'I', u'I', u'PRP'), (u'please', u'please', u'VBP'), (u'borrow', u'borrow', u'VB'), (u'a', u'a', u'DT'), (u'pair', u'pair', u'NN'), (u'of', u'of', u'IN'), (u'your', u'you', u'PRP$'), (u'socks', u'sock', u'NNS'), (u'?', u'?', u'.'), (u"''", u"''", u"''")]}, 'tokens': ['``', 'Olive', ',', 'may', 'I', 'please', 'borrow', 'a', 'pair', 'of', 'your', 'socks', '?', "''"]}, {'string': ' she asked.', 'parse': {'tree': '(ROOT (S (NP (PRP she)) (VP (VBD asked)) (. .)))', 'lemma': [(u'she', u'she', u'PRP'), (u'asked', u'ask', u'VBD'), (u'.', u'.', u'.')]}, 'tokens': ['she', 'asked', '.']}, {'string': ' Olive the owl looked surprised.', 'parse': {'tree': '(ROOT (S (ADVP (RB Olive)) (NP (DT the) (NN owl)) (VP (VBD looked) (ADJP (JJ surprised))) (. .)))', 'lemma': [(u'Olive', u'olive', u'RB'), (u'the', u'the', u'DT'), (u'owl', u'owl', u'NN'), (u'looked', u'look', u'VBD'), (u'surprised', u'surprised', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['Olive', 'the', 'owl', 'looked', 'surprised', '.']}, {'string': ' `` Luna, I have no use for socks because my legs and toes have thick feathers.', 'parse': {'tree': '(ROOT (S (`` ``) (NP (NNP Luna)) (PRN (, ,) (S (NP (PRP I)) (VP (VBP have) (NP (NP (DT no) (NN use)) (PP (IN for) (NP (NNS socks)))) (PP (IN because) (NP (PRP$ my) (NNS legs) (CC and) (NNS toes)))))) (VP (VBP have) (NP (JJ thick) (NNS feathers))) (. .)))', 'lemma': [(u'``', u'``', u'``'), (u'Luna', u'Luna', u'NNP'), (u',', u',', u','), (u'I', u'I', u'PRP'), (u'have', u'have', u'VBP'), (u'no', u'no', u'DT'), (u'use', u'use', u'NN'), (u'for', u'for', u'IN'), (u'socks', u'sock', u'NNS'), (u'because', u'because', u'IN'), (u'my', u'my', u'PRP$'), (u'legs', u'leg', u'NNS'), (u'and', u'and', u'CC'), (u'toes', u'toe', u'NNS'), (u'have', u'have', u'VBP'), (u'thick', u'thick', u'JJ'), (u'feathers', u'feather', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['``', 'Luna', ',', 'I', 'have', 'no', 'use', 'for', 'socks', 'because', 'my', 'legs', 'and', 'toes', 'have', 'thick', 'feathers', '.']}, {'string': ' Go visit one of the animals that walk on four legs.', 'parse': {'tree': '(ROOT (S (VP (VB Go) (NP (NP (NN visit) (CD one)) (PP (IN of) (NP (NP (DT the) (NNS animals)) (SBAR (WHNP (WDT that)) (S (VP (VBP walk) (PP (IN on) (NP (CD four) (NNS legs)))))))))) (. .)))', 'lemma': [(u'Go', u'go', u'VB'), (u'visit', u'visit', u'NN'), (u'one', u'one', u'CD'), (u'of', u'of', u'IN'), (u'the', u'the', u'DT'), (u'animals', u'animal', u'NNS'), (u'that', u'that', u'WDT'), (u'walk', u'walk', u'VBP'), (u'on', u'on', u'IN'), (u'four', u'four', u'CD'), (u'legs', u'leg', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['Go', 'visit', 'one', 'of', 'the', 'animals', 'that', 'walk', 'on', 'four', 'legs', '.']}, {'string': " They might have extra socks you could borrow. ''", 'parse': {'tree': "(ROOT (S (NP (PRP They)) (VP (MD might) (VP (VB have) (NP (NP (JJ extra) (NNS socks)) (SBAR (S (NP (PRP you)) (VP (MD could) (VP (VB borrow)))))))) (. .) ('' '')))", 'lemma': [(u'They', u'they', u'PRP'), (u'might', u'might', u'MD'), (u'have', u'have', u'VB'), (u'extra', u'extra', u'JJ'), (u'socks', u'sock', u'NNS'), (u'you', u'you', u'PRP'), (u'could', u'could', u'MD'), (u'borrow', u'borrow', u'VB'), (u'.', u'.', u'.'), (u"''", u"''", u"''")]}, 'tokens': ['They', 'might', 'have', 'extra', 'socks', 'you', 'could', 'borrow', '.', "''"]}, {'string': ' Luna flew across the field and landed next to the icy creek.', 'parse': {'tree': '(ROOT (S (NP (NNP Luna)) (VP (VP (VBD flew) (PP (IN across) (NP (DT the) (NN field)))) (CC and) (VP (VBD landed) (ADVP (JJ next)) (PP (TO to) (NP (DT the) (NN icy) (NN creek))))) (. .)))', 'lemma': [(u'Luna', u'Luna', u'NNP'), (u'flew', u'fly', u'VBD'), (u'across', u'across', u'IN'), (u'the', u'the', u'DT'), (u'field', u'field', u'NN'), (u'and', u'and', u'CC'), (u'landed', u'land', u'VBD'), (u'next', u'next', u'JJ'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'icy', u'icy', u'NN'), (u'creek', u'creek', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Luna', 'flew', 'across', 'the', 'field', 'and', 'landed', 'next', 'to', 'the', 'icy', 'creek', '.']}, {'string': ' Rose the raccoon was teaching her six babies how to wash their paws.', 'parse': {'tree': '(ROOT (S (NP (NP (NNP Rose)) (NP (DT the) (NN raccoon))) (VP (VBD was) (VP (VBG teaching) (NP (PRP$ her) (CD six) (NNS babies)) (SBAR (WHADVP (WRB how)) (S (VP (TO to) (VP (VB wash) (NP (PRP$ their) (NNS paws)))))))) (. .)))', 'lemma': [(u'Rose', u'Rose', u'NNP'), (u'the', u'the', u'DT'), (u'raccoon', u'raccoon', u'NN'), (u'was', u'be', u'VBD'), (u'teaching', u'teach', u'VBG'), (u'her', u'she', u'PRP$'), (u'six', u'six', u'CD'), (u'babies', u'baby', u'NNS'), (u'how', u'how', u'WRB'), (u'to', u'to', u'TO'), (u'wash', u'wash', u'VB'), (u'their', u'they', u'PRP$'), (u'paws', u'paw', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['Rose', 'the', 'raccoon', 'was', 'teaching', 'her', 'six', 'babies', 'how', 'to', 'wash', 'their', 'paws', '.']}, {'string': ' The water was very cold, but the babies were having fun.', 'parse': {'tree': '(ROOT (S (S (NP (DT The) (NN water)) (VP (VBD was) (ADJP (RB very) (JJ cold)))) (, ,) (CC but) (S (NP (DT the) (NNS babies)) (VP (VBD were) (VP (VBG having) (NP (NN fun))))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'water', u'water', u'NN'), (u'was', u'be', u'VBD'), (u'very', u'very', u'RB'), (u'cold', u'cold', u'JJ'), (u',', u',', u','), (u'but', u'but', u'CC'), (u'the', u'the', u'DT'), (u'babies', u'baby', u'NNS'), (u'were', u'be', u'VBD'), (u'having', u'have', u'VBG'), (u'fun', u'fun', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'water', 'was', 'very', 'cold', ',', 'but', 'the', 'babies', 'were', 'having', 'fun', '.']}, {'string': " `` Rose, my bare legs and bare toes are so cold, may I please borrow a pair of your socks? ''", 'parse': {'tree': "(ROOT (S (`` ``) (NP (NNP Rose)) (PRN (, ,) (S (NP (PRP$ my) (JJ bare) (NNS legs) (CC and) (JJ bare) (NNS toes)) (VP (VBP are) (ADJP (RB so) (JJ cold)))) (, ,)) (VP (MD may) (NP (PRP I)) (S (VP (VB please) (VP (VB borrow) (NP (NP (DT a) (NN pair)) (PP (IN of) (NP (PRP$ your) (NNS socks)))))))) (. ?) ('' '')))", 'lemma': [(u'``', u'``', u'``'), (u'Rose', u'Rose', u'NNP'), (u',', u',', u','), (u'my', u'my', u'PRP$'), (u'bare', u'bare', u'JJ'), (u'legs', u'leg', u'NNS'), (u'and', u'and', u'CC'), (u'bare', u'bare', u'JJ'), (u'toes', u'toe', u'NNS'), (u'are', u'be', u'VBP'), (u'so', u'so', u'RB'), (u'cold', u'cold', u'JJ'), (u',', u',', u','), (u'may', u'may', u'MD'), (u'I', u'I', u'PRP'), (u'please', u'please', u'VB'), (u'borrow', u'borrow', u'VB'), (u'a', u'a', u'DT'), (u'pair', u'pair', u'NN'), (u'of', u'of', u'IN'), (u'your', u'you', u'PRP$'), (u'socks', u'sock', u'NNS'), (u'?', u'?', u'.'), (u"''", u"''", u"''")]}, 'tokens': ['``', 'Rose', ',', 'my', 'bare', 'legs', 'and', 'bare', 'toes', 'are', 'so', 'cold', ',', 'may', 'I', 'please', 'borrow', 'a', 'pair', 'of', 'your', 'socks', '?', "''"]}, {'string': ' begged Luna.', 'parse': {'tree': '(ROOT (NP (NNP begged) (NNP Luna) (. .)))', 'lemma': [(u'begged', u'begged', u'NNP'), (u'Luna', u'Luna', u'NNP'), (u'.', u'.', u'.')]}, 'tokens': ['begged', 'Luna', '.']}, {'string': ' Rose laughed hard.', 'parse': {'tree': '(ROOT (S (NP (NNP Rose)) (VP (VBD laughed) (ADJP (JJ hard))) (. .)))', 'lemma': [(u'Rose', u'Rose', u'NNP'), (u'laughed', u'laugh', u'VBD'), (u'hard', u'hard', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['Rose', 'laughed', 'hard', '.']}, {'string': ' `` Silly Luna, I do not have socks.', 'parse': {'tree': '(ROOT (S (`` ``) (PP (IN Silly) (NP (NNP Luna))) (, ,) (NP (PRP I)) (VP (VBP do) (RB not) (VP (VB have) (NP (NNS socks)))) (. .)))', 'lemma': [(u'``', u'``', u'``'), (u'Silly', u'silly', u'IN'), (u'Luna', u'Luna', u'NNP'), (u',', u',', u','), (u'I', u'I', u'PRP'), (u'do', u'do', u'VBP'), (u'not', u'not', u'RB'), (u'have', u'have', u'VB'), (u'socks', u'sock', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['``', 'Silly', 'Luna', ',', 'I', 'do', 'not', 'have', 'socks', '.']}, {'string': ' Look at my legs and feet.', 'parse': {'tree': '(ROOT (S (VP (VB Look) (PP (IN at) (NP (PRP$ my) (NNS legs) (CC and) (NNS feet)))) (. .)))', 'lemma': [(u'Look', u'look', u'VB'), (u'at', u'at', u'IN'), (u'my', u'my', u'PRP$'), (u'legs', u'leg', u'NNS'), (u'and', u'and', u'CC'), (u'feet', u'foot', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['Look', 'at', 'my', 'legs', 'and', 'feet', '.']}, {'string': ' They are covered with thick, warm fur.', 'parse': {'tree': '(ROOT (S (NP (PRP They)) (VP (VBP are) (VP (VBN covered) (PP (IN with) (NP (JJ thick) (, ,) (JJ warm) (NN fur))))) (. .)))', 'lemma': [(u'They', u'they', u'PRP'), (u'are', u'be', u'VBP'), (u'covered', u'cover', u'VBN'), (u'with', u'with', u'IN'), (u'thick', u'thick', u'JJ'), (u',', u',', u','), (u'warm', u'warm', u'JJ'), (u'fur', u'fur', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['They', 'are', 'covered', 'with', 'thick', ',', 'warm', 'fur', '.']}, {'string': " I 'm sorry I can not help you.", 'parse': {'tree': "(ROOT (S (NP (PRP I)) (VP (VBP 'm) (ADJP (JJ sorry) (SBAR (S (NP (PRP I)) (VP (MD can) (RB not) (VP (VB help) (NP (PRP you)))))))) (. .)))", 'lemma': [(u'I', u'I', u'PRP'), (u"'m", u'be', u'VBP'), (u'sorry', u'sorry', u'JJ'), (u'I', u'I', u'PRP'), (u'can', u'can', u'MD'), (u'not', u'not', u'RB'), (u'help', u'help', u'VB'), (u'you', u'you', u'PRP'), (u'.', u'.', u'.')]}, 'tokens': ['I', "'m", 'sorry', 'I', 'can', 'not', 'help', 'you', '.']}, {'string': ' Go visit the humans.', 'parse': {'tree': '(ROOT (S (NP (NNP Go)) (VP (VBP visit) (NP (DT the) (NNS humans))) (. .)))', 'lemma': [(u'Go', u'Go', u'NNP'), (u'visit', u'visit', u'VBP'), (u'the', u'the', u'DT'), (u'humans', u'human', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['Go', 'visit', 'the', 'humans', '.']}, {'string': ' Sometimes I tip over their garbage cans at night when I am looking for food.', 'parse': {'tree': '(ROOT (S (ADVP (RB Sometimes)) (NP (PRP I)) (VP (VBD tip) (PP (IN over) (NP (PRP$ their) (NN garbage) (NNS cans))) (PP (IN at) (NP (NN night))) (SBAR (WHADVP (WRB when)) (S (NP (PRP I)) (VP (VBP am) (VP (VBG looking) (PP (IN for) (NP (NN food)))))))) (. .)))', 'lemma': [(u'Sometimes', u'sometimes', u'RB'), (u'I', u'I', u'PRP'), (u'tip', u'tip', u'VBD'), (u'over', u'over', u'IN'), (u'their', u'they', u'PRP$'), (u'garbage', u'garbage', u'NN'), (u'cans', u'can', u'NNS'), (u'at', u'at', u'IN'), (u'night', u'night', u'NN'), (u'when', u'when', u'WRB'), (u'I', u'I', u'PRP'), (u'am', u'be', u'VBP'), (u'looking', u'look', u'VBG'), (u'for', u'for', u'IN'), (u'food', u'food', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Sometimes', 'I', 'tip', 'over', 'their', 'garbage', 'cans', 'at', 'night', 'when', 'I', 'am', 'looking', 'for', 'food', '.']}, {'string': " Once I saw a pair of socks. ''", 'parse': {'tree': "(ROOT (S (ADVP (RB Once)) (NP (PRP I)) (VP (VBD saw) (NP (NP (DT a) (NN pair)) (PP (IN of) (NP (NNS socks))))) (. .) ('' '')))", 'lemma': [(u'Once', u'once', u'RB'), (u'I', u'I', u'PRP'), (u'saw', u'see', u'VBD'), (u'a', u'a', u'DT'), (u'pair', u'pair', u'NN'), (u'of', u'of', u'IN'), (u'socks', u'sock', u'NNS'), (u'.', u'.', u'.'), (u"''", u"''", u"''")]}, 'tokens': ['Once', 'I', 'saw', 'a', 'pair', 'of', 'socks', '.', "''"]}, {'string': ' Luna was very afraid of humans.', 'parse': {'tree': '(ROOT (S (NP (NNP Luna)) (VP (VBD was) (ADJP (RB very) (JJ afraid)) (PP (IN of) (NP (NNS humans)))) (. .)))', 'lemma': [(u'Luna', u'Luna', u'NNP'), (u'was', u'be', u'VBD'), (u'very', u'very', u'RB'), (u'afraid', u'afraid', u'JJ'), (u'of', u'of', u'IN'), (u'humans', u'human', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['Luna', 'was', 'very', 'afraid', 'of', 'humans', '.']}, {'string': ' Her grandmother and mother had warned her about them.', 'parse': {'tree': '(ROOT (S (NP (PRP$ Her) (NN grandmother) (CC and) (NN mother)) (VP (VBD had) (VP (VBN warned) (NP (PRP her)) (PP (IN about) (NP (PRP them))))) (. .)))', 'lemma': [(u'Her', u'she', u'PRP$'), (u'grandmother', u'grandmother', u'NN'), (u'and', u'and', u'CC'), (u'mother', u'mother', u'NN'), (u'had', u'have', u'VBD'), (u'warned', u'warn', u'VBN'), (u'her', u'she', u'PRP'), (u'about', u'about', u'IN'), (u'them', u'they', u'PRP'), (u'.', u'.', u'.')]}, 'tokens': ['Her', 'grandmother', 'and', 'mother', 'had', 'warned', 'her', 'about', 'them', '.']}, {'string': ' She was told that some humans are mean and hurt hawks.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBD was) (VP (VBN told) (SBAR (IN that) (S (NP (DT some) (NNS humans)) (VP (VBP are) (S (VP (VB mean) (CC and) (VB hurt) (NP (NNS hawks))))))))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'was', u'be', u'VBD'), (u'told', u'tell', u'VBN'), (u'that', u'that', u'IN'), (u'some', u'some', u'DT'), (u'humans', u'human', u'NNS'), (u'are', u'be', u'VBP'), (u'mean', u'mean', u'VB'), (u'and', u'and', u'CC'), (u'hurt', u'hurt', u'VB'), (u'hawks', u'hawk', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'was', 'told', 'that', 'some', 'humans', 'are', 'mean', 'and', 'hurt', 'hawks', '.']}, {'string': ' Her feet were so cold that it was difficult to grip tree branches.', 'parse': {'tree': '(ROOT (S (NP (PRP$ Her) (NNS feet)) (VP (VBD were) (ADJP (RB so) (JJ cold)) (SBAR (IN that) (S (NP (PRP it)) (VP (VBD was) (ADJP (JJ difficult) (PP (TO to) (NP (NN grip) (NN tree) (NNS branches)))))))) (. .)))', 'lemma': [(u'Her', u'she', u'PRP$'), (u'feet', u'foot', u'NNS'), (u'were', u'be', u'VBD'), (u'so', u'so', u'RB'), (u'cold', u'cold', u'JJ'), (u'that', u'that', u'IN'), (u'it', u'it', u'PRP'), (u'was', u'be', u'VBD'), (u'difficult', u'difficult', u'JJ'), (u'to', u'to', u'TO'), (u'grip', u'grip', u'NN'), (u'tree', u'tree', u'NN'), (u'branches', u'branch', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['Her', 'feet', 'were', 'so', 'cold', 'that', 'it', 'was', 'difficult', 'to', 'grip', 'tree', 'branches', '.']}, {'string': ' She became brave.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBD became) (ADJP (JJ brave))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'became', u'become', u'VBD'), (u'brave', u'brave', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'became', 'brave', '.']}, {'string': ' She flew to the farmhouse on the big hill.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBD flew) (PP (TO to) (NP (DT the) (NN farmhouse))) (PP (IN on) (NP (DT the) (JJ big) (NN hill)))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'flew', u'fly', u'VBD'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'farmhouse', u'farmhouse', u'NN'), (u'on', u'on', u'IN'), (u'the', u'the', u'DT'), (u'big', u'big', u'JJ'), (u'hill', u'hill', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'flew', 'to', 'the', 'farmhouse', 'on', 'the', 'big', 'hill', '.']}, {'string': ' When she landed on the roof, she could not believe her eyes.', 'parse': {'tree': '(ROOT (S (SBAR (WHADVP (WRB When)) (S (NP (PRP she)) (VP (VBD landed) (PP (IN on) (NP (DT the) (NN roof)))))) (, ,) (NP (PRP she)) (VP (MD could) (RB not) (VP (VB believe) (NP (PRP$ her) (NNS eyes)))) (. .)))', 'lemma': [(u'When', u'when', u'WRB'), (u'she', u'she', u'PRP'), (u'landed', u'land', u'VBD'), (u'on', u'on', u'IN'), (u'the', u'the', u'DT'), (u'roof', u'roof', u'NN'), (u',', u',', u','), (u'she', u'she', u'PRP'), (u'could', u'could', u'MD'), (u'not', u'not', u'RB'), (u'believe', u'believe', u'VB'), (u'her', u'she', u'PRP$'), (u'eyes', u'eye', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['When', 'she', 'landed', 'on', 'the', 'roof', ',', 'she', 'could', 'not', 'believe', 'her', 'eyes', '.']}, {'string': ' She saw socks!', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBD saw) (NP (NNS socks))) (. !)))', 'lemma': [(u'She', u'she', u'PRP'), (u'saw', u'see', u'VBD'), (u'socks', u'sock', u'NNS'), (u'!', u'!', u'.')]}, 'tokens': ['She', 'saw', 'socks', '!']}, {'string': ' In late autumn, Henrietta the human had put laundry outside to dry and she had forgotten to bring in one tiny pair of socks.', 'parse': {'tree': '(ROOT (S (PP (IN In) (NP (JJ late) (NN autumn))) (, ,) (S (NP (NP (NNP Henrietta)) (NP (DT the) (NN human))) (VP (VBD had) (VP (VBN put) (NP (NN laundry) (NN outside)) (S (VP (TO to) (VP (VB dry))))))) (CC and) (S (NP (PRP she)) (VP (VBD had) (VP (VBN forgotten) (S (VP (TO to) (VP (VB bring) (PP (IN in) (NP (NP (CD one) (JJ tiny) (NN pair)) (PP (IN of) (NP (NNS socks))))))))))) (. .)))', 'lemma': [(u'In', u'in', u'IN'), (u'late', u'late', u'JJ'), (u'autumn', u'autumn', u'NN'), (u',', u',', u','), (u'Henrietta', u'Henrietta', u'NNP'), (u'the', u'the', u'DT'), (u'human', u'human', u'NN'), (u'had', u'have', u'VBD'), (u'put', u'put', u'VBN'), (u'laundry', u'laundry', u'NN'), (u'outside', u'outside', u'NN'), (u'to', u'to', u'TO'), (u'dry', u'dry', u'VB'), (u'and', u'and', u'CC'), (u'she', u'she', u'PRP'), (u'had', u'have', u'VBD'), (u'forgotten', u'forget', u'VBN'), (u'to', u'to', u'TO'), (u'bring', u'bring', u'VB'), (u'in', u'in', u'IN'), (u'one', u'one', u'CD'), (u'tiny', u'tiny', u'JJ'), (u'pair', u'pair', u'NN'), (u'of', u'of', u'IN'), (u'socks', u'sock', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['In', 'late', 'autumn', ',', 'Henrietta', 'the', 'human', 'had', 'put', 'laundry', 'outside', 'to', 'dry', 'and', 'she', 'had', 'forgotten', 'to', 'bring', 'in', 'one', 'tiny', 'pair', 'of', 'socks', '.']}, {'string': ' The socks were hanging on the clothesline by two wooden pins.', 'parse': {'tree': '(ROOT (S (NP (DT The) (NNS socks)) (VP (VBD were) (VP (VBG hanging) (PP (IN on) (NP (DT the) (NN clothesline))) (PP (IN by) (NP (CD two) (JJ wooden) (NNS pins))))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'socks', u'sock', u'NNS'), (u'were', u'be', u'VBD'), (u'hanging', u'hang', u'VBG'), (u'on', u'on', u'IN'), (u'the', u'the', u'DT'), (u'clothesline', u'clothesline', u'NN'), (u'by', u'by', u'IN'), (u'two', u'two', u'CD'), (u'wooden', u'wooden', u'JJ'), (u'pins', u'pin', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'socks', 'were', 'hanging', 'on', 'the', 'clothesline', 'by', 'two', 'wooden', 'pins', '.']}, {'string': ' Luna used her powerful beak to break the pins.', 'parse': {'tree': '(ROOT (S (NP (NNP Luna)) (VP (VBD used) (NP (PRP$ her) (JJ powerful) (NN beak)) (S (VP (TO to) (VP (VB break) (NP (DT the) (NNS pins)))))) (. .)))', 'lemma': [(u'Luna', u'Luna', u'NNP'), (u'used', u'use', u'VBD'), (u'her', u'she', u'PRP$'), (u'powerful', u'powerful', u'JJ'), (u'beak', u'beak', u'NN'), (u'to', u'to', u'TO'), (u'break', u'break', u'VB'), (u'the', u'the', u'DT'), (u'pins', u'pin', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['Luna', 'used', 'her', 'powerful', 'beak', 'to', 'break', 'the', 'pins', '.']}, {'string': ' She put on the socks and then flew back to her home in the huge tree.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VP (VBD put) (PP (IN on) (NP (DT the) (NNS socks)))) (CC and) (VP (ADVP (RB then)) (VBD flew) (PRT (RP back)) (PP (TO to) (NP (NP (PRP$ her) (NN home)) (PP (IN in) (NP (DT the) (JJ huge) (NN tree))))))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'put', u'put', u'VBD'), (u'on', u'on', u'IN'), (u'the', u'the', u'DT'), (u'socks', u'sock', u'NNS'), (u'and', u'and', u'CC'), (u'then', u'then', u'RB'), (u'flew', u'fly', u'VBD'), (u'back', u'back', u'RP'), (u'to', u'to', u'TO'), (u'her', u'she', u'PRP$'), (u'home', u'home', u'NN'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'huge', u'huge', u'JJ'), (u'tree', u'tree', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'put', 'on', 'the', 'socks', 'and', 'then', 'flew', 'back', 'to', 'her', 'home', 'in', 'the', 'huge', 'tree', '.']}, {'string': ' When she landed, her feet were warm and dry.', 'parse': {'tree': '(ROOT (S (SBAR (WHADVP (WRB When)) (S (NP (PRP she)) (VP (VBD landed)))) (, ,) (NP (PRP$ her) (NNS feet)) (VP (VBD were) (ADJP (JJ warm) (CC and) (JJ dry))) (. .)))', 'lemma': [(u'When', u'when', u'WRB'), (u'she', u'she', u'PRP'), (u'landed', u'land', u'VBD'), (u',', u',', u','), (u'her', u'she', u'PRP$'), (u'feet', u'foot', u'NNS'), (u'were', u'be', u'VBD'), (u'warm', u'warm', u'JJ'), (u'and', u'and', u'CC'), (u'dry', u'dry', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['When', 'she', 'landed', ',', 'her', 'feet', 'were', 'warm', 'and', 'dry', '.']}, {'string': ' Luna was very happy.', 'parse': {'tree': '(ROOT (S (NP (NNP Luna)) (VP (VBD was) (ADJP (RB very) (JJ happy))) (. .)))', 'lemma': [(u'Luna', u'Luna', u'NNP'), (u'was', u'be', u'VBD'), (u'very', u'very', u'RB'), (u'happy', u'happy', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['Luna', 'was', 'very', 'happy', '.']}], 'questions': [{'question': {'string': ' Why did Olive the owl not have any socks?', 'parse': {'tree': '(ROOT (SBARQ (WHADVP (WRB Why)) (SQ (VBD did) (NP (NNP Olive)) (VP (ADVP (NP (DT the) (NN owl)) (RB not)) (VB have) (NP (DT any) (NNS socks)))) (. ?)))', 'lemma': [(u'Why', u'why', u'WRB'), (u'did', u'do', u'VBD'), (u'Olive', u'Olive', u'NNP'), (u'the', u'the', u'DT'), (u'owl', u'owl', u'NN'), (u'not', u'not', u'RB'), (u'have', u'have', u'VB'), (u'any', u'any', u'DT'), (u'socks', u'sock', u'NNS'), (u'?', u'?', u'.')]}, 'tokens': ['Why', 'did', 'Olive', 'the', 'owl', 'not', 'have', 'any', 'socks', '?']}, 'answers': [{'string': ' She had given her socks to another friend.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBD had) (VP (VBN given) (NP (PRP$ her) (NNS socks)) (PP (TO to) (NP (DT another) (NN friend))))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'had', u'have', u'VBD'), (u'given', u'give', u'VBN'), (u'her', u'she', u'PRP$'), (u'socks', u'sock', u'NNS'), (u'to', u'to', u'TO'), (u'another', u'another', u'DT'), (u'friend', u'friend', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'had', 'given', 'her', 'socks', 'to', 'another', 'friend', '.']}, {'string': ' All of her socks were in the dirty laundry.', 'parse': {'tree': '(ROOT (S (NP (NP (DT All)) (PP (IN of) (NP (PRP$ her) (NNS socks)))) (VP (VBD were) (PP (IN in) (NP (DT the) (JJ dirty) (NN laundry)))) (. .)))', 'lemma': [(u'All', u'all', u'DT'), (u'of', u'of', u'IN'), (u'her', u'she', u'PRP$'), (u'socks', u'sock', u'NNS'), (u'were', u'be', u'VBD'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'dirty', u'dirty', u'JJ'), (u'laundry', u'laundry', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['All', 'of', 'her', 'socks', 'were', 'in', 'the', 'dirty', 'laundry', '.']}, {'string': ' She has thick feathers on her legs and toes.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBZ has) (NP (NP (JJ thick) (NNS feathers)) (PP (IN on) (NP (PRP$ her) (NNS legs) (CC and) (NNS toes))))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'has', u'have', u'VBZ'), (u'thick', u'thick', u'JJ'), (u'feathers', u'feather', u'NNS'), (u'on', u'on', u'IN'), (u'her', u'she', u'PRP$'), (u'legs', u'leg', u'NNS'), (u'and', u'and', u'CC'), (u'toes', u'toe', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'has', 'thick', 'feathers', 'on', 'her', 'legs', 'and', 'toes', '.']}, {'string': ' She wore ski boots instead of socks.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBD wore) (NP (NP (JJ ski) (NNS boots)) (PP (RB instead) (IN of) (NP (NNS socks))))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'wore', u'wear', u'VBD'), (u'ski', u'ski', u'JJ'), (u'boots', u'boot', u'NNS'), (u'instead', u'instead', u'RB'), (u'of', u'of', u'IN'), (u'socks', u'sock', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'wore', 'ski', 'boots', 'instead', 'of', 'socks', '.']}], 'mode': 1}, {'question': {'string': ' Why was Luna afraid of humans?', 'parse': {'tree': '(ROOT (SBARQ (WHADVP (WRB Why)) (SQ (VBD was) (NP (NP (NNP Luna) (NNP afraid)) (PP (IN of) (NP (NNS humans))))) (. ?)))', 'lemma': [(u'Why', u'why', u'WRB'), (u'was', u'be', u'VBD'), (u'Luna', u'Luna', u'NNP'), (u'afraid', u'afraid', u'NNP'), (u'of', u'of', u'IN'), (u'humans', u'human', u'NNS'), (u'?', u'?', u'.')]}, 'tokens': ['Why', 'was', 'Luna', 'afraid', 'of', 'humans', '?']}, 'answers': [{'string': ' Her grandmother and mother had told stories about mean humans hurting hawks.', 'parse': {'tree': '(ROOT (S (NP (PRP$ Her) (NN grandmother) (CC and) (NN mother)) (VP (VBD had) (VP (VBN told) (NP (NNS stories)) (PP (IN about) (NP (JJ mean) (NNS humans))) (S (VP (VBG hurting) (NP (NNS hawks)))))) (. .)))', 'lemma': [(u'Her', u'she', u'PRP$'), (u'grandmother', u'grandmother', u'NN'), (u'and', u'and', u'CC'), (u'mother', u'mother', u'NN'), (u'had', u'have', u'VBD'), (u'told', u'tell', u'VBN'), (u'stories', u'story', u'NNS'), (u'about', u'about', u'IN'), (u'mean', u'mean', u'JJ'), (u'humans', u'human', u'NNS'), (u'hurting', u'hurt', u'VBG'), (u'hawks', u'hawk', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['Her', 'grandmother', 'and', 'mother', 'had', 'told', 'stories', 'about', 'mean', 'humans', 'hurting', 'hawks', '.']}, {'string': ' Humans were large and scary-looking.', 'parse': {'tree': '(ROOT (S (NP (NNS Humans)) (VP (VBD were) (ADJP (JJ large) (CC and) (JJ scary-looking))) (. .)))', 'lemma': [(u'Humans', u'human', u'NNS'), (u'were', u'be', u'VBD'), (u'large', u'large', u'JJ'), (u'and', u'and', u'CC'), (u'scary-looking', u'scary-looking', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['Humans', 'were', 'large', 'and', 'scary-looking', '.']}, {'string': " Humans put garbage in the hawks ' nests.", 'parse': {'tree': "(ROOT (S (NP (NNS Humans)) (VP (VBD put) (NP (NN garbage)) (PP (IN in) (NP (NP (DT the) (NNS hawks) (POS ')) (NNS nests)))) (. .)))", 'lemma': [(u'Humans', u'human', u'NNS'), (u'put', u'put', u'VBD'), (u'garbage', u'garbage', u'NN'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'hawks', u'hawk', u'NNS'), (u"'", u"'", u'POS'), (u'nests', u'nest', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['Humans', 'put', 'garbage', 'in', 'the', 'hawks', "'", 'nests', '.']}, {'string': " Humans stole all of the hawks ' food.", 'parse': {'tree': "(ROOT (S (NP (NNS Humans)) (VP (VBD stole) (NP (NP (DT all)) (PP (IN of) (NP (NP (DT the) (NNS hawks) (POS ')) (NN food))))) (. .)))", 'lemma': [(u'Humans', u'human', u'NNS'), (u'stole', u'steal', u'VBD'), (u'all', u'all', u'DT'), (u'of', u'of', u'IN'), (u'the', u'the', u'DT'), (u'hawks', u'hawk', u'NNS'), (u"'", u"'", u'POS'), (u'food', u'food', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Humans', 'stole', 'all', 'of', 'the', 'hawks', "'", 'food', '.']}], 'mode': 0}, {'question': {'string': ' Which animal did Luna not visit?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WDT Which) (NN animal)) (SQ (VBD did) (NP (NNP Luna)) (VP (RB not) (VB visit))) (. ?)))', 'lemma': [(u'Which', u'which', u'WDT'), (u'animal', u'animal', u'NN'), (u'did', u'do', u'VBD'), (u'Luna', u'Luna', u'NNP'), (u'not', u'not', u'RB'), (u'visit', u'visit', u'VB'), (u'?', u'?', u'.')]}, 'tokens': ['Which', 'animal', 'did', 'Luna', 'not', 'visit', '?']}, 'answers': [{'string': ' Olive the owl', 'parse': {'tree': '(ROOT (S (VP (VB Olive) (NP (DT the) (NN owl)))))', 'lemma': [(u'Olive', u'olive', u'VB'), (u'the', u'the', u'DT'), (u'owl', u'owl', u'NN')]}, 'tokens': ['Olive', 'the', 'owl']}, {'string': ' Rose the raccoon', 'parse': {'tree': '(ROOT (NP (NP (NNP Rose)) (NP (DT the) (NN raccoon))))', 'lemma': [(u'Rose', u'Rose', u'NNP'), (u'the', u'the', u'DT'), (u'raccoon', u'raccoon', u'NN')]}, 'tokens': ['Rose', 'the', 'raccoon']}, {'string': ' Opal the otter', 'parse': {'tree': '(ROOT (S (VP (VB Opal) (NP (DT the) (NN otter)))))', 'lemma': [(u'Opal', u'opal', u'VB'), (u'the', u'the', u'DT'), (u'otter', u'otter', u'NN')]}, 'tokens': ['Opal', 'the', 'otter']}, {'string': ' Henrietta the human', 'parse': {'tree': '(ROOT (NP (NP (NNP Henrietta)) (NP (DT the) (NN human))))', 'lemma': [(u'Henrietta', u'Henrietta', u'NNP'), (u'the', u'the', u'DT'), (u'human', u'human', u'NN')]}, 'tokens': ['Henrietta', 'the', 'human']}], 'mode': 0}, {'question': {'string': ' How could the baby raccoons play in the icy creek without hurting their paws?', 'parse': {'tree': '(ROOT (SBARQ (WHADVP (WRB How)) (SQ (MD could) (NP (DT the) (NN baby) (NNS raccoons)) (VP (VB play) (PP (IN in) (NP (DT the) (NN icy) (NN creek))) (PP (IN without) (S (VP (VBG hurting) (NP (PRP$ their) (NNS paws))))))) (. ?)))', 'lemma': [(u'How', u'how', u'WRB'), (u'could', u'could', u'MD'), (u'the', u'the', u'DT'), (u'baby', u'baby', u'NN'), (u'raccoons', u'raccoon', u'NNS'), (u'play', u'play', u'VB'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'icy', u'icy', u'NN'), (u'creek', u'creek', u'NN'), (u'without', u'without', u'IN'), (u'hurting', u'hurt', u'VBG'), (u'their', u'they', u'PRP$'), (u'paws', u'paw', u'NNS'), (u'?', u'?', u'.')]}, 'tokens': ['How', 'could', 'the', 'baby', 'raccoons', 'play', 'in', 'the', 'icy', 'creek', 'without', 'hurting', 'their', 'paws', '?']}, 'answers': [{'string': ' Because their mother made sure they had warm mittens to keep their paws dry.', 'parse': {'tree': '(ROOT (S (SBAR (IN Because) (S (NP (PRP$ their) (NN mother)) (VP (VBD made) (ADJP (JJ sure))))) (NP (PRP they)) (VP (VBD had) (NP (JJ warm) (NNS mittens) (S (VP (TO to) (VP (VB keep) (S (NP (PRP$ their) (NNS paws)) (ADJP (JJ dry)))))))) (. .)))', 'lemma': [(u'Because', u'because', u'IN'), (u'their', u'they', u'PRP$'), (u'mother', u'mother', u'NN'), (u'made', u'make', u'VBD'), (u'sure', u'sure', u'JJ'), (u'they', u'they', u'PRP'), (u'had', u'have', u'VBD'), (u'warm', u'warm', u'JJ'), (u'mittens', u'mitten', u'NNS'), (u'to', u'to', u'TO'), (u'keep', u'keep', u'VB'), (u'their', u'they', u'PRP$'), (u'paws', u'paw', u'NNS'), (u'dry', u'dry', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['Because', 'their', 'mother', 'made', 'sure', 'they', 'had', 'warm', 'mittens', 'to', 'keep', 'their', 'paws', 'dry', '.']}, {'string': ' Because their mother taught them how to play in the water without getting cold.', 'parse': {'tree': '(ROOT (SINV (PP (IN Because) (NP (PRP$ their) (NN mother))) (VP (VBD taught) (NP (PRP them))) (SBAR (WHADVP (WRB how)) (S (VP (TO to) (VP (VB play) (PP (IN in) (NP (DT the) (NN water))) (PP (IN without) (S (VP (VBG getting) (NP (NN cold))))))))) (. .)))', 'lemma': [(u'Because', u'because', u'IN'), (u'their', u'they', u'PRP$'), (u'mother', u'mother', u'NN'), (u'taught', u'teach', u'VBD'), (u'them', u'they', u'PRP'), (u'how', u'how', u'WRB'), (u'to', u'to', u'TO'), (u'play', u'play', u'VB'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'water', u'water', u'NN'), (u'without', u'without', u'IN'), (u'getting', u'get', u'VBG'), (u'cold', u'cold', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Because', 'their', 'mother', 'taught', 'them', 'how', 'to', 'play', 'in', 'the', 'water', 'without', 'getting', 'cold', '.']}, {'string': ' Because their legs and feet are tough from tipping over garbage cans.', 'parse': {'tree': '(ROOT (FRAG (SBAR (IN Because) (S (NP (PRP$ their) (NNS legs) (CC and) (NNS feet)) (VP (VBP are) (ADJP (JJ tough) (PP (IN from) (S (VP (VBG tipping) (PP (IN over) (NP (NN garbage) (NNS cans)))))))))) (. .)))', 'lemma': [(u'Because', u'because', u'IN'), (u'their', u'they', u'PRP$'), (u'legs', u'leg', u'NNS'), (u'and', u'and', u'CC'), (u'feet', u'foot', u'NNS'), (u'are', u'be', u'VBP'), (u'tough', u'tough', u'JJ'), (u'from', u'from', u'IN'), (u'tipping', u'tip', u'VBG'), (u'over', u'over', u'IN'), (u'garbage', u'garbage', u'NN'), (u'cans', u'can', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['Because', 'their', 'legs', 'and', 'feet', 'are', 'tough', 'from', 'tipping', 'over', 'garbage', 'cans', '.']}, {'string': ' Because their legs and feet have a thick covering of fur that keeps them warm.', 'parse': {'tree': '(ROOT (S (SBAR (IN Because) (S (NP (PRP$ their) (NNS legs) (CC and) (NNS feet)) (VP (VBP have) (NP (NP (DT a) (JJ thick) (NN covering)) (PP (IN of) (NP (NN fur))))))) (NP (DT that)) (VP (VBZ keeps) (S (NP (PRP them)) (ADJP (JJ warm)))) (. .)))', 'lemma': [(u'Because', u'because', u'IN'), (u'their', u'they', u'PRP$'), (u'legs', u'leg', u'NNS'), (u'and', u'and', u'CC'), (u'feet', u'foot', u'NNS'), (u'have', u'have', u'VBP'), (u'a', u'a', u'DT'), (u'thick', u'thick', u'JJ'), (u'covering', u'covering', u'NN'), (u'of', u'of', u'IN'), (u'fur', u'fur', u'NN'), (u'that', u'that', u'DT'), (u'keeps', u'keep', u'VBZ'), (u'them', u'they', u'PRP'), (u'warm', u'warm', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['Because', 'their', 'legs', 'and', 'feet', 'have', 'a', 'thick', 'covering', 'of', 'fur', 'that', 'keeps', 'them', 'warm', '.']}], 'mode': 0}]}
{'sentences': [{'string': ' Once upon a time a young boy and young girl set out on a trip to the beach.', 'parse': {'tree': '(ROOT (S (ADVP (RB Once) (PP (IN upon) (NP (DT a) (NN time)))) (NP (NP (DT a) (JJ young) (NN boy)) (CC and) (NP (JJ young) (NN girl))) (VP (VBD set) (PRT (RP out)) (PP (IN on) (NP (DT a) (NN trip))) (PP (TO to) (NP (DT the) (NN beach)))) (. .)))', 'lemma': [(u'Once', u'once', u'RB'), (u'upon', u'upon', u'IN'), (u'a', u'a', u'DT'), (u'time', u'time', u'NN'), (u'a', u'a', u'DT'), (u'young', u'young', u'JJ'), (u'boy', u'boy', u'NN'), (u'and', u'and', u'CC'), (u'young', u'young', u'JJ'), (u'girl', u'girl', u'NN'), (u'set', u'set', u'VBD'), (u'out', u'out', u'RP'), (u'on', u'on', u'IN'), (u'a', u'a', u'DT'), (u'trip', u'trip', u'NN'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'beach', u'beach', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Once', 'upon', 'a', 'time', 'a', 'young', 'boy', 'and', 'young', 'girl', 'set', 'out', 'on', 'a', 'trip', 'to', 'the', 'beach', '.']}, {'string': ' They packed a few towels, an umbrella, a few beach chairs and a lunch cooler.', 'parse': {'tree': '(ROOT (S (NP (PRP They)) (VP (VBD packed) (NP (NP (DT a) (JJ few) (NNS towels)) (, ,) (NP (DT an) (NN umbrella)) (, ,) (NP (DT a) (JJ few) (NN beach) (NNS chairs)) (CC and) (NP (DT a) (NN lunch) (NN cooler)))) (. .)))', 'lemma': [(u'They', u'they', u'PRP'), (u'packed', u'pack', u'VBD'), (u'a', u'a', u'DT'), (u'few', u'few', u'JJ'), (u'towels', u'towel', u'NNS'), (u',', u',', u','), (u'an', u'a', u'DT'), (u'umbrella', u'umbrella', u'NN'), (u',', u',', u','), (u'a', u'a', u'DT'), (u'few', u'few', u'JJ'), (u'beach', u'beach', u'NN'), (u'chairs', u'chair', u'NNS'), (u'and', u'and', u'CC'), (u'a', u'a', u'DT'), (u'lunch', u'lunch', u'NN'), (u'cooler', u'cooler', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['They', 'packed', 'a', 'few', 'towels', ',', 'an', 'umbrella', ',', 'a', 'few', 'beach', 'chairs', 'and', 'a', 'lunch', 'cooler', '.']}, {'string': ' They drove to the crowded beach parking lot and spent almost an hour trying to find a parking spot.', 'parse': {'tree': '(ROOT (S (NP (PRP They)) (VP (VP (VBD drove) (PP (TO to) (NP (DT the) (JJ crowded) (NN beach) (NN parking) (NN lot)))) (CC and) (VP (VBD spent) (NP (NP (RB almost) (DT an) (NN hour)) (VP (VBG trying) (S (VP (TO to) (VP (VB find) (NP (DT a) (NN parking) (NN spot))))))))) (. .)))', 'lemma': [(u'They', u'they', u'PRP'), (u'drove', u'drive', u'VBD'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'crowded', u'crowded', u'JJ'), (u'beach', u'beach', u'NN'), (u'parking', u'parking', u'NN'), (u'lot', u'lot', u'NN'), (u'and', u'and', u'CC'), (u'spent', u'spend', u'VBD'), (u'almost', u'almost', u'RB'), (u'an', u'a', u'DT'), (u'hour', u'hour', u'NN'), (u'trying', u'try', u'VBG'), (u'to', u'to', u'TO'), (u'find', u'find', u'VB'), (u'a', u'a', u'DT'), (u'parking', u'parking', u'NN'), (u'spot', u'spot', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['They', 'drove', 'to', 'the', 'crowded', 'beach', 'parking', 'lot', 'and', 'spent', 'almost', 'an', 'hour', 'trying', 'to', 'find', 'a', 'parking', 'spot', '.']}, {'string': ' Once they found a spot they parked and began walking to the beach area.', 'parse': {'tree': '(ROOT (S (SBAR (IN Once) (S (NP (PRP they)) (VP (VBD found) (NP (DT a) (NN spot))))) (NP (PRP they)) (VP (VP (VBD parked)) (CC and) (VP (VBD began) (S (VP (VBG walking) (PP (TO to) (NP (DT the) (NN beach) (NN area))))))) (. .)))', 'lemma': [(u'Once', u'once', u'IN'), (u'they', u'they', u'PRP'), (u'found', u'find', u'VBD'), (u'a', u'a', u'DT'), (u'spot', u'spot', u'NN'), (u'they', u'they', u'PRP'), (u'parked', u'park', u'VBD'), (u'and', u'and', u'CC'), (u'began', u'begin', u'VBD'), (u'walking', u'walk', u'VBG'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'beach', u'beach', u'NN'), (u'area', u'area', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Once', 'they', 'found', 'a', 'spot', 'they', 'parked', 'and', 'began', 'walking', 'to', 'the', 'beach', 'area', '.']}, {'string': ' They found a nice spot with a good view of the water and set up their belongings.', 'parse': {'tree': '(ROOT (S (NP (PRP They)) (VP (VP (VBD found) (NP (DT a) (JJ nice) (NN spot)) (PP (IN with) (NP (NP (DT a) (JJ good) (NN view)) (PP (IN of) (NP (DT the) (NN water)))))) (CC and) (VP (VBD set) (PRT (RP up)) (NP (PRP$ their) (NNS belongings)))) (. .)))', 'lemma': [(u'They', u'they', u'PRP'), (u'found', u'find', u'VBD'), (u'a', u'a', u'DT'), (u'nice', u'nice', u'JJ'), (u'spot', u'spot', u'NN'), (u'with', u'with', u'IN'), (u'a', u'a', u'DT'), (u'good', u'good', u'JJ'), (u'view', u'view', u'NN'), (u'of', u'of', u'IN'), (u'the', u'the', u'DT'), (u'water', u'water', u'NN'), (u'and', u'and', u'CC'), (u'set', u'set', u'VBD'), (u'up', u'up', u'RP'), (u'their', u'they', u'PRP$'), (u'belongings', u'belongings', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['They', 'found', 'a', 'nice', 'spot', 'with', 'a', 'good', 'view', 'of', 'the', 'water', 'and', 'set', 'up', 'their', 'belongings', '.']}, {'string': ' Once they sat down they began to enjoy a nice lunch on the beach.', 'parse': {'tree': '(ROOT (S (SBAR (IN Once) (S (NP (PRP they)) (VP (VBD sat) (PRT (RP down))))) (NP (PRP they)) (VP (VBD began) (S (VP (TO to) (VP (VB enjoy) (NP (DT a) (JJ nice) (NN lunch)) (PP (IN on) (NP (DT the) (NN beach))))))) (. .)))', 'lemma': [(u'Once', u'once', u'IN'), (u'they', u'they', u'PRP'), (u'sat', u'sit', u'VBD'), (u'down', u'down', u'RP'), (u'they', u'they', u'PRP'), (u'began', u'begin', u'VBD'), (u'to', u'to', u'TO'), (u'enjoy', u'enjoy', u'VB'), (u'a', u'a', u'DT'), (u'nice', u'nice', u'JJ'), (u'lunch', u'lunch', u'NN'), (u'on', u'on', u'IN'), (u'the', u'the', u'DT'), (u'beach', u'beach', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Once', 'they', 'sat', 'down', 'they', 'began', 'to', 'enjoy', 'a', 'nice', 'lunch', 'on', 'the', 'beach', '.']}, {'string': ' They watched the boats go by and people playing in the water.', 'parse': {'tree': '(ROOT (S (S (NP (PRP They)) (VP (VBD watched) (SBAR (S (NP (DT the) (NNS boats)) (VP (VBP go) (PP (IN by))))))) (CC and) (S (NP (NNS people)) (VP (VBG playing) (PP (IN in) (NP (DT the) (NN water))))) (. .)))', 'lemma': [(u'They', u'they', u'PRP'), (u'watched', u'watch', u'VBD'), (u'the', u'the', u'DT'), (u'boats', u'boat', u'NNS'), (u'go', u'go', u'VBP'), (u'by', u'by', u'IN'), (u'and', u'and', u'CC'), (u'people', u'people', u'NNS'), (u'playing', u'play', u'VBG'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'water', u'water', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['They', 'watched', 'the', 'boats', 'go', 'by', 'and', 'people', 'playing', 'in', 'the', 'water', '.']}, {'string': ' It was a wonderful day and one they would always remember.', 'parse': {'tree': '(ROOT (S (NP (PRP It)) (VP (VBD was) (NP (NP (DT a) (JJ wonderful) (NN day) (CC and) (NN one)) (SBAR (S (NP (PRP they)) (VP (MD would) (ADVP (RB always)) (VP (VB remember))))))) (. .)))', 'lemma': [(u'It', u'it', u'PRP'), (u'was', u'be', u'VBD'), (u'a', u'a', u'DT'), (u'wonderful', u'wonderful', u'JJ'), (u'day', u'day', u'NN'), (u'and', u'and', u'CC'), (u'one', u'one', u'NN'), (u'they', u'they', u'PRP'), (u'would', u'would', u'MD'), (u'always', u'always', u'RB'), (u'remember', u'remember', u'VB'), (u'.', u'.', u'.')]}, 'tokens': ['It', 'was', 'a', 'wonderful', 'day', 'and', 'one', 'they', 'would', 'always', 'remember', '.']}, {'string': ' Once they arrived home they suddenly found out that they both had a pretty good sunburn.', 'parse': {'tree': '(ROOT (S (SBAR (IN Once) (S (NP (PRP they)) (VP (VBD arrived) (NP (NN home))))) (NP (PRP they)) (ADVP (RB suddenly)) (VP (VBD found) (PRT (RP out)) (SBAR (IN that) (S (NP (PRP they)) (DT both) (VP (VBD had) (NP (DT a) (ADJP (RB pretty) (JJ good)) (NN sunburn)))))) (. .)))', 'lemma': [(u'Once', u'once', u'IN'), (u'they', u'they', u'PRP'), (u'arrived', u'arrive', u'VBD'), (u'home', u'home', u'NN'), (u'they', u'they', u'PRP'), (u'suddenly', u'suddenly', u'RB'), (u'found', u'find', u'VBD'), (u'out', u'out', u'RP'), (u'that', u'that', u'IN'), (u'they', u'they', u'PRP'), (u'both', u'both', u'DT'), (u'had', u'have', u'VBD'), (u'a', u'a', u'DT'), (u'pretty', u'pretty', u'RB'), (u'good', u'good', u'JJ'), (u'sunburn', u'sunburn', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Once', 'they', 'arrived', 'home', 'they', 'suddenly', 'found', 'out', 'that', 'they', 'both', 'had', 'a', 'pretty', 'good', 'sunburn', '.']}, {'string': ' They both said that next time they would use sun screen.', 'parse': {'tree': '(ROOT (S (NP (PRP They)) (DT both) (VP (VBD said) (SBAR (IN that) (S (NP (JJ next) (NN time)) (NP (PRP they)) (VP (MD would) (VP (VB use) (NP (NN sun) (NN screen))))))) (. .)))', 'lemma': [(u'They', u'they', u'PRP'), (u'both', u'both', u'DT'), (u'said', u'say', u'VBD'), (u'that', u'that', u'IN'), (u'next', u'next', u'JJ'), (u'time', u'time', u'NN'), (u'they', u'they', u'PRP'), (u'would', u'would', u'MD'), (u'use', u'use', u'VB'), (u'sun', u'sun', u'NN'), (u'screen', u'screen', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['They', 'both', 'said', 'that', 'next', 'time', 'they', 'would', 'use', 'sun', 'screen', '.']}], 'questions': [{'question': {'string': ' Was it a good day for the couple, and what did they find out when they got home?', 'parse': {'tree': '(ROOT (SQ (VBD Was) (NP (PRP it)) (NP (DT a) (JJ good) (NN day)) (SBAR (IN for) (S (NP (NP (DT the) (NN couple)) (, ,) (CC and) (NP (WP what))) (VP (VBD did) (SBAR (S (NP (PRP they)) (VP (VBP find) (PRT (RP out)) (SBAR (WHADVP (WRB when)) (S (NP (PRP they)) (VP (VBD got) (NP (NN home))))))))))) (. ?)))', 'lemma': [(u'Was', u'be', u'VBD'), (u'it', u'it', u'PRP'), (u'a', u'a', u'DT'), (u'good', u'good', u'JJ'), (u'day', u'day', u'NN'), (u'for', u'for', u'IN'), (u'the', u'the', u'DT'), (u'couple', u'couple', u'NN'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'what', u'what', u'WP'), (u'did', u'do', u'VBD'), (u'they', u'they', u'PRP'), (u'find', u'find', u'VBP'), (u'out', u'out', u'RP'), (u'when', u'when', u'WRB'), (u'they', u'they', u'PRP'), (u'got', u'get', u'VBD'), (u'home', u'home', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['Was', 'it', 'a', 'good', 'day', 'for', 'the', 'couple', ',', 'and', 'what', 'did', 'they', 'find', 'out', 'when', 'they', 'got', 'home', '?']}, 'answers': [{'string': ' It was a good day, and they found that they were sunburned', 'parse': {'tree': '(ROOT (S (S (NP (PRP It)) (VP (VBD was) (NP (DT a) (JJ good) (NN day)))) (, ,) (CC and) (S (NP (PRP they)) (VP (VBD found) (SBAR (IN that) (S (NP (PRP they)) (VP (VBD were) (VP (VBN sunburned)))))))))', 'lemma': [(u'It', u'it', u'PRP'), (u'was', u'be', u'VBD'), (u'a', u'a', u'DT'), (u'good', u'good', u'JJ'), (u'day', u'day', u'NN'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'they', u'they', u'PRP'), (u'found', u'find', u'VBD'), (u'that', u'that', u'IN'), (u'they', u'they', u'PRP'), (u'were', u'be', u'VBD'), (u'sunburned', u'sunburn', u'VBN')]}, 'tokens': ['It', 'was', 'a', 'good', 'day', ',', 'and', 'they', 'found', 'that', 'they', 'were', 'sunburned']}, {'string': ' It was not a good day, and they found they were sunburned.', 'parse': {'tree': '(ROOT (S (S (NP (PRP It)) (VP (VBD was) (RB not) (NP (DT a) (JJ good) (NN day)))) (, ,) (CC and) (S (NP (PRP they)) (VP (VBD found) (SBAR (S (NP (PRP they)) (VP (VBD were) (VP (VBN sunburned))))))) (. .)))', 'lemma': [(u'It', u'it', u'PRP'), (u'was', u'be', u'VBD'), (u'not', u'not', u'RB'), (u'a', u'a', u'DT'), (u'good', u'good', u'JJ'), (u'day', u'day', u'NN'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'they', u'they', u'PRP'), (u'found', u'find', u'VBD'), (u'they', u'they', u'PRP'), (u'were', u'be', u'VBD'), (u'sunburned', u'sunburn', u'VBN'), (u'.', u'.', u'.')]}, 'tokens': ['It', 'was', 'not', 'a', 'good', 'day', ',', 'and', 'they', 'found', 'they', 'were', 'sunburned', '.']}, {'string': ' It was a good day, and they found they were late getting home', 'parse': {'tree': '(ROOT (S (S (NP (PRP It)) (VP (VBD was) (NP (DT a) (JJ good) (NN day)))) (, ,) (CC and) (S (NP (PRP they)) (VP (VBD found) (SBAR (S (NP (PRP they)) (VP (VBD were) (ADVP (RB late)) (VP (VBG getting) (NP (NN home))))))))))', 'lemma': [(u'It', u'it', u'PRP'), (u'was', u'be', u'VBD'), (u'a', u'a', u'DT'), (u'good', u'good', u'JJ'), (u'day', u'day', u'NN'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'they', u'they', u'PRP'), (u'found', u'find', u'VBD'), (u'they', u'they', u'PRP'), (u'were', u'be', u'VBD'), (u'late', u'late', u'RB'), (u'getting', u'get', u'VBG'), (u'home', u'home', u'NN')]}, 'tokens': ['It', 'was', 'a', 'good', 'day', ',', 'and', 'they', 'found', 'they', 'were', 'late', 'getting', 'home']}, {'string': ' It was not a good day, and they found that they got a parking ticket', 'parse': {'tree': '(ROOT (S (S (NP (PRP It)) (VP (VBD was) (RB not) (NP (DT a) (JJ good) (NN day)))) (, ,) (CC and) (S (NP (PRP they)) (VP (VBD found) (SBAR (IN that) (S (NP (PRP they)) (VP (VBD got) (NP (DT a) (NN parking) (NN ticket)))))))))', 'lemma': [(u'It', u'it', u'PRP'), (u'was', u'be', u'VBD'), (u'not', u'not', u'RB'), (u'a', u'a', u'DT'), (u'good', u'good', u'JJ'), (u'day', u'day', u'NN'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'they', u'they', u'PRP'), (u'found', u'find', u'VBD'), (u'that', u'that', u'IN'), (u'they', u'they', u'PRP'), (u'got', u'get', u'VBD'), (u'a', u'a', u'DT'), (u'parking', u'parking', u'NN'), (u'ticket', u'ticket', u'NN')]}, 'tokens': ['It', 'was', 'not', 'a', 'good', 'day', ',', 'and', 'they', 'found', 'that', 'they', 'got', 'a', 'parking', 'ticket']}], 'mode': 0}, {'question': {'string': ' Where were the couple going and how did they get their?', 'parse': {'tree': '(ROOT (SBARQ (SBARQ (WHADVP (WRB Where)) (SQ (VBD were) (NP (DT the) (NN couple)) (VP (VBG going)))) (CC and) (SBARQ (WHADVP (WRB how)) (SQ (VBD did) (NP (PRP they)) (VP (VB get) (NP (PRP$ their)))) (. ?))))', 'lemma': [(u'Where', u'where', u'WRB'), (u'were', u'be', u'VBD'), (u'the', u'the', u'DT'), (u'couple', u'couple', u'NN'), (u'going', u'go', u'VBG'), (u'and', u'and', u'CC'), (u'how', u'how', u'WRB'), (u'did', u'do', u'VBD'), (u'they', u'they', u'PRP'), (u'get', u'get', u'VB'), (u'their', u'they', u'PRP$'), (u'?', u'?', u'.')]}, 'tokens': ['Where', 'were', 'the', 'couple', 'going', 'and', 'how', 'did', 'they', 'get', 'their', '?']}, 'answers': [{'string': ' The beach and by Bike', 'parse': {'tree': '(ROOT (UCP (NP (DT The) (NN beach)) (CC and) (PP (IN by) (NP (NNP Bike)))))', 'lemma': [(u'The', u'the', u'DT'), (u'beach', u'beach', u'NN'), (u'and', u'and', u'CC'), (u'by', u'by', u'IN'), (u'Bike', u'Bike', u'NNP')]}, 'tokens': ['The', 'beach', 'and', 'by', 'Bike']}, {'string': ' The park and by bike', 'parse': {'tree': '(ROOT (UCP (NP (DT The) (NN park)) (CC and) (PP (IN by) (NP (NN bike)))))', 'lemma': [(u'The', u'the', u'DT'), (u'park', u'park', u'NN'), (u'and', u'and', u'CC'), (u'by', u'by', u'IN'), (u'bike', u'bike', u'NN')]}, 'tokens': ['The', 'park', 'and', 'by', 'bike']}, {'string': ' The store and by car', 'parse': {'tree': '(ROOT (UCP (NP (DT The) (NN store)) (CC and) (PP (IN by) (NP (NN car)))))', 'lemma': [(u'The', u'the', u'DT'), (u'store', u'store', u'NN'), (u'and', u'and', u'CC'), (u'by', u'by', u'IN'), (u'car', u'car', u'NN')]}, 'tokens': ['The', 'store', 'and', 'by', 'car']}, {'string': ' The beach and by car', 'parse': {'tree': '(ROOT (UCP (NP (DT The) (NN beach)) (CC and) (PP (IN by) (NP (NN car)))))', 'lemma': [(u'The', u'the', u'DT'), (u'beach', u'beach', u'NN'), (u'and', u'and', u'CC'), (u'by', u'by', u'IN'), (u'car', u'car', u'NN')]}, 'tokens': ['The', 'beach', 'and', 'by', 'car']}], 'mode': 0}, {'question': {'string': ' Besides boats what did the couple watch?', 'parse': {'tree': '(ROOT (S (PP (IN Besides) (NP (NP (NNS boats)) (SBAR (WHNP (WP what)) (S (VP (VBD did)))))) (NP (DT the) (NN couple)) (VP (VBP watch)) (. ?)))', 'lemma': [(u'Besides', u'besides', u'IN'), (u'boats', u'boat', u'NNS'), (u'what', u'what', u'WP'), (u'did', u'do', u'VBD'), (u'the', u'the', u'DT'), (u'couple', u'couple', u'NN'), (u'watch', u'watch', u'VBP'), (u'?', u'?', u'.')]}, 'tokens': ['Besides', 'boats', 'what', 'did', 'the', 'couple', 'watch', '?']}, 'answers': [{'string': ' dolphins', 'parse': {'tree': '(ROOT (NP (NNS dolphins)))', 'lemma': [(u'dolphins', u'dolphin', u'NNS')]}, 'tokens': ['dolphins']}, {'string': ' people making sand castles', 'parse': {'tree': '(ROOT (NP (NNS people) (NN making) (NN sand) (NNS castles)))', 'lemma': [(u'people', u'people', u'NNS'), (u'making', u'making', u'NN'), (u'sand', u'sand', u'NN'), (u'castles', u'castle', u'NNS')]}, 'tokens': ['people', 'making', 'sand', 'castles']}, {'string': ' people playing in the water', 'parse': {'tree': '(ROOT (NP (NP (NNS people)) (NP (NP (NN playing)) (PP (IN in) (NP (DT the) (NN water))))))', 'lemma': [(u'people', u'people', u'NNS'), (u'playing', u'playing', u'NN'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'water', u'water', u'NN')]}, 'tokens': ['people', 'playing', 'in', 'the', 'water']}, {'string': ' children playing in the sand', 'parse': {'tree': '(ROOT (NP (NP (NNS children)) (NP (NP (NN playing)) (PP (IN in) (NP (DT the) (NN sand))))))', 'lemma': [(u'children', u'child', u'NNS'), (u'playing', u'playing', u'NN'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'sand', u'sand', u'NN')]}, 'tokens': ['children', 'playing', 'in', 'the', 'sand']}], 'mode': 1}, {'question': {'string': ' It took the young couple how long to find a parking spot?', 'parse': {'tree': '(ROOT (S (NP (PRP It)) (VP (VBD took) (NP (NP (DT the) (JJ young) (NN couple)) (SBAR (WHNP (WRB how) (RB long)) (S (VP (TO to) (VP (VB find) (NP (DT a) (NN parking) (NN spot)))))))) (. ?)))', 'lemma': [(u'It', u'it', u'PRP'), (u'took', u'take', u'VBD'), (u'the', u'the', u'DT'), (u'young', u'young', u'JJ'), (u'couple', u'couple', u'NN'), (u'how', u'how', u'WRB'), (u'long', u'long', u'RB'), (u'to', u'to', u'TO'), (u'find', u'find', u'VB'), (u'a', u'a', u'DT'), (u'parking', u'parking', u'NN'), (u'spot', u'spot', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['It', 'took', 'the', 'young', 'couple', 'how', 'long', 'to', 'find', 'a', 'parking', 'spot', '?']}, 'answers': [{'string': ' almost a half hour', 'parse': {'tree': '(ROOT (X (NP (QP (RB almost) (DT a) (NN half)) (NN hour))))', 'lemma': [(u'almost', u'almost', u'RB'), (u'a', u'a', u'DT'), (u'half', u'half', u'NN'), (u'hour', u'hour', u'NN')]}, 'tokens': ['almost', 'a', 'half', 'hour']}, {'string': ' only a short time', 'parse': {'tree': '(ROOT (FRAG (NP (RB only) (DT a) (JJ short) (NN time))))', 'lemma': [(u'only', u'only', u'RB'), (u'a', u'a', u'DT'), (u'short', u'short', u'JJ'), (u'time', u'time', u'NN')]}, 'tokens': ['only', 'a', 'short', 'time']}, {'string': ' almost an hour', 'parse': {'tree': '(ROOT (FRAG (NP (RB almost) (DT an) (NN hour))))', 'lemma': [(u'almost', u'almost', u'RB'), (u'an', u'a', u'DT'), (u'hour', u'hour', u'NN')]}, 'tokens': ['almost', 'an', 'hour']}, {'string': ' over an hour', 'parse': {'tree': '(ROOT (PP (IN over) (NP (DT an) (NN hour))))', 'lemma': [(u'over', u'over', u'IN'), (u'an', u'a', u'DT'), (u'hour', u'hour', u'NN')]}, 'tokens': ['over', 'an', 'hour']}], 'mode': 1}]}
{'sentences': [{'string': ' Three little kids lived in a great big house with a great big cat and many places for a great big cat to hide.', 'parse': {'tree': '(ROOT (S (NP (CD Three) (JJ little) (NNS kids)) (VP (VBD lived) (PP (IN in) (NP (NP (NP (DT a) (JJ great) (JJ big) (NN house)) (PP (IN with) (NP (DT a) (JJ great) (JJ big) (NN cat)))) (CC and) (NP (NP (JJ many) (NNS places)) (PP (IN for) (NP (DT a) (JJ great) (JJ big) (NN cat)))))) (S (VP (TO to) (VP (VB hide))))) (. .)))', 'lemma': [(u'Three', u'three', u'CD'), (u'little', u'little', u'JJ'), (u'kids', u'kid', u'NNS'), (u'lived', u'live', u'VBD'), (u'in', u'in', u'IN'), (u'a', u'a', u'DT'), (u'great', u'great', u'JJ'), (u'big', u'big', u'JJ'), (u'house', u'house', u'NN'), (u'with', u'with', u'IN'), (u'a', u'a', u'DT'), (u'great', u'great', u'JJ'), (u'big', u'big', u'JJ'), (u'cat', u'cat', u'NN'), (u'and', u'and', u'CC'), (u'many', u'many', u'JJ'), (u'places', u'place', u'NNS'), (u'for', u'for', u'IN'), (u'a', u'a', u'DT'), (u'great', u'great', u'JJ'), (u'big', u'big', u'JJ'), (u'cat', u'cat', u'NN'), (u'to', u'to', u'TO'), (u'hide', u'hide', u'VB'), (u'.', u'.', u'.')]}, 'tokens': ['Three', 'little', 'kids', 'lived', 'in', 'a', 'great', 'big', 'house', 'with', 'a', 'great', 'big', 'cat', 'and', 'many', 'places', 'for', 'a', 'great', 'big', 'cat', 'to', 'hide', '.']}, {'string': ' Their great big cat was named Cowboy.', 'parse': {'tree': '(ROOT (S (NP (PRP$ Their) (JJ great) (JJ big) (NN cat)) (VP (VBD was) (VP (VBN named) (ADVP (RB Cowboy)))) (. .)))', 'lemma': [(u'Their', u'they', u'PRP$'), (u'great', u'great', u'JJ'), (u'big', u'big', u'JJ'), (u'cat', u'cat', u'NN'), (u'was', u'be', u'VBD'), (u'named', u'name', u'VBN'), (u'Cowboy', u'cowboy', u'RB'), (u'.', u'.', u'.')]}, 'tokens': ['Their', 'great', 'big', 'cat', 'was', 'named', 'Cowboy', '.']}, {'string': ' And Cowboy was not a very nice cat.', 'parse': {'tree': '(ROOT (S (CC And) (NP (NNP Cowboy)) (VP (VBD was) (RB not) (NP (DT a) (ADJP (RB very) (JJ nice)) (NN cat))) (. .)))', 'lemma': [(u'And', u'and', u'CC'), (u'Cowboy', u'Cowboy', u'NNP'), (u'was', u'be', u'VBD'), (u'not', u'not', u'RB'), (u'a', u'a', u'DT'), (u'very', u'very', u'RB'), (u'nice', u'nice', u'JJ'), (u'cat', u'cat', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['And', 'Cowboy', 'was', 'not', 'a', 'very', 'nice', 'cat', '.']}, {'string': ' Cowboy liked to bite and chew and scratch a great many things.', 'parse': {'tree': '(ROOT (S (NP (NNP Cowboy)) (VP (VP (VBD liked) (S (VP (TO to) (VP (VB bite))))) (CC and) (VP (VBP chew) (CC and) (VBP scratch) (NP (DT a) (JJ great) (JJ many) (NNS things)))) (. .)))', 'lemma': [(u'Cowboy', u'Cowboy', u'NNP'), (u'liked', u'like', u'VBD'), (u'to', u'to', u'TO'), (u'bite', u'bite', u'VB'), (u'and', u'and', u'CC'), (u'chew', u'chew', u'VBP'), (u'and', u'and', u'CC'), (u'scratch', u'scratch', u'VBP'), (u'a', u'a', u'DT'), (u'great', u'great', u'JJ'), (u'many', u'many', u'JJ'), (u'things', u'thing', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['Cowboy', 'liked', 'to', 'bite', 'and', 'chew', 'and', 'scratch', 'a', 'great', 'many', 'things', '.']}, {'string': ' When Cowboy was happy, which was not very often, Cowboy liked to bite in to a blanket or soft toy and carry it around in his mouth.', 'parse': {'tree': '(ROOT (S (SBAR (WHADVP (WRB When)) (S (NP (NNP Cowboy)) (VP (VBD was) (ADJP (JJ happy)) (, ,) (SBAR (WHNP (WDT which)) (S (VP (VBD was) (RB not) (ADJP (RB very) (RB often)))))))) (, ,) (NP (NNP Cowboy)) (VP (VBD liked) (S (VP (TO to) (VP (VP (VB bite) (PP (IN in) (PP (TO to) (NP (NP (DT a) (NN blanket)) (CC or) (NP (JJ soft) (NN toy)))))) (CC and) (VP (VB carry) (NP (PRP it)) (PRT (RP around)) (PP (IN in) (NP (PRP$ his) (NN mouth)))))))) (. .)))', 'lemma': [(u'When', u'when', u'WRB'), (u'Cowboy', u'Cowboy', u'NNP'), (u'was', u'be', u'VBD'), (u'happy', u'happy', u'JJ'), (u',', u',', u','), (u'which', u'which', u'WDT'), (u'was', u'be', u'VBD'), (u'not', u'not', u'RB'), (u'very', u'very', u'RB'), (u'often', u'often', u'RB'), (u',', u',', u','), (u'Cowboy', u'Cowboy', u'NNP'), (u'liked', u'like', u'VBD'), (u'to', u'to', u'TO'), (u'bite', u'bite', u'VB'), (u'in', u'in', u'IN'), (u'to', u'to', u'TO'), (u'a', u'a', u'DT'), (u'blanket', u'blanket', u'NN'), (u'or', u'or', u'CC'), (u'soft', u'soft', u'JJ'), (u'toy', u'toy', u'NN'), (u'and', u'and', u'CC'), (u'carry', u'carry', u'VB'), (u'it', u'it', u'PRP'), (u'around', u'around', u'RP'), (u'in', u'in', u'IN'), (u'his', u'he', u'PRP$'), (u'mouth', u'mouth', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['When', 'Cowboy', 'was', 'happy', ',', 'which', 'was', 'not', 'very', 'often', ',', 'Cowboy', 'liked', 'to', 'bite', 'in', 'to', 'a', 'blanket', 'or', 'soft', 'toy', 'and', 'carry', 'it', 'around', 'in', 'his', 'mouth', '.']}, {'string': ' When Cowboy was hungry he liked to bite bright red tomatoes and suck out all the juice and seeds.', 'parse': {'tree': '(ROOT (S (SBAR (WHADVP (WRB When)) (S (NP (NNP Cowboy)) (VP (VBD was) (ADJP (JJ hungry))))) (NP (PRP he)) (VP (VBD liked) (S (VP (TO to) (VP (VP (VB bite) (NP (JJ bright) (JJ red) (NNS tomatoes))) (CC and) (VP (VB suck) (PRT (RP out)) (NP (PDT all) (NP (DT the) (NN juice)) (CC and) (NP (NNS seeds)))))))) (. .)))', 'lemma': [(u'When', u'when', u'WRB'), (u'Cowboy', u'Cowboy', u'NNP'), (u'was', u'be', u'VBD'), (u'hungry', u'hungry', u'JJ'), (u'he', u'he', u'PRP'), (u'liked', u'like', u'VBD'), (u'to', u'to', u'TO'), (u'bite', u'bite', u'VB'), (u'bright', u'bright', u'JJ'), (u'red', u'red', u'JJ'), (u'tomatoes', u'tomato', u'NNS'), (u'and', u'and', u'CC'), (u'suck', u'suck', u'VB'), (u'out', u'out', u'RP'), (u'all', u'all', u'PDT'), (u'the', u'the', u'DT'), (u'juice', u'juice', u'NN'), (u'and', u'and', u'CC'), (u'seeds', u'seed', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['When', 'Cowboy', 'was', 'hungry', 'he', 'liked', 'to', 'bite', 'bright', 'red', 'tomatoes', 'and', 'suck', 'out', 'all', 'the', 'juice', 'and', 'seeds', '.']}, {'string': ' And when Cowboy was feeling mean he liked to hide.', 'parse': {'tree': '(ROOT (S (CC And) (SBAR (WHADVP (WRB when)) (S (NP (NNP Cowboy)) (VP (VBD was) (VP (VBG feeling))))) (VP (VBP mean) (SBAR (S (NP (PRP he)) (VP (VBD liked) (S (VP (TO to) (VP (VB hide)))))))) (. .)))', 'lemma': [(u'And', u'and', u'CC'), (u'when', u'when', u'WRB'), (u'Cowboy', u'Cowboy', u'NNP'), (u'was', u'be', u'VBD'), (u'feeling', u'feel', u'VBG'), (u'mean', u'mean', u'VBP'), (u'he', u'he', u'PRP'), (u'liked', u'like', u'VBD'), (u'to', u'to', u'TO'), (u'hide', u'hide', u'VB'), (u'.', u'.', u'.')]}, 'tokens': ['And', 'when', 'Cowboy', 'was', 'feeling', 'mean', 'he', 'liked', 'to', 'hide', '.']}, {'string': ' Cowboy would hide, curled up tight in a ball under a blanket or behind a corner and wait for one of the little kids to pass by.', 'parse': {'tree': '(ROOT (S (NP (NNP Cowboy)) (VP (MD would) (VP (VP (VB hide)) (, ,) (VP (VBD curled) (PRT (RP up)) (PP (PP (ADVP (RB tight)) (IN in) (NP (NP (DT a) (NN ball)) (PP (IN under) (NP (DT a) (NN blanket))))) (CC or) (PP (IN behind) (NP (DT a) (NN corner))))) (CC and) (VP (VB wait) (PP (IN for) (NP (NP (CD one)) (PP (IN of) (NP (DT the) (JJ little) (NNS kids)))))) (S (VP (TO to) (VP (VB pass) (PP (IN by))))))) (. .)))', 'lemma': [(u'Cowboy', u'Cowboy', u'NNP'), (u'would', u'would', u'MD'), (u'hide', u'hide', u'VB'), (u',', u',', u','), (u'curled', u'curl', u'VBD'), (u'up', u'up', u'RP'), (u'tight', u'tight', u'RB'), (u'in', u'in', u'IN'), (u'a', u'a', u'DT'), (u'ball', u'ball', u'NN'), (u'under', u'under', u'IN'), (u'a', u'a', u'DT'), (u'blanket', u'blanket', u'NN'), (u'or', u'or', u'CC'), (u'behind', u'behind', u'IN'), (u'a', u'a', u'DT'), (u'corner', u'corner', u'NN'), (u'and', u'and', u'CC'), (u'wait', u'wait', u'VB'), (u'for', u'for', u'IN'), (u'one', u'one', u'CD'), (u'of', u'of', u'IN'), (u'the', u'the', u'DT'), (u'little', u'little', u'JJ'), (u'kids', u'kid', u'NNS'), (u'to', u'to', u'TO'), (u'pass', u'pass', u'VB'), (u'by', u'by', u'IN'), (u'.', u'.', u'.')]}, 'tokens': ['Cowboy', 'would', 'hide', ',', 'curled', 'up', 'tight', 'in', 'a', 'ball', 'under', 'a', 'blanket', 'or', 'behind', 'a', 'corner', 'and', 'wait', 'for', 'one', 'of', 'the', 'little', 'kids', 'to', 'pass', 'by', '.']}, {'string': ' When they did pass by Cowboy would jump at their feet and try to bite and scratch them.', 'parse': {'tree': '(ROOT (S (SBAR (WHADVP (WRB When)) (S (NP (PRP they)) (VP (VBD did) (VP (VB pass) (PP (IN by) (NP (NNP Cowboy))))))) (VP (VP (MD would) (VP (VP (VB jump) (PP (IN at) (NP (PRP$ their) (NNS feet)))) (CC and) (VP (VB try) (S (VP (TO to) (VP (VB bite))))))) (CC and) (VP (VBP scratch) (NP (PRP them)))) (. .)))', 'lemma': [(u'When', u'when', u'WRB'), (u'they', u'they', u'PRP'), (u'did', u'do', u'VBD'), (u'pass', u'pass', u'VB'), (u'by', u'by', u'IN'), (u'Cowboy', u'Cowboy', u'NNP'), (u'would', u'would', u'MD'), (u'jump', u'jump', u'VB'), (u'at', u'at', u'IN'), (u'their', u'they', u'PRP$'), (u'feet', u'foot', u'NNS'), (u'and', u'and', u'CC'), (u'try', u'try', u'VB'), (u'to', u'to', u'TO'), (u'bite', u'bite', u'VB'), (u'and', u'and', u'CC'), (u'scratch', u'scratch', u'VBP'), (u'them', u'they', u'PRP'), (u'.', u'.', u'.')]}, 'tokens': ['When', 'they', 'did', 'pass', 'by', 'Cowboy', 'would', 'jump', 'at', 'their', 'feet', 'and', 'try', 'to', 'bite', 'and', 'scratch', 'them', '.']}, {'string': ' He did not know that what he was doing was not very nice.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD did) (RB not) (VP (VB know) (SBAR (IN that) (S (SBAR (WHNP (WP what)) (S (NP (PRP he)) (VP (VBD was) (VP (VBG doing))))) (VP (VBD was) (RB not) (ADJP (RB very) (JJ nice))))))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'did', u'do', u'VBD'), (u'not', u'not', u'RB'), (u'know', u'know', u'VB'), (u'that', u'that', u'IN'), (u'what', u'what', u'WP'), (u'he', u'he', u'PRP'), (u'was', u'be', u'VBD'), (u'doing', u'do', u'VBG'), (u'was', u'be', u'VBD'), (u'not', u'not', u'RB'), (u'very', u'very', u'RB'), (u'nice', u'nice', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'did', 'not', 'know', 'that', 'what', 'he', 'was', 'doing', 'was', 'not', 'very', 'nice', '.']}, {'string': ' Cowboy was only a cat.', 'parse': {'tree': '(ROOT (S (NP (NNP Cowboy)) (VP (VBD was) (ADVP (RB only)) (NP (DT a) (NN cat))) (. .)))', 'lemma': [(u'Cowboy', u'Cowboy', u'NNP'), (u'was', u'be', u'VBD'), (u'only', u'only', u'RB'), (u'a', u'a', u'DT'), (u'cat', u'cat', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Cowboy', 'was', 'only', 'a', 'cat', '.']}, {'string': ' A great big cat that did not know any better.', 'parse': {'tree': '(ROOT (S (NP (NP (DT A) (JJ great) (JJ big) (NN cat)) (NP (DT that))) (VP (VBD did) (RB not) (VP (VB know) (ADVP (DT any) (RBR better)))) (. .)))', 'lemma': [(u'A', u'a', u'DT'), (u'great', u'great', u'JJ'), (u'big', u'big', u'JJ'), (u'cat', u'cat', u'NN'), (u'that', u'that', u'DT'), (u'did', u'do', u'VBD'), (u'not', u'not', u'RB'), (u'know', u'know', u'VB'), (u'any', u'any', u'DT'), (u'better', u'better', u'RBR'), (u'.', u'.', u'.')]}, 'tokens': ['A', 'great', 'big', 'cat', 'that', 'did', 'not', 'know', 'any', 'better', '.']}], 'questions': [{'question': {'string': " What was the cat 's name?", 'parse': {'tree': "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD was) (NP (NP (DT the) (NN cat) (POS 's)) (NN name))) (. ?)))", 'lemma': [(u'What', u'what', u'WP'), (u'was', u'be', u'VBD'), (u'the', u'the', u'DT'), (u'cat', u'cat', u'NN'), (u"'s", u"'s", u'POS'), (u'name', u'name', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'was', 'the', 'cat', "'s", 'name', '?']}, 'answers': [{'string': ' Tony', 'parse': {'tree': '(ROOT (NP (NNP Tony)))', 'lemma': [(u'Tony', u'Tony', u'NNP')]}, 'tokens': ['Tony']}, {'string': ' Cowboy', 'parse': {'tree': '(ROOT (ADVP (RB Cowboy)))', 'lemma': [(u'Cowboy', u'cowboy', u'RB')]}, 'tokens': ['Cowboy']}, {'string': ' Cat', 'parse': {'tree': '(ROOT (NP (NNP Cat)))', 'lemma': [(u'Cat', u'Cat', u'NNP')]}, 'tokens': ['Cat']}, {'string': ' Chowder', 'parse': {'tree': '(ROOT (NP (NNP Chowder)))', 'lemma': [(u'Chowder', u'Chowder', u'NNP')]}, 'tokens': ['Chowder']}], 'mode': 1}, {'question': {'string': ' What did Cowboy like to eat when he was hungry?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD did) (NP (NNP Cowboy)) (VP (VB like) (S (VP (TO to) (VP (VB eat) (SBAR (WHADVP (WRB when)) (S (NP (PRP he)) (VP (VBD was) (ADJP (JJ hungry)))))))))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'did', u'do', u'VBD'), (u'Cowboy', u'Cowboy', u'NNP'), (u'like', u'like', u'VB'), (u'to', u'to', u'TO'), (u'eat', u'eat', u'VB'), (u'when', u'when', u'WRB'), (u'he', u'he', u'PRP'), (u'was', u'be', u'VBD'), (u'hungry', u'hungry', u'JJ'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'did', 'Cowboy', 'like', 'to', 'eat', 'when', 'he', 'was', 'hungry', '?']}, 'answers': [{'string': ' Cowboy liked to eat cat food.', 'parse': {'tree': '(ROOT (S (NP (NNP Cowboy)) (VP (VBD liked) (S (VP (TO to) (VP (VB eat) (NP (NN cat) (NN food)))))) (. .)))', 'lemma': [(u'Cowboy', u'Cowboy', u'NNP'), (u'liked', u'like', u'VBD'), (u'to', u'to', u'TO'), (u'eat', u'eat', u'VB'), (u'cat', u'cat', u'NN'), (u'food', u'food', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Cowboy', 'liked', 'to', 'eat', 'cat', 'food', '.']}, {'string': ' Cowboy liked to eat toys.', 'parse': {'tree': '(ROOT (S (NP (NNP Cowboy)) (VP (VBD liked) (S (VP (TO to) (VP (VB eat) (NP (NNS toys)))))) (. .)))', 'lemma': [(u'Cowboy', u'Cowboy', u'NNP'), (u'liked', u'like', u'VBD'), (u'to', u'to', u'TO'), (u'eat', u'eat', u'VB'), (u'toys', u'toy', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['Cowboy', 'liked', 'to', 'eat', 'toys', '.']}, {'string': ' Cowboy liked to eat blankets.', 'parse': {'tree': '(ROOT (S (NP (NNP Cowboy)) (VP (VBD liked) (S (VP (TO to) (VP (VB eat) (NP (NNS blankets)))))) (. .)))', 'lemma': [(u'Cowboy', u'Cowboy', u'NNP'), (u'liked', u'like', u'VBD'), (u'to', u'to', u'TO'), (u'eat', u'eat', u'VB'), (u'blankets', u'blanket', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['Cowboy', 'liked', 'to', 'eat', 'blankets', '.']}, {'string': ' Cowboy liked to eat tomatoes.', 'parse': {'tree': '(ROOT (S (NP (NNP Cowboy)) (VP (VBD liked) (S (VP (TO to) (VP (VB eat) (NP (NNS tomatoes)))))) (. .)))', 'lemma': [(u'Cowboy', u'Cowboy', u'NNP'), (u'liked', u'like', u'VBD'), (u'to', u'to', u'TO'), (u'eat', u'eat', u'VB'), (u'tomatoes', u'tomato', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['Cowboy', 'liked', 'to', 'eat', 'tomatoes', '.']}], 'mode': 1}, {'question': {'string': ' When Cowboy felt mean he liked to ...', 'parse': {'tree': '(ROOT (S (SBAR (WHADVP (WRB When)) (S (NP (NNP Cowboy)) (VP (VBD felt)))) (VP (VBP mean) (SBAR (S (NP (PRP he)) (VP (VBD liked) (PP (TO to)))))) (. ...)))', 'lemma': [(u'When', u'when', u'WRB'), (u'Cowboy', u'Cowboy', u'NNP'), (u'felt', u'feel', u'VBD'), (u'mean', u'mean', u'VBP'), (u'he', u'he', u'PRP'), (u'liked', u'like', u'VBD'), (u'to', u'to', u'TO'), (u'...', u'...', u'.')]}, 'tokens': ['When', 'Cowboy', 'felt', 'mean', 'he', 'liked', 'to', '...']}, 'answers': [{'string': ' run and hide.', 'parse': {'tree': '(ROOT (S (VP (VB run) (CC and) (VB hide)) (. .)))', 'lemma': [(u'run', u'run', u'VB'), (u'and', u'and', u'CC'), (u'hide', u'hide', u'VB'), (u'.', u'.', u'.')]}, 'tokens': ['run', 'and', 'hide', '.']}, {'string': ' chew on toys.', 'parse': {'tree': '(ROOT (S (VP (VB chew) (PP (IN on) (NP (NNS toys)))) (. .)))', 'lemma': [(u'chew', u'chew', u'VB'), (u'on', u'on', u'IN'), (u'toys', u'toy', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['chew', 'on', 'toys', '.']}, {'string': ' bite the blankets.', 'parse': {'tree': '(ROOT (S (VP (VB bite) (NP (DT the) (NNS blankets))) (. .)))', 'lemma': [(u'bite', u'bite', u'VB'), (u'the', u'the', u'DT'), (u'blankets', u'blanket', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['bite', 'the', 'blankets', '.']}, {'string': ' hide and jump.', 'parse': {'tree': '(ROOT (S (VP (VB hide) (CC and) (VB jump)) (. .)))', 'lemma': [(u'hide', u'hide', u'VB'), (u'and', u'and', u'CC'), (u'jump', u'jump', u'VB'), (u'.', u'.', u'.')]}, 'tokens': ['hide', 'and', 'jump', '.']}], 'mode': 0}, {'question': {'string': ' Cowboy was a...', 'parse': {'tree': '(ROOT (S (NP (NNP Cowboy)) (VP (VBD was) (VP (VBN a.))) (. .) (. .)))', 'lemma': [(u'Cowboy', u'Cowboy', u'NNP'), (u'was', u'be', u'VBD'), (u'a.', u'a.', u'VBN'), (u'.', u'.', u'.'), (u'.', u'.', u'.')]}, 'tokens': ['Cowboy', 'was', 'a.', '.', '.']}, 'answers': [{'string': ' a tiny little cat.', 'parse': {'tree': '(ROOT (NP (DT a) (JJ tiny) (JJ little) (NN cat) (. .)))', 'lemma': [(u'a', u'a', u'DT'), (u'tiny', u'tiny', u'JJ'), (u'little', u'little', u'JJ'), (u'cat', u'cat', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['a', 'tiny', 'little', 'cat', '.']}, {'string': ' a normal size cat.', 'parse': {'tree': '(ROOT (NP (DT a) (JJ normal) (NN size) (NN cat) (. .)))', 'lemma': [(u'a', u'a', u'DT'), (u'normal', u'normal', u'JJ'), (u'size', u'size', u'NN'), (u'cat', u'cat', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['a', 'normal', 'size', 'cat', '.']}, {'string': ' great big cat.', 'parse': {'tree': '(ROOT (FRAG (NP (JJ great) (JJ big) (NN cat)) (. .)))', 'lemma': [(u'great', u'great', u'JJ'), (u'big', u'big', u'JJ'), (u'cat', u'cat', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['great', 'big', 'cat', '.']}, {'string': ' a great big dog.', 'parse': {'tree': '(ROOT (NP (DT a) (JJ great) (JJ big) (NN dog) (. .)))', 'lemma': [(u'a', u'a', u'DT'), (u'great', u'great', u'JJ'), (u'big', u'big', u'JJ'), (u'dog', u'dog', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['a', 'great', 'big', 'dog', '.']}], 'mode': 0}]}
{'sentences': [{'string': ' On the first day of school, Mrs. Law asked all the students to write a story telling her what they did over the summer.', 'parse': {'tree': '(ROOT (S (PP (IN On) (NP (NP (DT the) (JJ first) (NN day)) (PP (IN of) (NP (NN school))))) (, ,) (NP (NNP Mrs.) (NNP Law)) (VP (VBD asked) (NP (PDT all) (DT the) (NNS students)) (S (VP (TO to) (VP (VB write) (NP (NP (DT a) (NN story)) (VP (VBG telling) (NP (PRP her)) (SBAR (WHNP (WP what)) (S (NP (PRP they)) (VP (VBD did) (PP (IN over) (NP (DT the) (NN summer)))))))))))) (. .)))', 'lemma': [(u'On', u'on', u'IN'), (u'the', u'the', u'DT'), (u'first', u'first', u'JJ'), (u'day', u'day', u'NN'), (u'of', u'of', u'IN'), (u'school', u'school', u'NN'), (u',', u',', u','), (u'Mrs.', u'Mrs.', u'NNP'), (u'Law', u'Law', u'NNP'), (u'asked', u'ask', u'VBD'), (u'all', u'all', u'PDT'), (u'the', u'the', u'DT'), (u'students', u'student', u'NNS'), (u'to', u'to', u'TO'), (u'write', u'write', u'VB'), (u'a', u'a', u'DT'), (u'story', u'story', u'NN'), (u'telling', u'tell', u'VBG'), (u'her', u'she', u'PRP'), (u'what', u'what', u'WP'), (u'they', u'they', u'PRP'), (u'did', u'do', u'VBD'), (u'over', u'over', u'IN'), (u'the', u'the', u'DT'), (u'summer', u'summer', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['On', 'the', 'first', 'day', 'of', 'school', ',', 'Mrs.', 'Law', 'asked', 'all', 'the', 'students', 'to', 'write', 'a', 'story', 'telling', 'her', 'what', 'they', 'did', 'over', 'the', 'summer', '.']}, {'string': ' She told the students that they were going to read them in front of the class.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBD told) (NP (DT the) (NNS students)) (SBAR (IN that) (S (NP (PRP they)) (VP (VBD were) (VP (VBG going) (S (VP (TO to) (VP (VB read) (NP (PRP them)) (PP (IN in) (NP (NP (NN front)) (PP (IN of) (NP (DT the) (NN class))))))))))))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'told', u'tell', u'VBD'), (u'the', u'the', u'DT'), (u'students', u'student', u'NNS'), (u'that', u'that', u'IN'), (u'they', u'they', u'PRP'), (u'were', u'be', u'VBD'), (u'going', u'go', u'VBG'), (u'to', u'to', u'TO'), (u'read', u'read', u'VB'), (u'them', u'they', u'PRP'), (u'in', u'in', u'IN'), (u'front', u'front', u'NN'), (u'of', u'of', u'IN'), (u'the', u'the', u'DT'), (u'class', u'class', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'told', 'the', 'students', 'that', 'they', 'were', 'going', 'to', 'read', 'them', 'in', 'front', 'of', 'the', 'class', '.']}, {'string': ' This was going to help everyone get to know more about each other.', 'parse': {'tree': '(ROOT (S (NP (DT This)) (VP (VBD was) (VP (VBG going) (S (VP (TO to) (VP (VB help) (S (NP (NN everyone)) (VP (VB get) (S (VP (TO to) (VP (VB know) (NP (JJR more)) (PP (IN about) (NP (DT each) (JJ other))))))))))))) (. .)))', 'lemma': [(u'This', u'this', u'DT'), (u'was', u'be', u'VBD'), (u'going', u'go', u'VBG'), (u'to', u'to', u'TO'), (u'help', u'help', u'VB'), (u'everyone', u'everyone', u'NN'), (u'get', u'get', u'VB'), (u'to', u'to', u'TO'), (u'know', u'know', u'VB'), (u'more', u'more', u'JJR'), (u'about', u'about', u'IN'), (u'each', u'each', u'DT'), (u'other', u'other', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['This', 'was', 'going', 'to', 'help', 'everyone', 'get', 'to', 'know', 'more', 'about', 'each', 'other', '.']}, {'string': ' When all the students were done writing their stories, Anna raised her hand to read hers first.', 'parse': {'tree': '(ROOT (S (SBAR (WHADVP (WRB When)) (S (NP (PDT all) (DT the) (NNS students)) (VP (VBD were) (VP (VBN done) (S (VP (VBG writing) (NP (PRP$ their) (NNS stories)))))))) (, ,) (NP (NNP Anna)) (VP (VBD raised) (NP (PRP$ her) (NN hand) (S (VP (TO to) (VP (VB read) (NP (NNS hers)) (ADVP (RB first))))))) (. .)))', 'lemma': [(u'When', u'when', u'WRB'), (u'all', u'all', u'PDT'), (u'the', u'the', u'DT'), (u'students', u'student', u'NNS'), (u'were', u'be', u'VBD'), (u'done', u'do', u'VBN'), (u'writing', u'write', u'VBG'), (u'their', u'they', u'PRP$'), (u'stories', u'story', u'NNS'), (u',', u',', u','), (u'Anna', u'Anna', u'NNP'), (u'raised', u'raise', u'VBD'), (u'her', u'she', u'PRP$'), (u'hand', u'hand', u'NN'), (u'to', u'to', u'TO'), (u'read', u'read', u'VB'), (u'hers', u'hers', u'NNS'), (u'first', u'first', u'RB'), (u'.', u'.', u'.')]}, 'tokens': ['When', 'all', 'the', 'students', 'were', 'done', 'writing', 'their', 'stories', ',', 'Anna', 'raised', 'her', 'hand', 'to', 'read', 'hers', 'first', '.']}, {'string': " Mrs. Law smiled at Anna 's excitement to share her story with the class.", 'parse': {'tree': "(ROOT (S (NP (NNP Mrs.) (NNP Law)) (VP (VBD smiled) (PP (IN at) (NP (NP (NNP Anna) (POS 's)) (NN excitement) (S (VP (TO to) (VP (VB share) (NP (PRP$ her) (NN story)) (PP (IN with) (NP (DT the) (NN class))))))))) (. .)))", 'lemma': [(u'Mrs.', u'Mrs.', u'NNP'), (u'Law', u'Law', u'NNP'), (u'smiled', u'smile', u'VBD'), (u'at', u'at', u'IN'), (u'Anna', u'Anna', u'NNP'), (u"'s", u"'s", u'POS'), (u'excitement', u'excitement', u'NN'), (u'to', u'to', u'TO'), (u'share', u'share', u'VB'), (u'her', u'she', u'PRP$'), (u'story', u'story', u'NN'), (u'with', u'with', u'IN'), (u'the', u'the', u'DT'), (u'class', u'class', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Mrs.', 'Law', 'smiled', 'at', 'Anna', "'s", 'excitement', 'to', 'share', 'her', 'story', 'with', 'the', 'class', '.']}, {'string': ' She told all the students to sit down and listen to Anna.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBD told) (NP (PDT all) (DT the) (NNS students)) (S (VP (TO to) (VP (VP (VB sit) (PRT (RP down))) (CC and) (VP (VB listen) (PP (TO to) (NP (NNP Anna)))))))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'told', u'tell', u'VBD'), (u'all', u'all', u'PDT'), (u'the', u'the', u'DT'), (u'students', u'student', u'NNS'), (u'to', u'to', u'TO'), (u'sit', u'sit', u'VB'), (u'down', u'down', u'RP'), (u'and', u'and', u'CC'), (u'listen', u'listen', u'VB'), (u'to', u'to', u'TO'), (u'Anna', u'Anna', u'NNP'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'told', 'all', 'the', 'students', 'to', 'sit', 'down', 'and', 'listen', 'to', 'Anna', '.']}, {'string': ' Anna started reading her story.', 'parse': {'tree': '(ROOT (S (NP (NNP Anna)) (VP (VBD started) (S (VP (VBG reading) (NP (PRP$ her) (NN story))))) (. .)))', 'lemma': [(u'Anna', u'Anna', u'NNP'), (u'started', u'start', u'VBD'), (u'reading', u'read', u'VBG'), (u'her', u'she', u'PRP$'), (u'story', u'story', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Anna', 'started', 'reading', 'her', 'story', '.']}, {'string': ' All the other students quickly paid attention, as her story was telling about her vacation to a park with lots of rides.', 'parse': {'tree': '(ROOT (S (NP (PDT All) (DT the) (JJ other) (NNS students)) (ADVP (RB quickly)) (VP (VBD paid) (NP (NN attention)) (, ,) (SBAR (IN as) (S (NP (PRP$ her) (NN story)) (VP (VBD was) (VP (VBG telling) (PP (IN about) (NP (PRP$ her) (NN vacation))) (PP (TO to) (NP (NP (DT a) (NN park)) (PP (IN with) (NP (NP (NNS lots)) (PP (IN of) (NP (NNS rides)))))))))))) (. .)))', 'lemma': [(u'All', u'all', u'PDT'), (u'the', u'the', u'DT'), (u'other', u'other', u'JJ'), (u'students', u'student', u'NNS'), (u'quickly', u'quickly', u'RB'), (u'paid', u'pay', u'VBD'), (u'attention', u'attention', u'NN'), (u',', u',', u','), (u'as', u'as', u'IN'), (u'her', u'she', u'PRP$'), (u'story', u'story', u'NN'), (u'was', u'be', u'VBD'), (u'telling', u'tell', u'VBG'), (u'about', u'about', u'IN'), (u'her', u'she', u'PRP$'), (u'vacation', u'vacation', u'NN'), (u'to', u'to', u'TO'), (u'a', u'a', u'DT'), (u'park', u'park', u'NN'), (u'with', u'with', u'IN'), (u'lots', u'lot', u'NNS'), (u'of', u'of', u'IN'), (u'rides', u'ride', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['All', 'the', 'other', 'students', 'quickly', 'paid', 'attention', ',', 'as', 'her', 'story', 'was', 'telling', 'about', 'her', 'vacation', 'to', 'a', 'park', 'with', 'lots', 'of', 'rides', '.']}, {'string': " Anna told them that she rode a huge ride called, `` Superman, '' which was her favorite.", 'parse': {'tree': "(ROOT (S (NP (NNP Anna)) (VP (VBD told) (NP (PRP them)) (SBAR (IN that) (S (NP (PRP she)) (VP (VBD rode) (NP (NP (NP (DT a) (JJ huge) (NN ride)) (VP (VBN called))) (, ,) (NP (`` ``) (NP (NNP Superman)) (, ,) ('' '') (SBAR (WHNP (WDT which)) (S (VP (VBD was) (NP (PRP$ her) (NN favorite))))))))))) (. .)))", 'lemma': [(u'Anna', u'Anna', u'NNP'), (u'told', u'tell', u'VBD'), (u'them', u'they', u'PRP'), (u'that', u'that', u'IN'), (u'she', u'she', u'PRP'), (u'rode', u'ride', u'VBD'), (u'a', u'a', u'DT'), (u'huge', u'huge', u'JJ'), (u'ride', u'ride', u'NN'), (u'called', u'call', u'VBN'), (u',', u',', u','), (u'``', u'``', u'``'), (u'Superman', u'Superman', u'NNP'), (u',', u',', u','), (u"''", u"''", u"''"), (u'which', u'which', u'WDT'), (u'was', u'be', u'VBD'), (u'her', u'she', u'PRP$'), (u'favorite', u'favorite', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Anna', 'told', 'them', 'that', 'she', 'rode', 'a', 'huge', 'ride', 'called', ',', '``', 'Superman', ',', "''", 'which', 'was', 'her', 'favorite', '.']}, {'string': ' After Anna finished reading her story, all the students clapped and said that they wished that they could hear more.', 'parse': {'tree': '(ROOT (S (SBAR (IN After) (S (NP (NNP Anna)) (VP (VBD finished) (S (VP (VBG reading) (NP (PRP$ her) (NN story))))))) (, ,) (NP (PDT all) (DT the) (NNS students)) (VP (VP (VBD clapped)) (CC and) (VP (VBD said) (SBAR (IN that) (S (NP (PRP they)) (VP (VBD wished) (SBAR (IN that) (S (NP (PRP they)) (VP (MD could) (VP (VB hear) (NP (JJR more))))))))))) (. .)))', 'lemma': [(u'After', u'after', u'IN'), (u'Anna', u'Anna', u'NNP'), (u'finished', u'finish', u'VBD'), (u'reading', u'read', u'VBG'), (u'her', u'she', u'PRP$'), (u'story', u'story', u'NN'), (u',', u',', u','), (u'all', u'all', u'PDT'), (u'the', u'the', u'DT'), (u'students', u'student', u'NNS'), (u'clapped', u'clap', u'VBD'), (u'and', u'and', u'CC'), (u'said', u'say', u'VBD'), (u'that', u'that', u'IN'), (u'they', u'they', u'PRP'), (u'wished', u'wish', u'VBD'), (u'that', u'that', u'IN'), (u'they', u'they', u'PRP'), (u'could', u'could', u'MD'), (u'hear', u'hear', u'VB'), (u'more', u'more', u'JJR'), (u'.', u'.', u'.')]}, 'tokens': ['After', 'Anna', 'finished', 'reading', 'her', 'story', ',', 'all', 'the', 'students', 'clapped', 'and', 'said', 'that', 'they', 'wished', 'that', 'they', 'could', 'hear', 'more', '.']}, {'string': ' Anna told them to tell their mommies and daddies to take them to visit the rides next summer.', 'parse': {'tree': '(ROOT (S (NP (NNP Anna)) (VP (VBD told) (S (NP (PRP them)) (VP (TO to) (VP (VB tell) (NP (PRP$ their) (NNS mommies) (CC and) (NNS daddies)) (S (VP (TO to) (VP (VB take) (S (NP (PRP them)) (VP (TO to) (VP (VB visit) (NP (DT the) (NNS rides)) (NP (JJ next) (NN summer)))))))))))) (. .)))', 'lemma': [(u'Anna', u'Anna', u'NNP'), (u'told', u'tell', u'VBD'), (u'them', u'they', u'PRP'), (u'to', u'to', u'TO'), (u'tell', u'tell', u'VB'), (u'their', u'they', u'PRP$'), (u'mommies', u'mommy', u'NNS'), (u'and', u'and', u'CC'), (u'daddies', u'daddy', u'NNS'), (u'to', u'to', u'TO'), (u'take', u'take', u'VB'), (u'them', u'they', u'PRP'), (u'to', u'to', u'TO'), (u'visit', u'visit', u'VB'), (u'the', u'the', u'DT'), (u'rides', u'ride', u'NNS'), (u'next', u'next', u'JJ'), (u'summer', u'summer', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Anna', 'told', 'them', 'to', 'tell', 'their', 'mommies', 'and', 'daddies', 'to', 'take', 'them', 'to', 'visit', 'the', 'rides', 'next', 'summer', '.']}], 'questions': [{'question': {'string': ' Why did the students have to read their stories to the class?', 'parse': {'tree': '(ROOT (SBARQ (WHADVP (WRB Why)) (SQ (VBD did) (NP (DT the) (NNS students)) (VP (VB have) (S (VP (TO to) (VP (VB read) (NP (PRP$ their) (NNS stories)) (PP (TO to) (NP (DT the) (NN class)))))))) (. ?)))', 'lemma': [(u'Why', u'why', u'WRB'), (u'did', u'do', u'VBD'), (u'the', u'the', u'DT'), (u'students', u'student', u'NNS'), (u'have', u'have', u'VB'), (u'to', u'to', u'TO'), (u'read', u'read', u'VB'), (u'their', u'they', u'PRP$'), (u'stories', u'story', u'NNS'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'class', u'class', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['Why', 'did', 'the', 'students', 'have', 'to', 'read', 'their', 'stories', 'to', 'the', 'class', '?']}, 'answers': [{'string': ' to get to know who had the best summer', 'parse': {'tree': '(ROOT (FRAG (S (VP (TO to) (VP (VB get) (S (VP (TO to) (VP (VB know) (SBAR (WHNP (WP who)) (S (VP (VBD had) (NP (DT the) (JJS best) (NN summer)))))))))))))', 'lemma': [(u'to', u'to', u'TO'), (u'get', u'get', u'VB'), (u'to', u'to', u'TO'), (u'know', u'know', u'VB'), (u'who', u'who', u'WP'), (u'had', u'have', u'VBD'), (u'the', u'the', u'DT'), (u'best', u'best', u'JJS'), (u'summer', u'summer', u'NN')]}, 'tokens': ['to', 'get', 'to', 'know', 'who', 'had', 'the', 'best', 'summer']}, {'string': ' to get to know Mrs. Law', 'parse': {'tree': '(ROOT (FRAG (S (VP (TO to) (VP (VB get) (S (VP (TO to) (VP (VB know) (NP (NNP Mrs.) (NNP Law))))))))))', 'lemma': [(u'to', u'to', u'TO'), (u'get', u'get', u'VB'), (u'to', u'to', u'TO'), (u'know', u'know', u'VB'), (u'Mrs.', u'Mrs.', u'NNP'), (u'Law', u'Law', u'NNP')]}, 'tokens': ['to', 'get', 'to', 'know', 'Mrs.', 'Law']}, {'string': ' to help them get to know more about each other', 'parse': {'tree': '(ROOT (FRAG (S (VP (TO to) (VP (VB help) (S (NP (PRP them)) (VP (VB get) (S (VP (TO to) (VP (VB know) (NP (JJR more)) (PP (IN about) (NP (DT each) (JJ other)))))))))))))', 'lemma': [(u'to', u'to', u'TO'), (u'help', u'help', u'VB'), (u'them', u'they', u'PRP'), (u'get', u'get', u'VB'), (u'to', u'to', u'TO'), (u'know', u'know', u'VB'), (u'more', u'more', u'JJR'), (u'about', u'about', u'IN'), (u'each', u'each', u'DT'), (u'other', u'other', u'JJ')]}, 'tokens': ['to', 'help', 'them', 'get', 'to', 'know', 'more', 'about', 'each', 'other']}, {'string': ' to get to know who had the best mommy and daddy', 'parse': {'tree': '(ROOT (UCP (S (VP (TO to) (VP (VB get) (S (VP (TO to) (VP (VB know) (SBAR (WHNP (WP who)) (S (VP (VBD had) (NP (DT the) (JJS best) (NN mommy))))))))))) (CC and) (ADVP (RB daddy))))', 'lemma': [(u'to', u'to', u'TO'), (u'get', u'get', u'VB'), (u'to', u'to', u'TO'), (u'know', u'know', u'VB'), (u'who', u'who', u'WP'), (u'had', u'have', u'VBD'), (u'the', u'the', u'DT'), (u'best', u'best', u'JJS'), (u'mommy', u'mommy', u'NN'), (u'and', u'and', u'CC'), (u'daddy', u'daddy', u'RB')]}, 'tokens': ['to', 'get', 'to', 'know', 'who', 'had', 'the', 'best', 'mommy', 'and', 'daddy']}], 'mode': 0}, {'question': {'string': ' What did the students have to write about?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD did) (NP (DT the) (NNS students)) (VP (VB have) (S (VP (TO to) (VP (VB write) (PRT (RP about))))))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'did', u'do', u'VBD'), (u'the', u'the', u'DT'), (u'students', u'student', u'NNS'), (u'have', u'have', u'VB'), (u'to', u'to', u'TO'), (u'write', u'write', u'VB'), (u'about', u'about', u'RP'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'did', 'the', 'students', 'have', 'to', 'write', 'about', '?']}, 'answers': [{'string': ' the first day of school', 'parse': {'tree': '(ROOT (NP (NP (DT the) (JJ first) (NN day)) (PP (IN of) (NP (NN school)))))', 'lemma': [(u'the', u'the', u'DT'), (u'first', u'first', u'JJ'), (u'day', u'day', u'NN'), (u'of', u'of', u'IN'), (u'school', u'school', u'NN')]}, 'tokens': ['the', 'first', 'day', 'of', 'school']}, {'string': ' Mrs. Law', 'parse': {'tree': '(ROOT (NP (NNP Mrs.) (NNP Law)))', 'lemma': [(u'Mrs.', u'Mrs.', u'NNP'), (u'Law', u'Law', u'NNP')]}, 'tokens': ['Mrs.', 'Law']}, {'string': " Anna 's summer vacation", 'parse': {'tree': "(ROOT (NP (NP (NNP Anna) (POS 's)) (NN summer) (NN vacation)))", 'lemma': [(u'Anna', u'Anna', u'NNP'), (u"'s", u"'s", u'POS'), (u'summer', u'summer', u'NN'), (u'vacation', u'vacation', u'NN')]}, 'tokens': ['Anna', "'s", 'summer', 'vacation']}, {'string': ' what they did over the summer', 'parse': {'tree': '(ROOT (SBAR (WHNP (WP what)) (S (NP (PRP they)) (VP (VBD did) (PP (IN over) (NP (DT the) (NN summer)))))))', 'lemma': [(u'what', u'what', u'WP'), (u'they', u'they', u'PRP'), (u'did', u'do', u'VBD'), (u'over', u'over', u'IN'), (u'the', u'the', u'DT'), (u'summer', u'summer', u'NN')]}, 'tokens': ['what', 'they', 'did', 'over', 'the', 'summer']}], 'mode': 1}, {'question': {'string': ' Why did Mrs. Law smile at Anna?', 'parse': {'tree': '(ROOT (SBARQ (WHADVP (WRB Why)) (SQ (VBD did) (NP (NNP Mrs.) (NNP Law)) (VP (VB smile) (PP (IN at) (NP (NNP Anna))))) (. ?)))', 'lemma': [(u'Why', u'why', u'WRB'), (u'did', u'do', u'VBD'), (u'Mrs.', u'Mrs.', u'NNP'), (u'Law', u'Law', u'NNP'), (u'smile', u'smile', u'VB'), (u'at', u'at', u'IN'), (u'Anna', u'Anna', u'NNP'), (u'?', u'?', u'.')]}, 'tokens': ['Why', 'did', 'Mrs.', 'Law', 'smile', 'at', 'Anna', '?']}, 'answers': [{'string': ' because Anna told the class a joke', 'parse': {'tree': '(ROOT (SBAR (IN because) (S (NP (NNP Anna)) (VP (VBD told) (S (NP (DT the) (NN class)) (NP (DT a) (NN joke)))))))', 'lemma': [(u'because', u'because', u'IN'), (u'Anna', u'Anna', u'NNP'), (u'told', u'tell', u'VBD'), (u'the', u'the', u'DT'), (u'class', u'class', u'NN'), (u'a', u'a', u'DT'), (u'joke', u'joke', u'NN')]}, 'tokens': ['because', 'Anna', 'told', 'the', 'class', 'a', 'joke']}, {'string': ' because she raised her hand to read her story first', 'parse': {'tree': '(ROOT (SBAR (IN because) (S (NP (PRP she)) (VP (VBD raised) (NP (PRP$ her) (NN hand) (S (VP (TO to) (VP (VB read) (NP (PRP$ her) (NN story)) (ADVP (RB first))))))))))', 'lemma': [(u'because', u'because', u'IN'), (u'she', u'she', u'PRP'), (u'raised', u'raise', u'VBD'), (u'her', u'she', u'PRP$'), (u'hand', u'hand', u'NN'), (u'to', u'to', u'TO'), (u'read', u'read', u'VB'), (u'her', u'she', u'PRP$'), (u'story', u'story', u'NN'), (u'first', u'first', u'RB')]}, 'tokens': ['because', 'she', 'raised', 'her', 'hand', 'to', 'read', 'her', 'story', 'first']}, {'string': ' because Anna laughed', 'parse': {'tree': '(ROOT (SBAR (IN because) (S (NP (NNP Anna)) (VP (VBD laughed)))))', 'lemma': [(u'because', u'because', u'IN'), (u'Anna', u'Anna', u'NNP'), (u'laughed', u'laugh', u'VBD')]}, 'tokens': ['because', 'Anna', 'laughed']}, {'string': ' because Anna rode a huge ride', 'parse': {'tree': '(ROOT (SBAR (IN because) (S (NP (NNP Anna)) (VP (VBD rode) (NP (DT a) (JJ huge) (NN ride))))))', 'lemma': [(u'because', u'because', u'IN'), (u'Anna', u'Anna', u'NNP'), (u'rode', u'ride', u'VBD'), (u'a', u'a', u'DT'), (u'huge', u'huge', u'JJ'), (u'ride', u'ride', u'NN')]}, 'tokens': ['because', 'Anna', 'rode', 'a', 'huge', 'ride']}], 'mode': 0}, {'question': {'string': ' What was the huge ride called that Anna told the class about?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD was) (NP (DT the) (JJ huge) (NN ride)) (VP (VBN called) (SBAR (IN that) (S (NP (NNP Anna)) (VP (VBD told) (NP (DT the) (NN class)) (PP (IN about))))))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'was', u'be', u'VBD'), (u'the', u'the', u'DT'), (u'huge', u'huge', u'JJ'), (u'ride', u'ride', u'NN'), (u'called', u'call', u'VBN'), (u'that', u'that', u'IN'), (u'Anna', u'Anna', u'NNP'), (u'told', u'tell', u'VBD'), (u'the', u'the', u'DT'), (u'class', u'class', u'NN'), (u'about', u'about', u'IN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'was', 'the', 'huge', 'ride', 'called', 'that', 'Anna', 'told', 'the', 'class', 'about', '?']}, 'answers': [{'string': ' Batman', 'parse': {'tree': '(ROOT (NP (NNP Batman)))', 'lemma': [(u'Batman', u'Batman', u'NNP')]}, 'tokens': ['Batman']}, {'string': ' Superman', 'parse': {'tree': '(ROOT (NP (NNP Superman)))', 'lemma': [(u'Superman', u'Superman', u'NNP')]}, 'tokens': ['Superman']}, {'string': " there was n't one", 'parse': {'tree': "(ROOT (S (NP (EX there)) (VP (VBD was) (RB n't) (NP (CD one)))))", 'lemma': [(u'there', u'there', u'EX'), (u'was', u'be', u'VBD'), (u"n't", u'not', u'RB'), (u'one', u'one', u'CD')]}, 'tokens': ['there', 'was', "n't", 'one']}, {'string': ' Jolly Green Giant', 'parse': {'tree': '(ROOT (NP (NNP Jolly) (NNP Green) (NNP Giant)))', 'lemma': [(u'Jolly', u'Jolly', u'NNP'), (u'Green', u'Green', u'NNP'), (u'Giant', u'Giant', u'NNP')]}, 'tokens': ['Jolly', 'Green', 'Giant']}], 'mode': 1}]}
{'sentences': [{'string': ' This is a story about a bear and a wolf.', 'parse': {'tree': '(ROOT (S (NP (DT This)) (VP (VBZ is) (NP (NP (DT a) (NN story)) (PP (IN about) (NP (NP (DT a) (NN bear)) (CC and) (NP (DT a) (NN wolf)))))) (. .)))', 'lemma': [(u'This', u'this', u'DT'), (u'is', u'be', u'VBZ'), (u'a', u'a', u'DT'), (u'story', u'story', u'NN'), (u'about', u'about', u'IN'), (u'a', u'a', u'DT'), (u'bear', u'bear', u'NN'), (u'and', u'and', u'CC'), (u'a', u'a', u'DT'), (u'wolf', u'wolf', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['This', 'is', 'a', 'story', 'about', 'a', 'bear', 'and', 'a', 'wolf', '.']}, {'string': ' The bear met the wolf one day in the woods.', 'parse': {'tree': '(ROOT (S (NP (DT The) (NN bear)) (VP (VBD met) (NP (DT the) (NN wolf)) (NP (CD one) (NN day)) (PP (IN in) (NP (DT the) (NNS woods)))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'bear', u'bear', u'NN'), (u'met', u'meet', u'VBD'), (u'the', u'the', u'DT'), (u'wolf', u'wolf', u'NN'), (u'one', u'one', u'CD'), (u'day', u'day', u'NN'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'woods', u'wood', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'bear', 'met', 'the', 'wolf', 'one', 'day', 'in', 'the', 'woods', '.']}, {'string': ' The bear said to the wolf, would you like to go to the river with me?', 'parse': {'tree': '(ROOT (SQ (S (NP (DT The) (NN bear)) (VP (VBD said) (PP (TO to) (NP (DT the) (NN wolf))))) (, ,) (SQ (MD would) (NP (PRP you)) (VP (VB like) (S (VP (TO to) (VP (VB go) (PP (TO to) (NP (NP (DT the) (NN river)) (PP (IN with) (NP (PRP me)))))))))) (. ?)))', 'lemma': [(u'The', u'the', u'DT'), (u'bear', u'bear', u'NN'), (u'said', u'say', u'VBD'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'wolf', u'wolf', u'NN'), (u',', u',', u','), (u'would', u'would', u'MD'), (u'you', u'you', u'PRP'), (u'like', u'like', u'VB'), (u'to', u'to', u'TO'), (u'go', u'go', u'VB'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'river', u'river', u'NN'), (u'with', u'with', u'IN'), (u'me', u'I', u'PRP'), (u'?', u'?', u'.')]}, 'tokens': ['The', 'bear', 'said', 'to', 'the', 'wolf', ',', 'would', 'you', 'like', 'to', 'go', 'to', 'the', 'river', 'with', 'me', '?']}, {'string': ' The wolf said yes, he would like to go to the river.', 'parse': {'tree': '(ROOT (S (NP (DT The) (NN wolf)) (VP (VBD said) (SBAR (S (INTJ (UH yes)) (, ,) (NP (PRP he)) (VP (MD would) (VP (VB like) (S (VP (TO to) (VP (VB go) (PP (TO to) (NP (DT the) (NN river))))))))))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'wolf', u'wolf', u'NN'), (u'said', u'say', u'VBD'), (u'yes', u'yes', u'UH'), (u',', u',', u','), (u'he', u'he', u'PRP'), (u'would', u'would', u'MD'), (u'like', u'like', u'VB'), (u'to', u'to', u'TO'), (u'go', u'go', u'VB'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'river', u'river', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'wolf', 'said', 'yes', ',', 'he', 'would', 'like', 'to', 'go', 'to', 'the', 'river', '.']}, {'string': ' When the bear and the wolf got to the river they found that a beaver had built a bridge to the other side of the river.', 'parse': {'tree': '(ROOT (S (SBAR (WHADVP (WRB When)) (S (NP (NP (DT the) (NN bear)) (CC and) (NP (DT the) (NN wolf))) (VP (VBD got) (PP (TO to) (NP (DT the) (NN river)))))) (NP (PRP they)) (VP (VBD found) (SBAR (IN that) (S (NP (DT a) (NN beaver)) (VP (VBD had) (VP (VBN built) (NP (DT a) (NN bridge)) (PP (TO to) (NP (NP (DT the) (JJ other) (NN side)) (PP (IN of) (NP (DT the) (NN river)))))))))) (. .)))', 'lemma': [(u'When', u'when', u'WRB'), (u'the', u'the', u'DT'), (u'bear', u'bear', u'NN'), (u'and', u'and', u'CC'), (u'the', u'the', u'DT'), (u'wolf', u'wolf', u'NN'), (u'got', u'get', u'VBD'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'river', u'river', u'NN'), (u'they', u'they', u'PRP'), (u'found', u'find', u'VBD'), (u'that', u'that', u'IN'), (u'a', u'a', u'DT'), (u'beaver', u'beaver', u'NN'), (u'had', u'have', u'VBD'), (u'built', u'build', u'VBN'), (u'a', u'a', u'DT'), (u'bridge', u'bridge', u'NN'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'other', u'other', u'JJ'), (u'side', u'side', u'NN'), (u'of', u'of', u'IN'), (u'the', u'the', u'DT'), (u'river', u'river', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['When', 'the', 'bear', 'and', 'the', 'wolf', 'got', 'to', 'the', 'river', 'they', 'found', 'that', 'a', 'beaver', 'had', 'built', 'a', 'bridge', 'to', 'the', 'other', 'side', 'of', 'the', 'river', '.']}, {'string': ' The bear and the wolf crossed the bridge that was built by the beaver and found that they were now in a part of the woods they had never seen before.', 'parse': {'tree': '(ROOT (S (S (NP (NP (DT The) (NN bear)) (CC and) (NP (DT the) (NN wolf))) (VP (VP (VBD crossed) (NP (NP (DT the) (NN bridge)) (SBAR (WHNP (WDT that)) (S (VP (VBD was) (VP (VBN built) (PP (IN by) (NP (DT the) (NN beaver))))))))) (CC and) (VP (VBD found) (SBAR (IN that) (S (NP (PRP they)) (VP (VBD were) (ADVP (RB now)) (PP (IN in) (NP (NP (DT a) (NN part)) (PP (IN of) (NP (DT the) (NNS woods))))))))))) (NP (PRP they)) (VP (VBD had) (ADVP (RB never)) (VP (VBN seen) (ADVP (RB before)))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'bear', u'bear', u'NN'), (u'and', u'and', u'CC'), (u'the', u'the', u'DT'), (u'wolf', u'wolf', u'NN'), (u'crossed', u'cross', u'VBD'), (u'the', u'the', u'DT'), (u'bridge', u'bridge', u'NN'), (u'that', u'that', u'WDT'), (u'was', u'be', u'VBD'), (u'built', u'build', u'VBN'), (u'by', u'by', u'IN'), (u'the', u'the', u'DT'), (u'beaver', u'beaver', u'NN'), (u'and', u'and', u'CC'), (u'found', u'find', u'VBD'), (u'that', u'that', u'IN'), (u'they', u'they', u'PRP'), (u'were', u'be', u'VBD'), (u'now', u'now', u'RB'), (u'in', u'in', u'IN'), (u'a', u'a', u'DT'), (u'part', u'part', u'NN'), (u'of', u'of', u'IN'), (u'the', u'the', u'DT'), (u'woods', u'wood', u'NNS'), (u'they', u'they', u'PRP'), (u'had', u'have', u'VBD'), (u'never', u'never', u'RB'), (u'seen', u'see', u'VBN'), (u'before', u'before', u'RB'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'bear', 'and', 'the', 'wolf', 'crossed', 'the', 'bridge', 'that', 'was', 'built', 'by', 'the', 'beaver', 'and', 'found', 'that', 'they', 'were', 'now', 'in', 'a', 'part', 'of', 'the', 'woods', 'they', 'had', 'never', 'seen', 'before', '.']}, {'string': ' A little worried that they may get lost in this part of the woods they had never seen before the bear and the wolf turned around.', 'parse': {'tree': '(ROOT (S (S (S (ADJP (ADJP (NP (DT A) (RB little)) (JJ worried)) (SBAR (IN that) (S (NP (PRP they)) (VP (MD may) (VP (VB get) (VP (VBN lost) (PP (IN in) (NP (NP (DT this) (NN part)) (PP (IN of) (NP (DT the) (NNS woods)))))))))))) (NP (PRP they)) (VP (VBD had) (ADVP (RB never)) (VP (VBN seen) (PP (IN before) (NP (DT the) (NN bear)))))) (CC and) (S (NP (DT the) (NN wolf)) (VP (VBD turned) (PRT (RP around)))) (. .)))', 'lemma': [(u'A', u'a', u'DT'), (u'little', u'little', u'RB'), (u'worried', u'worried', u'JJ'), (u'that', u'that', u'IN'), (u'they', u'they', u'PRP'), (u'may', u'may', u'MD'), (u'get', u'get', u'VB'), (u'lost', u'lose', u'VBN'), (u'in', u'in', u'IN'), (u'this', u'this', u'DT'), (u'part', u'part', u'NN'), (u'of', u'of', u'IN'), (u'the', u'the', u'DT'), (u'woods', u'wood', u'NNS'), (u'they', u'they', u'PRP'), (u'had', u'have', u'VBD'), (u'never', u'never', u'RB'), (u'seen', u'see', u'VBN'), (u'before', u'before', u'IN'), (u'the', u'the', u'DT'), (u'bear', u'bear', u'NN'), (u'and', u'and', u'CC'), (u'the', u'the', u'DT'), (u'wolf', u'wolf', u'NN'), (u'turned', u'turn', u'VBD'), (u'around', u'around', u'RP'), (u'.', u'.', u'.')]}, 'tokens': ['A', 'little', 'worried', 'that', 'they', 'may', 'get', 'lost', 'in', 'this', 'part', 'of', 'the', 'woods', 'they', 'had', 'never', 'seen', 'before', 'the', 'bear', 'and', 'the', 'wolf', 'turned', 'around', '.']}, {'string': ' They went back over the bridge and were happy to be back in a part of the woods they knew so well.', 'parse': {'tree': '(ROOT (S (S (NP (PRP They)) (VP (VP (VBD went) (PRT (RP back)) (PP (IN over) (NP (DT the) (NN bridge)))) (CC and) (VP (VBD were) (ADJP (JJ happy) (S (VP (TO to) (VP (VB be) (ADVP (RB back)) (PP (IN in) (NP (NP (DT a) (NN part)) (PP (IN of) (NP (DT the) (NNS woods)))))))))))) (NP (PRP they)) (VP (VBD knew) (ADVP (RB so) (RB well))) (. .)))', 'lemma': [(u'They', u'they', u'PRP'), (u'went', u'go', u'VBD'), (u'back', u'back', u'RP'), (u'over', u'over', u'IN'), (u'the', u'the', u'DT'), (u'bridge', u'bridge', u'NN'), (u'and', u'and', u'CC'), (u'were', u'be', u'VBD'), (u'happy', u'happy', u'JJ'), (u'to', u'to', u'TO'), (u'be', u'be', u'VB'), (u'back', u'back', u'RB'), (u'in', u'in', u'IN'), (u'a', u'a', u'DT'), (u'part', u'part', u'NN'), (u'of', u'of', u'IN'), (u'the', u'the', u'DT'), (u'woods', u'wood', u'NNS'), (u'they', u'they', u'PRP'), (u'knew', u'know', u'VBD'), (u'so', u'so', u'RB'), (u'well', u'well', u'RB'), (u'.', u'.', u'.')]}, 'tokens': ['They', 'went', 'back', 'over', 'the', 'bridge', 'and', 'were', 'happy', 'to', 'be', 'back', 'in', 'a', 'part', 'of', 'the', 'woods', 'they', 'knew', 'so', 'well', '.']}, {'string': ' The beaver thanked both the bear and the wolf for trying out his new bridge and then started to build yet another bridge close to the first bridge.', 'parse': {'tree': '(ROOT (S (NP (DT The) (NN beaver)) (VP (VP (VBD thanked) (NP (PDT both) (NP (DT the) (NN bear)) (CC and) (NP (DT the) (NN wolf))) (PP (IN for) (S (VP (VBG trying) (PRT (RP out)) (NP (PRP$ his) (JJ new) (NN bridge)))))) (CC and) (VP (ADVP (RB then)) (VBD started) (S (VP (TO to) (VP (VB build) (NP (RB yet) (DT another) (NN bridge) (NN close)) (PP (TO to) (NP (DT the) (JJ first) (NN bridge)))))))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'beaver', u'beaver', u'NN'), (u'thanked', u'thank', u'VBD'), (u'both', u'both', u'PDT'), (u'the', u'the', u'DT'), (u'bear', u'bear', u'NN'), (u'and', u'and', u'CC'), (u'the', u'the', u'DT'), (u'wolf', u'wolf', u'NN'), (u'for', u'for', u'IN'), (u'trying', u'try', u'VBG'), (u'out', u'out', u'RP'), (u'his', u'he', u'PRP$'), (u'new', u'new', u'JJ'), (u'bridge', u'bridge', u'NN'), (u'and', u'and', u'CC'), (u'then', u'then', u'RB'), (u'started', u'start', u'VBD'), (u'to', u'to', u'TO'), (u'build', u'build', u'VB'), (u'yet', u'yet', u'RB'), (u'another', u'another', u'DT'), (u'bridge', u'bridge', u'NN'), (u'close', u'close', u'NN'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'first', u'first', u'JJ'), (u'bridge', u'bridge', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'beaver', 'thanked', 'both', 'the', 'bear', 'and', 'the', 'wolf', 'for', 'trying', 'out', 'his', 'new', 'bridge', 'and', 'then', 'started', 'to', 'build', 'yet', 'another', 'bridge', 'close', 'to', 'the', 'first', 'bridge', '.']}, {'string': ' He was a very busy beaver.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD was) (NP (DT a) (ADJP (RB very) (JJ busy)) (NN beaver))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'was', u'be', u'VBD'), (u'a', u'a', u'DT'), (u'very', u'very', u'RB'), (u'busy', u'busy', u'JJ'), (u'beaver', u'beaver', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'was', 'a', 'very', 'busy', 'beaver', '.']}], 'questions': [{'question': {'string': ' Which animal built a bridge?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WDT Which) (NN animal)) (SQ (VP (VBD built) (NP (DT a) (NN bridge)))) (. ?)))', 'lemma': [(u'Which', u'which', u'WDT'), (u'animal', u'animal', u'NN'), (u'built', u'build', u'VBD'), (u'a', u'a', u'DT'), (u'bridge', u'bridge', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['Which', 'animal', 'built', 'a', 'bridge', '?']}, 'answers': [{'string': ' the beaver', 'parse': {'tree': '(ROOT (FRAG (NP (DT the) (NN beaver))))', 'lemma': [(u'the', u'the', u'DT'), (u'beaver', u'beaver', u'NN')]}, 'tokens': ['the', 'beaver']}, {'string': ' the bear', 'parse': {'tree': '(ROOT (FRAG (NP (DT the) (NN bear))))', 'lemma': [(u'the', u'the', u'DT'), (u'bear', u'bear', u'NN')]}, 'tokens': ['the', 'bear']}, {'string': ' the dog', 'parse': {'tree': '(ROOT (FRAG (NP (DT the) (NN dog))))', 'lemma': [(u'the', u'the', u'DT'), (u'dog', u'dog', u'NN')]}, 'tokens': ['the', 'dog']}, {'string': ' the wolf', 'parse': {'tree': '(ROOT (FRAG (NP (DT the) (NN wolf))))', 'lemma': [(u'the', u'the', u'DT'), (u'wolf', u'wolf', u'NN')]}, 'tokens': ['the', 'wolf']}], 'mode': 1}, {'question': {'string': ' what did the bear and wolf cross, and why did they turn back?', 'parse': {'tree': '(ROOT (SBARQ (SBARQ (WHNP (WP what)) (SQ (VBD did) (NP (NP (DT the) (NN bear)) (CC and) (NP (NN wolf))) (VP (VB cross)))) (, ,) (CC and) (SBARQ (WHADVP (WRB why)) (SQ (VBD did) (NP (PRP they)) (VP (VB turn) (ADVP (RB back)))) (. ?))))', 'lemma': [(u'what', u'what', u'WP'), (u'did', u'do', u'VBD'), (u'the', u'the', u'DT'), (u'bear', u'bear', u'NN'), (u'and', u'and', u'CC'), (u'wolf', u'wolf', u'NN'), (u'cross', u'cross', u'VB'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'why', u'why', u'WRB'), (u'did', u'do', u'VBD'), (u'they', u'they', u'PRP'), (u'turn', u'turn', u'VB'), (u'back', u'back', u'RB'), (u'?', u'?', u'.')]}, 'tokens': ['what', 'did', 'the', 'bear', 'and', 'wolf', 'cross', ',', 'and', 'why', 'did', 'they', 'turn', 'back', '?']}, 'answers': [{'string': ' a bridge, and they got hungry.', 'parse': {'tree': '(ROOT (FRAG (NP (DT a) (NN bridge)) (, ,) (CC and) (S (NP (PRP they)) (VP (VBD got) (ADJP (JJ hungry)))) (. .)))', 'lemma': [(u'a', u'a', u'DT'), (u'bridge', u'bridge', u'NN'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'they', u'they', u'PRP'), (u'got', u'get', u'VBD'), (u'hungry', u'hungry', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['a', 'bridge', ',', 'and', 'they', 'got', 'hungry', '.']}, {'string': ' a lake, and they did not want to get lost.', 'parse': {'tree': '(ROOT (FRAG (NP (DT a) (NN lake)) (, ,) (CC and) (S (NP (PRP they)) (VP (VBD did) (RB not) (VP (VB want) (S (VP (TO to) (VP (VB get) (VP (VBN lost)))))))) (. .)))', 'lemma': [(u'a', u'a', u'DT'), (u'lake', u'lake', u'NN'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'they', u'they', u'PRP'), (u'did', u'do', u'VBD'), (u'not', u'not', u'RB'), (u'want', u'want', u'VB'), (u'to', u'to', u'TO'), (u'get', u'get', u'VB'), (u'lost', u'lose', u'VBN'), (u'.', u'.', u'.')]}, 'tokens': ['a', 'lake', ',', 'and', 'they', 'did', 'not', 'want', 'to', 'get', 'lost', '.']}, {'string': ' a field and they did not want to get lost.', 'parse': {'tree': '(ROOT (S (NP (NP (DT a) (NN field)) (CC and) (NP (PRP they))) (VP (VBD did) (RB not) (VP (VB want) (S (VP (TO to) (VP (VB get) (VP (VBN lost))))))) (. .)))', 'lemma': [(u'a', u'a', u'DT'), (u'field', u'field', u'NN'), (u'and', u'and', u'CC'), (u'they', u'they', u'PRP'), (u'did', u'do', u'VBD'), (u'not', u'not', u'RB'), (u'want', u'want', u'VB'), (u'to', u'to', u'TO'), (u'get', u'get', u'VB'), (u'lost', u'lose', u'VBN'), (u'.', u'.', u'.')]}, 'tokens': ['a', 'field', 'and', 'they', 'did', 'not', 'want', 'to', 'get', 'lost', '.']}, {'string': ' a bridge, and they did not want to get lost.', 'parse': {'tree': '(ROOT (FRAG (NP (DT a) (NN bridge)) (, ,) (CC and) (S (NP (PRP they)) (VP (VBD did) (RB not) (VP (VB want) (S (VP (TO to) (VP (VB get) (VP (VBN lost)))))))) (. .)))', 'lemma': [(u'a', u'a', u'DT'), (u'bridge', u'bridge', u'NN'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'they', u'they', u'PRP'), (u'did', u'do', u'VBD'), (u'not', u'not', u'RB'), (u'want', u'want', u'VB'), (u'to', u'to', u'TO'), (u'get', u'get', u'VB'), (u'lost', u'lose', u'VBN'), (u'.', u'.', u'.')]}, 'tokens': ['a', 'bridge', ',', 'and', 'they', 'did', 'not', 'want', 'to', 'get', 'lost', '.']}], 'mode': 0}, {'question': {'string': ' What did the beaver build and why did he thank the bear and wolf?', 'parse': {'tree': '(ROOT (SBARQ (SBARQ (WHNP (WP What)) (SQ (VBD did) (NP (DT the) (NN beaver)) (VP (VB build)))) (CC and) (SBARQ (WHADVP (WRB why)) (SQ (VBD did) (NP (PRP he)) (VP (VB thank) (NP (DT the) (NN bear) (CC and) (NN wolf)))) (. ?))))', 'lemma': [(u'What', u'what', u'WP'), (u'did', u'do', u'VBD'), (u'the', u'the', u'DT'), (u'beaver', u'beaver', u'NN'), (u'build', u'build', u'VB'), (u'and', u'and', u'CC'), (u'why', u'why', u'WRB'), (u'did', u'do', u'VBD'), (u'he', u'he', u'PRP'), (u'thank', u'thank', u'VB'), (u'the', u'the', u'DT'), (u'bear', u'bear', u'NN'), (u'and', u'and', u'CC'), (u'wolf', u'wolf', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'did', 'the', 'beaver', 'build', 'and', 'why', 'did', 'he', 'thank', 'the', 'bear', 'and', 'wolf', '?']}, 'answers': [{'string': ' a bridge, and for helping him to build the bridge.', 'parse': {'tree': '(ROOT (S (NP (DT a) (NN bridge)) (, ,) (VP (VB and) (PP (IN for) (S (VP (VBG helping) (S (NP (PRP him)) (VP (TO to) (VP (VB build) (NP (DT the) (NN bridge))))))))) (. .)))', 'lemma': [(u'a', u'a', u'DT'), (u'bridge', u'bridge', u'NN'), (u',', u',', u','), (u'and', u'and', u'VB'), (u'for', u'for', u'IN'), (u'helping', u'help', u'VBG'), (u'him', u'he', u'PRP'), (u'to', u'to', u'TO'), (u'build', u'build', u'VB'), (u'the', u'the', u'DT'), (u'bridge', u'bridge', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['a', 'bridge', ',', 'and', 'for', 'helping', 'him', 'to', 'build', 'the', 'bridge', '.']}, {'string': ' a house, and for trying out the bridge.', 'parse': {'tree': '(ROOT (S (NP (DT a) (NN house)) (, ,) (VP (VB and) (PP (IN for) (S (VP (VBG trying) (PRT (RP out)) (NP (DT the) (NN bridge)))))) (. .)))', 'lemma': [(u'a', u'a', u'DT'), (u'house', u'house', u'NN'), (u',', u',', u','), (u'and', u'and', u'VB'), (u'for', u'for', u'IN'), (u'trying', u'try', u'VBG'), (u'out', u'out', u'RP'), (u'the', u'the', u'DT'), (u'bridge', u'bridge', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['a', 'house', ',', 'and', 'for', 'trying', 'out', 'the', 'bridge', '.']}, {'string': ' a bridge, and for trying out the bridge.', 'parse': {'tree': '(ROOT (S (NP (DT a) (NN bridge)) (, ,) (VP (VB and) (PP (IN for) (S (VP (VBG trying) (PRT (RP out)) (NP (DT the) (NN bridge)))))) (. .)))', 'lemma': [(u'a', u'a', u'DT'), (u'bridge', u'bridge', u'NN'), (u',', u',', u','), (u'and', u'and', u'VB'), (u'for', u'for', u'IN'), (u'trying', u'try', u'VBG'), (u'out', u'out', u'RP'), (u'the', u'the', u'DT'), (u'bridge', u'bridge', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['a', 'bridge', ',', 'and', 'for', 'trying', 'out', 'the', 'bridge', '.']}, {'string': ' a bridge, and for bring him food', 'parse': {'tree': '(ROOT (UCP (NP (DT a) (NN bridge)) (, ,) (CC and) (SBAR (IN for) (S (VP (VB bring) (NP (PRP him)) (NP (NN food)))))))', 'lemma': [(u'a', u'a', u'DT'), (u'bridge', u'bridge', u'NN'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'for', u'for', u'IN'), (u'bring', u'bring', u'VB'), (u'him', u'he', u'PRP'), (u'food', u'food', u'NN')]}, 'tokens': ['a', 'bridge', ',', 'and', 'for', 'bring', 'him', 'food']}], 'mode': 0}, {'question': {'string': ' This is a story of which two animals taking a walk in the woods?', 'parse': {'tree': '(ROOT (S (NP (DT This)) (VP (VBZ is) (NP (NP (DT a) (NN story)) (SBAR (WHPP (IN of) (WHNP (WDT which) (CD two) (NNS animals))) (S (VP (VBG taking) (NP (DT a) (NN walk)) (PP (IN in) (NP (DT the) (NNS woods)))))))) (. ?)))', 'lemma': [(u'This', u'this', u'DT'), (u'is', u'be', u'VBZ'), (u'a', u'a', u'DT'), (u'story', u'story', u'NN'), (u'of', u'of', u'IN'), (u'which', u'which', u'WDT'), (u'two', u'two', u'CD'), (u'animals', u'animal', u'NNS'), (u'taking', u'take', u'VBG'), (u'a', u'a', u'DT'), (u'walk', u'walk', u'NN'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'woods', u'wood', u'NNS'), (u'?', u'?', u'.')]}, 'tokens': ['This', 'is', 'a', 'story', 'of', 'which', 'two', 'animals', 'taking', 'a', 'walk', 'in', 'the', 'woods', '?']}, 'answers': [{'string': ' a bear and a beaver', 'parse': {'tree': '(ROOT (NP (NP (DT a) (NN bear)) (CC and) (NP (DT a) (NN beaver))))', 'lemma': [(u'a', u'a', u'DT'), (u'bear', u'bear', u'NN'), (u'and', u'and', u'CC'), (u'a', u'a', u'DT'), (u'beaver', u'beaver', u'NN')]}, 'tokens': ['a', 'bear', 'and', 'a', 'beaver']}, {'string': ' a dog and a wolf', 'parse': {'tree': '(ROOT (NP (NP (DT a) (NN dog)) (CC and) (NP (DT a) (NN wolf))))', 'lemma': [(u'a', u'a', u'DT'), (u'dog', u'dog', u'NN'), (u'and', u'and', u'CC'), (u'a', u'a', u'DT'), (u'wolf', u'wolf', u'NN')]}, 'tokens': ['a', 'dog', 'and', 'a', 'wolf']}, {'string': ' a bear and a dog', 'parse': {'tree': '(ROOT (NP (NP (DT a) (NN bear)) (CC and) (NP (DT a) (NN dog))))', 'lemma': [(u'a', u'a', u'DT'), (u'bear', u'bear', u'NN'), (u'and', u'and', u'CC'), (u'a', u'a', u'DT'), (u'dog', u'dog', u'NN')]}, 'tokens': ['a', 'bear', 'and', 'a', 'dog']}, {'string': ' a bear and a wolf', 'parse': {'tree': '(ROOT (NP (NP (DT a) (NN bear)) (CC and) (NP (DT a) (NN wolf))))', 'lemma': [(u'a', u'a', u'DT'), (u'bear', u'bear', u'NN'), (u'and', u'and', u'CC'), (u'a', u'a', u'DT'), (u'wolf', u'wolf', u'NN')]}, 'tokens': ['a', 'bear', 'and', 'a', 'wolf']}], 'mode': 1}]}
{'sentences': [{'string': " Jenny 's family lived in a small apartment in Seattle.", 'parse': {'tree': "(ROOT (S (NP (NP (NNP Jenny) (POS 's)) (NN family)) (VP (VBD lived) (PP (IN in) (NP (DT a) (JJ small) (NN apartment))) (PP (IN in) (NP (NNP Seattle)))) (. .)))", 'lemma': [(u'Jenny', u'Jenny', u'NNP'), (u"'s", u"'s", u'POS'), (u'family', u'family', u'NN'), (u'lived', u'live', u'VBD'), (u'in', u'in', u'IN'), (u'a', u'a', u'DT'), (u'small', u'small', u'JJ'), (u'apartment', u'apartment', u'NN'), (u'in', u'in', u'IN'), (u'Seattle', u'Seattle', u'NNP'), (u'.', u'.', u'.')]}, 'tokens': ['Jenny', "'s", 'family', 'lived', 'in', 'a', 'small', 'apartment', 'in', 'Seattle', '.']}, {'string': ' One day Jenny came home from school and her mom told her that the family was moving to Utah.', 'parse': {'tree': '(ROOT (S (NP (CD One) (NN day)) (S (NP (NNP Jenny)) (VP (VBD came) (NP (NN home)) (PP (IN from) (NP (NN school))))) (CC and) (S (NP (PRP$ her) (NN mom)) (VP (VBD told) (NP (PRP her)) (SBAR (IN that) (S (NP (DT the) (NN family)) (VP (VBD was) (VP (VBG moving) (PP (TO to) (NP (NNP Utah))))))))) (. .)))', 'lemma': [(u'One', u'one', u'CD'), (u'day', u'day', u'NN'), (u'Jenny', u'Jenny', u'NNP'), (u'came', u'come', u'VBD'), (u'home', u'home', u'NN'), (u'from', u'from', u'IN'), (u'school', u'school', u'NN'), (u'and', u'and', u'CC'), (u'her', u'she', u'PRP$'), (u'mom', u'mom', u'NN'), (u'told', u'tell', u'VBD'), (u'her', u'she', u'PRP'), (u'that', u'that', u'IN'), (u'the', u'the', u'DT'), (u'family', u'family', u'NN'), (u'was', u'be', u'VBD'), (u'moving', u'move', u'VBG'), (u'to', u'to', u'TO'), (u'Utah', u'Utah', u'NNP'), (u'.', u'.', u'.')]}, 'tokens': ['One', 'day', 'Jenny', 'came', 'home', 'from', 'school', 'and', 'her', 'mom', 'told', 'her', 'that', 'the', 'family', 'was', 'moving', 'to', 'Utah', '.']}, {'string': ' Jenny was sad to leave her friends.', 'parse': {'tree': '(ROOT (S (NP (NNP Jenny)) (VP (VBD was) (ADJP (JJ sad) (S (VP (TO to) (VP (VB leave) (NP (PRP$ her) (NNS friends))))))) (. .)))', 'lemma': [(u'Jenny', u'Jenny', u'NNP'), (u'was', u'be', u'VBD'), (u'sad', u'sad', u'JJ'), (u'to', u'to', u'TO'), (u'leave', u'leave', u'VB'), (u'her', u'she', u'PRP$'), (u'friends', u'friend', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['Jenny', 'was', 'sad', 'to', 'leave', 'her', 'friends', '.']}, {'string': ' Jenny was sad to leave her school.', 'parse': {'tree': '(ROOT (S (NP (NNP Jenny)) (VP (VBD was) (ADJP (JJ sad) (S (VP (TO to) (VP (VB leave) (NP (PRP$ her) (NN school))))))) (. .)))', 'lemma': [(u'Jenny', u'Jenny', u'NNP'), (u'was', u'be', u'VBD'), (u'sad', u'sad', u'JJ'), (u'to', u'to', u'TO'), (u'leave', u'leave', u'VB'), (u'her', u'she', u'PRP$'), (u'school', u'school', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Jenny', 'was', 'sad', 'to', 'leave', 'her', 'school', '.']}, {'string': ' Jenny helped her mom pack boxes and clean their apartment to get ready for the move.', 'parse': {'tree': '(ROOT (S (NP (NNP Jenny)) (VP (VP (VBD helped) (NP (PRP$ her) (NN mom) (NN pack) (NNS boxes))) (CC and) (VP (VB clean) (NP (PRP$ their) (NN apartment) (S (VP (TO to) (VP (VB get) (ADJP (JJ ready)) (PP (IN for) (NP (DT the) (NN move))))))))) (. .)))', 'lemma': [(u'Jenny', u'Jenny', u'NNP'), (u'helped', u'help', u'VBD'), (u'her', u'she', u'PRP$'), (u'mom', u'mom', u'NN'), (u'pack', u'pack', u'NN'), (u'boxes', u'box', u'NNS'), (u'and', u'and', u'CC'), (u'clean', u'clean', u'VB'), (u'their', u'they', u'PRP$'), (u'apartment', u'apartment', u'NN'), (u'to', u'to', u'TO'), (u'get', u'get', u'VB'), (u'ready', u'ready', u'JJ'), (u'for', u'for', u'IN'), (u'the', u'the', u'DT'), (u'move', u'move', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Jenny', 'helped', 'her', 'mom', 'pack', 'boxes', 'and', 'clean', 'their', 'apartment', 'to', 'get', 'ready', 'for', 'the', 'move', '.']}, {'string': " Soon the day came when Jenny 's dad brought a large truck to the parking lot and all of the family 's things were put inside.", 'parse': {'tree': "(ROOT (S (ADVP (RB Soon)) (NP (DT the) (NN day)) (VP (VBD came) (SBAR (WHADVP (WRB when)) (S (S (NP (NP (NNP Jenny) (POS 's)) (NN dad)) (VP (VBD brought) (NP (DT a) (JJ large) (NN truck)) (PP (TO to) (NP (DT the) (NN parking) (NN lot))))) (CC and) (S (NP (NP (DT all)) (PP (IN of) (NP (NP (DT the) (NN family) (POS 's)) (NNS things)))) (VP (VBD were) (VP (VBN put) (ADVP (RB inside)))))))) (. .)))", 'lemma': [(u'Soon', u'soon', u'RB'), (u'the', u'the', u'DT'), (u'day', u'day', u'NN'), (u'came', u'come', u'VBD'), (u'when', u'when', u'WRB'), (u'Jenny', u'Jenny', u'NNP'), (u"'s", u"'s", u'POS'), (u'dad', u'dad', u'NN'), (u'brought', u'bring', u'VBD'), (u'a', u'a', u'DT'), (u'large', u'large', u'JJ'), (u'truck', u'truck', u'NN'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'parking', u'parking', u'NN'), (u'lot', u'lot', u'NN'), (u'and', u'and', u'CC'), (u'all', u'all', u'DT'), (u'of', u'of', u'IN'), (u'the', u'the', u'DT'), (u'family', u'family', u'NN'), (u"'s", u"'s", u'POS'), (u'things', u'thing', u'NNS'), (u'were', u'be', u'VBD'), (u'put', u'put', u'VBN'), (u'inside', u'inside', u'RB'), (u'.', u'.', u'.')]}, 'tokens': ['Soon', 'the', 'day', 'came', 'when', 'Jenny', "'s", 'dad', 'brought', 'a', 'large', 'truck', 'to', 'the', 'parking', 'lot', 'and', 'all', 'of', 'the', 'family', "'s", 'things', 'were', 'put', 'inside', '.']}, {'string': ' Jenny and her mom rode in their car and her dad drove the truck towards Utah.', 'parse': {'tree': '(ROOT (S (S (NP (NP (NNP Jenny)) (CC and) (NP (PRP$ her) (NN mom))) (VP (VBD rode) (PP (IN in) (NP (PRP$ their) (NN car))))) (CC and) (S (NP (PRP$ her) (NN dad)) (VP (VBD drove) (NP (DT the) (NN truck)) (PP (IN towards) (NP (NNP Utah))))) (. .)))', 'lemma': [(u'Jenny', u'Jenny', u'NNP'), (u'and', u'and', u'CC'), (u'her', u'she', u'PRP$'), (u'mom', u'mom', u'NN'), (u'rode', u'ride', u'VBD'), (u'in', u'in', u'IN'), (u'their', u'they', u'PRP$'), (u'car', u'car', u'NN'), (u'and', u'and', u'CC'), (u'her', u'she', u'PRP$'), (u'dad', u'dad', u'NN'), (u'drove', u'drive', u'VBD'), (u'the', u'the', u'DT'), (u'truck', u'truck', u'NN'), (u'towards', u'towards', u'IN'), (u'Utah', u'Utah', u'NNP'), (u'.', u'.', u'.')]}, 'tokens': ['Jenny', 'and', 'her', 'mom', 'rode', 'in', 'their', 'car', 'and', 'her', 'dad', 'drove', 'the', 'truck', 'towards', 'Utah', '.']}, {'string': ' Jenny loved getting to eat lots of yummy fast food on the way.', 'parse': {'tree': '(ROOT (S (NP (NNP Jenny)) (VP (VBD loved) (S (VP (VBG getting) (S (VP (TO to) (VP (VB eat) (NP (NP (NNS lots)) (PP (IN of) (NP (ADJP (RB yummy) (JJ fast)) (NN food)))) (PP (IN on) (NP (DT the) (NN way))))))))) (. .)))', 'lemma': [(u'Jenny', u'Jenny', u'NNP'), (u'loved', u'love', u'VBD'), (u'getting', u'get', u'VBG'), (u'to', u'to', u'TO'), (u'eat', u'eat', u'VB'), (u'lots', u'lot', u'NNS'), (u'of', u'of', u'IN'), (u'yummy', u'yummy', u'RB'), (u'fast', u'fast', u'JJ'), (u'food', u'food', u'NN'), (u'on', u'on', u'IN'), (u'the', u'the', u'DT'), (u'way', u'way', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Jenny', 'loved', 'getting', 'to', 'eat', 'lots', 'of', 'yummy', 'fast', 'food', 'on', 'the', 'way', '.']}, {'string': ' When the family got to their new home in Utah, Jenny helped her parents to take all of the boxes into the house.', 'parse': {'tree': '(ROOT (S (SBAR (WHADVP (WRB When)) (S (NP (DT the) (NN family)) (VP (VBD got) (PP (TO to) (NP (PRP$ their) (JJ new) (NN home))) (PP (IN in) (NP (NNP Utah)))))) (, ,) (NP (NNP Jenny)) (VP (VBD helped) (NP (PRP$ her) (NNS parents)) (S (VP (TO to) (VP (VB take) (NP (NP (DT all)) (PP (IN of) (NP (DT the) (NNS boxes)))) (PP (IN into) (NP (DT the) (NN house))))))) (. .)))', 'lemma': [(u'When', u'when', u'WRB'), (u'the', u'the', u'DT'), (u'family', u'family', u'NN'), (u'got', u'get', u'VBD'), (u'to', u'to', u'TO'), (u'their', u'they', u'PRP$'), (u'new', u'new', u'JJ'), (u'home', u'home', u'NN'), (u'in', u'in', u'IN'), (u'Utah', u'Utah', u'NNP'), (u',', u',', u','), (u'Jenny', u'Jenny', u'NNP'), (u'helped', u'help', u'VBD'), (u'her', u'she', u'PRP$'), (u'parents', u'parent', u'NNS'), (u'to', u'to', u'TO'), (u'take', u'take', u'VB'), (u'all', u'all', u'DT'), (u'of', u'of', u'IN'), (u'the', u'the', u'DT'), (u'boxes', u'box', u'NNS'), (u'into', u'into', u'IN'), (u'the', u'the', u'DT'), (u'house', u'house', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['When', 'the', 'family', 'got', 'to', 'their', 'new', 'home', 'in', 'Utah', ',', 'Jenny', 'helped', 'her', 'parents', 'to', 'take', 'all', 'of', 'the', 'boxes', 'into', 'the', 'house', '.']}, {'string': ' She loved her new bedroom!', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBD loved) (NP (PRP$ her) (JJ new) (NN bedroom))) (. !)))', 'lemma': [(u'She', u'she', u'PRP'), (u'loved', u'love', u'VBD'), (u'her', u'she', u'PRP$'), (u'new', u'new', u'JJ'), (u'bedroom', u'bedroom', u'NN'), (u'!', u'!', u'.')]}, 'tokens': ['She', 'loved', 'her', 'new', 'bedroom', '!']}, {'string': ' When Jenny was emptying box of her toys, there was a knock at the door.', 'parse': {'tree': '(ROOT (S (SBAR (WHADVP (WRB When)) (S (NP (NNP Jenny)) (VP (VBD was) (VP (VBG emptying) (NP (NP (NN box)) (PP (IN of) (NP (PRP$ her) (NNS toys)))))))) (, ,) (NP (EX there)) (VP (VBD was) (NP (NP (DT a) (NN knock)) (PP (IN at) (NP (DT the) (NN door))))) (. .)))', 'lemma': [(u'When', u'when', u'WRB'), (u'Jenny', u'Jenny', u'NNP'), (u'was', u'be', u'VBD'), (u'emptying', u'empty', u'VBG'), (u'box', u'box', u'NN'), (u'of', u'of', u'IN'), (u'her', u'she', u'PRP$'), (u'toys', u'toy', u'NNS'), (u',', u',', u','), (u'there', u'there', u'EX'), (u'was', u'be', u'VBD'), (u'a', u'a', u'DT'), (u'knock', u'knock', u'NN'), (u'at', u'at', u'IN'), (u'the', u'the', u'DT'), (u'door', u'door', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['When', 'Jenny', 'was', 'emptying', 'box', 'of', 'her', 'toys', ',', 'there', 'was', 'a', 'knock', 'at', 'the', 'door', '.']}, {'string': ' It was a little girl who wanted Jenny to play!', 'parse': {'tree': '(ROOT (S (NP (PRP It)) (VP (VBD was) (NP (NP (DT a) (JJ little) (NN girl)) (SBAR (WHNP (WP who)) (S (VP (VBD wanted) (S (NP (NNP Jenny)) (VP (TO to) (VP (VB play))))))))) (. !)))', 'lemma': [(u'It', u'it', u'PRP'), (u'was', u'be', u'VBD'), (u'a', u'a', u'DT'), (u'little', u'little', u'JJ'), (u'girl', u'girl', u'NN'), (u'who', u'who', u'WP'), (u'wanted', u'want', u'VBD'), (u'Jenny', u'Jenny', u'NNP'), (u'to', u'to', u'TO'), (u'play', u'play', u'VB'), (u'!', u'!', u'.')]}, 'tokens': ['It', 'was', 'a', 'little', 'girl', 'who', 'wanted', 'Jenny', 'to', 'play', '!']}, {'string': ' Jenny was going to like Utah!', 'parse': {'tree': '(ROOT (S (NP (NNP Jenny)) (VP (VBD was) (VP (VBG going) (S (VP (TO to) (VP (VB like) (NP (NNP Utah))))))) (. !)))', 'lemma': [(u'Jenny', u'Jenny', u'NNP'), (u'was', u'be', u'VBD'), (u'going', u'go', u'VBG'), (u'to', u'to', u'TO'), (u'like', u'like', u'VB'), (u'Utah', u'Utah', u'NNP'), (u'!', u'!', u'.')]}, 'tokens': ['Jenny', 'was', 'going', 'to', 'like', 'Utah', '!']}], 'questions': [{'question': {'string': ' Who drove the truck?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP Who)) (SQ (VP (VBD drove) (NP (DT the) (NN truck)))) (. ?)))', 'lemma': [(u'Who', u'who', u'WP'), (u'drove', u'drive', u'VBD'), (u'the', u'the', u'DT'), (u'truck', u'truck', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['Who', 'drove', 'the', 'truck', '?']}, 'answers': [{'string': ' Jenny', 'parse': {'tree': '(ROOT (NP (NNP Jenny)))', 'lemma': [(u'Jenny', u'Jenny', u'NNP')]}, 'tokens': ['Jenny']}, {'string': " Jenny 's Brother", 'parse': {'tree': "(ROOT (NP (NP (NNP Jenny) (POS 's)) (NNP Brother)))", 'lemma': [(u'Jenny', u'Jenny', u'NNP'), (u"'s", u"'s", u'POS'), (u'Brother', u'Brother', u'NNP')]}, 'tokens': ['Jenny', "'s", 'Brother']}, {'string': " Jenny 's Mom", 'parse': {'tree': "(ROOT (NP (NP (NNP Jenny) (POS 's)) (NN Mom)))", 'lemma': [(u'Jenny', u'Jenny', u'NNP'), (u"'s", u"'s", u'POS'), (u'Mom', u'mom', u'NN')]}, 'tokens': ['Jenny', "'s", 'Mom']}, {'string': " Jenny 's Dad", 'parse': {'tree': "(ROOT (NP (NP (NNP Jenny) (POS 's)) (NNP Dad)))", 'lemma': [(u'Jenny', u'Jenny', u'NNP'), (u"'s", u"'s", u'POS'), (u'Dad', u'Dad', u'NNP')]}, 'tokens': ['Jenny', "'s", 'Dad']}], 'mode': 1}, {'question': {'string': ' Where did Jenny live before she moved?', 'parse': {'tree': '(ROOT (SBARQ (WHADVP (WRB Where)) (SQ (VBD did) (NP (NNP Jenny)) (VP (VB live) (SBAR (IN before) (S (NP (PRP she)) (VP (VBD moved)))))) (. ?)))', 'lemma': [(u'Where', u'where', u'WRB'), (u'did', u'do', u'VBD'), (u'Jenny', u'Jenny', u'NNP'), (u'live', u'live', u'VB'), (u'before', u'before', u'IN'), (u'she', u'she', u'PRP'), (u'moved', u'move', u'VBD'), (u'?', u'?', u'.')]}, 'tokens': ['Where', 'did', 'Jenny', 'live', 'before', 'she', 'moved', '?']}, 'answers': [{'string': ' New York', 'parse': {'tree': '(ROOT (NP (NNP New) (NNP York)))', 'lemma': [(u'New', u'New', u'NNP'), (u'York', u'York', u'NNP')]}, 'tokens': ['New', 'York']}, {'string': ' Utah', 'parse': {'tree': '(ROOT (NP (NNP Utah)))', 'lemma': [(u'Utah', u'Utah', u'NNP')]}, 'tokens': ['Utah']}, {'string': ' Austin', 'parse': {'tree': '(ROOT (NP (NNP Austin)))', 'lemma': [(u'Austin', u'Austin', u'NNP')]}, 'tokens': ['Austin']}, {'string': ' Seattle', 'parse': {'tree': '(ROOT (NP (NNP Seattle)))', 'lemma': [(u'Seattle', u'Seattle', u'NNP')]}, 'tokens': ['Seattle']}], 'mode': 1}, {'question': {'string': ' What made Jenny happy about being in Utah?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VP (VBD made) (S (NP (NNP Jenny)) (ADJP (JJ happy) (PP (IN about) (S (VP (VBG being) (PP (IN in) (NP (NNP Utah)))))))))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'made', u'make', u'VBD'), (u'Jenny', u'Jenny', u'NNP'), (u'happy', u'happy', u'JJ'), (u'about', u'about', u'IN'), (u'being', u'be', u'VBG'), (u'in', u'in', u'IN'), (u'Utah', u'Utah', u'NNP'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'made', 'Jenny', 'happy', 'about', 'being', 'in', 'Utah', '?']}, 'answers': [{'string': ' the music', 'parse': {'tree': '(ROOT (FRAG (NP (DT the) (NN music))))', 'lemma': [(u'the', u'the', u'DT'), (u'music', u'music', u'NN')]}, 'tokens': ['the', 'music']}, {'string': ' the pretty views', 'parse': {'tree': '(ROOT (FRAG (NP (DT the) (JJ pretty) (NNS views))))', 'lemma': [(u'the', u'the', u'DT'), (u'pretty', u'pretty', u'JJ'), (u'views', u'view', u'NNS')]}, 'tokens': ['the', 'pretty', 'views']}, {'string': ' being with her mom', 'parse': {'tree': '(ROOT (S (VP (VBG being) (PP (IN with) (NP (PRP$ her) (NN mom))))))', 'lemma': [(u'being', u'be', u'VBG'), (u'with', u'with', u'IN'), (u'her', u'she', u'PRP$'), (u'mom', u'mom', u'NN')]}, 'tokens': ['being', 'with', 'her', 'mom']}, {'string': ' a little girl came to play', 'parse': {'tree': '(ROOT (S (NP (DT a) (JJ little) (NN girl)) (VP (VBD came) (S (VP (TO to) (VP (VB play)))))))', 'lemma': [(u'a', u'a', u'DT'), (u'little', u'little', u'JJ'), (u'girl', u'girl', u'NN'), (u'came', u'come', u'VBD'), (u'to', u'to', u'TO'), (u'play', u'play', u'VB')]}, 'tokens': ['a', 'little', 'girl', 'came', 'to', 'play']}], 'mode': 0}, {'question': {'string': ' Why was Jenny sad about the move?', 'parse': {'tree': '(ROOT (SBARQ (WHADVP (WRB Why)) (SQ (VBD was) (NP (NNP Jenny)) (ADJP (JJ sad) (PP (IN about) (NP (DT the) (NN move))))) (. ?)))', 'lemma': [(u'Why', u'why', u'WRB'), (u'was', u'be', u'VBD'), (u'Jenny', u'Jenny', u'NNP'), (u'sad', u'sad', u'JJ'), (u'about', u'about', u'IN'), (u'the', u'the', u'DT'), (u'move', u'move', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['Why', 'was', 'Jenny', 'sad', 'about', 'the', 'move', '?']}, 'answers': [{'string': ' She had to leave her stuff', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBD had) (S (VP (TO to) (VP (VB leave) (NP (PRP$ her) (NN stuff))))))))', 'lemma': [(u'She', u'she', u'PRP'), (u'had', u'have', u'VBD'), (u'to', u'to', u'TO'), (u'leave', u'leave', u'VB'), (u'her', u'she', u'PRP$'), (u'stuff', u'stuff', u'NN')]}, 'tokens': ['She', 'had', 'to', 'leave', 'her', 'stuff']}, {'string': " She did n't want to leave her soccer team", 'parse': {'tree': "(ROOT (S (NP (PRP She)) (VP (VBD did) (RB n't) (VP (VB want) (S (VP (TO to) (VP (VB leave) (NP (PRP$ her) (NN soccer) (NN team)))))))))", 'lemma': [(u'She', u'she', u'PRP'), (u'did', u'do', u'VBD'), (u"n't", u'not', u'RB'), (u'want', u'want', u'VB'), (u'to', u'to', u'TO'), (u'leave', u'leave', u'VB'), (u'her', u'she', u'PRP$'), (u'soccer', u'soccer', u'NN'), (u'team', u'team', u'NN')]}, 'tokens': ['She', 'did', "n't", 'want', 'to', 'leave', 'her', 'soccer', 'team']}, {'string': ' She had to leave her friends and her school', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBD had) (S (VP (TO to) (VP (VB leave) (NP (NP (PRP$ her) (NNS friends)) (CC and) (NP (PRP$ her) (NN school)))))))))', 'lemma': [(u'She', u'she', u'PRP'), (u'had', u'have', u'VBD'), (u'to', u'to', u'TO'), (u'leave', u'leave', u'VB'), (u'her', u'she', u'PRP$'), (u'friends', u'friend', u'NNS'), (u'and', u'and', u'CC'), (u'her', u'she', u'PRP$'), (u'school', u'school', u'NN')]}, 'tokens': ['She', 'had', 'to', 'leave', 'her', 'friends', 'and', 'her', 'school']}, {'string': " She did n't want to leave her family", 'parse': {'tree': "(ROOT (S (NP (PRP She)) (VP (VBD did) (RB n't) (VP (VB want) (S (VP (TO to) (VP (VB leave) (NP (PRP$ her) (NN family)))))))))", 'lemma': [(u'She', u'she', u'PRP'), (u'did', u'do', u'VBD'), (u"n't", u'not', u'RB'), (u'want', u'want', u'VB'), (u'to', u'to', u'TO'), (u'leave', u'leave', u'VB'), (u'her', u'she', u'PRP$'), (u'family', u'family', u'NN')]}, 'tokens': ['She', 'did', "n't", 'want', 'to', 'leave', 'her', 'family']}], 'mode': 0}]}
{'sentences': [{'string': ' Mike and Jeff are close friends.', 'parse': {'tree': '(ROOT (S (NP (NNP Mike) (CC and) (NNP Jeff)) (VP (VBP are) (NP (JJ close) (NNS friends))) (. .)))', 'lemma': [(u'Mike', u'Mike', u'NNP'), (u'and', u'and', u'CC'), (u'Jeff', u'Jeff', u'NNP'), (u'are', u'be', u'VBP'), (u'close', u'close', u'JJ'), (u'friends', u'friend', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['Mike', 'and', 'Jeff', 'are', 'close', 'friends', '.']}, {'string': ' Their school is having a guessing game to guess how many gumballs are in a box.', 'parse': {'tree': '(ROOT (S (NP (PRP$ Their) (NN school)) (VP (VBZ is) (VP (VBG having) (NP (DT a) (JJ guessing) (NN game)) (S (VP (TO to) (VP (VB guess) (SBAR (WHADJP (WRB how) (JJ many)) (S (NP (NNS gumballs)) (VP (VBP are) (PP (IN in) (NP (DT a) (NN box))))))))))) (. .)))', 'lemma': [(u'Their', u'they', u'PRP$'), (u'school', u'school', u'NN'), (u'is', u'be', u'VBZ'), (u'having', u'have', u'VBG'), (u'a', u'a', u'DT'), (u'guessing', u'guessing', u'JJ'), (u'game', u'game', u'NN'), (u'to', u'to', u'TO'), (u'guess', u'guess', u'VB'), (u'how', u'how', u'WRB'), (u'many', u'many', u'JJ'), (u'gumballs', u'gumball', u'NNS'), (u'are', u'be', u'VBP'), (u'in', u'in', u'IN'), (u'a', u'a', u'DT'), (u'box', u'box', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Their', 'school', 'is', 'having', 'a', 'guessing', 'game', 'to', 'guess', 'how', 'many', 'gumballs', 'are', 'in', 'a', 'box', '.']}, {'string': ' If they get the right amount they win $ 100.', 'parse': {'tree': '(ROOT (S (SBAR (IN If) (S (NP (PRP they)) (VP (VBP get) (NP (DT the) (JJ right) (NN amount))))) (NP (PRP they)) (VP (VBP win) (NP ($ $) (CD 100))) (. .)))', 'lemma': [(u'If', u'if', u'IN'), (u'they', u'they', u'PRP'), (u'get', u'get', u'VBP'), (u'the', u'the', u'DT'), (u'right', u'right', u'JJ'), (u'amount', u'amount', u'NN'), (u'they', u'they', u'PRP'), (u'win', u'win', u'VBP'), (u'$', u'$', u'$'), (u'100', u'100', u'CD'), (u'.', u'.', u'.')]}, 'tokens': ['If', 'they', 'get', 'the', 'right', 'amount', 'they', 'win', '$', '100', '.']}, {'string': ' If they get close they get a $ 20 gift card.', 'parse': {'tree': '(ROOT (S (SBAR (IN If) (S (NP (PRP they)) (VP (VBP get) (ADJP (JJ close))))) (NP (PRP they)) (VP (VBP get) (NP (DT a) (ADJP ($ $) (CD 20)) (NN gift) (NN card))) (. .)))', 'lemma': [(u'If', u'if', u'IN'), (u'they', u'they', u'PRP'), (u'get', u'get', u'VBP'), (u'close', u'close', u'JJ'), (u'they', u'they', u'PRP'), (u'get', u'get', u'VBP'), (u'a', u'a', u'DT'), (u'$', u'$', u'$'), (u'20', u'20', u'CD'), (u'gift', u'gift', u'NN'), (u'card', u'card', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['If', 'they', 'get', 'close', 'they', 'get', 'a', '$', '20', 'gift', 'card', '.']}, {'string': ' The box looks like it is missing some gumballs.', 'parse': {'tree': '(ROOT (S (NP (DT The) (NN box)) (VP (VBZ looks) (SBAR (IN like) (S (NP (PRP it)) (VP (VBZ is) (VP (VBG missing) (NP (DT some) (NNS gumballs))))))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'box', u'box', u'NN'), (u'looks', u'look', u'VBZ'), (u'like', u'like', u'IN'), (u'it', u'it', u'PRP'), (u'is', u'be', u'VBZ'), (u'missing', u'miss', u'VBG'), (u'some', u'some', u'DT'), (u'gumballs', u'gumball', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'box', 'looks', 'like', 'it', 'is', 'missing', 'some', 'gumballs', '.']}, {'string': ' It turns out some people are eating them when they place their guess.', 'parse': {'tree': '(ROOT (S (NP (PRP It)) (VP (VBZ turns) (PRT (RP out)) (SBAR (S (NP (DT some) (NNS people)) (VP (VBP are) (VP (VBG eating) (NP (PRP them)) (SBAR (WHADVP (WRB when)) (S (NP (PRP they)) (VP (VBP place) (NP (PRP$ their) (NN guess)))))))))) (. .)))', 'lemma': [(u'It', u'it', u'PRP'), (u'turns', u'turn', u'VBZ'), (u'out', u'out', u'RP'), (u'some', u'some', u'DT'), (u'people', u'people', u'NNS'), (u'are', u'be', u'VBP'), (u'eating', u'eat', u'VBG'), (u'them', u'they', u'PRP'), (u'when', u'when', u'WRB'), (u'they', u'they', u'PRP'), (u'place', u'place', u'VBP'), (u'their', u'they', u'PRP$'), (u'guess', u'guess', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['It', 'turns', 'out', 'some', 'people', 'are', 'eating', 'them', 'when', 'they', 'place', 'their', 'guess', '.']}, {'string': ' 100 people guessed and took a piece of candy.', 'parse': {'tree': '(ROOT (S (NP (CD 100) (NNS people)) (VP (VP (VBD guessed)) (CC and) (VP (VBD took) (NP (NP (DT a) (NN piece)) (PP (IN of) (NP (NN candy)))))) (. .)))', 'lemma': [(u'100', u'100', u'CD'), (u'people', u'people', u'NNS'), (u'guessed', u'guess', u'VBD'), (u'and', u'and', u'CC'), (u'took', u'take', u'VBD'), (u'a', u'a', u'DT'), (u'piece', u'piece', u'NN'), (u'of', u'of', u'IN'), (u'candy', u'candy', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['100', 'people', 'guessed', 'and', 'took', 'a', 'piece', 'of', 'candy', '.']}, {'string': " The box is 10 '' by 10 '' by 10 ''.", 'parse': {'tree': "(ROOT (S (NP (DT The) (NN box)) (VP (VBZ is) (NP (CD 10)) ('' '') (PP (IN by) (NP (NP (CD 10)) ('' '') (PP (IN by) (NP (CD 10))) ('' '')))) (. .)))", 'lemma': [(u'The', u'the', u'DT'), (u'box', u'box', u'NN'), (u'is', u'be', u'VBZ'), (u'10', u'10', u'CD'), (u"''", u"''", u"''"), (u'by', u'by', u'IN'), (u'10', u'10', u'CD'), (u"''", u"''", u"''"), (u'by', u'by', u'IN'), (u'10', u'10', u'CD'), (u"''", u"''", u"''"), (u'.', u'.', u'.')]}, 'tokens': ['The', 'box', 'is', '10', "''", 'by', '10', "''", 'by', '10', "''", '.']}, {'string': " Each gumball is 1 '' each.", 'parse': {'tree': "(ROOT (NP (NP (DT Each)) (VP (VBN gumball) (S (VP (VBZ is) (NP (CD 1)))) ('' '') (ADVP (DT each))) (. .)))", 'lemma': [(u'Each', u'each', u'DT'), (u'gumball', u'gumball', u'VBN'), (u'is', u'be', u'VBZ'), (u'1', u'1', u'CD'), (u"''", u"''", u"''"), (u'each', u'each', u'DT'), (u'.', u'.', u'.')]}, 'tokens': ['Each', 'gumball', 'is', '1', "''", 'each', '.']}, {'string': ' Mike guessed 500.', 'parse': {'tree': '(ROOT (S (NP (NNP Mike)) (VP (VBD guessed) (NP (CD 500))) (. .)))', 'lemma': [(u'Mike', u'Mike', u'NNP'), (u'guessed', u'guess', u'VBD'), (u'500', u'500', u'CD'), (u'.', u'.', u'.')]}, 'tokens': ['Mike', 'guessed', '500', '.']}, {'string': ' Jeff guessed 800.', 'parse': {'tree': '(ROOT (S (NP (NNP Jeff)) (VP (VBD guessed) (NP (CD 800))) (. .)))', 'lemma': [(u'Jeff', u'Jeff', u'NNP'), (u'guessed', u'guess', u'VBD'), (u'800', u'800', u'CD'), (u'.', u'.', u'.')]}, 'tokens': ['Jeff', 'guessed', '800', '.']}, {'string': ' They both said they would split their money they win, if they win.', 'parse': {'tree': '(ROOT (S (NP (PRP They)) (DT both) (VP (VBD said) (SBAR (S (NP (PRP they)) (VP (MD would) (VP (VB split) (NP (NP (PRP$ their) (NN money)) (SBAR (S (NP (PRP they)) (VP (VBP win))))) (, ,) (SBAR (IN if) (S (NP (PRP they)) (VP (VBP win))))))))) (. .)))', 'lemma': [(u'They', u'they', u'PRP'), (u'both', u'both', u'DT'), (u'said', u'say', u'VBD'), (u'they', u'they', u'PRP'), (u'would', u'would', u'MD'), (u'split', u'split', u'VB'), (u'their', u'they', u'PRP$'), (u'money', u'money', u'NN'), (u'they', u'they', u'PRP'), (u'win', u'win', u'VBP'), (u',', u',', u','), (u'if', u'if', u'IN'), (u'they', u'they', u'PRP'), (u'win', u'win', u'VBP'), (u'.', u'.', u'.')]}, 'tokens': ['They', 'both', 'said', 'they', 'would', 'split', 'their', 'money', 'they', 'win', ',', 'if', 'they', 'win', '.']}], 'questions': [{'question': {'string': ' Who is closer?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP Who)) (SQ (VBZ is) (ADJP (JJR closer))) (. ?)))', 'lemma': [(u'Who', u'who', u'WP'), (u'is', u'be', u'VBZ'), (u'closer', u'closer', u'JJR'), (u'?', u'?', u'.')]}, 'tokens': ['Who', 'is', 'closer', '?']}, 'answers': [{'string': ' Both', 'parse': {'tree': '(ROOT (FRAG (NP (DT Both))))', 'lemma': [(u'Both', u'both', u'DT')]}, 'tokens': ['Both']}, {'string': ' Jeff', 'parse': {'tree': '(ROOT (NP (NNP Jeff)))', 'lemma': [(u'Jeff', u'Jeff', u'NNP')]}, 'tokens': ['Jeff']}, {'string': ' Mike', 'parse': {'tree': '(ROOT (NP (NNP Mike)))', 'lemma': [(u'Mike', u'Mike', u'NNP')]}, 'tokens': ['Mike']}, {'string': ' Neither', 'parse': {'tree': '(ROOT (FRAG (NP (DT Neither))))', 'lemma': [(u'Neither', u'neither', u'DT')]}, 'tokens': ['Neither']}], 'mode': 0}, {'question': {'string': ' How likely would it be for one of them to win?', 'parse': {'tree': '(ROOT (SBARQ (WHADJP (WRB How) (ADJP (JJ likely))) (SQ (MD would) (NP (PRP it)) (VP (VB be) (PP (IN for) (NP (NP (CD one)) (PP (IN of) (NP (PRP them))))) (S (VP (TO to) (VP (VB win)))))) (. ?)))', 'lemma': [(u'How', u'how', u'WRB'), (u'likely', u'likely', u'JJ'), (u'would', u'would', u'MD'), (u'it', u'it', u'PRP'), (u'be', u'be', u'VB'), (u'for', u'for', u'IN'), (u'one', u'one', u'CD'), (u'of', u'of', u'IN'), (u'them', u'they', u'PRP'), (u'to', u'to', u'TO'), (u'win', u'win', u'VB'), (u'?', u'?', u'.')]}, 'tokens': ['How', 'likely', 'would', 'it', 'be', 'for', 'one', 'of', 'them', 'to', 'win', '?']}, 'answers': [{'string': ' 5/100', 'parse': {'tree': '(ROOT (INTJ (UH 5/100)))', 'lemma': [(u'5/100', u'5/100', u'UH')]}, 'tokens': ['5/100']}, {'string': ' 10/100', 'parse': {'tree': '(ROOT (FRAG (NP (CD 10/100))))', 'lemma': [(u'10/100', u'10/100', u'CD')]}, 'tokens': ['10/100']}, {'string': ' 1/100', 'parse': {'tree': '(ROOT (FRAG (NP (CD 1/100))))', 'lemma': [(u'1/100', u'1/100', u'CD')]}, 'tokens': ['1/100']}, {'string': ' 100/100', 'parse': {'tree': '(ROOT (FRAG (NP (CD 100/100))))', 'lemma': [(u'100/100', u'100/100', u'CD')]}, 'tokens': ['100/100']}], 'mode': 1}, {'question': {'string': ' How likely would it be neither of them to win?', 'parse': {'tree': '(ROOT (SBARQ (WHADJP (WRB How) (ADJP (JJ likely))) (SQ (MD would) (NP (PRP it)) (VP (VB be) (NP (NP (DT neither)) (PP (IN of) (NP (PRP them))) (S (VP (TO to) (VP (VB win))))))) (. ?)))', 'lemma': [(u'How', u'how', u'WRB'), (u'likely', u'likely', u'JJ'), (u'would', u'would', u'MD'), (u'it', u'it', u'PRP'), (u'be', u'be', u'VB'), (u'neither', u'neither', u'DT'), (u'of', u'of', u'IN'), (u'them', u'they', u'PRP'), (u'to', u'to', u'TO'), (u'win', u'win', u'VB'), (u'?', u'?', u'.')]}, 'tokens': ['How', 'likely', 'would', 'it', 'be', 'neither', 'of', 'them', 'to', 'win', '?']}, 'answers': [{'string': ' 89/99', 'parse': {'tree': '(ROOT (FRAG (NP (CD 89/99))))', 'lemma': [(u'89/99', u'89/99', u'CD')]}, 'tokens': ['89/99']}, {'string': ' 99/99', 'parse': {'tree': '(ROOT (FRAG (NP (CD 99/99))))', 'lemma': [(u'99/99', u'99/99', u'CD')]}, 'tokens': ['99/99']}, {'string': ' 99/100', 'parse': {'tree': '(ROOT (FRAG (NP (CD 99/100))))', 'lemma': [(u'99/100', u'99/100', u'CD')]}, 'tokens': ['99/100']}, {'string': ' 98/100', 'parse': {'tree': '(ROOT (FRAG (NP (CD 98/100))))', 'lemma': [(u'98/100', u'98/100', u'CD')]}, 'tokens': ['98/100']}], 'mode': 0}, {'question': {'string': ' What is the right amount?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (DT the) (JJ right) (NN amount))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'is', u'be', u'VBZ'), (u'the', u'the', u'DT'), (u'right', u'right', u'JJ'), (u'amount', u'amount', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'is', 'the', 'right', 'amount', '?']}, 'answers': [{'string': ' 1000', 'parse': {'tree': '(ROOT (INTJ (UH 1000)))', 'lemma': [(u'1000', u'1000', u'UH')]}, 'tokens': ['1000']}, {'string': ' 800', 'parse': {'tree': '(ROOT (FRAG (NP (CD 800))))', 'lemma': [(u'800', u'800', u'CD')]}, 'tokens': ['800']}, {'string': ' 900', 'parse': {'tree': '(ROOT (FRAG (NP (CD 900))))', 'lemma': [(u'900', u'900', u'CD')]}, 'tokens': ['900']}, {'string': ' 700', 'parse': {'tree': '(ROOT (FRAG (NP (CD 700))))', 'lemma': [(u'700', u'700', u'CD')]}, 'tokens': ['700']}], 'mode': 0}]}
{'sentences': [{'string': ' Hannah and her friend Mary were bored.', 'parse': {'tree': '(ROOT (S (NP (NP (NNP Hannah)) (CC and) (NP (PRP$ her) (NN friend) (NNP Mary))) (VP (VBD were) (ADJP (VBN bored))) (. .)))', 'lemma': [(u'Hannah', u'Hannah', u'NNP'), (u'and', u'and', u'CC'), (u'her', u'she', u'PRP$'), (u'friend', u'friend', u'NN'), (u'Mary', u'Mary', u'NNP'), (u'were', u'be', u'VBD'), (u'bored', u'bore', u'VBN'), (u'.', u'.', u'.')]}, 'tokens': ['Hannah', 'and', 'her', 'friend', 'Mary', 'were', 'bored', '.']}, {'string': ' They sat around the house and tried to think about what to do.', 'parse': {'tree': '(ROOT (S (NP (PRP They)) (VP (VP (VBD sat) (PRT (RP around)) (NP (DT the) (NN house))) (CC and) (VP (VBD tried) (S (VP (TO to) (VP (VB think) (PP (IN about) (SBAR (WHNP (WP what)) (S (VP (TO to) (VP (VB do))))))))))) (. .)))', 'lemma': [(u'They', u'they', u'PRP'), (u'sat', u'sit', u'VBD'), (u'around', u'around', u'RP'), (u'the', u'the', u'DT'), (u'house', u'house', u'NN'), (u'and', u'and', u'CC'), (u'tried', u'try', u'VBD'), (u'to', u'to', u'TO'), (u'think', u'think', u'VB'), (u'about', u'about', u'IN'), (u'what', u'what', u'WP'), (u'to', u'to', u'TO'), (u'do', u'do', u'VB'), (u'.', u'.', u'.')]}, 'tokens': ['They', 'sat', 'around', 'the', 'house', 'and', 'tried', 'to', 'think', 'about', 'what', 'to', 'do', '.']}, {'string': ' They petted the cat.', 'parse': {'tree': '(ROOT (S (NP (PRP They)) (VP (VBD petted) (NP (DT the) (NN cat))) (. .)))', 'lemma': [(u'They', u'they', u'PRP'), (u'petted', u'pet', u'VBD'), (u'the', u'the', u'DT'), (u'cat', u'cat', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['They', 'petted', 'the', 'cat', '.']}, {'string': " They drew pictures in Hannah 's notebook.", 'parse': {'tree': "(ROOT (S (NP (PRP They)) (VP (VBD drew) (NP (NNS pictures)) (PP (IN in) (NP (NP (NNP Hannah) (POS 's)) (NN notebook)))) (. .)))", 'lemma': [(u'They', u'they', u'PRP'), (u'drew', u'draw', u'VBD'), (u'pictures', u'picture', u'NNS'), (u'in', u'in', u'IN'), (u'Hannah', u'Hannah', u'NNP'), (u"'s", u"'s", u'POS'), (u'notebook', u'notebook', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['They', 'drew', 'pictures', 'in', 'Hannah', "'s", 'notebook', '.']}, {'string': " They snuck into Hannah 's mother 's closet to try on her shoes, but Hannah 's mother caught them.", 'parse': {'tree': "(ROOT (S (S (NP (PRP They)) (VP (VBP snuck) (PP (IN into) (NP (NP (NP (NNP Hannah) (POS 's)) (NN mother) (POS 's)) (NN closet))) (S (VP (TO to) (VP (VB try) (PP (IN on) (NP (PRP$ her) (NNS shoes)))))))) (, ,) (CC but) (S (NP (NP (NNP Hannah) (POS 's)) (NN mother)) (VP (VBD caught) (NP (PRP them)))) (. .)))", 'lemma': [(u'They', u'they', u'PRP'), (u'snuck', u'snuck', u'VBP'), (u'into', u'into', u'IN'), (u'Hannah', u'Hannah', u'NNP'), (u"'s", u"'s", u'POS'), (u'mother', u'mother', u'NN'), (u"'s", u"'s", u'POS'), (u'closet', u'closet', u'NN'), (u'to', u'to', u'TO'), (u'try', u'try', u'VB'), (u'on', u'on', u'IN'), (u'her', u'she', u'PRP$'), (u'shoes', u'shoe', u'NNS'), (u',', u',', u','), (u'but', u'but', u'CC'), (u'Hannah', u'Hannah', u'NNP'), (u"'s", u"'s", u'POS'), (u'mother', u'mother', u'NN'), (u'caught', u'catch', u'VBD'), (u'them', u'they', u'PRP'), (u'.', u'.', u'.')]}, 'tokens': ['They', 'snuck', 'into', 'Hannah', "'s", 'mother', "'s", 'closet', 'to', 'try', 'on', 'her', 'shoes', ',', 'but', 'Hannah', "'s", 'mother', 'caught', 'them', '.']}, {'string': ' She said, `` You girls need something to do.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBD said) (, ,) (`` ``) (S (NP (PRP You) (NNS girls)) (VP (VB need) (NP (NN something)) (S (VP (TO to) (VP (VB do))))))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'said', u'say', u'VBD'), (u',', u',', u','), (u'``', u'``', u'``'), (u'You', u'you', u'PRP'), (u'girls', u'girl', u'NNS'), (u'need', u'need', u'VB'), (u'something', u'something', u'NN'), (u'to', u'to', u'TO'), (u'do', u'do', u'VB'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'said', ',', '``', 'You', 'girls', 'need', 'something', 'to', 'do', '.']}, {'string': " Let 's take a walk to the park! ''", 'parse': {'tree': "(ROOT (S (NP (NNP Let) (POS 's)) (VP (VBP take) (NP (DT a) (NN walk)) (PP (TO to) (NP (DT the) (NN park)))) (. !) ('' '')))", 'lemma': [(u'Let', u'Let', u'NNP'), (u"'s", u"'s", u'POS'), (u'take', u'take', u'VBP'), (u'a', u'a', u'DT'), (u'walk', u'walk', u'NN'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'park', u'park', u'NN'), (u'!', u'!', u'.'), (u"''", u"''", u"''")]}, 'tokens': ['Let', "'s", 'take', 'a', 'walk', 'to', 'the', 'park', '!', "''"]}, {'string': ' Hannah and Mary looked at each other, and then jumped up and down happily.', 'parse': {'tree': '(ROOT (S (NP (NNP Hannah) (CC and) (NNP Mary)) (VP (VP (VBD looked) (PP (IN at) (NP (DT each) (JJ other)))) (, ,) (CC and) (ADVP (RB then)) (VP (VBD jumped) (PRT (RP up) (CC and) (RP down)) (ADVP (RB happily)))) (. .)))', 'lemma': [(u'Hannah', u'Hannah', u'NNP'), (u'and', u'and', u'CC'), (u'Mary', u'Mary', u'NNP'), (u'looked', u'look', u'VBD'), (u'at', u'at', u'IN'), (u'each', u'each', u'DT'), (u'other', u'other', u'JJ'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'then', u'then', u'RB'), (u'jumped', u'jump', u'VBD'), (u'up', u'up', u'RP'), (u'and', u'and', u'CC'), (u'down', u'down', u'RP'), (u'happily', u'happily', u'RB'), (u'.', u'.', u'.')]}, 'tokens': ['Hannah', 'and', 'Mary', 'looked', 'at', 'each', 'other', ',', 'and', 'then', 'jumped', 'up', 'and', 'down', 'happily', '.']}, {'string': " `` The park sounds great! ''", 'parse': {'tree': "(ROOT (S (`` ``) (NP (DT The) (NN park)) (VP (VBZ sounds) (ADJP (JJ great))) (. !) ('' '')))", 'lemma': [(u'``', u'``', u'``'), (u'The', u'the', u'DT'), (u'park', u'park', u'NN'), (u'sounds', u'sound', u'VBZ'), (u'great', u'great', u'JJ'), (u'!', u'!', u'.'), (u"''", u"''", u"''")]}, 'tokens': ['``', 'The', 'park', 'sounds', 'great', '!', "''"]}, {'string': ' said Hannah.', 'parse': {'tree': '(ROOT (S (VP (VBD said) (NP (NNS Hannah))) (. .)))', 'lemma': [(u'said', u'say', u'VBD'), (u'Hannah', u'hannah', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['said', 'Hannah', '.']}, {'string': " `` Let 's go! ''", 'parse': {'tree': "(ROOT (S (`` ``) (VP (VB Let) (S (NP (POS 's)) (VP (VB go)))) (. !) ('' '')))", 'lemma': [(u'``', u'``', u'``'), (u'Let', u'let', u'VB'), (u"'s", u"'s", u'POS'), (u'go', u'go', u'VB'), (u'!', u'!', u'.'), (u"''", u"''", u"''")]}, 'tokens': ['``', 'Let', "'s", 'go', '!', "''"]}, {'string': ' cried Mary.', 'parse': {'tree': '(ROOT (S (VP (VB cried) (NP (NNP Mary))) (. .)))', 'lemma': [(u'cried', u'cry', u'VB'), (u'Mary', u'Mary', u'NNP'), (u'.', u'.', u'.')]}, 'tokens': ['cried', 'Mary', '.']}, {'string': " So Hannah 's mother packed up a snack of apples and cookies, and they all set off to walk to the park.", 'parse': {'tree': "(ROOT (S (CC So) (S (NP (NP (NNP Hannah) (POS 's)) (NN mother)) (VP (VBD packed) (PRT (RP up)) (NP (NP (DT a) (NN snack)) (PP (IN of) (NP (NNS apples) (CC and) (NNS cookies)))))) (, ,) (CC and) (S (NP (PRP they)) (ADVP (DT all)) (VP (VBD set) (PRT (RP off)) (S (VP (TO to) (VP (VB walk) (PP (TO to) (NP (DT the) (NN park)))))))) (. .)))", 'lemma': [(u'So', u'so', u'CC'), (u'Hannah', u'Hannah', u'NNP'), (u"'s", u"'s", u'POS'), (u'mother', u'mother', u'NN'), (u'packed', u'pack', u'VBD'), (u'up', u'up', u'RP'), (u'a', u'a', u'DT'), (u'snack', u'snack', u'NN'), (u'of', u'of', u'IN'), (u'apples', u'apple', u'NNS'), (u'and', u'and', u'CC'), (u'cookies', u'cookie', u'NNS'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'they', u'they', u'PRP'), (u'all', u'all', u'DT'), (u'set', u'set', u'VBD'), (u'off', u'off', u'RP'), (u'to', u'to', u'TO'), (u'walk', u'walk', u'VB'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'park', u'park', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['So', 'Hannah', "'s", 'mother', 'packed', 'up', 'a', 'snack', 'of', 'apples', 'and', 'cookies', ',', 'and', 'they', 'all', 'set', 'off', 'to', 'walk', 'to', 'the', 'park', '.']}, {'string': ' They walked down the sidewalk, looking at all the interesting things along the way.', 'parse': {'tree': '(ROOT (S (NP (PRP They)) (VP (VBD walked) (PRT (RP down)) (NP (DT the) (NN sidewalk)) (, ,) (S (VP (VBG looking) (PP (IN at) (NP (NP (PDT all) (DT the) (JJ interesting) (NNS things)) (PP (IN along) (NP (DT the) (NN way)))))))) (. .)))', 'lemma': [(u'They', u'they', u'PRP'), (u'walked', u'walk', u'VBD'), (u'down', u'down', u'RP'), (u'the', u'the', u'DT'), (u'sidewalk', u'sidewalk', u'NN'), (u',', u',', u','), (u'looking', u'look', u'VBG'), (u'at', u'at', u'IN'), (u'all', u'all', u'PDT'), (u'the', u'the', u'DT'), (u'interesting', u'interesting', u'JJ'), (u'things', u'thing', u'NNS'), (u'along', u'along', u'IN'), (u'the', u'the', u'DT'), (u'way', u'way', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['They', 'walked', 'down', 'the', 'sidewalk', ',', 'looking', 'at', 'all', 'the', 'interesting', 'things', 'along', 'the', 'way', '.']}, {'string': ' Mary spotted a squirrel.', 'parse': {'tree': '(ROOT (S (NP (NNP Mary)) (VP (VBD spotted) (NP (DT a) (NN squirrel))) (. .)))', 'lemma': [(u'Mary', u'Mary', u'NNP'), (u'spotted', u'spot', u'VBD'), (u'a', u'a', u'DT'), (u'squirrel', u'squirrel', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Mary', 'spotted', 'a', 'squirrel', '.']}, {'string': ' Hannah saw a yellow bird.', 'parse': {'tree': '(ROOT (S (NP (NNP Hannah)) (VP (VBD saw) (NP (DT a) (JJ yellow) (NN bird))) (. .)))', 'lemma': [(u'Hannah', u'Hannah', u'NNP'), (u'saw', u'see', u'VBD'), (u'a', u'a', u'DT'), (u'yellow', u'yellow', u'JJ'), (u'bird', u'bird', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Hannah', 'saw', 'a', 'yellow', 'bird', '.']}, {'string': " Hannah 's mother pointed out the pretty yellow flowers growing in front of Mr. Smith 's house.", 'parse': {'tree': "(ROOT (S (NP (NP (NNP Hannah) (POS 's)) (NN mother)) (VP (VBD pointed) (PRT (RP out)) (NP (NP (DT the) (ADJP (RB pretty) (JJ yellow)) (NNS flowers)) (VP (VBG growing) (PP (IN in) (NP (NP (NN front)) (PP (IN of) (NP (NP (NNP Mr.) (NNP Smith) (POS 's)) (NN house)))))))) (. .)))", 'lemma': [(u'Hannah', u'Hannah', u'NNP'), (u"'s", u"'s", u'POS'), (u'mother', u'mother', u'NN'), (u'pointed', u'point', u'VBD'), (u'out', u'out', u'RP'), (u'the', u'the', u'DT'), (u'pretty', u'pretty', u'RB'), (u'yellow', u'yellow', u'JJ'), (u'flowers', u'flower', u'NNS'), (u'growing', u'grow', u'VBG'), (u'in', u'in', u'IN'), (u'front', u'front', u'NN'), (u'of', u'of', u'IN'), (u'Mr.', u'Mr.', u'NNP'), (u'Smith', u'Smith', u'NNP'), (u"'s", u"'s", u'POS'), (u'house', u'house', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Hannah', "'s", 'mother', 'pointed', 'out', 'the', 'pretty', 'yellow', 'flowers', 'growing', 'in', 'front', 'of', 'Mr.', 'Smith', "'s", 'house', '.']}, {'string': " When they got to the park, Hannah 's mother spread out a picnic blanket and the snack.", 'parse': {'tree': "(ROOT (S (SBAR (WHADVP (WRB When)) (S (NP (PRP they)) (VP (VBD got) (PP (TO to) (NP (DT the) (NN park)))))) (, ,) (NP (NP (NNP Hannah) (POS 's)) (NN mother)) (VP (VBD spread) (PRT (RP out)) (NP (NP (DT a) (NN picnic) (NN blanket)) (CC and) (NP (DT the) (NN snack)))) (. .)))", 'lemma': [(u'When', u'when', u'WRB'), (u'they', u'they', u'PRP'), (u'got', u'get', u'VBD'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'park', u'park', u'NN'), (u',', u',', u','), (u'Hannah', u'Hannah', u'NNP'), (u"'s", u"'s", u'POS'), (u'mother', u'mother', u'NN'), (u'spread', u'spread', u'VBD'), (u'out', u'out', u'RP'), (u'a', u'a', u'DT'), (u'picnic', u'picnic', u'NN'), (u'blanket', u'blanket', u'NN'), (u'and', u'and', u'CC'), (u'the', u'the', u'DT'), (u'snack', u'snack', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['When', 'they', 'got', 'to', 'the', 'park', ',', 'Hannah', "'s", 'mother', 'spread', 'out', 'a', 'picnic', 'blanket', 'and', 'the', 'snack', '.']}, {'string': ' Hannah and Mary ran around chasing butterflies for a little time, and then sat down to eat their snacks.', 'parse': {'tree': '(ROOT (S (NP (NNP Hannah) (CC and) (NNP Mary)) (VP (VP (VBD ran) (PP (IN around) (S (VP (VBG chasing) (NP (NNS butterflies)) (PP (IN for) (NP (DT a) (JJ little) (NN time))))))) (, ,) (CC and) (ADVP (RB then)) (VP (VBD sat) (PRT (RP down)) (S (VP (TO to) (VP (VB eat) (NP (PRP$ their) (NNS snacks))))))) (. .)))', 'lemma': [(u'Hannah', u'Hannah', u'NNP'), (u'and', u'and', u'CC'), (u'Mary', u'Mary', u'NNP'), (u'ran', u'run', u'VBD'), (u'around', u'around', u'IN'), (u'chasing', u'chase', u'VBG'), (u'butterflies', u'butterfly', u'NNS'), (u'for', u'for', u'IN'), (u'a', u'a', u'DT'), (u'little', u'little', u'JJ'), (u'time', u'time', u'NN'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'then', u'then', u'RB'), (u'sat', u'sit', u'VBD'), (u'down', u'down', u'RP'), (u'to', u'to', u'TO'), (u'eat', u'eat', u'VB'), (u'their', u'they', u'PRP$'), (u'snacks', u'snack', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['Hannah', 'and', 'Mary', 'ran', 'around', 'chasing', 'butterflies', 'for', 'a', 'little', 'time', ',', 'and', 'then', 'sat', 'down', 'to', 'eat', 'their', 'snacks', '.']}, {'string': " When they finished, Hannah 's mother put the leftovers in a trash can.", 'parse': {'tree': "(ROOT (S (SBAR (WHADVP (WRB When)) (S (NP (PRP they)) (VP (VBD finished)))) (, ,) (NP (NP (NNP Hannah) (POS 's)) (NN mother)) (VP (VBD put) (SBAR (S (NP (NP (DT the) (NNS leftovers)) (PP (IN in) (NP (DT a) (NN trash)))) (VP (MD can))))) (. .)))", 'lemma': [(u'When', u'when', u'WRB'), (u'they', u'they', u'PRP'), (u'finished', u'finish', u'VBD'), (u',', u',', u','), (u'Hannah', u'Hannah', u'NNP'), (u"'s", u"'s", u'POS'), (u'mother', u'mother', u'NN'), (u'put', u'put', u'VBD'), (u'the', u'the', u'DT'), (u'leftovers', u'leftovers', u'NNS'), (u'in', u'in', u'IN'), (u'a', u'a', u'DT'), (u'trash', u'trash', u'NN'), (u'can', u'can', u'MD'), (u'.', u'.', u'.')]}, 'tokens': ['When', 'they', 'finished', ',', 'Hannah', "'s", 'mother', 'put', 'the', 'leftovers', 'in', 'a', 'trash', 'can', '.']}, {'string': ' As they walked back home, Hannah thought that the boring day had turned out quite well.', 'parse': {'tree': '(ROOT (S (SBAR (IN As) (S (NP (PRP they)) (VP (VBD walked) (ADVP (RB back) (NN home))))) (, ,) (NP (NNP Hannah)) (VP (VBD thought) (SBAR (IN that) (S (NP (DT the) (JJ boring) (NN day)) (VP (VBD had) (VP (VBN turned) (PRT (RP out)) (ADVP (RB quite) (RB well))))))) (. .)))', 'lemma': [(u'As', u'as', u'IN'), (u'they', u'they', u'PRP'), (u'walked', u'walk', u'VBD'), (u'back', u'back', u'RB'), (u'home', u'home', u'NN'), (u',', u',', u','), (u'Hannah', u'Hannah', u'NNP'), (u'thought', u'think', u'VBD'), (u'that', u'that', u'IN'), (u'the', u'the', u'DT'), (u'boring', u'boring', u'JJ'), (u'day', u'day', u'NN'), (u'had', u'have', u'VBD'), (u'turned', u'turn', u'VBN'), (u'out', u'out', u'RP'), (u'quite', u'quite', u'RB'), (u'well', u'well', u'RB'), (u'.', u'.', u'.')]}, 'tokens': ['As', 'they', 'walked', 'back', 'home', ',', 'Hannah', 'thought', 'that', 'the', 'boring', 'day', 'had', 'turned', 'out', 'quite', 'well', '.']}], 'questions': [{'question': {'string': ' What did Hannah and Mary chase at the park?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD did) (NP (NNP Hannah) (CC and) (NNP Mary)) (VP (VB chase) (PP (IN at) (NP (DT the) (NN park))))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'did', u'do', u'VBD'), (u'Hannah', u'Hannah', u'NNP'), (u'and', u'and', u'CC'), (u'Mary', u'Mary', u'NNP'), (u'chase', u'chase', u'VB'), (u'at', u'at', u'IN'), (u'the', u'the', u'DT'), (u'park', u'park', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'did', 'Hannah', 'and', 'Mary', 'chase', 'at', 'the', 'park', '?']}, 'answers': [{'string': ' butterflies', 'parse': {'tree': '(ROOT (NP (NNS butterflies)))', 'lemma': [(u'butterflies', u'butterfly', u'NNS')]}, 'tokens': ['butterflies']}, {'string': ' turtles', 'parse': {'tree': '(ROOT (NP (NNS turtles)))', 'lemma': [(u'turtles', u'turtle', u'NNS')]}, 'tokens': ['turtles']}, {'string': ' birds', 'parse': {'tree': '(ROOT (NP (NNS birds)))', 'lemma': [(u'birds', u'bird', u'NNS')]}, 'tokens': ['birds']}, {'string': ' ducks', 'parse': {'tree': '(ROOT (NP (NNS ducks)))', 'lemma': [(u'ducks', u'duck', u'NNS')]}, 'tokens': ['ducks']}], 'mode': 1}, {'question': {'string': " What did Hannah 's mother do with the leftovers?", 'parse': {'tree': "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD did) (NP (NP (NNP Hannah) (POS 's)) (NN mother)) (VP (VB do) (PP (IN with) (NP (DT the) (NNS leftovers))))) (. ?)))", 'lemma': [(u'What', u'what', u'WP'), (u'did', u'do', u'VBD'), (u'Hannah', u'Hannah', u'NNP'), (u"'s", u"'s", u'POS'), (u'mother', u'mother', u'NN'), (u'do', u'do', u'VB'), (u'with', u'with', u'IN'), (u'the', u'the', u'DT'), (u'leftovers', u'leftovers', u'NNS'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'did', 'Hannah', "'s", 'mother', 'do', 'with', 'the', 'leftovers', '?']}, 'answers': [{'string': ' threw it on the ground', 'parse': {'tree': '(ROOT (SINV (VP (VBD threw)) (NP (PRP it)) (PP (IN on) (NP (DT the) (NN ground)))))', 'lemma': [(u'threw', u'throw', u'VBD'), (u'it', u'it', u'PRP'), (u'on', u'on', u'IN'), (u'the', u'the', u'DT'), (u'ground', u'ground', u'NN')]}, 'tokens': ['threw', 'it', 'on', 'the', 'ground']}, {'string': ' there was no trash', 'parse': {'tree': '(ROOT (S (NP (EX there)) (VP (VBD was) (NP (DT no) (NN trash)))))', 'lemma': [(u'there', u'there', u'EX'), (u'was', u'be', u'VBD'), (u'no', u'no', u'DT'), (u'trash', u'trash', u'NN')]}, 'tokens': ['there', 'was', 'no', 'trash']}, {'string': ' Put it in the trash can', 'parse': {'tree': '(ROOT (S (VP (VB Put) (NP (PRP it)) (PP (IN in) (NP (DT the) (NN trash) (NN can))))))', 'lemma': [(u'Put', u'put', u'VB'), (u'it', u'it', u'PRP'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'trash', u'trash', u'NN'), (u'can', u'can', u'NN')]}, 'tokens': ['Put', 'it', 'in', 'the', 'trash', 'can']}, {'string': ' took it home', 'parse': {'tree': '(ROOT (SINV (VP (VBD took) (NP (PRP it))) (NP (RB home))))', 'lemma': [(u'took', u'take', u'VBD'), (u'it', u'it', u'PRP'), (u'home', u'home', u'RB')]}, 'tokens': ['took', 'it', 'home']}], 'mode': 1}, {'question': {'string': ' What did Hannah and Mary see on their way to the park?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD did) (NP (NNP Hannah) (CC and) (NNP Mary)) (VP (VB see) (PP (IN on) (NP (PRP$ their) (NN way))) (PP (TO to) (NP (DT the) (NN park))))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'did', u'do', u'VBD'), (u'Hannah', u'Hannah', u'NNP'), (u'and', u'and', u'CC'), (u'Mary', u'Mary', u'NNP'), (u'see', u'see', u'VB'), (u'on', u'on', u'IN'), (u'their', u'they', u'PRP$'), (u'way', u'way', u'NN'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'park', u'park', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'did', 'Hannah', 'and', 'Mary', 'see', 'on', 'their', 'way', 'to', 'the', 'park', '?']}, 'answers': [{'string': ' A butterfly and a bird', 'parse': {'tree': '(ROOT (NP (NP (DT A) (NN butterfly)) (CC and) (NP (DT a) (NN bird))))', 'lemma': [(u'A', u'a', u'DT'), (u'butterfly', u'butterfly', u'NN'), (u'and', u'and', u'CC'), (u'a', u'a', u'DT'), (u'bird', u'bird', u'NN')]}, 'tokens': ['A', 'butterfly', 'and', 'a', 'bird']}, {'string': ' A squirrel, a yellow bird, and pink flowers', 'parse': {'tree': '(ROOT (FRAG (NP (NP (DT A) (NN squirrel)) (, ,) (NP (DT a) (JJ yellow) (NN bird)) (, ,) (CC and) (NP (JJ pink) (NNS flowers)))))', 'lemma': [(u'A', u'a', u'DT'), (u'squirrel', u'squirrel', u'NN'), (u',', u',', u','), (u'a', u'a', u'DT'), (u'yellow', u'yellow', u'JJ'), (u'bird', u'bird', u'NN'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'pink', u'pink', u'JJ'), (u'flowers', u'flower', u'NNS')]}, 'tokens': ['A', 'squirrel', ',', 'a', 'yellow', 'bird', ',', 'and', 'pink', 'flowers']}, {'string': ' A horse', 'parse': {'tree': '(ROOT (FRAG (NP (DT A) (NN horse))))', 'lemma': [(u'A', u'a', u'DT'), (u'horse', u'horse', u'NN')]}, 'tokens': ['A', 'horse']}, {'string': ' A pink squirrel, a bird, and yellow flowers', 'parse': {'tree': '(ROOT (FRAG (NP (NP (DT A) (JJ pink) (NN squirrel)) (, ,) (NP (DT a) (NN bird)) (, ,) (CC and) (NP (JJ yellow) (NNS flowers)))))', 'lemma': [(u'A', u'a', u'DT'), (u'pink', u'pink', u'JJ'), (u'squirrel', u'squirrel', u'NN'), (u',', u',', u','), (u'a', u'a', u'DT'), (u'bird', u'bird', u'NN'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'yellow', u'yellow', u'JJ'), (u'flowers', u'flower', u'NNS')]}, 'tokens': ['A', 'pink', 'squirrel', ',', 'a', 'bird', ',', 'and', 'yellow', 'flowers']}], 'mode': 0}, {'question': {'string': ' What did Hannah and Mary do when they were bored?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD did) (NP (NNP Hannah) (CC and) (NNP Mary)) (VP (VB do) (SBAR (WHADVP (WRB when)) (S (NP (PRP they)) (VP (VBD were) (ADJP (VBN bored))))))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'did', u'do', u'VBD'), (u'Hannah', u'Hannah', u'NNP'), (u'and', u'and', u'CC'), (u'Mary', u'Mary', u'NNP'), (u'do', u'do', u'VB'), (u'when', u'when', u'WRB'), (u'they', u'they', u'PRP'), (u'were', u'be', u'VBD'), (u'bored', u'bore', u'VBN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'did', 'Hannah', 'and', 'Mary', 'do', 'when', 'they', 'were', 'bored', '?']}, 'answers': [{'string': ' sang songs and drew pictures', 'parse': {'tree': '(ROOT (SINV (VP (VP (VBD sang) (NP (NNS songs))) (CC and) (VP (VBD drew))) (NP (NNS pictures))))', 'lemma': [(u'sang', u'sing', u'VBD'), (u'songs', u'song', u'NNS'), (u'and', u'and', u'CC'), (u'drew', u'draw', u'VBD'), (u'pictures', u'picture', u'NNS')]}, 'tokens': ['sang', 'songs', 'and', 'drew', 'pictures']}, {'string': ' played games', 'parse': {'tree': '(ROOT (SINV (VP (VBD played)) (NP (NNS games))))', 'lemma': [(u'played', u'play', u'VBD'), (u'games', u'game', u'NNS')]}, 'tokens': ['played', 'games']}, {'string': ' Petted the cat and drew pictures', 'parse': {'tree': '(ROOT (S (VP (VP (VB Petted) (NP (DT the) (NN cat))) (CC and) (VP (VBD drew) (NP (NNS pictures))))))', 'lemma': [(u'Petted', u'pet', u'VB'), (u'the', u'the', u'DT'), (u'cat', u'cat', u'NN'), (u'and', u'and', u'CC'), (u'drew', u'draw', u'VBD'), (u'pictures', u'picture', u'NNS')]}, 'tokens': ['Petted', 'the', 'cat', 'and', 'drew', 'pictures']}, {'string': ' jumped rope', 'parse': {'tree': '(ROOT (SINV (VP (VBD jumped)) (NP (NN rope))))', 'lemma': [(u'jumped', u'jump', u'VBD'), (u'rope', u'rope', u'NN')]}, 'tokens': ['jumped', 'rope']}], 'mode': 0}]}
{'sentences': [{'string': ' Douglas loves to play soccer.', 'parse': {'tree': '(ROOT (S (NP (NNP Douglas)) (VP (VBZ loves) (S (VP (TO to) (VP (VB play) (NP (NN soccer)))))) (. .)))', 'lemma': [(u'Douglas', u'Douglas', u'NNP'), (u'loves', u'love', u'VBZ'), (u'to', u'to', u'TO'), (u'play', u'play', u'VB'), (u'soccer', u'soccer', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Douglas', 'loves', 'to', 'play', 'soccer', '.']}, {'string': ' He plays for the Dolphins.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBZ plays) (PP (IN for) (NP (DT the) (NNPS Dolphins)))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'plays', u'play', u'VBZ'), (u'for', u'for', u'IN'), (u'the', u'the', u'DT'), (u'Dolphins', u'Dolphins', u'NNPS'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'plays', 'for', 'the', 'Dolphins', '.']}, {'string': ' He is very good.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBZ is) (ADJP (RB very) (JJ good))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'is', u'be', u'VBZ'), (u'very', u'very', u'RB'), (u'good', u'good', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'is', 'very', 'good', '.']}, {'string': ' He was excited about the big game with the Lions.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD was) (VP (VBN excited) (PP (IN about) (NP (NP (DT the) (JJ big) (NN game)) (PP (IN with) (NP (DT the) (NNPS Lions))))))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'was', u'be', u'VBD'), (u'excited', u'excite', u'VBN'), (u'about', u'about', u'IN'), (u'the', u'the', u'DT'), (u'big', u'big', u'JJ'), (u'game', u'game', u'NN'), (u'with', u'with', u'IN'), (u'the', u'the', u'DT'), (u'Lions', u'Lions', u'NNPS'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'was', 'excited', 'about', 'the', 'big', 'game', 'with', 'the', 'Lions', '.']}, {'string': ' The night before the game, he went to bed late.', 'parse': {'tree': '(ROOT (S (NP (DT The) (NN night)) (PP (IN before) (NP (DT the) (NN game))) (, ,) (NP (PRP he)) (VP (VBD went) (PP (TO to) (NP (NN bed) (RB late)))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'night', u'night', u'NN'), (u'before', u'before', u'IN'), (u'the', u'the', u'DT'), (u'game', u'game', u'NN'), (u',', u',', u','), (u'he', u'he', u'PRP'), (u'went', u'go', u'VBD'), (u'to', u'to', u'TO'), (u'bed', u'bed', u'NN'), (u'late', u'late', u'RB'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'night', 'before', 'the', 'game', ',', 'he', 'went', 'to', 'bed', 'late', '.']}, {'string': ' He was watching three TV shows that night.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD was) (VP (VBG watching) (NP (CD three) (NN TV) (NNS shows)) (NP (DT that) (NN night)))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'was', u'be', u'VBD'), (u'watching', u'watch', u'VBG'), (u'three', u'three', u'CD'), (u'TV', u'tv', u'NN'), (u'shows', u'show', u'NNS'), (u'that', u'that', u'DT'), (u'night', u'night', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'was', 'watching', 'three', 'TV', 'shows', 'that', 'night', '.']}, {'string': ' First, was Muffins the Cat.', 'parse': {'tree': '(ROOT (S (ADVP (RB First)) (, ,) (VP (VBD was) (VP (VBG Muffins) (NP (DT the) (NN Cat)))) (. .)))', 'lemma': [(u'First', u'first', u'RB'), (u',', u',', u','), (u'was', u'be', u'VBD'), (u'Muffins', u'muffin', u'VBG'), (u'the', u'the', u'DT'), (u'Cat', u'cat', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['First', ',', 'was', 'Muffins', 'the', 'Cat', '.']}, {'string': ' The second show was Ernie the Talking Donkey.', 'parse': {'tree': '(ROOT (S (NP (DT The) (JJ second) (NN show)) (VP (VBD was) (VP (VBG Ernie) (NP (DT the) (NNP Talking) (NNP Donkey)))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'second', u'second', u'JJ'), (u'show', u'show', u'NN'), (u'was', u'be', u'VBD'), (u'Ernie', u'ernie', u'VBG'), (u'the', u'the', u'DT'), (u'Talking', u'Talking', u'NNP'), (u'Donkey', u'Donkey', u'NNP'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'second', 'show', 'was', 'Ernie', 'the', 'Talking', 'Donkey', '.']}, {'string': ' The third was Laughing with Herman Hamster.', 'parse': {'tree': '(ROOT (S (NP (DT The) (JJ third)) (VP (VBD was) (VP (VBG Laughing) (PP (IN with) (NP (NNP Herman) (NNP Hamster))))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'third', u'third', u'JJ'), (u'was', u'be', u'VBD'), (u'Laughing', u'laugh', u'VBG'), (u'with', u'with', u'IN'), (u'Herman', u'Herman', u'NNP'), (u'Hamster', u'Hamster', u'NNP'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'third', 'was', 'Laughing', 'with', 'Herman', 'Hamster', '.']}, {'string': " His Mom told him to go to bed, but Douglas did n't listen.", 'parse': {'tree': "(ROOT (S (S (NP (PRP$ His) (NN Mom)) (VP (VBD told) (S (NP (PRP him)) (VP (TO to) (VP (VB go) (PP (TO to) (NP (NN bed)))))))) (, ,) (CC but) (S (NP (NNP Douglas)) (VP (VBD did) (RB n't) (VP (VB listen)))) (. .)))", 'lemma': [(u'His', u'he', u'PRP$'), (u'Mom', u'mom', u'NN'), (u'told', u'tell', u'VBD'), (u'him', u'he', u'PRP'), (u'to', u'to', u'TO'), (u'go', u'go', u'VB'), (u'to', u'to', u'TO'), (u'bed', u'bed', u'NN'), (u',', u',', u','), (u'but', u'but', u'CC'), (u'Douglas', u'Douglas', u'NNP'), (u'did', u'do', u'VBD'), (u"n't", u'not', u'RB'), (u'listen', u'listen', u'VB'), (u'.', u'.', u'.')]}, 'tokens': ['His', 'Mom', 'told', 'him', 'to', 'go', 'to', 'bed', ',', 'but', 'Douglas', 'did', "n't", 'listen', '.']}, {'string': ' He fell asleep on the couch.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD fell) (ADJP (RB asleep)) (PP (IN on) (NP (DT the) (NN couch)))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'fell', u'fall', u'VBD'), (u'asleep', u'asleep', u'RB'), (u'on', u'on', u'IN'), (u'the', u'the', u'DT'), (u'couch', u'couch', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'fell', 'asleep', 'on', 'the', 'couch', '.']}, {'string': ' He dreamed all night.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD dreamed) (NP (DT all) (NN night))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'dreamed', u'dream', u'VBD'), (u'all', u'all', u'DT'), (u'night', u'night', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'dreamed', 'all', 'night', '.']}, {'string': ' First about sheep jumping fences.', 'parse': {'tree': '(ROOT (NP (NP (NP (NNP First)) (PP (IN about) (NP (NN sheep)))) (VP (VBG jumping) (NP (NNS fences))) (. .)))', 'lemma': [(u'First', u'First', u'NNP'), (u'about', u'about', u'IN'), (u'sheep', u'sheep', u'NN'), (u'jumping', u'jump', u'VBG'), (u'fences', u'fence', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['First', 'about', 'sheep', 'jumping', 'fences', '.']}, {'string': ' Second about playing fetch the ball with Ruffles.', 'parse': {'tree': '(ROOT (S (NP (NP (NNP Second)) (PP (IN about) (NP (NN playing)))) (VP (VBP fetch) (NP (NP (DT the) (NN ball)) (PP (IN with) (NP (NNP Ruffles))))) (. .)))', 'lemma': [(u'Second', u'Second', u'NNP'), (u'about', u'about', u'IN'), (u'playing', u'playing', u'NN'), (u'fetch', u'fetch', u'VBP'), (u'the', u'the', u'DT'), (u'ball', u'ball', u'NN'), (u'with', u'with', u'IN'), (u'Ruffles', u'Ruffles', u'NNP'), (u'.', u'.', u'.')]}, 'tokens': ['Second', 'about', 'playing', 'fetch', 'the', 'ball', 'with', 'Ruffles', '.']}, {'string': ' Third about Ernie the talking Donkey kicking a soccer ball over the moon.', 'parse': {'tree': '(ROOT (S (LST (JJ Third)) (ADVP (RB about)) (VP (VB Ernie) (NP (NP (DT the) (VBG talking) (NN Donkey)) (VP (VBG kicking) (NP (NP (DT a) (NN soccer) (NN ball)) (PP (IN over) (NP (DT the) (NN moon))))))) (. .)))', 'lemma': [(u'Third', u'third', u'JJ'), (u'about', u'about', u'RB'), (u'Ernie', u'ernie', u'VB'), (u'the', u'the', u'DT'), (u'talking', u'talk', u'VBG'), (u'Donkey', u'donkey', u'NN'), (u'kicking', u'kick', u'VBG'), (u'a', u'a', u'DT'), (u'soccer', u'soccer', u'NN'), (u'ball', u'ball', u'NN'), (u'over', u'over', u'IN'), (u'the', u'the', u'DT'), (u'moon', u'moon', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Third', 'about', 'Ernie', 'the', 'talking', 'Donkey', 'kicking', 'a', 'soccer', 'ball', 'over', 'the', 'moon', '.']}, {'string': ' Fourth about his favorite soccer player, Pele, head the ball in the goal.', 'parse': {'tree': '(ROOT (S (NP (NP (ADVP (JJ Fourth) (PP (IN about) (NP (PRP$ his) (JJ favorite) (NN soccer)))) (NN player)) (, ,) (NP (NNP Pele)) (, ,)) (VP (VBP head) (NP (NP (DT the) (NN ball)) (PP (IN in) (NP (DT the) (NN goal))))) (. .)))', 'lemma': [(u'Fourth', u'fourth', u'JJ'), (u'about', u'about', u'IN'), (u'his', u'he', u'PRP$'), (u'favorite', u'favorite', u'JJ'), (u'soccer', u'soccer', u'NN'), (u'player', u'player', u'NN'), (u',', u',', u','), (u'Pele', u'Pele', u'NNP'), (u',', u',', u','), (u'head', u'head', u'VBP'), (u'the', u'the', u'DT'), (u'ball', u'ball', u'NN'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'goal', u'goal', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Fourth', 'about', 'his', 'favorite', 'soccer', 'player', ',', 'Pele', ',', 'head', 'the', 'ball', 'in', 'the', 'goal', '.']}, {'string': ' Finally, the next morning, Douglas got up late because he was so tired.', 'parse': {'tree': '(ROOT (S (ADVP (RB Finally)) (, ,) (NP (DT the) (JJ next) (NN morning)) (, ,) (NP (NNP Douglas)) (VP (VBD got) (ADVP (RB up) (RB late)) (SBAR (IN because) (S (NP (PRP he)) (VP (VBD was) (ADJP (RB so) (JJ tired)))))) (. .)))', 'lemma': [(u'Finally', u'finally', u'RB'), (u',', u',', u','), (u'the', u'the', u'DT'), (u'next', u'next', u'JJ'), (u'morning', u'morning', u'NN'), (u',', u',', u','), (u'Douglas', u'Douglas', u'NNP'), (u'got', u'get', u'VBD'), (u'up', u'up', u'RB'), (u'late', u'late', u'RB'), (u'because', u'because', u'IN'), (u'he', u'he', u'PRP'), (u'was', u'be', u'VBD'), (u'so', u'so', u'RB'), (u'tired', u'tired', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['Finally', ',', 'the', 'next', 'morning', ',', 'Douglas', 'got', 'up', 'late', 'because', 'he', 'was', 'so', 'tired', '.']}, {'string': ' His Mom called him and the alarm went off, but he did not hear.', 'parse': {'tree': '(ROOT (S (S (S (NP (PRP$ His) (NN Mom)) (VP (VBD called) (NP (PRP him)))) (CC and) (S (NP (DT the) (NN alarm)) (VP (VBD went) (PRT (RP off))))) (, ,) (CC but) (S (NP (PRP he)) (VP (VBD did) (RB not) (VP (VB hear)))) (. .)))', 'lemma': [(u'His', u'he', u'PRP$'), (u'Mom', u'mom', u'NN'), (u'called', u'call', u'VBD'), (u'him', u'he', u'PRP'), (u'and', u'and', u'CC'), (u'the', u'the', u'DT'), (u'alarm', u'alarm', u'NN'), (u'went', u'go', u'VBD'), (u'off', u'off', u'RP'), (u',', u',', u','), (u'but', u'but', u'CC'), (u'he', u'he', u'PRP'), (u'did', u'do', u'VBD'), (u'not', u'not', u'RB'), (u'hear', u'hear', u'VB'), (u'.', u'.', u'.')]}, 'tokens': ['His', 'Mom', 'called', 'him', 'and', 'the', 'alarm', 'went', 'off', ',', 'but', 'he', 'did', 'not', 'hear', '.']}, {'string': ' To get Douglas up, his Mom got Ruffles the dog to lick him in the face.', 'parse': {'tree': '(ROOT (S (S (VP (TO To) (VP (VB get) (NP (NNP Douglas)) (PRT (RP up))))) (, ,) (NP (PRP$ his) (NN Mom)) (VP (VBD got) (NP (NNP Ruffles) (DT the) (NN dog)) (S (VP (TO to) (VP (VB lick) (NP (PRP him)) (PP (IN in) (NP (DT the) (NN face))))))) (. .)))', 'lemma': [(u'To', u'to', u'TO'), (u'get', u'get', u'VB'), (u'Douglas', u'Douglas', u'NNP'), (u'up', u'up', u'RP'), (u',', u',', u','), (u'his', u'he', u'PRP$'), (u'Mom', u'mom', u'NN'), (u'got', u'get', u'VBD'), (u'Ruffles', u'Ruffles', u'NNP'), (u'the', u'the', u'DT'), (u'dog', u'dog', u'NN'), (u'to', u'to', u'TO'), (u'lick', u'lick', u'VB'), (u'him', u'he', u'PRP'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'face', u'face', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['To', 'get', 'Douglas', 'up', ',', 'his', 'Mom', 'got', 'Ruffles', 'the', 'dog', 'to', 'lick', 'him', 'in', 'the', 'face', '.']}, {'string': ' Douglas got up but had to eat breakfast fast.', 'parse': {'tree': '(ROOT (S (NP (NNP Douglas)) (VP (VP (VBD got) (PRT (RP up))) (CC but) (VP (VBD had) (S (VP (TO to) (VP (VB eat) (NP (NN breakfast)) (ADVP (RB fast))))))) (. .)))', 'lemma': [(u'Douglas', u'Douglas', u'NNP'), (u'got', u'get', u'VBD'), (u'up', u'up', u'RP'), (u'but', u'but', u'CC'), (u'had', u'have', u'VBD'), (u'to', u'to', u'TO'), (u'eat', u'eat', u'VB'), (u'breakfast', u'breakfast', u'NN'), (u'fast', u'fast', u'RB'), (u'.', u'.', u'.')]}, 'tokens': ['Douglas', 'got', 'up', 'but', 'had', 'to', 'eat', 'breakfast', 'fast', '.']}, {'string': ' Then he quickly dressed into his uniform.', 'parse': {'tree': '(ROOT (S (RB Then) (NP (PRP he)) (VP (ADVP (RB quickly)) (VBD dressed) (PP (IN into) (NP (PRP$ his) (NN uniform)))) (. .)))', 'lemma': [(u'Then', u'then', u'RB'), (u'he', u'he', u'PRP'), (u'quickly', u'quickly', u'RB'), (u'dressed', u'dress', u'VBD'), (u'into', u'into', u'IN'), (u'his', u'he', u'PRP$'), (u'uniform', u'uniform', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Then', 'he', 'quickly', 'dressed', 'into', 'his', 'uniform', '.']}, {'string': ' He was yawning.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD was) (VP (VBG yawning))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'was', u'be', u'VBD'), (u'yawning', u'yawn', u'VBG'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'was', 'yawning', '.']}, {'string': ' His Mom drove him to the soccer field.', 'parse': {'tree': '(ROOT (S (NP (PRP$ His) (NN Mom)) (VP (VBD drove) (NP (PRP him)) (PP (TO to) (NP (DT the) (NN soccer) (NN field)))) (. .)))', 'lemma': [(u'His', u'he', u'PRP$'), (u'Mom', u'mom', u'NN'), (u'drove', u'drive', u'VBD'), (u'him', u'he', u'PRP'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'soccer', u'soccer', u'NN'), (u'field', u'field', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['His', 'Mom', 'drove', 'him', 'to', 'the', 'soccer', 'field', '.']}, {'string': ' The game had started.', 'parse': {'tree': '(ROOT (S (NP (DT The) (NN game)) (VP (VBD had) (VP (VBN started))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'game', u'game', u'NN'), (u'had', u'have', u'VBD'), (u'started', u'start', u'VBN'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'game', 'had', 'started', '.']}, {'string': ' Douglas had to sit out the first quarter.', 'parse': {'tree': '(ROOT (S (NP (NNP Douglas)) (VP (VBD had) (S (VP (TO to) (VP (VB sit) (PRT (RP out)) (NP (DT the) (JJ first) (NN quarter)))))) (. .)))', 'lemma': [(u'Douglas', u'Douglas', u'NNP'), (u'had', u'have', u'VBD'), (u'to', u'to', u'TO'), (u'sit', u'sit', u'VB'), (u'out', u'out', u'RP'), (u'the', u'the', u'DT'), (u'first', u'first', u'JJ'), (u'quarter', u'quarter', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Douglas', 'had', 'to', 'sit', 'out', 'the', 'first', 'quarter', '.']}, {'string': ' His team was losing one to nothing when Howard scored for the Lions.', 'parse': {'tree': '(ROOT (S (NP (PRP$ His) (NN team)) (VP (VBD was) (VP (VBG losing) (NP (CD one)) (PP (TO to) (NP (NN nothing))) (SBAR (WHADVP (WRB when)) (S (NP (NNP Howard)) (VP (VBD scored) (PP (IN for) (NP (DT the) (NNPS Lions)))))))) (. .)))', 'lemma': [(u'His', u'he', u'PRP$'), (u'team', u'team', u'NN'), (u'was', u'be', u'VBD'), (u'losing', u'lose', u'VBG'), (u'one', u'one', u'CD'), (u'to', u'to', u'TO'), (u'nothing', u'nothing', u'NN'), (u'when', u'when', u'WRB'), (u'Howard', u'Howard', u'NNP'), (u'scored', u'score', u'VBD'), (u'for', u'for', u'IN'), (u'the', u'the', u'DT'), (u'Lions', u'Lions', u'NNPS'), (u'.', u'.', u'.')]}, 'tokens': ['His', 'team', 'was', 'losing', 'one', 'to', 'nothing', 'when', 'Howard', 'scored', 'for', 'the', 'Lions', '.']}, {'string': ' Douglas started the second quarter.', 'parse': {'tree': '(ROOT (S (NP (NNP Douglas)) (VP (VBD started) (NP (DT the) (JJ second) (NN quarter))) (. .)))', 'lemma': [(u'Douglas', u'Douglas', u'NNP'), (u'started', u'start', u'VBD'), (u'the', u'the', u'DT'), (u'second', u'second', u'JJ'), (u'quarter', u'quarter', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Douglas', 'started', 'the', 'second', 'quarter', '.']}, {'string': ' He was tired and could not keep up with the rest of his team.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VP (VBD was) (ADJP (JJ tired))) (CC and) (VP (MD could) (RB not) (VP (VB keep) (PRT (RP up)) (PP (IN with) (NP (NP (DT the) (NN rest)) (PP (IN of) (NP (PRP$ his) (NN team)))))))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'was', u'be', u'VBD'), (u'tired', u'tired', u'JJ'), (u'and', u'and', u'CC'), (u'could', u'could', u'MD'), (u'not', u'not', u'RB'), (u'keep', u'keep', u'VB'), (u'up', u'up', u'RP'), (u'with', u'with', u'IN'), (u'the', u'the', u'DT'), (u'rest', u'rest', u'NN'), (u'of', u'of', u'IN'), (u'his', u'he', u'PRP$'), (u'team', u'team', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'was', 'tired', 'and', 'could', 'not', 'keep', 'up', 'with', 'the', 'rest', 'of', 'his', 'team', '.']}, {'string': ' The coach was surprised that Douglas was so slow.', 'parse': {'tree': '(ROOT (S (NP (DT The) (NN coach)) (VP (VBD was) (VP (VBN surprised) (SBAR (IN that) (S (NP (NNP Douglas)) (VP (VBD was) (ADJP (RB so) (JJ slow))))))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'coach', u'coach', u'NN'), (u'was', u'be', u'VBD'), (u'surprised', u'surprise', u'VBN'), (u'that', u'that', u'IN'), (u'Douglas', u'Douglas', u'NNP'), (u'was', u'be', u'VBD'), (u'so', u'so', u'RB'), (u'slow', u'slow', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'coach', 'was', 'surprised', 'that', 'Douglas', 'was', 'so', 'slow', '.']}, {'string': ' Usually he was fast.', 'parse': {'tree': '(ROOT (S (ADVP (RB Usually)) (NP (PRP he)) (VP (VBD was) (ADJP (JJ fast))) (. .)))', 'lemma': [(u'Usually', u'usually', u'RB'), (u'he', u'he', u'PRP'), (u'was', u'be', u'VBD'), (u'fast', u'fast', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['Usually', 'he', 'was', 'fast', '.']}, {'string': ' After the second quarter, the Dolphins were losing two to one after Howard scored again for the Lions and Toby scored a goal for the Dolphins.', 'parse': {'tree': '(ROOT (S (PP (IN After) (NP (DT the) (JJ second) (NN quarter))) (, ,) (NP (DT the) (NNPS Dolphins)) (VP (VBD were) (VP (VBG losing) (NP (CD two)) (PP (TO to) (NP (CD one))) (SBAR (IN after) (S (NP (NNP Howard)) (VP (VBD scored) (ADVP (RB again)) (SBAR (IN for) (S (NP (DT the) (NNP Lions) (CC and) (NNP Toby)) (VP (VBD scored) (NP (DT a) (NN goal)) (PP (IN for) (NP (DT the) (NNPS Dolphins))))))))))) (. .)))', 'lemma': [(u'After', u'after', u'IN'), (u'the', u'the', u'DT'), (u'second', u'second', u'JJ'), (u'quarter', u'quarter', u'NN'), (u',', u',', u','), (u'the', u'the', u'DT'), (u'Dolphins', u'Dolphins', u'NNPS'), (u'were', u'be', u'VBD'), (u'losing', u'lose', u'VBG'), (u'two', u'two', u'CD'), (u'to', u'to', u'TO'), (u'one', u'one', u'CD'), (u'after', u'after', u'IN'), (u'Howard', u'Howard', u'NNP'), (u'scored', u'score', u'VBD'), (u'again', u'again', u'RB'), (u'for', u'for', u'IN'), (u'the', u'the', u'DT'), (u'Lions', u'Lions', u'NNP'), (u'and', u'and', u'CC'), (u'Toby', u'Toby', u'NNP'), (u'scored', u'score', u'VBD'), (u'a', u'a', u'DT'), (u'goal', u'goal', u'NN'), (u'for', u'for', u'IN'), (u'the', u'the', u'DT'), (u'Dolphins', u'Dolphins', u'NNPS'), (u'.', u'.', u'.')]}, 'tokens': ['After', 'the', 'second', 'quarter', ',', 'the', 'Dolphins', 'were', 'losing', 'two', 'to', 'one', 'after', 'Howard', 'scored', 'again', 'for', 'the', 'Lions', 'and', 'Toby', 'scored', 'a', 'goal', 'for', 'the', 'Dolphins', '.']}, {'string': ' While the coach gave energy drinks to the team, Douglas fell asleep.', 'parse': {'tree': '(ROOT (S (SBAR (IN While) (S (NP (DT the) (NN coach)) (VP (VBD gave) (NP (NN energy) (NNS drinks)) (PP (TO to) (NP (DT the) (NN team)))))) (, ,) (NP (NNP Douglas)) (VP (VBD fell) (ADJP (RB asleep))) (. .)))', 'lemma': [(u'While', u'while', u'IN'), (u'the', u'the', u'DT'), (u'coach', u'coach', u'NN'), (u'gave', u'give', u'VBD'), (u'energy', u'energy', u'NN'), (u'drinks', u'drink', u'NNS'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'team', u'team', u'NN'), (u',', u',', u','), (u'Douglas', u'Douglas', u'NNP'), (u'fell', u'fall', u'VBD'), (u'asleep', u'asleep', u'RB'), (u'.', u'.', u'.')]}, 'tokens': ['While', 'the', 'coach', 'gave', 'energy', 'drinks', 'to', 'the', 'team', ',', 'Douglas', 'fell', 'asleep', '.']}, {'string': ' The third quarter started.', 'parse': {'tree': '(ROOT (S (NP (DT The) (JJ third) (NN quarter)) (VP (VBD started)) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'third', u'third', u'JJ'), (u'quarter', u'quarter', u'NN'), (u'started', u'start', u'VBD'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'third', 'quarter', 'started', '.']}, {'string': ' Douglas was snoring when the coach told him to go in.', 'parse': {'tree': '(ROOT (S (NP (NNP Douglas)) (VP (VBD was) (VP (VBG snoring) (SBAR (WHADVP (WRB when)) (S (NP (DT the) (NN coach)) (VP (VBD told) (S (NP (PRP him)) (VP (TO to) (VP (VB go) (PRT (RP in)))))))))) (. .)))', 'lemma': [(u'Douglas', u'Douglas', u'NNP'), (u'was', u'be', u'VBD'), (u'snoring', u'snore', u'VBG'), (u'when', u'when', u'WRB'), (u'the', u'the', u'DT'), (u'coach', u'coach', u'NN'), (u'told', u'tell', u'VBD'), (u'him', u'he', u'PRP'), (u'to', u'to', u'TO'), (u'go', u'go', u'VB'), (u'in', u'in', u'RP'), (u'.', u'.', u'.')]}, 'tokens': ['Douglas', 'was', 'snoring', 'when', 'the', 'coach', 'told', 'him', 'to', 'go', 'in', '.']}, {'string': ' When he saw Douglas was sleeping, he sent Billy into the game.', 'parse': {'tree': '(ROOT (S (SBAR (WHADVP (WRB When)) (S (NP (PRP he)) (VP (VBD saw) (SBAR (S (NP (NNP Douglas)) (VP (VBD was) (VP (VBG sleeping)))))))) (, ,) (NP (PRP he)) (VP (VBD sent) (NP (NNP Billy)) (PP (IN into) (NP (DT the) (NN game)))) (. .)))', 'lemma': [(u'When', u'when', u'WRB'), (u'he', u'he', u'PRP'), (u'saw', u'see', u'VBD'), (u'Douglas', u'Douglas', u'NNP'), (u'was', u'be', u'VBD'), (u'sleeping', u'sleep', u'VBG'), (u',', u',', u','), (u'he', u'he', u'PRP'), (u'sent', u'send', u'VBD'), (u'Billy', u'Billy', u'NNP'), (u'into', u'into', u'IN'), (u'the', u'the', u'DT'), (u'game', u'game', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['When', 'he', 'saw', 'Douglas', 'was', 'sleeping', ',', 'he', 'sent', 'Billy', 'into', 'the', 'game', '.']}, {'string': ' Billy scored one goal and the Dolphins had tied the game two to two.', 'parse': {'tree': '(ROOT (S (NP (NNP Billy)) (VP (VBD scored) (SBAR (S (NP (NP (CD one) (NN goal)) (CC and) (NP (DT the) (NNPS Dolphins))) (VP (VBD had) (VP (VBN tied) (NP (DT the) (NN game) (CD two)) (PP (TO to) (NP (CD two)))))))) (. .)))', 'lemma': [(u'Billy', u'Billy', u'NNP'), (u'scored', u'score', u'VBD'), (u'one', u'one', u'CD'), (u'goal', u'goal', u'NN'), (u'and', u'and', u'CC'), (u'the', u'the', u'DT'), (u'Dolphins', u'Dolphins', u'NNPS'), (u'had', u'have', u'VBD'), (u'tied', u'tie', u'VBN'), (u'the', u'the', u'DT'), (u'game', u'game', u'NN'), (u'two', u'two', u'CD'), (u'to', u'to', u'TO'), (u'two', u'two', u'CD'), (u'.', u'.', u'.')]}, 'tokens': ['Billy', 'scored', 'one', 'goal', 'and', 'the', 'Dolphins', 'had', 'tied', 'the', 'game', 'two', 'to', 'two', '.']}, {'string': ' Ruffles the dog started barking and then licking Douglas in the face.', 'parse': {'tree': '(ROOT (S (ADVP (RB Ruffles)) (NP (DT the) (NN dog)) (VP (VBD started) (S (VP (VP (VBG barking)) (CC and) (VP (ADVP (RB then)) (VBG licking) (NP (NP (NNP Douglas)) (PP (IN in) (NP (DT the) (NN face)))))))) (. .)))', 'lemma': [(u'Ruffles', u'ruffles', u'RB'), (u'the', u'the', u'DT'), (u'dog', u'dog', u'NN'), (u'started', u'start', u'VBD'), (u'barking', u'bark', u'VBG'), (u'and', u'and', u'CC'), (u'then', u'then', u'RB'), (u'licking', u'lick', u'VBG'), (u'Douglas', u'Douglas', u'NNP'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'face', u'face', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Ruffles', 'the', 'dog', 'started', 'barking', 'and', 'then', 'licking', 'Douglas', 'in', 'the', 'face', '.']}, {'string': ' Douglas got up and stretched.', 'parse': {'tree': '(ROOT (S (NP (NNP Douglas)) (VP (VP (VBD got) (PRT (RP up))) (CC and) (VP (VBD stretched))) (. .)))', 'lemma': [(u'Douglas', u'Douglas', u'NNP'), (u'got', u'get', u'VBD'), (u'up', u'up', u'RP'), (u'and', u'and', u'CC'), (u'stretched', u'stretch', u'VBD'), (u'.', u'.', u'.')]}, 'tokens': ['Douglas', 'got', 'up', 'and', 'stretched', '.']}, {'string': ' He was finally well rested.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD was) (ADVP (RB finally)) (ADJP (RB well) (JJ rested))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'was', u'be', u'VBD'), (u'finally', u'finally', u'RB'), (u'well', u'well', u'RB'), (u'rested', u'rested', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'was', 'finally', 'well', 'rested', '.']}, {'string': ' The coach saw Douglas and sent him into the game.', 'parse': {'tree': '(ROOT (S (NP (DT The) (NN coach)) (VP (VP (VBD saw) (NP (NNP Douglas))) (CC and) (VP (VBD sent) (NP (PRP him)) (PP (IN into) (NP (DT the) (NN game))))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'coach', u'coach', u'NN'), (u'saw', u'see', u'VBD'), (u'Douglas', u'Douglas', u'NNP'), (u'and', u'and', u'CC'), (u'sent', u'send', u'VBD'), (u'him', u'he', u'PRP'), (u'into', u'into', u'IN'), (u'the', u'the', u'DT'), (u'game', u'game', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'coach', 'saw', 'Douglas', 'and', 'sent', 'him', 'into', 'the', 'game', '.']}, {'string': ' Douglas remembered his dream.', 'parse': {'tree': '(ROOT (S (NP (NNP Douglas)) (VP (VBD remembered) (NP (PRP$ his) (NN dream))) (. .)))', 'lemma': [(u'Douglas', u'Douglas', u'NNP'), (u'remembered', u'remember', u'VBD'), (u'his', u'he', u'PRP$'), (u'dream', u'dream', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Douglas', 'remembered', 'his', 'dream', '.']}, {'string': ' In the last second, he headed the ball in the goal like Pele.', 'parse': {'tree': '(ROOT (S (PP (IN In) (NP (DT the) (JJ last) (NN second))) (, ,) (NP (PRP he)) (VP (VBD headed) (NP (DT the) (NN ball)) (PP (IN in) (NP (DT the) (NN goal))) (PP (IN like) (NP (NNP Pele)))) (. .)))', 'lemma': [(u'In', u'in', u'IN'), (u'the', u'the', u'DT'), (u'last', u'last', u'JJ'), (u'second', u'second', u'NN'), (u',', u',', u','), (u'he', u'he', u'PRP'), (u'headed', u'head', u'VBD'), (u'the', u'the', u'DT'), (u'ball', u'ball', u'NN'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'goal', u'goal', u'NN'), (u'like', u'like', u'IN'), (u'Pele', u'Pele', u'NNP'), (u'.', u'.', u'.')]}, 'tokens': ['In', 'the', 'last', 'second', ',', 'he', 'headed', 'the', 'ball', 'in', 'the', 'goal', 'like', 'Pele', '.']}, {'string': ' He won the game.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD won) (NP (DT the) (NN game))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'won', u'win', u'VBD'), (u'the', u'the', u'DT'), (u'game', u'game', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'won', 'the', 'game', '.']}, {'string': ' The team cheered.', 'parse': {'tree': '(ROOT (S (NP (DT The) (NN team)) (VP (VBD cheered)) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'team', u'team', u'NN'), (u'cheered', u'cheer', u'VBD'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'team', 'cheered', '.']}, {'string': ' Since that time, Douglas goes to bed on time.', 'parse': {'tree': '(ROOT (S (PP (IN Since) (NP (DT that) (NN time))) (, ,) (NP (NNP Douglas)) (VP (VBZ goes) (PP (TO to) (NP (NN bed))) (PP (IN on) (NP (NN time)))) (. .)))', 'lemma': [(u'Since', u'since', u'IN'), (u'that', u'that', u'DT'), (u'time', u'time', u'NN'), (u',', u',', u','), (u'Douglas', u'Douglas', u'NNP'), (u'goes', u'go', u'VBZ'), (u'to', u'to', u'TO'), (u'bed', u'bed', u'NN'), (u'on', u'on', u'IN'), (u'time', u'time', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Since', 'that', 'time', ',', 'Douglas', 'goes', 'to', 'bed', 'on', 'time', '.']}, {'string': ' He always wants to be well rested.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (ADVP (RB always)) (VP (VBZ wants) (S (VP (TO to) (VP (VB be) (ADJP (RB well) (JJ rested)))))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'always', u'always', u'RB'), (u'wants', u'want', u'VBZ'), (u'to', u'to', u'TO'), (u'be', u'be', u'VB'), (u'well', u'well', u'RB'), (u'rested', u'rested', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'always', 'wants', 'to', 'be', 'well', 'rested', '.']}, {'string': ' His Mom was right.', 'parse': {'tree': '(ROOT (S (NP (PRP$ His) (NN Mom)) (VP (VBD was) (ADJP (JJ right))) (. .)))', 'lemma': [(u'His', u'he', u'PRP$'), (u'Mom', u'mom', u'NN'), (u'was', u'be', u'VBD'), (u'right', u'right', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['His', 'Mom', 'was', 'right', '.']}, {'string': ' He gave her a hug.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD gave) (NP (PRP her)) (NP (DT a) (NN hug))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'gave', u'give', u'VBD'), (u'her', u'she', u'PRP'), (u'a', u'a', u'DT'), (u'hug', u'hug', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'gave', 'her', 'a', 'hug', '.']}], 'questions': [{'question': {'string': ' What dream helped Douglas win the game?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WDT What) (NN dream)) (SQ (VP (VBD helped) (S (NP (NNP Douglas)) (VP (VB win) (NP (DT the) (NN game)))))) (. ?)))', 'lemma': [(u'What', u'what', u'WDT'), (u'dream', u'dream', u'NN'), (u'helped', u'help', u'VBD'), (u'Douglas', u'Douglas', u'NNP'), (u'win', u'win', u'VB'), (u'the', u'the', u'DT'), (u'game', u'game', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'dream', 'helped', 'Douglas', 'win', 'the', 'game', '?']}, 'answers': [{'string': ' He dreamed about Ernie the donkey kick the ball over the moon.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD dreamed) (PP (IN about) (NP (NNP Ernie))) (SBAR (S (NP (DT the) (NN donkey)) (VP (VBP kick) (NP (NP (DT the) (NN ball)) (PP (IN over) (NP (DT the) (NN moon)))))))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'dreamed', u'dream', u'VBD'), (u'about', u'about', u'IN'), (u'Ernie', u'Ernie', u'NNP'), (u'the', u'the', u'DT'), (u'donkey', u'donkey', u'NN'), (u'kick', u'kick', u'VBP'), (u'the', u'the', u'DT'), (u'ball', u'ball', u'NN'), (u'over', u'over', u'IN'), (u'the', u'the', u'DT'), (u'moon', u'moon', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'dreamed', 'about', 'Ernie', 'the', 'donkey', 'kick', 'the', 'ball', 'over', 'the', 'moon', '.']}, {'string': ' He dreamed about Pele heading the ball in the goal.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD dreamed) (PP (IN about) (NP (NNP Pele))) (S (VP (VBG heading) (NP (DT the) (NN ball)) (PP (IN in) (NP (DT the) (NN goal)))))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'dreamed', u'dream', u'VBD'), (u'about', u'about', u'IN'), (u'Pele', u'Pele', u'NNP'), (u'heading', u'head', u'VBG'), (u'the', u'the', u'DT'), (u'ball', u'ball', u'NN'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'goal', u'goal', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'dreamed', 'about', 'Pele', 'heading', 'the', 'ball', 'in', 'the', 'goal', '.']}, {'string': ' He dreamed about Ruffles fetching the ball.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD dreamed) (PP (IN about) (NP (NNP Ruffles))) (S (VP (VBG fetching) (NP (DT the) (NN ball))))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'dreamed', u'dream', u'VBD'), (u'about', u'about', u'IN'), (u'Ruffles', u'Ruffles', u'NNP'), (u'fetching', u'fetch', u'VBG'), (u'the', u'the', u'DT'), (u'ball', u'ball', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'dreamed', 'about', 'Ruffles', 'fetching', 'the', 'ball', '.']}, {'string': ' He dreamed about sheep jumping over fences.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD dreamed) (PP (IN about) (NP (NN sheep))) (S (VP (VBG jumping) (PRT (RP over)) (NP (NNS fences))))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'dreamed', u'dream', u'VBD'), (u'about', u'about', u'IN'), (u'sheep', u'sheep', u'NN'), (u'jumping', u'jump', u'VBG'), (u'over', u'over', u'RP'), (u'fences', u'fence', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'dreamed', 'about', 'sheep', 'jumping', 'over', 'fences', '.']}], 'mode': 0}, {'question': {'string': ' Who woke Douglas up by licking him in the face?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP Who)) (SQ (VP (VBD woke) (NP (NNP Douglas)) (PRT (RP up)) (PP (IN by) (S (VP (VBG licking) (NP (PRP him)) (PP (IN in) (NP (DT the) (NN face)))))))) (. ?)))', 'lemma': [(u'Who', u'who', u'WP'), (u'woke', u'wake', u'VBD'), (u'Douglas', u'Douglas', u'NNP'), (u'up', u'up', u'RP'), (u'by', u'by', u'IN'), (u'licking', u'lick', u'VBG'), (u'him', u'he', u'PRP'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'face', u'face', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['Who', 'woke', 'Douglas', 'up', 'by', 'licking', 'him', 'in', 'the', 'face', '?']}, 'answers': [{'string': ' Muffin the cat.', 'parse': {'tree': '(ROOT (NP (NP (NNP Muffin)) (NP (DT the) (NN cat)) (. .)))', 'lemma': [(u'Muffin', u'Muffin', u'NNP'), (u'the', u'the', u'DT'), (u'cat', u'cat', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Muffin', 'the', 'cat', '.']}, {'string': ' Herman the hamster.', 'parse': {'tree': '(ROOT (NP (NP (NNP Herman)) (NP (DT the) (NN hamster)) (. .)))', 'lemma': [(u'Herman', u'Herman', u'NNP'), (u'the', u'the', u'DT'), (u'hamster', u'hamster', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Herman', 'the', 'hamster', '.']}, {'string': ' Ernie the donkey.', 'parse': {'tree': '(ROOT (S (VP (VB Ernie) (NP (DT the) (NN donkey))) (. .)))', 'lemma': [(u'Ernie', u'ernie', u'VB'), (u'the', u'the', u'DT'), (u'donkey', u'donkey', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Ernie', 'the', 'donkey', '.']}, {'string': ' Ruffles the dog.', 'parse': {'tree': '(ROOT (S (VP (VB Ruffles) (NP (DT the) (NN dog))) (. .)))', 'lemma': [(u'Ruffles', u'ruffle', u'VB'), (u'the', u'the', u'DT'), (u'dog', u'dog', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Ruffles', 'the', 'dog', '.']}], 'mode': 1}, {'question': {'string': ' How many points did the Dolphins score and who scored the goals?', 'parse': {'tree': '(ROOT (SBARQ (SBARQ (WHNP (WHADJP (WRB How) (JJ many)) (NNS points)) (SQ (VBD did) (NP (DT the) (NNPS Dolphins)) (VP (VBP score)))) (CC and) (SBARQ (WHNP (WP who)) (SQ (VP (VBD scored) (NP (DT the) (NNS goals)))) (. ?))))', 'lemma': [(u'How', u'how', u'WRB'), (u'many', u'many', u'JJ'), (u'points', u'point', u'NNS'), (u'did', u'do', u'VBD'), (u'the', u'the', u'DT'), (u'Dolphins', u'Dolphins', u'NNPS'), (u'score', u'score', u'VBP'), (u'and', u'and', u'CC'), (u'who', u'who', u'WP'), (u'scored', u'score', u'VBD'), (u'the', u'the', u'DT'), (u'goals', u'goal', u'NNS'), (u'?', u'?', u'.')]}, 'tokens': ['How', 'many', 'points', 'did', 'the', 'Dolphins', 'score', 'and', 'who', 'scored', 'the', 'goals', '?']}, 'answers': [{'string': ' They scored two points. Ruffles and Billy scored.', 'parse': {'tree': '(ROOT (S (S (NP (PRP They)) (VP (VBD scored) (NP (CD two) (NNS points))) (. .)) (NP (NNP Ruffles) (CC and) (NNP Billy)) (VP (VBD scored)) (. .)))', 'lemma': [(u'They', u'they', u'PRP'), (u'scored', u'score', u'VBD'), (u'two', u'two', u'CD'), (u'points', u'point', u'NNS'), (u'.', u'.', u'.'), (u'Ruffles', u'Ruffles', u'NNP'), (u'and', u'and', u'CC'), (u'Billy', u'Billy', u'NNP'), (u'scored', u'score', u'VBD'), (u'.', u'.', u'.')]}, 'tokens': ['They', 'scored', 'two', 'points', '.', 'Ruffles', 'and', 'Billy', 'scored', '.']}, {'string': ' They scored three points. Toby, Billy and Douglas scored.', 'parse': {'tree': '(ROOT (S (S (NP (PRP They)) (VP (VBD scored) (NP (CD three) (NNS points))) (. .)) (NP (NNP Toby) (, ,) (NNP Billy) (CC and) (NNP Douglas)) (VP (VBD scored)) (. .)))', 'lemma': [(u'They', u'they', u'PRP'), (u'scored', u'score', u'VBD'), (u'three', u'three', u'CD'), (u'points', u'point', u'NNS'), (u'.', u'.', u'.'), (u'Toby', u'Toby', u'NNP'), (u',', u',', u','), (u'Billy', u'Billy', u'NNP'), (u'and', u'and', u'CC'), (u'Douglas', u'Douglas', u'NNP'), (u'scored', u'score', u'VBD'), (u'.', u'.', u'.')]}, 'tokens': ['They', 'scored', 'three', 'points', '.', 'Toby', ',', 'Billy', 'and', 'Douglas', 'scored', '.']}, {'string': ' They scored five points. Howard, Billy, Ruffles, Douglas, and Billy scored.', 'parse': {'tree': '(ROOT (S (NP (PRP They)) (VP (VBD scored) (NP (NP (CD five) (NNS points)) (. .) (NP (NNP Howard) (, ,) (NNP Billy)) (, ,) (SBAR (S (NP (NNP Ruffles) (, ,) (NNP Douglas) (, ,) (CC and) (NNP Billy)) (VP (VBD scored)))))) (. .)))', 'lemma': [(u'They', u'they', u'PRP'), (u'scored', u'score', u'VBD'), (u'five', u'five', u'CD'), (u'points', u'point', u'NNS'), (u'.', u'.', u'.'), (u'Howard', u'Howard', u'NNP'), (u',', u',', u','), (u'Billy', u'Billy', u'NNP'), (u',', u',', u','), (u'Ruffles', u'Ruffles', u'NNP'), (u',', u',', u','), (u'Douglas', u'Douglas', u'NNP'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'Billy', u'Billy', u'NNP'), (u'scored', u'score', u'VBD'), (u'.', u'.', u'.')]}, 'tokens': ['They', 'scored', 'five', 'points', '.', 'Howard', ',', 'Billy', ',', 'Ruffles', ',', 'Douglas', ',', 'and', 'Billy', 'scored', '.']}, {'string': ' They scored one point. Toby scored.', 'parse': {'tree': '(ROOT (S (NP (PRP They)) (VP (VBD scored) (NP (NP (CD one)) (SBAR (S (NP (NN point) (. .) (NNP Toby)) (VP (VBD scored)))))) (. .)))', 'lemma': [(u'They', u'they', u'PRP'), (u'scored', u'score', u'VBD'), (u'one', u'one', u'CD'), (u'point', u'point', u'NN'), (u'.', u'.', u'.'), (u'Toby', u'Toby', u'NNP'), (u'scored', u'score', u'VBD'), (u'.', u'.', u'.')]}, 'tokens': ['They', 'scored', 'one', 'point', '.', 'Toby', 'scored', '.']}], 'mode': 0}, {'question': {'string': ' What game does Douglas love to play?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WDT What) (NN game)) (SQ (VBZ does) (NP (NNP Douglas)) (VP (VB love) (S (VP (TO to) (VP (VB play)))))) (. ?)))', 'lemma': [(u'What', u'what', u'WDT'), (u'game', u'game', u'NN'), (u'does', u'do', u'VBZ'), (u'Douglas', u'Douglas', u'NNP'), (u'love', u'love', u'VB'), (u'to', u'to', u'TO'), (u'play', u'play', u'VB'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'game', 'does', 'Douglas', 'love', 'to', 'play', '?']}, 'answers': [{'string': ' Douglas loves to play baseball.', 'parse': {'tree': '(ROOT (S (NP (NNP Douglas)) (VP (VBZ loves) (S (VP (TO to) (VP (VB play) (NP (NN baseball)))))) (. .)))', 'lemma': [(u'Douglas', u'Douglas', u'NNP'), (u'loves', u'love', u'VBZ'), (u'to', u'to', u'TO'), (u'play', u'play', u'VB'), (u'baseball', u'baseball', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Douglas', 'loves', 'to', 'play', 'baseball', '.']}, {'string': ' Douglas loves to play soccer.', 'parse': {'tree': '(ROOT (S (NP (NNP Douglas)) (VP (VBZ loves) (S (VP (TO to) (VP (VB play) (NP (NN soccer)))))) (. .)))', 'lemma': [(u'Douglas', u'Douglas', u'NNP'), (u'loves', u'love', u'VBZ'), (u'to', u'to', u'TO'), (u'play', u'play', u'VB'), (u'soccer', u'soccer', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Douglas', 'loves', 'to', 'play', 'soccer', '.']}, {'string': ' Douglas loves to play basketball.', 'parse': {'tree': '(ROOT (S (NP (NNP Douglas)) (VP (VBZ loves) (S (VP (TO to) (VP (VB play) (NP (NN basketball)))))) (. .)))', 'lemma': [(u'Douglas', u'Douglas', u'NNP'), (u'loves', u'love', u'VBZ'), (u'to', u'to', u'TO'), (u'play', u'play', u'VB'), (u'basketball', u'basketball', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Douglas', 'loves', 'to', 'play', 'basketball', '.']}, {'string': ' Douglas loves to play cards.', 'parse': {'tree': '(ROOT (S (NP (NNP Douglas)) (VP (VBZ loves) (S (VP (TO to) (VP (VB play) (NP (NNS cards)))))) (. .)))', 'lemma': [(u'Douglas', u'Douglas', u'NNP'), (u'loves', u'love', u'VBZ'), (u'to', u'to', u'TO'), (u'play', u'play', u'VB'), (u'cards', u'card', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['Douglas', 'loves', 'to', 'play', 'cards', '.']}], 'mode': 1}]}
{'sentences': [{'string': " I 'm here to tell you the story of a robot named Carl.", 'parse': {'tree': "(ROOT (S (NP (PRP I)) (VP (VBP 'm) (ADVP (RB here)) (S (VP (TO to) (VP (VB tell) (NP (PRP you)) (NP (NP (DT the) (NN story)) (PP (IN of) (NP (NP (DT a) (NN robot)) (VP (VBN named) (NP (NNP Carl)))))))))) (. .)))", 'lemma': [(u'I', u'I', u'PRP'), (u"'m", u'be', u'VBP'), (u'here', u'here', u'RB'), (u'to', u'to', u'TO'), (u'tell', u'tell', u'VB'), (u'you', u'you', u'PRP'), (u'the', u'the', u'DT'), (u'story', u'story', u'NN'), (u'of', u'of', u'IN'), (u'a', u'a', u'DT'), (u'robot', u'robot', u'NN'), (u'named', u'name', u'VBN'), (u'Carl', u'Carl', u'NNP'), (u'.', u'.', u'.')]}, 'tokens': ['I', "'m", 'here', 'to', 'tell', 'you', 'the', 'story', 'of', 'a', 'robot', 'named', 'Carl', '.']}, {'string': ' He came from a far away land known as Factory.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD came) (PP (IN from) (NP (NP (DT a) (ADVP (RB far) (RB away)) (NN land)) (VP (VBN known) (PP (IN as) (NP (NN Factory))))))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'came', u'come', u'VBD'), (u'from', u'from', u'IN'), (u'a', u'a', u'DT'), (u'far', u'far', u'RB'), (u'away', u'away', u'RB'), (u'land', u'land', u'NN'), (u'known', u'know', u'VBN'), (u'as', u'as', u'IN'), (u'Factory', u'factory', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'came', 'from', 'a', 'far', 'away', 'land', 'known', 'as', 'Factory', '.']}, {'string': ' Carl was sad because he was missing a part called a tire.', 'parse': {'tree': '(ROOT (S (NP (NNP Carl)) (VP (VBD was) (ADJP (JJ sad)) (SBAR (IN because) (S (NP (PRP he)) (VP (VBD was) (VP (VBG missing) (NP (NP (DT a) (NN part)) (VP (VBN called) (NP (DT a) (NN tire))))))))) (. .)))', 'lemma': [(u'Carl', u'Carl', u'NNP'), (u'was', u'be', u'VBD'), (u'sad', u'sad', u'JJ'), (u'because', u'because', u'IN'), (u'he', u'he', u'PRP'), (u'was', u'be', u'VBD'), (u'missing', u'miss', u'VBG'), (u'a', u'a', u'DT'), (u'part', u'part', u'NN'), (u'called', u'call', u'VBN'), (u'a', u'a', u'DT'), (u'tire', u'tire', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Carl', 'was', 'sad', 'because', 'he', 'was', 'missing', 'a', 'part', 'called', 'a', 'tire', '.']}, {'string': ' He also needed a sun gatherer.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (ADVP (RB also)) (VP (VBD needed) (NP (DT a) (NN sun) (NN gatherer))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'also', u'also', u'RB'), (u'needed', u'need', u'VBD'), (u'a', u'a', u'DT'), (u'sun', u'sun', u'NN'), (u'gatherer', u'gatherer', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'also', 'needed', 'a', 'sun', 'gatherer', '.']}, {'string': ' But, the tire was more important.', 'parse': {'tree': '(ROOT (S (CC But) (, ,) (NP (DT the) (NN tire)) (VP (VBD was) (ADJP (RBR more) (JJ important))) (. .)))', 'lemma': [(u'But', u'but', u'CC'), (u',', u',', u','), (u'the', u'the', u'DT'), (u'tire', u'tire', u'NN'), (u'was', u'be', u'VBD'), (u'more', u'more', u'RBR'), (u'important', u'important', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['But', ',', 'the', 'tire', 'was', 'more', 'important', '.']}, {'string': ' Once Carl got all these parts he could travel to his new home in the nation of Lab and the city of Office.', 'parse': {'tree': '(ROOT (S (SBAR (IN Once) (S (NP (NNP Carl)) (VP (VBD got) (NP (PDT all) (DT these) (NNS parts))))) (NP (PRP he)) (VP (MD could) (VP (VB travel) (PP (TO to) (NP (PRP$ his) (JJ new) (NN home))) (PP (IN in) (NP (NP (NP (DT the) (NN nation)) (PP (IN of) (NP (NNP Lab)))) (CC and) (NP (NP (DT the) (NN city)) (PP (IN of) (NP (NNP Office)))))))) (. .)))', 'lemma': [(u'Once', u'once', u'IN'), (u'Carl', u'Carl', u'NNP'), (u'got', u'get', u'VBD'), (u'all', u'all', u'PDT'), (u'these', u'these', u'DT'), (u'parts', u'part', u'NNS'), (u'he', u'he', u'PRP'), (u'could', u'could', u'MD'), (u'travel', u'travel', u'VB'), (u'to', u'to', u'TO'), (u'his', u'he', u'PRP$'), (u'new', u'new', u'JJ'), (u'home', u'home', u'NN'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'nation', u'nation', u'NN'), (u'of', u'of', u'IN'), (u'Lab', u'Lab', u'NNP'), (u'and', u'and', u'CC'), (u'the', u'the', u'DT'), (u'city', u'city', u'NN'), (u'of', u'of', u'IN'), (u'Office', u'Office', u'NNP'), (u'.', u'.', u'.')]}, 'tokens': ['Once', 'Carl', 'got', 'all', 'these', 'parts', 'he', 'could', 'travel', 'to', 'his', 'new', 'home', 'in', 'the', 'nation', 'of', 'Lab', 'and', 'the', 'city', 'of', 'Office', '.']}, {'string': ' It was a tricky thing to get there with missing parts.', 'parse': {'tree': '(ROOT (S (NP (PRP It)) (VP (VBD was) (NP (DT a) (JJ tricky) (NN thing) (S (VP (TO to) (VP (VB get) (ADVP (RB there)) (PP (IN with) (NP (VBG missing) (NNS parts)))))))) (. .)))', 'lemma': [(u'It', u'it', u'PRP'), (u'was', u'be', u'VBD'), (u'a', u'a', u'DT'), (u'tricky', u'tricky', u'JJ'), (u'thing', u'thing', u'NN'), (u'to', u'to', u'TO'), (u'get', u'get', u'VB'), (u'there', u'there', u'RB'), (u'with', u'with', u'IN'), (u'missing', u'miss', u'VBG'), (u'parts', u'part', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['It', 'was', 'a', 'tricky', 'thing', 'to', 'get', 'there', 'with', 'missing', 'parts', '.']}, {'string': ' Just as he had given up hope Carl got a message from Mr. X saying the new parts were ready to be delivered.', 'parse': {'tree': '(ROOT (S (SBAR (RB Just) (IN as) (S (NP (PRP he)) (VP (VBD had) (VP (VBN given) (PRT (RP up)))))) (VP (VBP hope) (SBAR (S (NP (NNP Carl)) (VP (VBD got) (NP (DT a) (NN message)) (PP (IN from) (S (NP (NNP Mr.) (NNP X)) (VP (VBG saying) (SBAR (S (NP (DT the) (JJ new) (NNS parts)) (VP (VBD were) (ADJP (JJ ready) (S (VP (TO to) (VP (VB be) (VP (VBN delivered)))))))))))))))) (. .)))', 'lemma': [(u'Just', u'just', u'RB'), (u'as', u'as', u'IN'), (u'he', u'he', u'PRP'), (u'had', u'have', u'VBD'), (u'given', u'give', u'VBN'), (u'up', u'up', u'RP'), (u'hope', u'hope', u'VBP'), (u'Carl', u'Carl', u'NNP'), (u'got', u'get', u'VBD'), (u'a', u'a', u'DT'), (u'message', u'message', u'NN'), (u'from', u'from', u'IN'), (u'Mr.', u'Mr.', u'NNP'), (u'X', u'X', u'NNP'), (u'saying', u'say', u'VBG'), (u'the', u'the', u'DT'), (u'new', u'new', u'JJ'), (u'parts', u'part', u'NNS'), (u'were', u'be', u'VBD'), (u'ready', u'ready', u'JJ'), (u'to', u'to', u'TO'), (u'be', u'be', u'VB'), (u'delivered', u'deliver', u'VBN'), (u'.', u'.', u'.')]}, 'tokens': ['Just', 'as', 'he', 'had', 'given', 'up', 'hope', 'Carl', 'got', 'a', 'message', 'from', 'Mr.', 'X', 'saying', 'the', 'new', 'parts', 'were', 'ready', 'to', 'be', 'delivered', '.']}, {'string': ' This made the robot very happy.', 'parse': {'tree': '(ROOT (S (NP (DT This)) (VP (VBD made) (S (NP (DT the) (NN robot)) (ADJP (RB very) (JJ happy)))) (. .)))', 'lemma': [(u'This', u'this', u'DT'), (u'made', u'make', u'VBD'), (u'the', u'the', u'DT'), (u'robot', u'robot', u'NN'), (u'very', u'very', u'RB'), (u'happy', u'happy', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['This', 'made', 'the', 'robot', 'very', 'happy', '.']}, {'string': ' The parts arrived a few days later and Carl put them in with 2 days of work.', 'parse': {'tree': '(ROOT (S (S (NP (DT The) (NNS parts)) (VP (VBD arrived) (NP (DT a) (JJ few) (NNS days)) (ADVP (RB later)))) (CC and) (S (NP (NNP Carl)) (VP (VBD put) (NP (PRP them)) (PP (IN in) (IN with) (NP (NP (CD 2) (NNS days)) (PP (IN of) (NP (NN work))))))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'parts', u'part', u'NNS'), (u'arrived', u'arrive', u'VBD'), (u'a', u'a', u'DT'), (u'few', u'few', u'JJ'), (u'days', u'day', u'NNS'), (u'later', u'later', u'RB'), (u'and', u'and', u'CC'), (u'Carl', u'Carl', u'NNP'), (u'put', u'put', u'VBD'), (u'them', u'they', u'PRP'), (u'in', u'in', u'IN'), (u'with', u'with', u'IN'), (u'2', u'2', u'CD'), (u'days', u'day', u'NNS'), (u'of', u'of', u'IN'), (u'work', u'work', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'parts', 'arrived', 'a', 'few', 'days', 'later', 'and', 'Carl', 'put', 'them', 'in', 'with', '2', 'days', 'of', 'work', '.']}, {'string': ' After this Carl began to travel the last bit of his goal to get to his new job.', 'parse': {'tree': '(ROOT (S (PP (IN After) (NP (DT this))) (NP (NNP Carl)) (VP (VBD began) (S (VP (TO to) (VP (VB travel) (NP (NP (DT the) (JJ last) (NN bit)) (PP (IN of) (NP (PRP$ his) (NN goal) (S (VP (TO to) (VP (VB get) (PP (TO to) (NP (PRP$ his) (JJ new) (NN job))))))))))))) (. .)))', 'lemma': [(u'After', u'after', u'IN'), (u'this', u'this', u'DT'), (u'Carl', u'Carl', u'NNP'), (u'began', u'begin', u'VBD'), (u'to', u'to', u'TO'), (u'travel', u'travel', u'VB'), (u'the', u'the', u'DT'), (u'last', u'last', u'JJ'), (u'bit', u'bit', u'NN'), (u'of', u'of', u'IN'), (u'his', u'he', u'PRP$'), (u'goal', u'goal', u'NN'), (u'to', u'to', u'TO'), (u'get', u'get', u'VB'), (u'to', u'to', u'TO'), (u'his', u'he', u'PRP$'), (u'new', u'new', u'JJ'), (u'job', u'job', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['After', 'this', 'Carl', 'began', 'to', 'travel', 'the', 'last', 'bit', 'of', 'his', 'goal', 'to', 'get', 'to', 'his', 'new', 'job', '.']}, {'string': ' After this Carl took 10 days to get to Lab.', 'parse': {'tree': '(ROOT (S (PP (IN After) (NP (DT this))) (NP (NNP Carl)) (VP (VBD took) (NP (CD 10) (NNS days)) (S (VP (TO to) (VP (VB get) (PP (TO to) (NP (NNP Lab))))))) (. .)))', 'lemma': [(u'After', u'after', u'IN'), (u'this', u'this', u'DT'), (u'Carl', u'Carl', u'NNP'), (u'took', u'take', u'VBD'), (u'10', u'10', u'CD'), (u'days', u'day', u'NNS'), (u'to', u'to', u'TO'), (u'get', u'get', u'VB'), (u'to', u'to', u'TO'), (u'Lab', u'Lab', u'NNP'), (u'.', u'.', u'.')]}, 'tokens': ['After', 'this', 'Carl', 'took', '10', 'days', 'to', 'get', 'to', 'Lab', '.']}], 'questions': [{'question': {'string': ' What nation did Carl want to get to?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WDT What) (NN nation)) (SQ (VBD did) (NP (NNP Carl)) (VP (VB want) (S (VP (TO to) (VP (VB get) (PP (TO to))))))) (. ?)))', 'lemma': [(u'What', u'what', u'WDT'), (u'nation', u'nation', u'NN'), (u'did', u'do', u'VBD'), (u'Carl', u'Carl', u'NNP'), (u'want', u'want', u'VB'), (u'to', u'to', u'TO'), (u'get', u'get', u'VB'), (u'to', u'to', u'TO'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'nation', 'did', 'Carl', 'want', 'to', 'get', 'to', '?']}, 'answers': [{'string': ' Carl', 'parse': {'tree': '(ROOT (NP (NNP Carl)))', 'lemma': [(u'Carl', u'Carl', u'NNP')]}, 'tokens': ['Carl']}, {'string': ' Office', 'parse': {'tree': '(ROOT (NP (NNP Office)))', 'lemma': [(u'Office', u'Office', u'NNP')]}, 'tokens': ['Office']}, {'string': ' Factory', 'parse': {'tree': '(ROOT (NP (NN Factory)))', 'lemma': [(u'Factory', u'factory', u'NN')]}, 'tokens': ['Factory']}, {'string': ' Lab', 'parse': {'tree': '(ROOT (NP (NNP Lab)))', 'lemma': [(u'Lab', u'Lab', u'NNP')]}, 'tokens': ['Lab']}], 'mode': 1}, {'question': {'string': ' Besides a tire what part did Carl need?', 'parse': {'tree': '(ROOT (S (PP (IN Besides) (NP (NP (DT a) (NN tire)) (SBAR (WHNP (WP what) (NN part)) (S (VP (VBD did)))))) (NP (NNP Carl)) (VP (VBP need)) (. ?)))', 'lemma': [(u'Besides', u'besides', u'IN'), (u'a', u'a', u'DT'), (u'tire', u'tire', u'NN'), (u'what', u'what', u'WP'), (u'part', u'part', u'NN'), (u'did', u'do', u'VBD'), (u'Carl', u'Carl', u'NNP'), (u'need', u'need', u'VBP'), (u'?', u'?', u'.')]}, 'tokens': ['Besides', 'a', 'tire', 'what', 'part', 'did', 'Carl', 'need', '?']}, 'answers': [{'string': ' missing', 'parse': {'tree': '(ROOT (ADJP (VBG missing)))', 'lemma': [(u'missing', u'miss', u'VBG')]}, 'tokens': ['missing']}, {'string': ' important', 'parse': {'tree': '(ROOT (ADJP (JJ important)))', 'lemma': [(u'important', u'important', u'JJ')]}, 'tokens': ['important']}, {'string': ' tire', 'parse': {'tree': '(ROOT (NP (NN tire)))', 'lemma': [(u'tire', u'tire', u'NN')]}, 'tokens': ['tire']}, {'string': ' sun gatherer', 'parse': {'tree': '(ROOT (NP (NN sun) (NN gatherer)))', 'lemma': [(u'sun', u'sun', u'NN'), (u'gatherer', u'gatherer', u'NN')]}, 'tokens': ['sun', 'gatherer']}], 'mode': 0}, {'question': {'string': ' Where did Carl come from?', 'parse': {'tree': '(ROOT (SBARQ (WHADVP (WRB Where)) (SQ (VBD did) (NP (NNP Carl)) (VP (VB come) (PP (IN from)))) (. ?)))', 'lemma': [(u'Where', u'where', u'WRB'), (u'did', u'do', u'VBD'), (u'Carl', u'Carl', u'NNP'), (u'come', u'come', u'VB'), (u'from', u'from', u'IN'), (u'?', u'?', u'.')]}, 'tokens': ['Where', 'did', 'Carl', 'come', 'from', '?']}, 'answers': [{'string': ' Lab', 'parse': {'tree': '(ROOT (NP (NNP Lab)))', 'lemma': [(u'Lab', u'Lab', u'NNP')]}, 'tokens': ['Lab']}, {'string': ' Mr. X', 'parse': {'tree': '(ROOT (NP (NNP Mr.) (NNP X)))', 'lemma': [(u'Mr.', u'Mr.', u'NNP'), (u'X', u'X', u'NNP')]}, 'tokens': ['Mr.', 'X']}, {'string': ' Office', 'parse': {'tree': '(ROOT (NP (NNP Office)))', 'lemma': [(u'Office', u'Office', u'NNP')]}, 'tokens': ['Office']}, {'string': ' Factory', 'parse': {'tree': '(ROOT (NP (NN Factory)))', 'lemma': [(u'Factory', u'factory', u'NN')]}, 'tokens': ['Factory']}], 'mode': 0}, {'question': {'string': ' What was the only city in the story?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD was) (NP (NP (DT the) (JJ only) (NN city)) (PP (IN in) (NP (DT the) (NN story))))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'was', u'be', u'VBD'), (u'the', u'the', u'DT'), (u'only', u'only', u'JJ'), (u'city', u'city', u'NN'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'story', u'story', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'was', 'the', 'only', 'city', 'in', 'the', 'story', '?']}, 'answers': [{'string': ' Office', 'parse': {'tree': '(ROOT (NP (NNP Office)))', 'lemma': [(u'Office', u'Office', u'NNP')]}, 'tokens': ['Office']}, {'string': ' Mr. X', 'parse': {'tree': '(ROOT (NP (NNP Mr.) (NNP X)))', 'lemma': [(u'Mr.', u'Mr.', u'NNP'), (u'X', u'X', u'NNP')]}, 'tokens': ['Mr.', 'X']}, {'string': ' Lab', 'parse': {'tree': '(ROOT (NP (NNP Lab)))', 'lemma': [(u'Lab', u'Lab', u'NNP')]}, 'tokens': ['Lab']}, {'string': ' Factory', 'parse': {'tree': '(ROOT (NP (NN Factory)))', 'lemma': [(u'Factory', u'factory', u'NN')]}, 'tokens': ['Factory']}], 'mode': 1}]}
{'sentences': [{'string': ' On a hot summer day, Brian was walking home from the park.', 'parse': {'tree': '(ROOT (S (PP (IN On) (NP (DT a) (JJ hot) (NN summer))) (NP (NN day)) (, ,) (NP (NNP Brian)) (VP (VBD was) (VP (VBG walking) (NP (NN home)) (PP (IN from) (NP (DT the) (NN park))))) (. .)))', 'lemma': [(u'On', u'on', u'IN'), (u'a', u'a', u'DT'), (u'hot', u'hot', u'JJ'), (u'summer', u'summer', u'NN'), (u'day', u'day', u'NN'), (u',', u',', u','), (u'Brian', u'Brian', u'NNP'), (u'was', u'be', u'VBD'), (u'walking', u'walk', u'VBG'), (u'home', u'home', u'NN'), (u'from', u'from', u'IN'), (u'the', u'the', u'DT'), (u'park', u'park', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['On', 'a', 'hot', 'summer', 'day', ',', 'Brian', 'was', 'walking', 'home', 'from', 'the', 'park', '.']}, {'string': ' While walking, Brian passed his favorite toy store, and saw that they had a new baseball glove in the window.', 'parse': {'tree': '(ROOT (S (SBAR (IN While) (S (VP (VBG walking)))) (, ,) (NP (NNP Brian)) (VP (VP (VBD passed) (NP (PRP$ his) (JJ favorite) (NN toy) (NN store))) (, ,) (CC and) (VP (VBD saw) (SBAR (IN that) (S (NP (PRP they)) (VP (VBD had) (NP (NP (DT a) (JJ new) (NN baseball) (NN glove)) (PP (IN in) (NP (DT the) (NN window))))))))) (. .)))', 'lemma': [(u'While', u'while', u'IN'), (u'walking', u'walk', u'VBG'), (u',', u',', u','), (u'Brian', u'Brian', u'NNP'), (u'passed', u'pass', u'VBD'), (u'his', u'he', u'PRP$'), (u'favorite', u'favorite', u'JJ'), (u'toy', u'toy', u'NN'), (u'store', u'store', u'NN'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'saw', u'see', u'VBD'), (u'that', u'that', u'IN'), (u'they', u'they', u'PRP'), (u'had', u'have', u'VBD'), (u'a', u'a', u'DT'), (u'new', u'new', u'JJ'), (u'baseball', u'baseball', u'NN'), (u'glove', u'glove', u'NN'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'window', u'window', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['While', 'walking', ',', 'Brian', 'passed', 'his', 'favorite', 'toy', 'store', ',', 'and', 'saw', 'that', 'they', 'had', 'a', 'new', 'baseball', 'glove', 'in', 'the', 'window', '.']}, {'string': " Brian 's baseball glove was very old and was ripped in a few places.", 'parse': {'tree': "(ROOT (S (NP (NP (NNP Brian) (POS 's)) (NN baseball) (NN glove)) (VP (VP (VBD was) (ADJP (RB very) (JJ old))) (CC and) (VP (VBD was) (VP (VBN ripped) (PP (IN in) (NP (DT a) (JJ few) (NNS places)))))) (. .)))", 'lemma': [(u'Brian', u'Brian', u'NNP'), (u"'s", u"'s", u'POS'), (u'baseball', u'baseball', u'NN'), (u'glove', u'glove', u'NN'), (u'was', u'be', u'VBD'), (u'very', u'very', u'RB'), (u'old', u'old', u'JJ'), (u'and', u'and', u'CC'), (u'was', u'be', u'VBD'), (u'ripped', u'rip', u'VBN'), (u'in', u'in', u'IN'), (u'a', u'a', u'DT'), (u'few', u'few', u'JJ'), (u'places', u'place', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['Brian', "'s", 'baseball', 'glove', 'was', 'very', 'old', 'and', 'was', 'ripped', 'in', 'a', 'few', 'places', '.']}, {'string': ' Brian really wanted the new glove because he wanted to show off his glove to his friends tomorrow.', 'parse': {'tree': '(ROOT (S (NP (NNP Brian)) (ADVP (RB really)) (VP (VBD wanted) (NP (DT the) (JJ new) (NN glove)) (SBAR (IN because) (S (NP (PRP he)) (VP (VBD wanted) (S (VP (TO to) (VP (VB show) (PRT (RP off)) (NP (PRP$ his) (NN glove)) (PP (TO to) (NP (PRP$ his) (NNS friends)))))) (NP (NN tomorrow)))))) (. .)))', 'lemma': [(u'Brian', u'Brian', u'NNP'), (u'really', u'really', u'RB'), (u'wanted', u'want', u'VBD'), (u'the', u'the', u'DT'), (u'new', u'new', u'JJ'), (u'glove', u'glove', u'NN'), (u'because', u'because', u'IN'), (u'he', u'he', u'PRP'), (u'wanted', u'want', u'VBD'), (u'to', u'to', u'TO'), (u'show', u'show', u'VB'), (u'off', u'off', u'RP'), (u'his', u'he', u'PRP$'), (u'glove', u'glove', u'NN'), (u'to', u'to', u'TO'), (u'his', u'he', u'PRP$'), (u'friends', u'friend', u'NNS'), (u'tomorrow', u'tomorrow', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Brian', 'really', 'wanted', 'the', 'new', 'glove', 'because', 'he', 'wanted', 'to', 'show', 'off', 'his', 'glove', 'to', 'his', 'friends', 'tomorrow', '.']}, {'string': ' The cost of the new glove was fifteen dollars, but when Brian checked his pockets for money, he only had six dollars and fifty cents.', 'parse': {'tree': '(ROOT (S (S (NP (NP (DT The) (NN cost)) (PP (IN of) (NP (DT the) (JJ new) (NN glove)))) (VP (VBD was) (NP (CD fifteen) (NNS dollars)))) (, ,) (CC but) (S (SBAR (WHADVP (WRB when)) (S (NP (NNP Brian)) (VP (VBD checked) (NP (PRP$ his) (NNS pockets)) (PP (IN for) (NP (NN money)))))) (, ,) (NP (PRP he)) (ADVP (RB only)) (VP (VBD had) (NP (NP (CD six) (NNS dollars)) (CC and) (NP (JJ fifty) (NNS cents))))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'cost', u'cost', u'NN'), (u'of', u'of', u'IN'), (u'the', u'the', u'DT'), (u'new', u'new', u'JJ'), (u'glove', u'glove', u'NN'), (u'was', u'be', u'VBD'), (u'fifteen', u'fifteen', u'CD'), (u'dollars', u'dollar', u'NNS'), (u',', u',', u','), (u'but', u'but', u'CC'), (u'when', u'when', u'WRB'), (u'Brian', u'Brian', u'NNP'), (u'checked', u'check', u'VBD'), (u'his', u'he', u'PRP$'), (u'pockets', u'pocket', u'NNS'), (u'for', u'for', u'IN'), (u'money', u'money', u'NN'), (u',', u',', u','), (u'he', u'he', u'PRP'), (u'only', u'only', u'RB'), (u'had', u'have', u'VBD'), (u'six', u'six', u'CD'), (u'dollars', u'dollar', u'NNS'), (u'and', u'and', u'CC'), (u'fifty', u'fifty', u'JJ'), (u'cents', u'cent', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'cost', 'of', 'the', 'new', 'glove', 'was', 'fifteen', 'dollars', ',', 'but', 'when', 'Brian', 'checked', 'his', 'pockets', 'for', 'money', ',', 'he', 'only', 'had', 'six', 'dollars', 'and', 'fifty', 'cents', '.']}, {'string': ' Brian ran home and went to look around his house for money.', 'parse': {'tree': '(ROOT (S (NP (NNP Brian)) (VP (VP (VBD ran) (NP (NN home))) (CC and) (VP (VBD went) (S (VP (TO to) (VP (VB look) (PRT (RP around)) (NP (PRP$ his) (NN house)) (PP (IN for) (NP (NN money)))))))) (. .)))', 'lemma': [(u'Brian', u'Brian', u'NNP'), (u'ran', u'run', u'VBD'), (u'home', u'home', u'NN'), (u'and', u'and', u'CC'), (u'went', u'go', u'VBD'), (u'to', u'to', u'TO'), (u'look', u'look', u'VB'), (u'around', u'around', u'RP'), (u'his', u'he', u'PRP$'), (u'house', u'house', u'NN'), (u'for', u'for', u'IN'), (u'money', u'money', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Brian', 'ran', 'home', 'and', 'went', 'to', 'look', 'around', 'his', 'house', 'for', 'money', '.']}, {'string': ' He checked under his bed and found fifty cents under some toys.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VP (VBD checked) (PP (IN under) (NP (PRP$ his) (NN bed)))) (CC and) (VP (VBD found) (NP (JJ fifty) (NNS cents)) (PP (IN under) (NP (DT some) (NNS toys))))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'checked', u'check', u'VBD'), (u'under', u'under', u'IN'), (u'his', u'he', u'PRP$'), (u'bed', u'bed', u'NN'), (u'and', u'and', u'CC'), (u'found', u'find', u'VBD'), (u'fifty', u'fifty', u'JJ'), (u'cents', u'cent', u'NNS'), (u'under', u'under', u'IN'), (u'some', u'some', u'DT'), (u'toys', u'toy', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'checked', 'under', 'his', 'bed', 'and', 'found', 'fifty', 'cents', 'under', 'some', 'toys', '.']}, {'string': ' He then checked all of his pockets of his pants and shorts, and found another two dollars.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (ADVP (RB then)) (VP (VP (VBD checked) (NP (NP (DT all)) (PP (IN of) (NP (NP (PRP$ his) (NNS pockets)) (PP (IN of) (NP (PRP$ his) (NNS pants) (CC and) (NNS shorts))))))) (, ,) (CC and) (VP (VBD found) (NP (DT another) (CD two) (NNS dollars)))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'then', u'then', u'RB'), (u'checked', u'check', u'VBD'), (u'all', u'all', u'DT'), (u'of', u'of', u'IN'), (u'his', u'he', u'PRP$'), (u'pockets', u'pocket', u'NNS'), (u'of', u'of', u'IN'), (u'his', u'he', u'PRP$'), (u'pants', u'pants', u'NNS'), (u'and', u'and', u'CC'), (u'shorts', u'shorts', u'NNS'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'found', u'find', u'VBD'), (u'another', u'another', u'DT'), (u'two', u'two', u'CD'), (u'dollars', u'dollar', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'then', 'checked', 'all', 'of', 'his', 'pockets', 'of', 'his', 'pants', 'and', 'shorts', ',', 'and', 'found', 'another', 'two', 'dollars', '.']}, {'string': ' Brian then went to look between the cushions on all of the couches in his house, and he found another three dollars.', 'parse': {'tree': '(ROOT (S (S (NP (NNP Brian)) (ADVP (RB then)) (VP (VBD went) (S (VP (TO to) (VP (VB look) (PP (IN between) (NP (NP (DT the) (NNS cushions)) (PP (IN on) (NP (NP (DT all)) (PP (IN of) (NP (NP (DT the) (NNS couches)) (PP (IN in) (NP (PRP$ his) (NN house)))))))))))))) (, ,) (CC and) (S (NP (PRP he)) (VP (VBD found) (NP (DT another) (CD three) (NNS dollars)))) (. .)))', 'lemma': [(u'Brian', u'Brian', u'NNP'), (u'then', u'then', u'RB'), (u'went', u'go', u'VBD'), (u'to', u'to', u'TO'), (u'look', u'look', u'VB'), (u'between', u'between', u'IN'), (u'the', u'the', u'DT'), (u'cushions', u'cushion', u'NNS'), (u'on', u'on', u'IN'), (u'all', u'all', u'DT'), (u'of', u'of', u'IN'), (u'the', u'the', u'DT'), (u'couches', u'couch', u'NNS'), (u'in', u'in', u'IN'), (u'his', u'he', u'PRP$'), (u'house', u'house', u'NN'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'he', u'he', u'PRP'), (u'found', u'find', u'VBD'), (u'another', u'another', u'DT'), (u'three', u'three', u'CD'), (u'dollars', u'dollar', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['Brian', 'then', 'went', 'to', 'look', 'between', 'the', 'cushions', 'on', 'all', 'of', 'the', 'couches', 'in', 'his', 'house', ',', 'and', 'he', 'found', 'another', 'three', 'dollars', '.']}, {'string': ' After finally looking around his whole house, Brian knew that he still did not have enough money to buy the new glove.', 'parse': {'tree': '(ROOT (S (PP (IN After) (S (ADVP (RB finally)) (VP (VBG looking) (PRT (RP around)) (NP (PRP$ his) (JJ whole) (NN house))))) (, ,) (NP (NNP Brian)) (VP (VBD knew) (SBAR (IN that) (S (NP (PRP he)) (ADVP (RB still)) (VP (VBD did) (RB not) (VP (VB have) (NP (JJ enough) (NN money) (S (VP (TO to) (VP (VB buy) (NP (DT the) (JJ new) (NN glove))))))))))) (. .)))', 'lemma': [(u'After', u'after', u'IN'), (u'finally', u'finally', u'RB'), (u'looking', u'look', u'VBG'), (u'around', u'around', u'RP'), (u'his', u'he', u'PRP$'), (u'whole', u'whole', u'JJ'), (u'house', u'house', u'NN'), (u',', u',', u','), (u'Brian', u'Brian', u'NNP'), (u'knew', u'know', u'VBD'), (u'that', u'that', u'IN'), (u'he', u'he', u'PRP'), (u'still', u'still', u'RB'), (u'did', u'do', u'VBD'), (u'not', u'not', u'RB'), (u'have', u'have', u'VB'), (u'enough', u'enough', u'JJ'), (u'money', u'money', u'NN'), (u'to', u'to', u'TO'), (u'buy', u'buy', u'VB'), (u'the', u'the', u'DT'), (u'new', u'new', u'JJ'), (u'glove', u'glove', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['After', 'finally', 'looking', 'around', 'his', 'whole', 'house', ',', 'Brian', 'knew', 'that', 'he', 'still', 'did', 'not', 'have', 'enough', 'money', 'to', 'buy', 'the', 'new', 'glove', '.']}, {'string': ' Brian went outside and saw his dad doing yard work.', 'parse': {'tree': '(ROOT (S (NP (NNP Brian)) (VP (VP (VBD went) (ADVP (RB outside))) (CC and) (VP (VBD saw) (NP (PRP$ his) (NN dad)) (S (VP (VBG doing) (NP (NN yard) (NN work)))))) (. .)))', 'lemma': [(u'Brian', u'Brian', u'NNP'), (u'went', u'go', u'VBD'), (u'outside', u'outside', u'RB'), (u'and', u'and', u'CC'), (u'saw', u'see', u'VBD'), (u'his', u'he', u'PRP$'), (u'dad', u'dad', u'NN'), (u'doing', u'do', u'VBG'), (u'yard', u'yard', u'NN'), (u'work', u'work', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Brian', 'went', 'outside', 'and', 'saw', 'his', 'dad', 'doing', 'yard', 'work', '.']}, {'string': ' He told his dad that he would finish all the yard work for him, if he could have the money he needed for the new glove.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD told) (NP (PRP$ his) (NN dad)) (SBAR (IN that) (S (NP (PRP he)) (VP (MD would) (VP (VB finish) (NP (PDT all) (DT the) (NN yard) (NN work)) (PP (IN for) (NP (PRP him))) (, ,) (SBAR (IN if) (S (NP (PRP he)) (VP (MD could) (VP (VB have) (NP (NP (DT the) (NN money)) (SBAR (S (NP (PRP he)) (VP (VBD needed) (PP (IN for) (NP (DT the) (JJ new) (NN glove)))))))))))))))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'told', u'tell', u'VBD'), (u'his', u'he', u'PRP$'), (u'dad', u'dad', u'NN'), (u'that', u'that', u'IN'), (u'he', u'he', u'PRP'), (u'would', u'would', u'MD'), (u'finish', u'finish', u'VB'), (u'all', u'all', u'PDT'), (u'the', u'the', u'DT'), (u'yard', u'yard', u'NN'), (u'work', u'work', u'NN'), (u'for', u'for', u'IN'), (u'him', u'he', u'PRP'), (u',', u',', u','), (u'if', u'if', u'IN'), (u'he', u'he', u'PRP'), (u'could', u'could', u'MD'), (u'have', u'have', u'VB'), (u'the', u'the', u'DT'), (u'money', u'money', u'NN'), (u'he', u'he', u'PRP'), (u'needed', u'need', u'VBD'), (u'for', u'for', u'IN'), (u'the', u'the', u'DT'), (u'new', u'new', u'JJ'), (u'glove', u'glove', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'told', 'his', 'dad', 'that', 'he', 'would', 'finish', 'all', 'the', 'yard', 'work', 'for', 'him', ',', 'if', 'he', 'could', 'have', 'the', 'money', 'he', 'needed', 'for', 'the', 'new', 'glove', '.']}, {'string': ' His dad said yes, so Brian spent the rest of the afternoon raking the yard, and bagging leaves.', 'parse': {'tree': '(ROOT (S (S (NP (PRP$ His) (NN dad)) (VP (VBD said) (INTJ (UH yes)))) (, ,) (IN so) (S (NP (NNP Brian)) (VP (VBD spent) (NP (NP (DT the) (NN rest)) (PP (IN of) (NP (DT the) (NN afternoon)))) (S (VP (VP (VBG raking) (NP (DT the) (NN yard))) (, ,) (CC and) (VP (VBG bagging) (NP (NNS leaves))))))) (. .)))', 'lemma': [(u'His', u'he', u'PRP$'), (u'dad', u'dad', u'NN'), (u'said', u'say', u'VBD'), (u'yes', u'yes', u'UH'), (u',', u',', u','), (u'so', u'so', u'IN'), (u'Brian', u'Brian', u'NNP'), (u'spent', u'spend', u'VBD'), (u'the', u'the', u'DT'), (u'rest', u'rest', u'NN'), (u'of', u'of', u'IN'), (u'the', u'the', u'DT'), (u'afternoon', u'afternoon', u'NN'), (u'raking', u'rake', u'VBG'), (u'the', u'the', u'DT'), (u'yard', u'yard', u'NN'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'bagging', u'bag', u'VBG'), (u'leaves', u'leaf', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['His', 'dad', 'said', 'yes', ',', 'so', 'Brian', 'spent', 'the', 'rest', 'of', 'the', 'afternoon', 'raking', 'the', 'yard', ',', 'and', 'bagging', 'leaves', '.']}, {'string': " Brian 's dad was very proud that his son was working hard for money.", 'parse': {'tree': "(ROOT (S (NP (NP (NNP Brian) (POS 's)) (NN dad)) (VP (VBD was) (ADJP (RB very) (JJ proud)) (SBAR (IN that) (S (NP (PRP$ his) (NN son)) (VP (VBD was) (VP (VBG working) (ADVP (RB hard)) (PP (IN for) (NP (NN money)))))))) (. .)))", 'lemma': [(u'Brian', u'Brian', u'NNP'), (u"'s", u"'s", u'POS'), (u'dad', u'dad', u'NN'), (u'was', u'be', u'VBD'), (u'very', u'very', u'RB'), (u'proud', u'proud', u'JJ'), (u'that', u'that', u'IN'), (u'his', u'he', u'PRP$'), (u'son', u'son', u'NN'), (u'was', u'be', u'VBD'), (u'working', u'work', u'VBG'), (u'hard', u'hard', u'RB'), (u'for', u'for', u'IN'), (u'money', u'money', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Brian', "'s", 'dad', 'was', 'very', 'proud', 'that', 'his', 'son', 'was', 'working', 'hard', 'for', 'money', '.']}, {'string': ' When Brian was finally done, Brian knew that he was too late, and the toy store was closed.', 'parse': {'tree': '(ROOT (S (S (SBAR (WHADVP (WRB When)) (S (NP (NNP Brian)) (VP (VBD was) (VP (ADVP (RB finally)) (VBN done))))) (, ,) (NP (NNP Brian)) (VP (VBD knew) (SBAR (IN that) (S (NP (PRP he)) (VP (VBD was) (ADJP (RB too) (JJ late))))))) (, ,) (CC and) (S (NP (DT the) (NN toy) (NN store)) (VP (VBD was) (VP (VBN closed)))) (. .)))', 'lemma': [(u'When', u'when', u'WRB'), (u'Brian', u'Brian', u'NNP'), (u'was', u'be', u'VBD'), (u'finally', u'finally', u'RB'), (u'done', u'do', u'VBN'), (u',', u',', u','), (u'Brian', u'Brian', u'NNP'), (u'knew', u'know', u'VBD'), (u'that', u'that', u'IN'), (u'he', u'he', u'PRP'), (u'was', u'be', u'VBD'), (u'too', u'too', u'RB'), (u'late', u'late', u'JJ'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'the', u'the', u'DT'), (u'toy', u'toy', u'NN'), (u'store', u'store', u'NN'), (u'was', u'be', u'VBD'), (u'closed', u'close', u'VBN'), (u'.', u'.', u'.')]}, 'tokens': ['When', 'Brian', 'was', 'finally', 'done', ',', 'Brian', 'knew', 'that', 'he', 'was', 'too', 'late', ',', 'and', 'the', 'toy', 'store', 'was', 'closed', '.']}, {'string': ' Just as Brian was walking inside, he saw his dad walk up to home holding the new glove that he wanted.', 'parse': {'tree': '(ROOT (S (SBAR (RB Just) (IN as) (S (NP (NNP Brian)) (VP (VBD was) (VP (VBG walking) (ADVP (RB inside)))))) (, ,) (NP (PRP he)) (VP (VBD saw) (SBAR (S (NP (PRP$ his) (NN dad)) (VP (VBP walk) (PRT (RP up)) (PP (TO to) (NP (NP (NN home)) (VP (VBG holding) (NP (DT the) (JJ new) (NN glove)) (SBAR (IN that) (S (NP (PRP he)) (VP (VBD wanted))))))))))) (. .)))', 'lemma': [(u'Just', u'just', u'RB'), (u'as', u'as', u'IN'), (u'Brian', u'Brian', u'NNP'), (u'was', u'be', u'VBD'), (u'walking', u'walk', u'VBG'), (u'inside', u'inside', u'RB'), (u',', u',', u','), (u'he', u'he', u'PRP'), (u'saw', u'see', u'VBD'), (u'his', u'he', u'PRP$'), (u'dad', u'dad', u'NN'), (u'walk', u'walk', u'VBP'), (u'up', u'up', u'RP'), (u'to', u'to', u'TO'), (u'home', u'home', u'NN'), (u'holding', u'hold', u'VBG'), (u'the', u'the', u'DT'), (u'new', u'new', u'JJ'), (u'glove', u'glove', u'NN'), (u'that', u'that', u'IN'), (u'he', u'he', u'PRP'), (u'wanted', u'want', u'VBD'), (u'.', u'.', u'.')]}, 'tokens': ['Just', 'as', 'Brian', 'was', 'walking', 'inside', ',', 'he', 'saw', 'his', 'dad', 'walk', 'up', 'to', 'home', 'holding', 'the', 'new', 'glove', 'that', 'he', 'wanted', '.']}, {'string': ' Brian was so happy, and he and his dad spent the rest of the afternoon having a catch.', 'parse': {'tree': '(ROOT (S (S (NP (NNP Brian)) (VP (VBD was) (ADJP (RB so) (JJ happy)))) (, ,) (CC and) (S (NP (NP (PRP he)) (CC and) (NP (PRP$ his) (NN dad))) (VP (VBD spent) (NP (NP (DT the) (NN rest)) (PP (IN of) (NP (NP (DT the) (NN afternoon)) (VP (VBG having) (NP (DT a) (NN catch)))))))) (. .)))', 'lemma': [(u'Brian', u'Brian', u'NNP'), (u'was', u'be', u'VBD'), (u'so', u'so', u'RB'), (u'happy', u'happy', u'JJ'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'he', u'he', u'PRP'), (u'and', u'and', u'CC'), (u'his', u'he', u'PRP$'), (u'dad', u'dad', u'NN'), (u'spent', u'spend', u'VBD'), (u'the', u'the', u'DT'), (u'rest', u'rest', u'NN'), (u'of', u'of', u'IN'), (u'the', u'the', u'DT'), (u'afternoon', u'afternoon', u'NN'), (u'having', u'have', u'VBG'), (u'a', u'a', u'DT'), (u'catch', u'catch', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Brian', 'was', 'so', 'happy', ',', 'and', 'he', 'and', 'his', 'dad', 'spent', 'the', 'rest', 'of', 'the', 'afternoon', 'having', 'a', 'catch', '.']}], 'questions': [{'question': {'string': ' Why did Brian dad buy him the glove?', 'parse': {'tree': '(ROOT (SBARQ (WHADVP (WRB Why)) (SQ (VBD did) (NP (NNP Brian) (NNP dad)) (VP (VB buy) (S (NP (PRP him)) (NP (DT the) (NN glove))))) (. ?)))', 'lemma': [(u'Why', u'why', u'WRB'), (u'did', u'do', u'VBD'), (u'Brian', u'Brian', u'NNP'), (u'dad', u'dad', u'NNP'), (u'buy', u'buy', u'VB'), (u'him', u'he', u'PRP'), (u'the', u'the', u'DT'), (u'glove', u'glove', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['Why', 'did', 'Brian', 'dad', 'buy', 'him', 'the', 'glove', '?']}, 'answers': [{'string': ' His dad wanted to him to practice.', 'parse': {'tree': '(ROOT (S (NP (PRP$ His) (NN dad)) (VP (VBD wanted) (PP (TO to) (NP (PRP him))) (PP (TO to) (NP (NN practice)))) (. .)))', 'lemma': [(u'His', u'he', u'PRP$'), (u'dad', u'dad', u'NN'), (u'wanted', u'want', u'VBD'), (u'to', u'to', u'TO'), (u'him', u'he', u'PRP'), (u'to', u'to', u'TO'), (u'practice', u'practice', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['His', 'dad', 'wanted', 'to', 'him', 'to', 'practice', '.']}, {'string': " His dad did n't want him to use his old glove.", 'parse': {'tree': "(ROOT (S (NP (PRP$ His) (NN dad)) (VP (VBD did) (RB n't) (VP (VB want) (S (NP (PRP him)) (VP (TO to) (VP (VB use) (NP (PRP$ his) (JJ old) (NN glove))))))) (. .)))", 'lemma': [(u'His', u'he', u'PRP$'), (u'dad', u'dad', u'NN'), (u'did', u'do', u'VBD'), (u"n't", u'not', u'RB'), (u'want', u'want', u'VB'), (u'him', u'he', u'PRP'), (u'to', u'to', u'TO'), (u'use', u'use', u'VB'), (u'his', u'he', u'PRP$'), (u'old', u'old', u'JJ'), (u'glove', u'glove', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['His', 'dad', 'did', "n't", 'want', 'him', 'to', 'use', 'his', 'old', 'glove', '.']}, {'string': ' His dad was proud that he was working hard.', 'parse': {'tree': '(ROOT (S (NP (PRP$ His) (NN dad)) (VP (VBD was) (ADJP (JJ proud)) (SBAR (IN that) (S (NP (PRP he)) (VP (VBD was) (VP (VBG working) (ADVP (RB hard))))))) (. .)))', 'lemma': [(u'His', u'he', u'PRP$'), (u'dad', u'dad', u'NN'), (u'was', u'be', u'VBD'), (u'proud', u'proud', u'JJ'), (u'that', u'that', u'IN'), (u'he', u'he', u'PRP'), (u'was', u'be', u'VBD'), (u'working', u'work', u'VBG'), (u'hard', u'hard', u'RB'), (u'.', u'.', u'.')]}, 'tokens': ['His', 'dad', 'was', 'proud', 'that', 'he', 'was', 'working', 'hard', '.']}, {'string': ' His dad knew that he really wanted it in order to show off his friends.', 'parse': {'tree': '(ROOT (S (NP (PRP$ His) (NN dad)) (VP (VBD knew) (SBAR (IN that) (S (NP (PRP he)) (VP (ADVP (RB really)) (VBD wanted) (NP (PRP it)) (SBAR (IN in) (NN order) (S (VP (TO to) (VP (VB show) (PRT (RP off)) (NP (PRP$ his) (NNS friends)))))))))) (. .)))', 'lemma': [(u'His', u'he', u'PRP$'), (u'dad', u'dad', u'NN'), (u'knew', u'know', u'VBD'), (u'that', u'that', u'IN'), (u'he', u'he', u'PRP'), (u'really', u'really', u'RB'), (u'wanted', u'want', u'VBD'), (u'it', u'it', u'PRP'), (u'in', u'in', u'IN'), (u'order', u'order', u'NN'), (u'to', u'to', u'TO'), (u'show', u'show', u'VB'), (u'off', u'off', u'RP'), (u'his', u'he', u'PRP$'), (u'friends', u'friend', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['His', 'dad', 'knew', 'that', 'he', 'really', 'wanted', 'it', 'in', 'order', 'to', 'show', 'off', 'his', 'friends', '.']}], 'mode': 1}, {'question': {'string': ' How much money did Brian find under his bed?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WHADJP (WRB How) (JJ much)) (NN money)) (SQ (VBD did) (NP (NNP Brian)) (VP (VB find) (PP (IN under) (NP (PRP$ his) (NN bed))))) (. ?)))', 'lemma': [(u'How', u'how', u'WRB'), (u'much', u'much', u'JJ'), (u'money', u'money', u'NN'), (u'did', u'do', u'VBD'), (u'Brian', u'Brian', u'NNP'), (u'find', u'find', u'VB'), (u'under', u'under', u'IN'), (u'his', u'he', u'PRP$'), (u'bed', u'bed', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['How', 'much', 'money', 'did', 'Brian', 'find', 'under', 'his', 'bed', '?']}, 'answers': [{'string': ' Fifteen dollars', 'parse': {'tree': '(ROOT (NP (NNP Fifteen) (NNS dollars)))', 'lemma': [(u'Fifteen', u'Fifteen', u'NNP'), (u'dollars', u'dollar', u'NNS')]}, 'tokens': ['Fifteen', 'dollars']}, {'string': ' Two Dollars', 'parse': {'tree': '(ROOT (NP (NNP Two) (NNPS Dollars)))', 'lemma': [(u'Two', u'Two', u'NNP'), (u'Dollars', u'Dollars', u'NNPS')]}, 'tokens': ['Two', 'Dollars']}, {'string': ' Fifty cents', 'parse': {'tree': '(ROOT (NP (JJ Fifty) (NNS cents)))', 'lemma': [(u'Fifty', u'fifty', u'JJ'), (u'cents', u'cent', u'NNS')]}, 'tokens': ['Fifty', 'cents']}, {'string': ' Three dollars', 'parse': {'tree': '(ROOT (NP (NNP Three) (NNS dollars)))', 'lemma': [(u'Three', u'Three', u'NNP'), (u'dollars', u'dollar', u'NNS')]}, 'tokens': ['Three', 'dollars']}], 'mode': 1}, {'question': {'string': ' Why did Brian want a new glove?', 'parse': {'tree': '(ROOT (SBARQ (WHADVP (WRB Why)) (SQ (VBD did) (NP (NNP Brian)) (VP (VB want) (NP (DT a) (JJ new) (NN glove)))) (. ?)))', 'lemma': [(u'Why', u'why', u'WRB'), (u'did', u'do', u'VBD'), (u'Brian', u'Brian', u'NNP'), (u'want', u'want', u'VB'), (u'a', u'a', u'DT'), (u'new', u'new', u'JJ'), (u'glove', u'glove', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['Why', 'did', 'Brian', 'want', 'a', 'new', 'glove', '?']}, 'answers': [{'string': ' So he could show it off to his friends.', 'parse': {'tree': '(ROOT (S (IN So) (NP (PRP he)) (VP (MD could) (VP (VB show) (NP (PRP it)) (PRT (RP off)) (PP (TO to) (NP (PRP$ his) (NNS friends))))) (. .)))', 'lemma': [(u'So', u'so', u'IN'), (u'he', u'he', u'PRP'), (u'could', u'could', u'MD'), (u'show', u'show', u'VB'), (u'it', u'it', u'PRP'), (u'off', u'off', u'RP'), (u'to', u'to', u'TO'), (u'his', u'he', u'PRP$'), (u'friends', u'friend', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['So', 'he', 'could', 'show', 'it', 'off', 'to', 'his', 'friends', '.']}, {'string': ' He did not have any baseball glove.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD did) (RB not) (VP (VB have) (NP (DT any) (NN baseball) (NN glove)))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'did', u'do', u'VBD'), (u'not', u'not', u'RB'), (u'have', u'have', u'VB'), (u'any', u'any', u'DT'), (u'baseball', u'baseball', u'NN'), (u'glove', u'glove', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'did', 'not', 'have', 'any', 'baseball', 'glove', '.']}, {'string': ' He lost his old baseball glove.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD lost) (NP (PRP$ his) (JJ old) (NN baseball) (NN glove))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'lost', u'lose', u'VBD'), (u'his', u'he', u'PRP$'), (u'old', u'old', u'JJ'), (u'baseball', u'baseball', u'NN'), (u'glove', u'glove', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'lost', 'his', 'old', 'baseball', 'glove', '.']}, {'string': ' So he could have a catch with his dad.', 'parse': {'tree': '(ROOT (S (IN So) (NP (PRP he)) (VP (MD could) (VP (VB have) (NP (NP (DT a) (NN catch)) (PP (IN with) (NP (PRP$ his) (NN dad)))))) (. .)))', 'lemma': [(u'So', u'so', u'IN'), (u'he', u'he', u'PRP'), (u'could', u'could', u'MD'), (u'have', u'have', u'VB'), (u'a', u'a', u'DT'), (u'catch', u'catch', u'NN'), (u'with', u'with', u'IN'), (u'his', u'he', u'PRP$'), (u'dad', u'dad', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['So', 'he', 'could', 'have', 'a', 'catch', 'with', 'his', 'dad', '.']}], 'mode': 0}, {'question': {'string': ' How much money did Brian have in total after looking in his house?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WHADJP (WRB How) (JJ much)) (NN money)) (SQ (VBD did) (NP (NNP Brian)) (VP (VB have) (PP (IN in) (NP (NP (NN total)) (PP (IN after) (S (VP (VBG looking) (PP (IN in) (NP (PRP$ his) (NN house)))))))))) (. ?)))', 'lemma': [(u'How', u'how', u'WRB'), (u'much', u'much', u'JJ'), (u'money', u'money', u'NN'), (u'did', u'do', u'VBD'), (u'Brian', u'Brian', u'NNP'), (u'have', u'have', u'VB'), (u'in', u'in', u'IN'), (u'total', u'total', u'NN'), (u'after', u'after', u'IN'), (u'looking', u'look', u'VBG'), (u'in', u'in', u'IN'), (u'his', u'he', u'PRP$'), (u'house', u'house', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['How', 'much', 'money', 'did', 'Brian', 'have', 'in', 'total', 'after', 'looking', 'in', 'his', 'house', '?']}, 'answers': [{'string': ' Fifteen dollars', 'parse': {'tree': '(ROOT (NP (NNP Fifteen) (NNS dollars)))', 'lemma': [(u'Fifteen', u'Fifteen', u'NNP'), (u'dollars', u'dollar', u'NNS')]}, 'tokens': ['Fifteen', 'dollars']}, {'string': ' Twelve dollars', 'parse': {'tree': '(ROOT (NP (NNP Twelve) (NNS dollars)))', 'lemma': [(u'Twelve', u'Twelve', u'NNP'), (u'dollars', u'dollar', u'NNS')]}, 'tokens': ['Twelve', 'dollars']}, {'string': ' Six dollars', 'parse': {'tree': '(ROOT (NP (JJ Six) (NNS dollars)))', 'lemma': [(u'Six', u'six', u'JJ'), (u'dollars', u'dollar', u'NNS')]}, 'tokens': ['Six', 'dollars']}, {'string': ' Fifty dollars', 'parse': {'tree': '(ROOT (NP (JJ Fifty) (NNS dollars)))', 'lemma': [(u'Fifty', u'fifty', u'JJ'), (u'dollars', u'dollar', u'NNS')]}, 'tokens': ['Fifty', 'dollars']}], 'mode': 0}]}
{'sentences': [{'string': ' On a nice and sunny day, Bob and Sally walked to the beach.', 'parse': {'tree': '(ROOT (S (PP (IN On) (NP (DT a) (JJ nice) (CC and) (JJ sunny) (NN day))) (, ,) (NP (NNP Bob) (CC and) (NNP Sally)) (VP (VBD walked) (PP (TO to) (NP (DT the) (NN beach)))) (. .)))', 'lemma': [(u'On', u'on', u'IN'), (u'a', u'a', u'DT'), (u'nice', u'nice', u'JJ'), (u'and', u'and', u'CC'), (u'sunny', u'sunny', u'JJ'), (u'day', u'day', u'NN'), (u',', u',', u','), (u'Bob', u'Bob', u'NNP'), (u'and', u'and', u'CC'), (u'Sally', u'Sally', u'NNP'), (u'walked', u'walk', u'VBD'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'beach', u'beach', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['On', 'a', 'nice', 'and', 'sunny', 'day', ',', 'Bob', 'and', 'Sally', 'walked', 'to', 'the', 'beach', '.']}, {'string': ' When they got there, the first thing they wanted to do was to look for buried treasure.', 'parse': {'tree': '(ROOT (S (SBAR (WHADVP (WRB When)) (S (NP (PRP they)) (VP (VBD got) (ADVP (RB there))))) (, ,) (NP (NP (DT the) (JJ first) (NN thing)) (SBAR (S (NP (PRP they)) (VP (VBD wanted) (S (VP (TO to) (VP (VB do)))))))) (VP (VBD was) (S (VP (TO to) (VP (VB look) (PP (IN for) (NP (JJ buried) (NN treasure))))))) (. .)))', 'lemma': [(u'When', u'when', u'WRB'), (u'they', u'they', u'PRP'), (u'got', u'get', u'VBD'), (u'there', u'there', u'RB'), (u',', u',', u','), (u'the', u'the', u'DT'), (u'first', u'first', u'JJ'), (u'thing', u'thing', u'NN'), (u'they', u'they', u'PRP'), (u'wanted', u'want', u'VBD'), (u'to', u'to', u'TO'), (u'do', u'do', u'VB'), (u'was', u'be', u'VBD'), (u'to', u'to', u'TO'), (u'look', u'look', u'VB'), (u'for', u'for', u'IN'), (u'buried', u'buried', u'JJ'), (u'treasure', u'treasure', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['When', 'they', 'got', 'there', ',', 'the', 'first', 'thing', 'they', 'wanted', 'to', 'do', 'was', 'to', 'look', 'for', 'buried', 'treasure', '.']}, {'string': ' To find the treasure they had brought two shovels and two buckets.', 'parse': {'tree': '(ROOT (S (S (VP (TO To) (VP (VB find) (NP (DT the) (NN treasure))))) (NP (PRP they)) (VP (VBD had) (VP (VBN brought) (NP (NP (CD two) (NNS shovels)) (CC and) (NP (CD two) (NNS buckets))))) (. .)))', 'lemma': [(u'To', u'to', u'TO'), (u'find', u'find', u'VB'), (u'the', u'the', u'DT'), (u'treasure', u'treasure', u'NN'), (u'they', u'they', u'PRP'), (u'had', u'have', u'VBD'), (u'brought', u'bring', u'VBN'), (u'two', u'two', u'CD'), (u'shovels', u'shovel', u'NNS'), (u'and', u'and', u'CC'), (u'two', u'two', u'CD'), (u'buckets', u'bucket', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['To', 'find', 'the', 'treasure', 'they', 'had', 'brought', 'two', 'shovels', 'and', 'two', 'buckets', '.']}, {'string': ' They both started digging holes in the sand with their shovels.', 'parse': {'tree': '(ROOT (S (NP (PRP They)) (DT both) (VP (VBD started) (NP (NN digging) (NNS holes)) (PP (IN in) (NP (DT the) (NN sand))) (PP (IN with) (NP (PRP$ their) (NNS shovels)))) (. .)))', 'lemma': [(u'They', u'they', u'PRP'), (u'both', u'both', u'DT'), (u'started', u'start', u'VBD'), (u'digging', u'digging', u'NN'), (u'holes', u'hole', u'NNS'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'sand', u'sand', u'NN'), (u'with', u'with', u'IN'), (u'their', u'they', u'PRP$'), (u'shovels', u'shovel', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['They', 'both', 'started', 'digging', 'holes', 'in', 'the', 'sand', 'with', 'their', 'shovels', '.']}, {'string': " After looking very hard for treasure for an hour, they did n't find anything.", 'parse': {'tree': "(ROOT (S (PP (IN After) (S (VP (VBG looking) (ADJP (RB very) (JJ hard)) (PP (IN for) (NP (NP (NN treasure)) (PP (IN for) (NP (DT an) (NN hour)))))))) (, ,) (NP (PRP they)) (VP (VBD did) (RB n't) (VP (VB find) (NP (NN anything)))) (. .)))", 'lemma': [(u'After', u'after', u'IN'), (u'looking', u'look', u'VBG'), (u'very', u'very', u'RB'), (u'hard', u'hard', u'JJ'), (u'for', u'for', u'IN'), (u'treasure', u'treasure', u'NN'), (u'for', u'for', u'IN'), (u'an', u'a', u'DT'), (u'hour', u'hour', u'NN'), (u',', u',', u','), (u'they', u'they', u'PRP'), (u'did', u'do', u'VBD'), (u"n't", u'not', u'RB'), (u'find', u'find', u'VB'), (u'anything', u'anything', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['After', 'looking', 'very', 'hard', 'for', 'treasure', 'for', 'an', 'hour', ',', 'they', 'did', "n't", 'find', 'anything', '.']}, {'string': ' This made Bob and Sally very sad.', 'parse': {'tree': '(ROOT (S (NP (DT This)) (VP (VBD made) (S (NP (NNP Bob) (CC and) (NNP Sally)) (ADJP (RB very) (JJ sad)))) (. .)))', 'lemma': [(u'This', u'this', u'DT'), (u'made', u'make', u'VBD'), (u'Bob', u'Bob', u'NNP'), (u'and', u'and', u'CC'), (u'Sally', u'Sally', u'NNP'), (u'very', u'very', u'RB'), (u'sad', u'sad', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['This', 'made', 'Bob', 'and', 'Sally', 'very', 'sad', '.']}, {'string': ' They gave up and went to play in the water.', 'parse': {'tree': '(ROOT (S (NP (PRP They)) (VP (VP (VBD gave) (PRT (RP up))) (CC and) (VP (VBD went) (S (VP (TO to) (VP (VB play) (PP (IN in) (NP (DT the) (NN water)))))))) (. .)))', 'lemma': [(u'They', u'they', u'PRP'), (u'gave', u'give', u'VBD'), (u'up', u'up', u'RP'), (u'and', u'and', u'CC'), (u'went', u'go', u'VBD'), (u'to', u'to', u'TO'), (u'play', u'play', u'VB'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'water', u'water', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['They', 'gave', 'up', 'and', 'went', 'to', 'play', 'in', 'the', 'water', '.']}, {'string': ' While they were playing in the water, Sally found a bottle with a little paper inside.', 'parse': {'tree': '(ROOT (S (SBAR (IN While) (S (NP (PRP they)) (VP (VBD were) (VP (VBG playing) (PP (IN in) (NP (DT the) (NN water))))))) (, ,) (NP (NNP Sally)) (VP (VBD found) (NP (DT a) (NN bottle)) (PP (IN with) (NP (DT a) (JJ little) (NN paper) (NN inside)))) (. .)))', 'lemma': [(u'While', u'while', u'IN'), (u'they', u'they', u'PRP'), (u'were', u'be', u'VBD'), (u'playing', u'play', u'VBG'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'water', u'water', u'NN'), (u',', u',', u','), (u'Sally', u'Sally', u'NNP'), (u'found', u'find', u'VBD'), (u'a', u'a', u'DT'), (u'bottle', u'bottle', u'NN'), (u'with', u'with', u'IN'), (u'a', u'a', u'DT'), (u'little', u'little', u'JJ'), (u'paper', u'paper', u'NN'), (u'inside', u'inside', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['While', 'they', 'were', 'playing', 'in', 'the', 'water', ',', 'Sally', 'found', 'a', 'bottle', 'with', 'a', 'little', 'paper', 'inside', '.']}, {'string': ' Sally opened the bottle and found a treasure map.', 'parse': {'tree': '(ROOT (S (NP (NNP Sally)) (VP (VP (VBD opened) (NP (DT the) (NN bottle))) (CC and) (VP (VBD found) (NP (DT a) (NN treasure) (NN map)))) (. .)))', 'lemma': [(u'Sally', u'Sally', u'NNP'), (u'opened', u'open', u'VBD'), (u'the', u'the', u'DT'), (u'bottle', u'bottle', u'NN'), (u'and', u'and', u'CC'), (u'found', u'find', u'VBD'), (u'a', u'a', u'DT'), (u'treasure', u'treasure', u'NN'), (u'map', u'map', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Sally', 'opened', 'the', 'bottle', 'and', 'found', 'a', 'treasure', 'map', '.']}, {'string': ' Sally showed the map to Bob and they started to look for the treasure.', 'parse': {'tree': '(ROOT (S (S (NP (NNP Sally)) (VP (VBD showed) (NP (DT the) (NN map)) (PP (TO to) (NP (NNP Bob))))) (CC and) (S (NP (PRP they)) (VP (VBD started) (S (VP (TO to) (VP (VB look) (PP (IN for) (NP (DT the) (NN treasure)))))))) (. .)))', 'lemma': [(u'Sally', u'Sally', u'NNP'), (u'showed', u'show', u'VBD'), (u'the', u'the', u'DT'), (u'map', u'map', u'NN'), (u'to', u'to', u'TO'), (u'Bob', u'Bob', u'NNP'), (u'and', u'and', u'CC'), (u'they', u'they', u'PRP'), (u'started', u'start', u'VBD'), (u'to', u'to', u'TO'), (u'look', u'look', u'VB'), (u'for', u'for', u'IN'), (u'the', u'the', u'DT'), (u'treasure', u'treasure', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Sally', 'showed', 'the', 'map', 'to', 'Bob', 'and', 'they', 'started', 'to', 'look', 'for', 'the', 'treasure', '.']}, {'string': ' After walking every step that the map said, they started digging with their shovels.', 'parse': {'tree': '(ROOT (S (PP (IN After) (S (VP (VBG walking) (NP (DT every) (NN step)) (SBAR (IN that) (S (NP (DT the) (NN map)) (VP (VBD said))))))) (, ,) (NP (PRP they)) (VP (VBD started) (NP (NN digging)) (PP (IN with) (NP (PRP$ their) (NNS shovels)))) (. .)))', 'lemma': [(u'After', u'after', u'IN'), (u'walking', u'walk', u'VBG'), (u'every', u'every', u'DT'), (u'step', u'step', u'NN'), (u'that', u'that', u'IN'), (u'the', u'the', u'DT'), (u'map', u'map', u'NN'), (u'said', u'say', u'VBD'), (u',', u',', u','), (u'they', u'they', u'PRP'), (u'started', u'start', u'VBD'), (u'digging', u'digging', u'NN'), (u'with', u'with', u'IN'), (u'their', u'they', u'PRP$'), (u'shovels', u'shovel', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['After', 'walking', 'every', 'step', 'that', 'the', 'map', 'said', ',', 'they', 'started', 'digging', 'with', 'their', 'shovels', '.']}, {'string': ' After digging a really a big hole, they found a box.', 'parse': {'tree': '(ROOT (S (PP (IN After) (S (VP (VBG digging) (NP (DT a) (ADJP (RB really) (DT a)) (JJ big) (NN hole))))) (, ,) (NP (PRP they)) (VP (VBD found) (NP (DT a) (NN box))) (. .)))', 'lemma': [(u'After', u'after', u'IN'), (u'digging', u'dig', u'VBG'), (u'a', u'a', u'DT'), (u'really', u'really', u'RB'), (u'a', u'a', u'DT'), (u'big', u'big', u'JJ'), (u'hole', u'hole', u'NN'), (u',', u',', u','), (u'they', u'they', u'PRP'), (u'found', u'find', u'VBD'), (u'a', u'a', u'DT'), (u'box', u'box', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['After', 'digging', 'a', 'really', 'a', 'big', 'hole', ',', 'they', 'found', 'a', 'box', '.']}, {'string': ' They were very happy that they found it and wanted to see what was inside.', 'parse': {'tree': '(ROOT (S (NP (PRP They)) (VP (VBD were) (ADJP (RB very) (JJ happy)) (SBAR (IN that) (S (NP (PRP they)) (VP (VP (VBD found) (NP (PRP it))) (CC and) (VP (VBD wanted) (S (VP (TO to) (VP (VB see) (SBAR (WHNP (WP what)) (S (VP (VBD was) (ADVP (RB inside))))))))))))) (. .)))', 'lemma': [(u'They', u'they', u'PRP'), (u'were', u'be', u'VBD'), (u'very', u'very', u'RB'), (u'happy', u'happy', u'JJ'), (u'that', u'that', u'IN'), (u'they', u'they', u'PRP'), (u'found', u'find', u'VBD'), (u'it', u'it', u'PRP'), (u'and', u'and', u'CC'), (u'wanted', u'want', u'VBD'), (u'to', u'to', u'TO'), (u'see', u'see', u'VB'), (u'what', u'what', u'WP'), (u'was', u'be', u'VBD'), (u'inside', u'inside', u'RB'), (u'.', u'.', u'.')]}, 'tokens': ['They', 'were', 'very', 'happy', 'that', 'they', 'found', 'it', 'and', 'wanted', 'to', 'see', 'what', 'was', 'inside', '.']}, {'string': ' Bob slowly opened the box and there was a very big pearl.', 'parse': {'tree': '(ROOT (S (S (NP (NNP Bob)) (ADVP (RB slowly)) (VP (VBD opened) (NP (DT the) (NN box)))) (CC and) (S (NP (EX there)) (VP (VBD was) (NP (DT a) (ADJP (RB very) (JJ big)) (NN pearl)))) (. .)))', 'lemma': [(u'Bob', u'Bob', u'NNP'), (u'slowly', u'slowly', u'RB'), (u'opened', u'open', u'VBD'), (u'the', u'the', u'DT'), (u'box', u'box', u'NN'), (u'and', u'and', u'CC'), (u'there', u'there', u'EX'), (u'was', u'be', u'VBD'), (u'a', u'a', u'DT'), (u'very', u'very', u'RB'), (u'big', u'big', u'JJ'), (u'pearl', u'pearl', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Bob', 'slowly', 'opened', 'the', 'box', 'and', 'there', 'was', 'a', 'very', 'big', 'pearl', '.']}, {'string': ' Next, they ran to a special store to ask about the pearl.', 'parse': {'tree': '(ROOT (S (ADVP (RB Next)) (, ,) (NP (PRP they)) (VP (VBD ran) (PP (TO to) (NP (DT a) (JJ special) (NN store))) (S (VP (TO to) (VP (VB ask) (PP (IN about) (NP (DT the) (NN pearl))))))) (. .)))', 'lemma': [(u'Next', u'next', u'RB'), (u',', u',', u','), (u'they', u'they', u'PRP'), (u'ran', u'run', u'VBD'), (u'to', u'to', u'TO'), (u'a', u'a', u'DT'), (u'special', u'special', u'JJ'), (u'store', u'store', u'NN'), (u'to', u'to', u'TO'), (u'ask', u'ask', u'VB'), (u'about', u'about', u'IN'), (u'the', u'the', u'DT'), (u'pearl', u'pearl', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Next', ',', 'they', 'ran', 'to', 'a', 'special', 'store', 'to', 'ask', 'about', 'the', 'pearl', '.']}, {'string': ' The worker in the store told Bob and Sally that the pearl could make them rich.', 'parse': {'tree': '(ROOT (S (NP (NP (DT The) (NN worker)) (PP (IN in) (NP (DT the) (NN store)))) (VP (VBD told) (NP (NNP Bob) (CC and) (NNP Sally)) (SBAR (IN that) (S (NP (DT the) (NN pearl)) (VP (MD could) (VP (VB make) (S (NP (PRP them)) (ADJP (JJ rich)))))))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'worker', u'worker', u'NN'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'store', u'store', u'NN'), (u'told', u'tell', u'VBD'), (u'Bob', u'Bob', u'NNP'), (u'and', u'and', u'CC'), (u'Sally', u'Sally', u'NNP'), (u'that', u'that', u'IN'), (u'the', u'the', u'DT'), (u'pearl', u'pearl', u'NN'), (u'could', u'could', u'MD'), (u'make', u'make', u'VB'), (u'them', u'they', u'PRP'), (u'rich', u'rich', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'worker', 'in', 'the', 'store', 'told', 'Bob', 'and', 'Sally', 'that', 'the', 'pearl', 'could', 'make', 'them', 'rich', '.']}, {'string': ' Bob and Sally looked at each other and decided not to sell it.', 'parse': {'tree': '(ROOT (S (NP (NNP Bob) (CC and) (NNP Sally)) (VP (VP (VBD looked) (PP (IN at) (NP (DT each) (JJ other)))) (CC and) (VP (VBD decided) (S (RB not) (VP (TO to) (VP (VB sell) (NP (PRP it))))))) (. .)))', 'lemma': [(u'Bob', u'Bob', u'NNP'), (u'and', u'and', u'CC'), (u'Sally', u'Sally', u'NNP'), (u'looked', u'look', u'VBD'), (u'at', u'at', u'IN'), (u'each', u'each', u'DT'), (u'other', u'other', u'JJ'), (u'and', u'and', u'CC'), (u'decided', u'decide', u'VBD'), (u'not', u'not', u'RB'), (u'to', u'to', u'TO'), (u'sell', u'sell', u'VB'), (u'it', u'it', u'PRP'), (u'.', u'.', u'.')]}, 'tokens': ['Bob', 'and', 'Sally', 'looked', 'at', 'each', 'other', 'and', 'decided', 'not', 'to', 'sell', 'it', '.']}, {'string': ' They took the pearl home and saved it in a special box, so they could remember their day at the beach.', 'parse': {'tree': '(ROOT (S (S (NP (PRP They)) (VP (VP (VBD took) (NP (DT the) (NN pearl) (NN home))) (CC and) (VP (VBD saved) (NP (PRP it)) (PP (IN in) (NP (DT a) (JJ special) (NN box)))))) (, ,) (IN so) (S (NP (PRP they)) (VP (MD could) (VP (VB remember) (NP (PRP$ their) (NN day)) (PP (IN at) (NP (DT the) (NN beach)))))) (. .)))', 'lemma': [(u'They', u'they', u'PRP'), (u'took', u'take', u'VBD'), (u'the', u'the', u'DT'), (u'pearl', u'pearl', u'NN'), (u'home', u'home', u'NN'), (u'and', u'and', u'CC'), (u'saved', u'save', u'VBD'), (u'it', u'it', u'PRP'), (u'in', u'in', u'IN'), (u'a', u'a', u'DT'), (u'special', u'special', u'JJ'), (u'box', u'box', u'NN'), (u',', u',', u','), (u'so', u'so', u'IN'), (u'they', u'they', u'PRP'), (u'could', u'could', u'MD'), (u'remember', u'remember', u'VB'), (u'their', u'they', u'PRP$'), (u'day', u'day', u'NN'), (u'at', u'at', u'IN'), (u'the', u'the', u'DT'), (u'beach', u'beach', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['They', 'took', 'the', 'pearl', 'home', 'and', 'saved', 'it', 'in', 'a', 'special', 'box', ',', 'so', 'they', 'could', 'remember', 'their', 'day', 'at', 'the', 'beach', '.']}], 'questions': [{'question': {'string': ' What did Bob and Sally find in the box?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD did) (NP (NNP Bob) (CC and) (NNP Sally)) (VP (VB find) (PP (IN in) (NP (DT the) (NN box))))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'did', u'do', u'VBD'), (u'Bob', u'Bob', u'NNP'), (u'and', u'and', u'CC'), (u'Sally', u'Sally', u'NNP'), (u'find', u'find', u'VB'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'box', u'box', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'did', 'Bob', 'and', 'Sally', 'find', 'in', 'the', 'box', '?']}, 'answers': [{'string': ' A coin', 'parse': {'tree': '(ROOT (FRAG (NP (DT A) (NN coin))))', 'lemma': [(u'A', u'a', u'DT'), (u'coin', u'coin', u'NN')]}, 'tokens': ['A', 'coin']}, {'string': ' A pearl', 'parse': {'tree': '(ROOT (FRAG (NP (DT A) (NN pearl))))', 'lemma': [(u'A', u'a', u'DT'), (u'pearl', u'pearl', u'NN')]}, 'tokens': ['A', 'pearl']}, {'string': ' A ring', 'parse': {'tree': '(ROOT (FRAG (NP (DT A) (NN ring))))', 'lemma': [(u'A', u'a', u'DT'), (u'ring', u'ring', u'NN')]}, 'tokens': ['A', 'ring']}, {'string': ' A necklace', 'parse': {'tree': '(ROOT (FRAG (NP (DT A) (NN necklace))))', 'lemma': [(u'A', u'a', u'DT'), (u'necklace', u'necklace', u'NN')]}, 'tokens': ['A', 'necklace']}], 'mode': 1}, {'question': {'string': ' What did Sally find in the water?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD did) (NP (NNP Sally)) (VP (VB find) (PP (IN in) (NP (DT the) (NN water))))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'did', u'do', u'VBD'), (u'Sally', u'Sally', u'NNP'), (u'find', u'find', u'VB'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'water', u'water', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'did', 'Sally', 'find', 'in', 'the', 'water', '?']}, 'answers': [{'string': ' A shell', 'parse': {'tree': '(ROOT (FRAG (NP (DT A) (NN shell))))', 'lemma': [(u'A', u'a', u'DT'), (u'shell', u'shell', u'NN')]}, 'tokens': ['A', 'shell']}, {'string': ' A bucket', 'parse': {'tree': '(ROOT (FRAG (NP (DT A) (NN bucket))))', 'lemma': [(u'A', u'a', u'DT'), (u'bucket', u'bucket', u'NN')]}, 'tokens': ['A', 'bucket']}, {'string': ' A bottle', 'parse': {'tree': '(ROOT (FRAG (NP (DT A) (NN bottle))))', 'lemma': [(u'A', u'a', u'DT'), (u'bottle', u'bottle', u'NN')]}, 'tokens': ['A', 'bottle']}, {'string': ' A shovel', 'parse': {'tree': '(ROOT (FRAG (NP (DT A) (NN shovel))))', 'lemma': [(u'A', u'a', u'DT'), (u'shovel', u'shovel', u'NN')]}, 'tokens': ['A', 'shovel']}], 'mode': 1}, {'question': {'string': ' What did Bob and Sally do after they showed the pearl to the worker?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD did) (NP (NNP Bob) (CC and) (NNP Sally)) (VP (VB do) (SBAR (IN after) (S (NP (PRP they)) (VP (VBD showed) (NP (DT the) (NN pearl)) (PP (TO to) (NP (DT the) (NN worker)))))))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'did', u'do', u'VBD'), (u'Bob', u'Bob', u'NNP'), (u'and', u'and', u'CC'), (u'Sally', u'Sally', u'NNP'), (u'do', u'do', u'VB'), (u'after', u'after', u'IN'), (u'they', u'they', u'PRP'), (u'showed', u'show', u'VBD'), (u'the', u'the', u'DT'), (u'pearl', u'pearl', u'NN'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'worker', u'worker', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'did', 'Bob', 'and', 'Sally', 'do', 'after', 'they', 'showed', 'the', 'pearl', 'to', 'the', 'worker', '?']}, 'answers': [{'string': ' They sold it.', 'parse': {'tree': '(ROOT (S (NP (PRP They)) (VP (VBD sold) (NP (PRP it))) (. .)))', 'lemma': [(u'They', u'they', u'PRP'), (u'sold', u'sell', u'VBD'), (u'it', u'it', u'PRP'), (u'.', u'.', u'.')]}, 'tokens': ['They', 'sold', 'it', '.']}, {'string': ' They left it at the beach.', 'parse': {'tree': '(ROOT (S (NP (PRP They)) (VP (VBD left) (NP (PRP it)) (PP (IN at) (NP (DT the) (NN beach)))) (. .)))', 'lemma': [(u'They', u'they', u'PRP'), (u'left', u'leave', u'VBD'), (u'it', u'it', u'PRP'), (u'at', u'at', u'IN'), (u'the', u'the', u'DT'), (u'beach', u'beach', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['They', 'left', 'it', 'at', 'the', 'beach', '.']}, {'string': ' They took it home.', 'parse': {'tree': '(ROOT (S (NP (PRP They)) (VP (VBD took) (NP (PRP it)) (ADVP (RB home))) (. .)))', 'lemma': [(u'They', u'they', u'PRP'), (u'took', u'take', u'VBD'), (u'it', u'it', u'PRP'), (u'home', u'home', u'RB'), (u'.', u'.', u'.')]}, 'tokens': ['They', 'took', 'it', 'home', '.']}, {'string': ' They gave it away.', 'parse': {'tree': '(ROOT (S (NP (PRP They)) (VP (VBD gave) (NP (PRP it)) (ADVP (RB away))) (. .)))', 'lemma': [(u'They', u'they', u'PRP'), (u'gave', u'give', u'VBD'), (u'it', u'it', u'PRP'), (u'away', u'away', u'RB'), (u'.', u'.', u'.')]}, 'tokens': ['They', 'gave', 'it', 'away', '.']}], 'mode': 0}, {'question': {'string': ' Why did Bob and Sally stop looking for the treasure?', 'parse': {'tree': '(ROOT (SBARQ (WHADVP (WRB Why)) (SQ (VBD did) (NP (NNP Bob) (CC and) (NNP Sally)) (VP (VB stop) (S (VP (VBG looking) (PP (IN for) (NP (DT the) (NN treasure))))))) (. ?)))', 'lemma': [(u'Why', u'why', u'WRB'), (u'did', u'do', u'VBD'), (u'Bob', u'Bob', u'NNP'), (u'and', u'and', u'CC'), (u'Sally', u'Sally', u'NNP'), (u'stop', u'stop', u'VB'), (u'looking', u'look', u'VBG'), (u'for', u'for', u'IN'), (u'the', u'the', u'DT'), (u'treasure', u'treasure', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['Why', 'did', 'Bob', 'and', 'Sally', 'stop', 'looking', 'for', 'the', 'treasure', '?']}, 'answers': [{'string': ' They were sad at not finding anything.', 'parse': {'tree': '(ROOT (S (NP (PRP They)) (VP (VBD were) (ADJP (JJ sad) (PP (IN at) (S (RB not) (VP (VBG finding) (NP (NN anything))))))) (. .)))', 'lemma': [(u'They', u'they', u'PRP'), (u'were', u'be', u'VBD'), (u'sad', u'sad', u'JJ'), (u'at', u'at', u'IN'), (u'not', u'not', u'RB'), (u'finding', u'find', u'VBG'), (u'anything', u'anything', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['They', 'were', 'sad', 'at', 'not', 'finding', 'anything', '.']}, {'string': ' They forgot to bring a shovel.', 'parse': {'tree': '(ROOT (S (NP (PRP They)) (VP (VBD forgot) (S (VP (TO to) (VP (VB bring) (NP (DT a) (NN shovel)))))) (. .)))', 'lemma': [(u'They', u'they', u'PRP'), (u'forgot', u'forget', u'VBD'), (u'to', u'to', u'TO'), (u'bring', u'bring', u'VB'), (u'a', u'a', u'DT'), (u'shovel', u'shovel', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['They', 'forgot', 'to', 'bring', 'a', 'shovel', '.']}, {'string': ' They did not want to find the treasure.', 'parse': {'tree': '(ROOT (S (NP (PRP They)) (VP (VBD did) (RB not) (VP (VB want) (S (VP (TO to) (VP (VB find) (NP (DT the) (NN treasure))))))) (. .)))', 'lemma': [(u'They', u'they', u'PRP'), (u'did', u'do', u'VBD'), (u'not', u'not', u'RB'), (u'want', u'want', u'VB'), (u'to', u'to', u'TO'), (u'find', u'find', u'VB'), (u'the', u'the', u'DT'), (u'treasure', u'treasure', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['They', 'did', 'not', 'want', 'to', 'find', 'the', 'treasure', '.']}, {'string': ' They got hungry.', 'parse': {'tree': '(ROOT (S (NP (PRP They)) (VP (VBD got) (ADJP (JJ hungry))) (. .)))', 'lemma': [(u'They', u'they', u'PRP'), (u'got', u'get', u'VBD'), (u'hungry', u'hungry', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['They', 'got', 'hungry', '.']}], 'mode': 0}]}
{'sentences': [{'string': ' It was a beautiful sunny and warm day.', 'parse': {'tree': '(ROOT (S (NP (PRP It)) (VP (VBD was) (NP (DT a) (JJ beautiful) (ADJP (JJ sunny) (CC and) (JJ warm)) (NN day))) (. .)))', 'lemma': [(u'It', u'it', u'PRP'), (u'was', u'be', u'VBD'), (u'a', u'a', u'DT'), (u'beautiful', u'beautiful', u'JJ'), (u'sunny', u'sunny', u'JJ'), (u'and', u'and', u'CC'), (u'warm', u'warm', u'JJ'), (u'day', u'day', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['It', 'was', 'a', 'beautiful', 'sunny', 'and', 'warm', 'day', '.']}, {'string': ' I was working outside in my garden.', 'parse': {'tree': '(ROOT (S (NP (PRP I)) (VP (VBD was) (VP (VBG working) (ADVP (RB outside)) (PP (IN in) (NP (PRP$ my) (NN garden))))) (. .)))', 'lemma': [(u'I', u'I', u'PRP'), (u'was', u'be', u'VBD'), (u'working', u'work', u'VBG'), (u'outside', u'outside', u'RB'), (u'in', u'in', u'IN'), (u'my', u'my', u'PRP$'), (u'garden', u'garden', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['I', 'was', 'working', 'outside', 'in', 'my', 'garden', '.']}, {'string': ' I was pulling weeds which is not my favorite job, but I was enjoying the day.', 'parse': {'tree': '(ROOT (S (S (NP (PRP I)) (VP (VBD was) (VP (VBG pulling) (NP (NP (NNS weeds)) (SBAR (WHNP (WDT which)) (S (VP (VBZ is) (RB not) (NP (PRP$ my) (JJ favorite) (NN job))))))))) (, ,) (CC but) (S (NP (PRP I)) (VP (VBD was) (VP (VBG enjoying) (NP (DT the) (NN day))))) (. .)))', 'lemma': [(u'I', u'I', u'PRP'), (u'was', u'be', u'VBD'), (u'pulling', u'pull', u'VBG'), (u'weeds', u'weed', u'NNS'), (u'which', u'which', u'WDT'), (u'is', u'be', u'VBZ'), (u'not', u'not', u'RB'), (u'my', u'my', u'PRP$'), (u'favorite', u'favorite', u'JJ'), (u'job', u'job', u'NN'), (u',', u',', u','), (u'but', u'but', u'CC'), (u'I', u'I', u'PRP'), (u'was', u'be', u'VBD'), (u'enjoying', u'enjoy', u'VBG'), (u'the', u'the', u'DT'), (u'day', u'day', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['I', 'was', 'pulling', 'weeds', 'which', 'is', 'not', 'my', 'favorite', 'job', ',', 'but', 'I', 'was', 'enjoying', 'the', 'day', '.']}, {'string': ' I live by a lake so sometimes I take a break from my chores and look at the lake.', 'parse': {'tree': '(ROOT (S (NP (PRP I)) (VP (VBP live) (PP (IN by) (NP (DT a) (NN lake))) (ADVP (RB so) (RB sometimes) (SBAR (S (NP (PRP I)) (VP (VP (VB take) (NP (DT a) (NN break)) (PP (IN from) (NP (PRP$ my) (NNS chores)))) (CC and) (VP (VB look) (PP (IN at) (NP (DT the) (NN lake))))))))) (. .)))', 'lemma': [(u'I', u'I', u'PRP'), (u'live', u'live', u'VBP'), (u'by', u'by', u'IN'), (u'a', u'a', u'DT'), (u'lake', u'lake', u'NN'), (u'so', u'so', u'RB'), (u'sometimes', u'sometimes', u'RB'), (u'I', u'I', u'PRP'), (u'take', u'take', u'VB'), (u'a', u'a', u'DT'), (u'break', u'break', u'NN'), (u'from', u'from', u'IN'), (u'my', u'my', u'PRP$'), (u'chores', u'chore', u'NNS'), (u'and', u'and', u'CC'), (u'look', u'look', u'VB'), (u'at', u'at', u'IN'), (u'the', u'the', u'DT'), (u'lake', u'lake', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['I', 'live', 'by', 'a', 'lake', 'so', 'sometimes', 'I', 'take', 'a', 'break', 'from', 'my', 'chores', 'and', 'look', 'at', 'the', 'lake', '.']}, {'string': ' It is so beautiful and it makes me happy to look at the beautiful lake and see what animals I can find swimming in or near the lake.', 'parse': {'tree': '(ROOT (S (S (NP (PRP It)) (VP (VBZ is) (ADJP (RB so) (JJ beautiful)))) (CC and) (S (NP (PRP it)) (VP (VBZ makes) (S (NP (PRP me)) (ADJP (JJ happy) (S (VP (TO to) (VP (VP (VB look) (PP (IN at) (NP (DT the) (JJ beautiful) (NN lake)))) (CC and) (VP (VB see) (SBAR (WHNP (WP what) (NNS animals)) (S (NP (PRP I)) (VP (MD can) (VP (VB find) (NP (NN swimming)) (PP (IN in) (CC or) (IN near) (NP (DT the) (NN lake))))))))))))))) (. .)))', 'lemma': [(u'It', u'it', u'PRP'), (u'is', u'be', u'VBZ'), (u'so', u'so', u'RB'), (u'beautiful', u'beautiful', u'JJ'), (u'and', u'and', u'CC'), (u'it', u'it', u'PRP'), (u'makes', u'make', u'VBZ'), (u'me', u'I', u'PRP'), (u'happy', u'happy', u'JJ'), (u'to', u'to', u'TO'), (u'look', u'look', u'VB'), (u'at', u'at', u'IN'), (u'the', u'the', u'DT'), (u'beautiful', u'beautiful', u'JJ'), (u'lake', u'lake', u'NN'), (u'and', u'and', u'CC'), (u'see', u'see', u'VB'), (u'what', u'what', u'WP'), (u'animals', u'animal', u'NNS'), (u'I', u'I', u'PRP'), (u'can', u'can', u'MD'), (u'find', u'find', u'VB'), (u'swimming', u'swimming', u'NN'), (u'in', u'in', u'IN'), (u'or', u'or', u'CC'), (u'near', u'near', u'IN'), (u'the', u'the', u'DT'), (u'lake', u'lake', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['It', 'is', 'so', 'beautiful', 'and', 'it', 'makes', 'me', 'happy', 'to', 'look', 'at', 'the', 'beautiful', 'lake', 'and', 'see', 'what', 'animals', 'I', 'can', 'find', 'swimming', 'in', 'or', 'near', 'the', 'lake', '.']}, {'string': ' On this day, I kept hearing a low soft sound coming from the lake.', 'parse': {'tree': '(ROOT (S (PP (IN On) (NP (DT this) (NN day))) (, ,) (NP (PRP I)) (VP (VBD kept) (S (VP (VBG hearing) (NP (NP (DT a) (JJ low) (JJ soft) (NN sound)) (VP (VBG coming) (PP (IN from) (NP (DT the) (NN lake)))))))) (. .)))', 'lemma': [(u'On', u'on', u'IN'), (u'this', u'this', u'DT'), (u'day', u'day', u'NN'), (u',', u',', u','), (u'I', u'I', u'PRP'), (u'kept', u'keep', u'VBD'), (u'hearing', u'hear', u'VBG'), (u'a', u'a', u'DT'), (u'low', u'low', u'JJ'), (u'soft', u'soft', u'JJ'), (u'sound', u'sound', u'NN'), (u'coming', u'come', u'VBG'), (u'from', u'from', u'IN'), (u'the', u'the', u'DT'), (u'lake', u'lake', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['On', 'this', 'day', ',', 'I', 'kept', 'hearing', 'a', 'low', 'soft', 'sound', 'coming', 'from', 'the', 'lake', '.']}, {'string': ' I got up from my garden and walked to the lake.', 'parse': {'tree': '(ROOT (S (NP (PRP I)) (VP (VP (VBD got) (PRT (RP up)) (PP (IN from) (NP (PRP$ my) (NN garden)))) (CC and) (VP (VBD walked) (PP (TO to) (NP (DT the) (NN lake))))) (. .)))', 'lemma': [(u'I', u'I', u'PRP'), (u'got', u'get', u'VBD'), (u'up', u'up', u'RP'), (u'from', u'from', u'IN'), (u'my', u'my', u'PRP$'), (u'garden', u'garden', u'NN'), (u'and', u'and', u'CC'), (u'walked', u'walk', u'VBD'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'lake', u'lake', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['I', 'got', 'up', 'from', 'my', 'garden', 'and', 'walked', 'to', 'the', 'lake', '.']}, {'string': ' I kept hearing this strange sound.', 'parse': {'tree': '(ROOT (S (NP (PRP I)) (VP (VBD kept) (S (VP (VBG hearing) (NP (DT this) (JJ strange) (NN sound))))) (. .)))', 'lemma': [(u'I', u'I', u'PRP'), (u'kept', u'keep', u'VBD'), (u'hearing', u'hear', u'VBG'), (u'this', u'this', u'DT'), (u'strange', u'strange', u'JJ'), (u'sound', u'sound', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['I', 'kept', 'hearing', 'this', 'strange', 'sound', '.']}, {'string': ' It sounded like someone talking in a very low voice.', 'parse': {'tree': '(ROOT (S (NP (PRP It)) (VP (VBD sounded) (PP (IN like) (NP (NN someone))) (S (VP (VBG talking) (PP (IN in) (NP (DT a) (ADJP (RB very) (JJ low)) (NN voice)))))) (. .)))', 'lemma': [(u'It', u'it', u'PRP'), (u'sounded', u'sound', u'VBD'), (u'like', u'like', u'IN'), (u'someone', u'someone', u'NN'), (u'talking', u'talk', u'VBG'), (u'in', u'in', u'IN'), (u'a', u'a', u'DT'), (u'very', u'very', u'RB'), (u'low', u'low', u'JJ'), (u'voice', u'voice', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['It', 'sounded', 'like', 'someone', 'talking', 'in', 'a', 'very', 'low', 'voice', '.']}, {'string': ' I thought it might be a lake bird because we see and hear them all of the time.', 'parse': {'tree': '(ROOT (S (NP (PRP I)) (VP (VBD thought) (SBAR (S (NP (PRP it)) (VP (MD might) (VP (VP (VB be) (NP (DT a) (NN lake) (NN bird)) (SBAR (IN because) (S (NP (PRP we)) (VP (VBP see))))) (CC and) (VP (VB hear) (S (NP (PRP them)) (NP (NP (DT all)) (PP (IN of) (NP (DT the) (NN time))))))))))) (. .)))', 'lemma': [(u'I', u'I', u'PRP'), (u'thought', u'think', u'VBD'), (u'it', u'it', u'PRP'), (u'might', u'might', u'MD'), (u'be', u'be', u'VB'), (u'a', u'a', u'DT'), (u'lake', u'lake', u'NN'), (u'bird', u'bird', u'NN'), (u'because', u'because', u'IN'), (u'we', u'we', u'PRP'), (u'see', u'see', u'VBP'), (u'and', u'and', u'CC'), (u'hear', u'hear', u'VB'), (u'them', u'they', u'PRP'), (u'all', u'all', u'DT'), (u'of', u'of', u'IN'), (u'the', u'the', u'DT'), (u'time', u'time', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['I', 'thought', 'it', 'might', 'be', 'a', 'lake', 'bird', 'because', 'we', 'see', 'and', 'hear', 'them', 'all', 'of', 'the', 'time', '.']}, {'string': " The lake birds have several different calls that tell what they want to `` say '' to other lake birds.", 'parse': {'tree': "(ROOT (S (NP (DT The) (NN lake) (NNS birds)) (VP (VBP have) (NP (NP (JJ several) (JJ different) (NNS calls)) (SBAR (WHNP (WDT that)) (S (VP (VBP tell) (SBAR (WHNP (WP what)) (S (NP (PRP they)) (VP (VBP want) (S (VP (TO to) (VP (`` ``) (VB say) ('' '') (PP (TO to) (NP (JJ other) (NN lake) (NNS birds)))))))))))))) (. .)))", 'lemma': [(u'The', u'the', u'DT'), (u'lake', u'lake', u'NN'), (u'birds', u'bird', u'NNS'), (u'have', u'have', u'VBP'), (u'several', u'several', u'JJ'), (u'different', u'different', u'JJ'), (u'calls', u'call', u'NNS'), (u'that', u'that', u'WDT'), (u'tell', u'tell', u'VBP'), (u'what', u'what', u'WP'), (u'they', u'they', u'PRP'), (u'want', u'want', u'VBP'), (u'to', u'to', u'TO'), (u'``', u'``', u'``'), (u'say', u'say', u'VB'), (u"''", u"''", u"''"), (u'to', u'to', u'TO'), (u'other', u'other', u'JJ'), (u'lake', u'lake', u'NN'), (u'birds', u'bird', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'lake', 'birds', 'have', 'several', 'different', 'calls', 'that', 'tell', 'what', 'they', 'want', 'to', '``', 'say', "''", 'to', 'other', 'lake', 'birds', '.']}, {'string': ' There is the call when they are flying which is very hurried and short.', 'parse': {'tree': '(ROOT (S (NP (EX There)) (VP (VBZ is) (NP (NP (DT the) (NN call)) (SBAR (WHADVP (WRB when)) (S (NP (PRP they)) (VP (VBP are) (VP (VBG flying) (SBAR (WHNP (WDT which)) (S (VP (VBZ is) (ADJP (RB very) (JJ hurried) (CC and) (JJ short))))))))))) (. .)))', 'lemma': [(u'There', u'there', u'EX'), (u'is', u'be', u'VBZ'), (u'the', u'the', u'DT'), (u'call', u'call', u'NN'), (u'when', u'when', u'WRB'), (u'they', u'they', u'PRP'), (u'are', u'be', u'VBP'), (u'flying', u'fly', u'VBG'), (u'which', u'which', u'WDT'), (u'is', u'be', u'VBZ'), (u'very', u'very', u'RB'), (u'hurried', u'hurried', u'JJ'), (u'and', u'and', u'CC'), (u'short', u'short', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['There', 'is', 'the', 'call', 'when', 'they', 'are', 'flying', 'which', 'is', 'very', 'hurried', 'and', 'short', '.']}, {'string': " Then there is the `` where are you '' call which is long, slow and loud.", 'parse': {'tree': "(ROOT (S (RB Then) (NP (EX there)) (VP (VBZ is) (NP (NP (DT the)) (`` ``) (SBAR (WHADVP (WRB where)) (S (VP (VBP are) (NP (NP (PRP you)) ('' '') (SBAR (S (VP (VBP call) (SBAR (WHNP (WDT which)) (S (VP (VBZ is) (ADJP (JJ long) (, ,) (JJ slow) (CC and) (JJ loud)))))))))))))) (. .)))", 'lemma': [(u'Then', u'then', u'RB'), (u'there', u'there', u'EX'), (u'is', u'be', u'VBZ'), (u'the', u'the', u'DT'), (u'``', u'``', u'``'), (u'where', u'where', u'WRB'), (u'are', u'be', u'VBP'), (u'you', u'you', u'PRP'), (u"''", u"''", u"''"), (u'call', u'call', u'VBP'), (u'which', u'which', u'WDT'), (u'is', u'be', u'VBZ'), (u'long', u'long', u'JJ'), (u',', u',', u','), (u'slow', u'slow', u'JJ'), (u'and', u'and', u'CC'), (u'loud', u'loud', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['Then', 'there', 'is', 'the', '``', 'where', 'are', 'you', "''", 'call', 'which', 'is', 'long', ',', 'slow', 'and', 'loud', '.']}, {'string': ' But this sound was not like any I had ever heard.', 'parse': {'tree': '(ROOT (S (CC But) (NP (DT this) (NN sound)) (VP (VBD was) (RB not) (PP (IN like) (NP (NP (DT any)) (SBAR (S (NP (PRP I)) (VP (VBD had) (ADVP (RB ever)) (VP (VBN heard)))))))) (. .)))', 'lemma': [(u'But', u'but', u'CC'), (u'this', u'this', u'DT'), (u'sound', u'sound', u'NN'), (u'was', u'be', u'VBD'), (u'not', u'not', u'RB'), (u'like', u'like', u'IN'), (u'any', u'any', u'DT'), (u'I', u'I', u'PRP'), (u'had', u'have', u'VBD'), (u'ever', u'ever', u'RB'), (u'heard', u'hear', u'VBN'), (u'.', u'.', u'.')]}, 'tokens': ['But', 'this', 'sound', 'was', 'not', 'like', 'any', 'I', 'had', 'ever', 'heard', '.']}, {'string': ' I went to get the binoculars to see if I could spot anything.', 'parse': {'tree': '(ROOT (S (NP (PRP I)) (VP (VBD went) (S (VP (TO to) (VP (VB get) (S (NP (DT the) (NNS binoculars)) (VP (TO to) (VP (VB see) (SBAR (IN if) (S (NP (PRP I)) (VP (MD could) (VP (VB spot) (NP (NN anything))))))))))))) (. .)))', 'lemma': [(u'I', u'I', u'PRP'), (u'went', u'go', u'VBD'), (u'to', u'to', u'TO'), (u'get', u'get', u'VB'), (u'the', u'the', u'DT'), (u'binoculars', u'binoculars', u'NNS'), (u'to', u'to', u'TO'), (u'see', u'see', u'VB'), (u'if', u'if', u'IN'), (u'I', u'I', u'PRP'), (u'could', u'could', u'MD'), (u'spot', u'spot', u'VB'), (u'anything', u'anything', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['I', 'went', 'to', 'get', 'the', 'binoculars', 'to', 'see', 'if', 'I', 'could', 'spot', 'anything', '.']}, {'string': ' But, no luck.', 'parse': {'tree': '(ROOT (FRAG (CC But) (, ,) (NP (DT no) (NN luck)) (. .)))', 'lemma': [(u'But', u'but', u'CC'), (u',', u',', u','), (u'no', u'no', u'DT'), (u'luck', u'luck', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['But', ',', 'no', 'luck', '.']}, {'string': ' I still kept hearing this low talking sound.', 'parse': {'tree': '(ROOT (S (NP (PRP I)) (ADVP (RB still)) (VP (VBD kept) (S (VP (VBG hearing) (NP (DT this) (JJ low) (VBG talking) (NN sound))))) (. .)))', 'lemma': [(u'I', u'I', u'PRP'), (u'still', u'still', u'RB'), (u'kept', u'keep', u'VBD'), (u'hearing', u'hear', u'VBG'), (u'this', u'this', u'DT'), (u'low', u'low', u'JJ'), (u'talking', u'talk', u'VBG'), (u'sound', u'sound', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['I', 'still', 'kept', 'hearing', 'this', 'low', 'talking', 'sound', '.']}, {'string': ' I had now totally given up weeding.', 'parse': {'tree': '(ROOT (S (NP (PRP I)) (VP (VBD had) (ADVP (RB now)) (VP (ADVP (RB totally)) (VBN given) (PRT (RP up)) (S (VP (VBG weeding))))) (. .)))', 'lemma': [(u'I', u'I', u'PRP'), (u'had', u'have', u'VBD'), (u'now', u'now', u'RB'), (u'totally', u'totally', u'RB'), (u'given', u'give', u'VBN'), (u'up', u'up', u'RP'), (u'weeding', u'weed', u'VBG'), (u'.', u'.', u'.')]}, 'tokens': ['I', 'had', 'now', 'totally', 'given', 'up', 'weeding', '.']}, {'string': ' Finding this strange sound was going to be more fun.', 'parse': {'tree': '(ROOT (S (S (VP (VBG Finding) (NP (DT this) (JJ strange) (NN sound)))) (VP (VBD was) (VP (VBG going) (S (VP (TO to) (VP (VB be) (NP (JJR more) (NN fun))))))) (. .)))', 'lemma': [(u'Finding', u'find', u'VBG'), (u'this', u'this', u'DT'), (u'strange', u'strange', u'JJ'), (u'sound', u'sound', u'NN'), (u'was', u'be', u'VBD'), (u'going', u'go', u'VBG'), (u'to', u'to', u'TO'), (u'be', u'be', u'VB'), (u'more', u'more', u'JJR'), (u'fun', u'fun', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Finding', 'this', 'strange', 'sound', 'was', 'going', 'to', 'be', 'more', 'fun', '.']}, {'string': ' But where was it coming from?', 'parse': {'tree': '(ROOT (SBARQ (CC But) (WHADVP (WRB where)) (SQ (VBD was) (NP (PRP it)) (VP (VBG coming) (PP (IN from)))) (. ?)))', 'lemma': [(u'But', u'but', u'CC'), (u'where', u'where', u'WRB'), (u'was', u'be', u'VBD'), (u'it', u'it', u'PRP'), (u'coming', u'come', u'VBG'), (u'from', u'from', u'IN'), (u'?', u'?', u'.')]}, 'tokens': ['But', 'where', 'was', 'it', 'coming', 'from', '?']}, {'string': ' I looked again up and down the lake and saw nothing.', 'parse': {'tree': '(ROOT (S (NP (PRP I)) (VP (VP (VBD looked) (ADVP (RB again) (RB up) (CC and) (RB down)) (NP (DT the) (NN lake))) (CC and) (VP (VBD saw) (NP (NN nothing)))) (. .)))', 'lemma': [(u'I', u'I', u'PRP'), (u'looked', u'look', u'VBD'), (u'again', u'again', u'RB'), (u'up', u'up', u'RB'), (u'and', u'and', u'CC'), (u'down', u'down', u'RB'), (u'the', u'the', u'DT'), (u'lake', u'lake', u'NN'), (u'and', u'and', u'CC'), (u'saw', u'see', u'VBD'), (u'nothing', u'nothing', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['I', 'looked', 'again', 'up', 'and', 'down', 'the', 'lake', 'and', 'saw', 'nothing', '.']}, {'string': ' Finally I went around to the other side of the place where we keep our boats.', 'parse': {'tree': '(ROOT (S (ADVP (RB Finally)) (NP (PRP I)) (VP (VBD went) (PRT (RP around)) (PP (TO to) (NP (NP (DT the) (JJ other) (NN side)) (PP (IN of) (NP (DT the) (NN place))))) (SBAR (WHADVP (WRB where)) (S (NP (PRP we)) (VP (VBP keep) (NP (PRP$ our) (NNS boats)))))) (. .)))', 'lemma': [(u'Finally', u'finally', u'RB'), (u'I', u'I', u'PRP'), (u'went', u'go', u'VBD'), (u'around', u'around', u'RP'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'other', u'other', u'JJ'), (u'side', u'side', u'NN'), (u'of', u'of', u'IN'), (u'the', u'the', u'DT'), (u'place', u'place', u'NN'), (u'where', u'where', u'WRB'), (u'we', u'we', u'PRP'), (u'keep', u'keep', u'VBP'), (u'our', u'we', u'PRP$'), (u'boats', u'boat', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['Finally', 'I', 'went', 'around', 'to', 'the', 'other', 'side', 'of', 'the', 'place', 'where', 'we', 'keep', 'our', 'boats', '.']}, {'string': ' There is an area there where it is not a very deep part of the water.', 'parse': {'tree': '(ROOT (S (NP (EX There)) (VP (VBZ is) (ADVP (NP (DT an) (NN area)) (RB there)) (SBAR (WHADVP (WRB where)) (S (NP (PRP it)) (VP (VBZ is) (RB not) (NP (NP (DT a) (ADJP (RB very) (JJ deep)) (NN part)) (PP (IN of) (NP (DT the) (NN water)))))))) (. .)))', 'lemma': [(u'There', u'there', u'EX'), (u'is', u'be', u'VBZ'), (u'an', u'a', u'DT'), (u'area', u'area', u'NN'), (u'there', u'there', u'RB'), (u'where', u'where', u'WRB'), (u'it', u'it', u'PRP'), (u'is', u'be', u'VBZ'), (u'not', u'not', u'RB'), (u'a', u'a', u'DT'), (u'very', u'very', u'RB'), (u'deep', u'deep', u'JJ'), (u'part', u'part', u'NN'), (u'of', u'of', u'IN'), (u'the', u'the', u'DT'), (u'water', u'water', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['There', 'is', 'an', 'area', 'there', 'where', 'it', 'is', 'not', 'a', 'very', 'deep', 'part', 'of', 'the', 'water', '.']}, {'string': ' I spotted them!', 'parse': {'tree': '(ROOT (S (NP (PRP I)) (VP (VBD spotted) (NP (PRP them))) (. !)))', 'lemma': [(u'I', u'I', u'PRP'), (u'spotted', u'spot', u'VBD'), (u'them', u'they', u'PRP'), (u'!', u'!', u'.')]}, 'tokens': ['I', 'spotted', 'them', '!']}, {'string': ' It was a mother lake bird and a father lake bird with a baby in between them.', 'parse': {'tree': '(ROOT (S (NP (PRP It)) (VP (VBD was) (NP (NP (DT a) (NN mother) (NN lake) (NN bird)) (CC and) (NP (NP (DT a) (NN father) (NN lake) (NN bird)) (PP (IN with) (NP (DT a) (NN baby))))) (PP (IN in) (PP (IN between) (NP (PRP them))))) (. .)))', 'lemma': [(u'It', u'it', u'PRP'), (u'was', u'be', u'VBD'), (u'a', u'a', u'DT'), (u'mother', u'mother', u'NN'), (u'lake', u'lake', u'NN'), (u'bird', u'bird', u'NN'), (u'and', u'and', u'CC'), (u'a', u'a', u'DT'), (u'father', u'father', u'NN'), (u'lake', u'lake', u'NN'), (u'bird', u'bird', u'NN'), (u'with', u'with', u'IN'), (u'a', u'a', u'DT'), (u'baby', u'baby', u'NN'), (u'in', u'in', u'IN'), (u'between', u'between', u'IN'), (u'them', u'they', u'PRP'), (u'.', u'.', u'.')]}, 'tokens': ['It', 'was', 'a', 'mother', 'lake', 'bird', 'and', 'a', 'father', 'lake', 'bird', 'with', 'a', 'baby', 'in', 'between', 'them', '.']}, {'string': ' They were teaching the baby how to swim and eat fish.', 'parse': {'tree': '(ROOT (S (NP (PRP They)) (VP (VBD were) (VP (VBG teaching) (NP (DT the) (NN baby)) (SBAR (WHADVP (WRB how)) (S (VP (TO to) (VP (VB swim) (CC and) (VB eat) (NP (NN fish)))))))) (. .)))', 'lemma': [(u'They', u'they', u'PRP'), (u'were', u'be', u'VBD'), (u'teaching', u'teach', u'VBG'), (u'the', u'the', u'DT'), (u'baby', u'baby', u'NN'), (u'how', u'how', u'WRB'), (u'to', u'to', u'TO'), (u'swim', u'swim', u'VB'), (u'and', u'and', u'CC'), (u'eat', u'eat', u'VB'), (u'fish', u'fish', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['They', 'were', 'teaching', 'the', 'baby', 'how', 'to', 'swim', 'and', 'eat', 'fish', '.']}, {'string': ' The low talking sound that I heard must have been them trying to teach the baby to swim and eat the fish.', 'parse': {'tree': '(ROOT (S (NP (NP (DT The) (JJ low) (VBG talking) (NN sound)) (SBAR (IN that) (S (NP (PRP I)) (VP (VBD heard))))) (VP (MD must) (VP (VB have) (VP (VBN been) (NP (NP (PRP them)) (VP (VBG trying) (S (VP (TO to) (VP (VB teach) (NP (DT the) (NN baby) (S (VP (TO to) (VP (VB swim) (CC and) (VB eat) (NP (DT the) (NN fish)))))))))))))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'low', u'low', u'JJ'), (u'talking', u'talk', u'VBG'), (u'sound', u'sound', u'NN'), (u'that', u'that', u'IN'), (u'I', u'I', u'PRP'), (u'heard', u'hear', u'VBD'), (u'must', u'must', u'MD'), (u'have', u'have', u'VB'), (u'been', u'be', u'VBN'), (u'them', u'they', u'PRP'), (u'trying', u'try', u'VBG'), (u'to', u'to', u'TO'), (u'teach', u'teach', u'VB'), (u'the', u'the', u'DT'), (u'baby', u'baby', u'NN'), (u'to', u'to', u'TO'), (u'swim', u'swim', u'VB'), (u'and', u'and', u'CC'), (u'eat', u'eat', u'VB'), (u'the', u'the', u'DT'), (u'fish', u'fish', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'low', 'talking', 'sound', 'that', 'I', 'heard', 'must', 'have', 'been', 'them', 'trying', 'to', 'teach', 'the', 'baby', 'to', 'swim', 'and', 'eat', 'the', 'fish', '.']}, {'string': ' I sat there on the bank and watched for a half an hour.', 'parse': {'tree': '(ROOT (S (NP (PRP I)) (VP (VP (VBD sat) (ADVP (RB there)) (PP (IN on) (NP (DT the) (NN bank)))) (CC and) (VP (VBD watched) (PP (IN for) (NP (NP (DT a) (NN half)) (NP (DT an) (NN hour)))))) (. .)))', 'lemma': [(u'I', u'I', u'PRP'), (u'sat', u'sit', u'VBD'), (u'there', u'there', u'RB'), (u'on', u'on', u'IN'), (u'the', u'the', u'DT'), (u'bank', u'bank', u'NN'), (u'and', u'and', u'CC'), (u'watched', u'watch', u'VBD'), (u'for', u'for', u'IN'), (u'a', u'a', u'DT'), (u'half', u'half', u'NN'), (u'an', u'a', u'DT'), (u'hour', u'hour', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['I', 'sat', 'there', 'on', 'the', 'bank', 'and', 'watched', 'for', 'a', 'half', 'an', 'hour', '.']}, {'string': ' I felt very special that I got to see this.', 'parse': {'tree': '(ROOT (S (NP (PRP I)) (VP (VBD felt) (ADJP (RB very) (JJ special)) (SBAR (IN that) (S (NP (PRP I)) (VP (VBD got) (S (VP (TO to) (VP (VB see) (NP (DT this))))))))) (. .)))', 'lemma': [(u'I', u'I', u'PRP'), (u'felt', u'feel', u'VBD'), (u'very', u'very', u'RB'), (u'special', u'special', u'JJ'), (u'that', u'that', u'IN'), (u'I', u'I', u'PRP'), (u'got', u'get', u'VBD'), (u'to', u'to', u'TO'), (u'see', u'see', u'VB'), (u'this', u'this', u'DT'), (u'.', u'.', u'.')]}, 'tokens': ['I', 'felt', 'very', 'special', 'that', 'I', 'got', 'to', 'see', 'this', '.']}, {'string': ' It was such a fun thing to see and way more fun than gardening.', 'parse': {'tree': '(ROOT (S (NP (PRP It)) (VP (VBD was) (NP (NP (NP (PDT such) (DT a) (NN fun) (NN thing)) (SBAR (S (VP (TO to) (VP (VB see)))))) (CC and) (ADVP (NN way)) (NP (NP (JJR more) (NN fun)) (PP (IN than) (NP (NN gardening)))))) (. .)))', 'lemma': [(u'It', u'it', u'PRP'), (u'was', u'be', u'VBD'), (u'such', u'such', u'PDT'), (u'a', u'a', u'DT'), (u'fun', u'fun', u'NN'), (u'thing', u'thing', u'NN'), (u'to', u'to', u'TO'), (u'see', u'see', u'VB'), (u'and', u'and', u'CC'), (u'way', u'way', u'NN'), (u'more', u'more', u'JJR'), (u'fun', u'fun', u'NN'), (u'than', u'than', u'IN'), (u'gardening', u'gardening', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['It', 'was', 'such', 'a', 'fun', 'thing', 'to', 'see', 'and', 'way', 'more', 'fun', 'than', 'gardening', '.']}], 'questions': [{'question': {'string': ' What was I doing on this day at the beginning of the story?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD was) (NP (PRP I)) (VP (VBG doing) (PP (IN on) (NP (NP (DT this) (NN day)) (PP (IN at) (NP (NP (DT the) (NN beginning)) (PP (IN of) (NP (DT the) (NN story))))))))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'was', u'be', u'VBD'), (u'I', u'I', u'PRP'), (u'doing', u'do', u'VBG'), (u'on', u'on', u'IN'), (u'this', u'this', u'DT'), (u'day', u'day', u'NN'), (u'at', u'at', u'IN'), (u'the', u'the', u'DT'), (u'beginning', u'beginning', u'NN'), (u'of', u'of', u'IN'), (u'the', u'the', u'DT'), (u'story', u'story', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'was', 'I', 'doing', 'on', 'this', 'day', 'at', 'the', 'beginning', 'of', 'the', 'story', '?']}, 'answers': [{'string': ' fishing', 'parse': {'tree': '(ROOT (NP (NN fishing)))', 'lemma': [(u'fishing', u'fishing', u'NN')]}, 'tokens': ['fishing']}, {'string': ' sleeping', 'parse': {'tree': '(ROOT (NP (NN sleeping)))', 'lemma': [(u'sleeping', u'sleeping', u'NN')]}, 'tokens': ['sleeping']}, {'string': ' working in the garden', 'parse': {'tree': '(ROOT (S (VP (VBG working) (PP (IN in) (NP (DT the) (NN garden))))))', 'lemma': [(u'working', u'work', u'VBG'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'garden', u'garden', u'NN')]}, 'tokens': ['working', 'in', 'the', 'garden']}, {'string': ' cooking', 'parse': {'tree': '(ROOT (NP (NN cooking)))', 'lemma': [(u'cooking', u'cooking', u'NN')]}, 'tokens': ['cooking']}], 'mode': 1}, {'question': {'string': ' What did I finally see?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD did) (NP (PRP I)) (ADVP (RB finally)) (VP (VB see))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'did', u'do', u'VBD'), (u'I', u'I', u'PRP'), (u'finally', u'finally', u'RB'), (u'see', u'see', u'VB'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'did', 'I', 'finally', 'see', '?']}, 'answers': [{'string': ' two lake birds', 'parse': {'tree': '(ROOT (NP (NP (CD two) (NN lake)) (NP (NNS birds))))', 'lemma': [(u'two', u'two', u'CD'), (u'lake', u'lake', u'NN'), (u'birds', u'bird', u'NNS')]}, 'tokens': ['two', 'lake', 'birds']}, {'string': ' four lake birds', 'parse': {'tree': '(ROOT (NP (NP (CD four) (NN lake)) (NP (NNS birds))))', 'lemma': [(u'four', u'four', u'CD'), (u'lake', u'lake', u'NN'), (u'birds', u'bird', u'NNS')]}, 'tokens': ['four', 'lake', 'birds']}, {'string': ' three lake birds', 'parse': {'tree': '(ROOT (NP (NP (CD three) (NN lake)) (NP (NNS birds))))', 'lemma': [(u'three', u'three', u'CD'), (u'lake', u'lake', u'NN'), (u'birds', u'bird', u'NNS')]}, 'tokens': ['three', 'lake', 'birds']}, {'string': ' one lake bird', 'parse': {'tree': '(ROOT (NP (NP (CD one) (NN lake)) (NP (NN bird))))', 'lemma': [(u'one', u'one', u'CD'), (u'lake', u'lake', u'NN'), (u'bird', u'bird', u'NN')]}, 'tokens': ['one', 'lake', 'bird']}], 'mode': 1}, {'question': {'string': ' What was the sound that I kept hearing?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD was) (NP (DT the) (NN sound)) (SBAR (IN that) (S (NP (PRP I)) (VP (VBD kept) (NP (NN hearing)))))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'was', u'be', u'VBD'), (u'the', u'the', u'DT'), (u'sound', u'sound', u'NN'), (u'that', u'that', u'IN'), (u'I', u'I', u'PRP'), (u'kept', u'keep', u'VBD'), (u'hearing', u'hearing', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'was', 'the', 'sound', 'that', 'I', 'kept', 'hearing', '?']}, 'answers': [{'string': ' something that sounded like laughing', 'parse': {'tree': '(ROOT (NP (NP (NP (NN something)) (SBAR (WHNP (WDT that)) (S (VP (VBD sounded))))) (PP (IN like) (S (VP (VBG laughing))))))', 'lemma': [(u'something', u'something', u'NN'), (u'that', u'that', u'WDT'), (u'sounded', u'sound', u'VBD'), (u'like', u'like', u'IN'), (u'laughing', u'laugh', u'VBG')]}, 'tokens': ['something', 'that', 'sounded', 'like', 'laughing']}, {'string': ' something that sounded like low talking', 'parse': {'tree': '(ROOT (FRAG (NP (NN something)) (SBAR (WHNP (WDT that)) (S (VP (VBD sounded) (PP (IN like) (NP (JJ low) (NN talking))))))))', 'lemma': [(u'something', u'something', u'NN'), (u'that', u'that', u'WDT'), (u'sounded', u'sound', u'VBD'), (u'like', u'like', u'IN'), (u'low', u'low', u'JJ'), (u'talking', u'talking', u'NN')]}, 'tokens': ['something', 'that', 'sounded', 'like', 'low', 'talking']}, {'string': ' something that sounded like crying', 'parse': {'tree': '(ROOT (NP (NP (NP (NN something)) (SBAR (WHNP (WDT that)) (S (VP (VBD sounded))))) (PP (IN like) (S (VP (VBG crying))))))', 'lemma': [(u'something', u'something', u'NN'), (u'that', u'that', u'WDT'), (u'sounded', u'sound', u'VBD'), (u'like', u'like', u'IN'), (u'crying', u'cry', u'VBG')]}, 'tokens': ['something', 'that', 'sounded', 'like', 'crying']}, {'string': ' something that sounded like singing', 'parse': {'tree': '(ROOT (FRAG (NP (NN something)) (SBAR (WHNP (WDT that)) (S (VP (VBD sounded) (PP (IN like) (NP (NN singing))))))))', 'lemma': [(u'something', u'something', u'NN'), (u'that', u'that', u'WDT'), (u'sounded', u'sound', u'VBD'), (u'like', u'like', u'IN'), (u'singing', u'singing', u'NN')]}, 'tokens': ['something', 'that', 'sounded', 'like', 'singing']}], 'mode': 0}, {'question': {'string': ' How did I feel at the end of the story?', 'parse': {'tree': '(ROOT (SBARQ (WHADVP (WRB How)) (SQ (VBD did) (NP (PRP I)) (VP (VB feel) (PP (IN at) (NP (NP (DT the) (NN end)) (PP (IN of) (NP (DT the) (NN story))))))) (. ?)))', 'lemma': [(u'How', u'how', u'WRB'), (u'did', u'do', u'VBD'), (u'I', u'I', u'PRP'), (u'feel', u'feel', u'VB'), (u'at', u'at', u'IN'), (u'the', u'the', u'DT'), (u'end', u'end', u'NN'), (u'of', u'of', u'IN'), (u'the', u'the', u'DT'), (u'story', u'story', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['How', 'did', 'I', 'feel', 'at', 'the', 'end', 'of', 'the', 'story', '?']}, 'answers': [{'string': ' happy', 'parse': {'tree': '(ROOT (ADJP (JJ happy)))', 'lemma': [(u'happy', u'happy', u'JJ')]}, 'tokens': ['happy']}, {'string': ' sick', 'parse': {'tree': '(ROOT (ADJP (JJ sick)))', 'lemma': [(u'sick', u'sick', u'JJ')]}, 'tokens': ['sick']}, {'string': ' sad', 'parse': {'tree': '(ROOT (ADJP (JJ sad)))', 'lemma': [(u'sad', u'sad', u'JJ')]}, 'tokens': ['sad']}, {'string': ' glum', 'parse': {'tree': '(ROOT (NP (NN glum)))', 'lemma': [(u'glum', u'glum', u'NN')]}, 'tokens': ['glum']}], 'mode': 0}]}
{'sentences': [{'string': ' One day Magneson took a walk in the park.', 'parse': {'tree': '(ROOT (S (NP (CD One) (NN day)) (NP (NNP Magneson)) (VP (VBD took) (NP (DT a) (NN walk)) (PP (IN in) (NP (DT the) (NN park)))) (. .)))', 'lemma': [(u'One', u'one', u'CD'), (u'day', u'day', u'NN'), (u'Magneson', u'Magneson', u'NNP'), (u'took', u'take', u'VBD'), (u'a', u'a', u'DT'), (u'walk', u'walk', u'NN'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'park', u'park', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['One', 'day', 'Magneson', 'took', 'a', 'walk', 'in', 'the', 'park', '.']}, {'string': ' He passed some trees and a pond.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD passed) (NP (NP (DT some) (NNS trees)) (CC and) (NP (DT a) (NN pond)))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'passed', u'pass', u'VBD'), (u'some', u'some', u'DT'), (u'trees', u'tree', u'NNS'), (u'and', u'and', u'CC'), (u'a', u'a', u'DT'), (u'pond', u'pond', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'passed', 'some', 'trees', 'and', 'a', 'pond', '.']}, {'string': ' In the pond was a duck named George.', 'parse': {'tree': '(ROOT (SINV (PP (IN In) (NP (DT the) (NN pond))) (VP (VBD was)) (NP (NP (DT a) (NN duck)) (VP (VBN named) (NP (NNP George)))) (. .)))', 'lemma': [(u'In', u'in', u'IN'), (u'the', u'the', u'DT'), (u'pond', u'pond', u'NN'), (u'was', u'be', u'VBD'), (u'a', u'a', u'DT'), (u'duck', u'duck', u'NN'), (u'named', u'name', u'VBN'), (u'George', u'George', u'NNP'), (u'.', u'.', u'.')]}, 'tokens': ['In', 'the', 'pond', 'was', 'a', 'duck', 'named', 'George', '.']}, {'string': " George 's wife was also in the pond.", 'parse': {'tree': "(ROOT (S (NP (NP (NNP George) (POS 's)) (NN wife)) (VP (VBD was) (ADVP (RB also)) (PP (IN in) (NP (DT the) (NN pond)))) (. .)))", 'lemma': [(u'George', u'George', u'NNP'), (u"'s", u"'s", u'POS'), (u'wife', u'wife', u'NN'), (u'was', u'be', u'VBD'), (u'also', u'also', u'RB'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'pond', u'pond', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['George', "'s", 'wife', 'was', 'also', 'in', 'the', 'pond', '.']}, {'string': ' Her name was Nancy.', 'parse': {'tree': '(ROOT (S (NP (PRP$ Her) (NN name)) (VP (VBD was) (NP (NNP Nancy))) (. .)))', 'lemma': [(u'Her', u'she', u'PRP$'), (u'name', u'name', u'NN'), (u'was', u'be', u'VBD'), (u'Nancy', u'Nancy', u'NNP'), (u'.', u'.', u'.')]}, 'tokens': ['Her', 'name', 'was', 'Nancy', '.']}, {'string': ' Magneson walked over to the tree.', 'parse': {'tree': '(ROOT (S (NP (NNP Magneson)) (VP (VBD walked) (PRT (RP over)) (PP (TO to) (NP (DT the) (NN tree)))) (. .)))', 'lemma': [(u'Magneson', u'Magneson', u'NNP'), (u'walked', u'walk', u'VBD'), (u'over', u'over', u'RP'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'tree', u'tree', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Magneson', 'walked', 'over', 'to', 'the', 'tree', '.']}, {'string': ' Nancy flew up into the tree.', 'parse': {'tree': '(ROOT (S (NP (NNP Nancy)) (VP (VBD flew) (PRT (RP up)) (PP (IN into) (NP (DT the) (NN tree)))) (. .)))', 'lemma': [(u'Nancy', u'Nancy', u'NNP'), (u'flew', u'fly', u'VBD'), (u'up', u'up', u'RP'), (u'into', u'into', u'IN'), (u'the', u'the', u'DT'), (u'tree', u'tree', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Nancy', 'flew', 'up', 'into', 'the', 'tree', '.']}, {'string': ' She wanted to warn Magneson about the killer squirrel who lived inside of the tree.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBD wanted) (S (VP (TO to) (VP (VB warn) (NP (NP (NNP Magneson)) (PP (IN about) (NP (DT the) (NN killer) (NN squirrel))) (SBAR (WHNP (WP who)) (S (VP (VBD lived) (ADVP (RB inside)) (PP (IN of) (NP (DT the) (NN tree))))))))))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'wanted', u'want', u'VBD'), (u'to', u'to', u'TO'), (u'warn', u'warn', u'VB'), (u'Magneson', u'Magneson', u'NNP'), (u'about', u'about', u'IN'), (u'the', u'the', u'DT'), (u'killer', u'killer', u'NN'), (u'squirrel', u'squirrel', u'NN'), (u'who', u'who', u'WP'), (u'lived', u'live', u'VBD'), (u'inside', u'inside', u'RB'), (u'of', u'of', u'IN'), (u'the', u'the', u'DT'), (u'tree', u'tree', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'wanted', 'to', 'warn', 'Magneson', 'about', 'the', 'killer', 'squirrel', 'who', 'lived', 'inside', 'of', 'the', 'tree', '.']}, {'string': " A few years before, the squirrel had thrown a chestnut at George and Nancy 's son.", 'parse': {'tree': "(ROOT (S (ADVP (NP (DT A) (JJ few) (NNS years)) (RB before)) (, ,) (NP (DT the) (NN squirrel)) (VP (VBD had) (VP (VBN thrown) (NP (DT a) (NN chestnut)) (PP (IN at) (NP (NP (NNP George)) (CC and) (NP (NP (NNP Nancy) (POS 's)) (NN son)))))) (. .)))", 'lemma': [(u'A', u'a', u'DT'), (u'few', u'few', u'JJ'), (u'years', u'year', u'NNS'), (u'before', u'before', u'RB'), (u',', u',', u','), (u'the', u'the', u'DT'), (u'squirrel', u'squirrel', u'NN'), (u'had', u'have', u'VBD'), (u'thrown', u'throw', u'VBN'), (u'a', u'a', u'DT'), (u'chestnut', u'chestnut', u'NN'), (u'at', u'at', u'IN'), (u'George', u'George', u'NNP'), (u'and', u'and', u'CC'), (u'Nancy', u'Nancy', u'NNP'), (u"'s", u"'s", u'POS'), (u'son', u'son', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['A', 'few', 'years', 'before', ',', 'the', 'squirrel', 'had', 'thrown', 'a', 'chestnut', 'at', 'George', 'and', 'Nancy', "'s", 'son', '.']}, {'string': ' He was knocked out, and the squirrel took him away.', 'parse': {'tree': '(ROOT (S (S (NP (PRP He)) (VP (VBD was) (VP (VBN knocked) (PRT (RP out))))) (, ,) (CC and) (S (NP (DT the) (NN squirrel)) (VP (VBD took) (NP (PRP him)) (ADVP (RB away)))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'was', u'be', u'VBD'), (u'knocked', u'knock', u'VBN'), (u'out', u'out', u'RP'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'the', u'the', u'DT'), (u'squirrel', u'squirrel', u'NN'), (u'took', u'take', u'VBD'), (u'him', u'he', u'PRP'), (u'away', u'away', u'RB'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'was', 'knocked', 'out', ',', 'and', 'the', 'squirrel', 'took', 'him', 'away', '.']}, {'string': ' He was never seen again.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD was) (ADVP (RB never)) (VP (VBN seen) (ADVP (RB again)))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'was', u'be', u'VBD'), (u'never', u'never', u'RB'), (u'seen', u'see', u'VBN'), (u'again', u'again', u'RB'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'was', 'never', 'seen', 'again', '.']}, {'string': " Magneson asked what their son 's name was.", 'parse': {'tree': "(ROOT (S (NP (NNP Magneson)) (VP (VBD asked) (SBAR (WHNP (WP what)) (S (NP (NP (PRP$ their) (NN son) (POS 's)) (NN name)) (VP (VBD was))))) (. .)))", 'lemma': [(u'Magneson', u'Magneson', u'NNP'), (u'asked', u'ask', u'VBD'), (u'what', u'what', u'WP'), (u'their', u'they', u'PRP$'), (u'son', u'son', u'NN'), (u"'s", u"'s", u'POS'), (u'name', u'name', u'NN'), (u'was', u'be', u'VBD'), (u'.', u'.', u'.')]}, 'tokens': ['Magneson', 'asked', 'what', 'their', 'son', "'s", 'name', 'was', '.']}, {'string': ' They said it was Leonard.', 'parse': {'tree': '(ROOT (S (NP (PRP They)) (VP (VBD said) (SBAR (S (NP (PRP it)) (VP (VBD was) (NP (NNP Leonard)))))) (. .)))', 'lemma': [(u'They', u'they', u'PRP'), (u'said', u'say', u'VBD'), (u'it', u'it', u'PRP'), (u'was', u'be', u'VBD'), (u'Leonard', u'Leonard', u'NNP'), (u'.', u'.', u'.')]}, 'tokens': ['They', 'said', 'it', 'was', 'Leonard', '.']}, {'string': ' But Magneson was only making small talk.', 'parse': {'tree': '(ROOT (S (CC But) (NP (NNP Magneson)) (VP (VBD was) (ADVP (RB only)) (VP (VBG making) (NP (JJ small) (NN talk)))) (. .)))', 'lemma': [(u'But', u'but', u'CC'), (u'Magneson', u'Magneson', u'NNP'), (u'was', u'be', u'VBD'), (u'only', u'only', u'RB'), (u'making', u'make', u'VBG'), (u'small', u'small', u'JJ'), (u'talk', u'talk', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['But', 'Magneson', 'was', 'only', 'making', 'small', 'talk', '.']}, {'string': " He did n't believe the story about the killer squirrel.", 'parse': {'tree': "(ROOT (S (NP (PRP He)) (VP (VBD did) (RB n't) (VP (VB believe) (NP (DT the) (NN story)) (PP (IN about) (NP (DT the) (NN killer) (NN squirrel))))) (. .)))", 'lemma': [(u'He', u'he', u'PRP'), (u'did', u'do', u'VBD'), (u"n't", u'not', u'RB'), (u'believe', u'believe', u'VB'), (u'the', u'the', u'DT'), (u'story', u'story', u'NN'), (u'about', u'about', u'IN'), (u'the', u'the', u'DT'), (u'killer', u'killer', u'NN'), (u'squirrel', u'squirrel', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'did', "n't", 'believe', 'the', 'story', 'about', 'the', 'killer', 'squirrel', '.']}, {'string': ' Even if there was one, there were many rocks by the pond that he could throw at the squirrel.', 'parse': {'tree': '(ROOT (S (SBAR (RB Even) (IN if) (S (NP (EX there)) (VP (VBD was) (NP (CD one))))) (, ,) (NP (EX there)) (VP (VBD were) (NP (JJ many) (NNS rocks)) (PP (IN by) (NP (DT the) (NN pond))) (SBAR (IN that) (S (NP (PRP he)) (VP (MD could) (VP (VB throw) (PP (IN at) (NP (DT the) (NN squirrel)))))))) (. .)))', 'lemma': [(u'Even', u'even', u'RB'), (u'if', u'if', u'IN'), (u'there', u'there', u'EX'), (u'was', u'be', u'VBD'), (u'one', u'one', u'CD'), (u',', u',', u','), (u'there', u'there', u'EX'), (u'were', u'be', u'VBD'), (u'many', u'many', u'JJ'), (u'rocks', u'rock', u'NNS'), (u'by', u'by', u'IN'), (u'the', u'the', u'DT'), (u'pond', u'pond', u'NN'), (u'that', u'that', u'IN'), (u'he', u'he', u'PRP'), (u'could', u'could', u'MD'), (u'throw', u'throw', u'VB'), (u'at', u'at', u'IN'), (u'the', u'the', u'DT'), (u'squirrel', u'squirrel', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Even', 'if', 'there', 'was', 'one', ',', 'there', 'were', 'many', 'rocks', 'by', 'the', 'pond', 'that', 'he', 'could', 'throw', 'at', 'the', 'squirrel', '.']}, {'string': ' He could also hide in the tall grass.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (MD could) (ADVP (RB also)) (VP (VB hide) (PP (IN in) (NP (DT the) (JJ tall) (NN grass))))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'could', u'could', u'MD'), (u'also', u'also', u'RB'), (u'hide', u'hide', u'VB'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'tall', u'tall', u'JJ'), (u'grass', u'grass', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'could', 'also', 'hide', 'in', 'the', 'tall', 'grass', '.']}, {'string': " George and Nancy were sorry to see that Magneson would n't listen.", 'parse': {'tree': "(ROOT (S (NP (NNP George) (CC and) (NNP Nancy)) (VP (VBD were) (ADJP (JJ sorry) (S (VP (TO to) (VP (VB see) (SBAR (IN that) (S (NP (NNP Magneson)) (VP (MD would) (RB n't) (VP (VB listen)))))))))) (. .)))", 'lemma': [(u'George', u'George', u'NNP'), (u'and', u'and', u'CC'), (u'Nancy', u'Nancy', u'NNP'), (u'were', u'be', u'VBD'), (u'sorry', u'sorry', u'JJ'), (u'to', u'to', u'TO'), (u'see', u'see', u'VB'), (u'that', u'that', u'IN'), (u'Magneson', u'Magneson', u'NNP'), (u'would', u'would', u'MD'), (u"n't", u'not', u'RB'), (u'listen', u'listen', u'VB'), (u'.', u'.', u'.')]}, 'tokens': ['George', 'and', 'Nancy', 'were', 'sorry', 'to', 'see', 'that', 'Magneson', 'would', "n't", 'listen', '.']}, {'string': ' They flew away, singing a sad song.', 'parse': {'tree': '(ROOT (S (NP (PRP They)) (VP (VBD flew) (ADVP (RB away)) (, ,) (S (VP (VBG singing) (NP (DT a) (JJ sad) (NN song))))) (. .)))', 'lemma': [(u'They', u'they', u'PRP'), (u'flew', u'fly', u'VBD'), (u'away', u'away', u'RB'), (u',', u',', u','), (u'singing', u'sing', u'VBG'), (u'a', u'a', u'DT'), (u'sad', u'sad', u'JJ'), (u'song', u'song', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['They', 'flew', 'away', ',', 'singing', 'a', 'sad', 'song', '.']}, {'string': ' A short time later, the squirrel came out of the tree and threw a giant walnut at Magneson.', 'parse': {'tree': '(ROOT (S (ADVP (NP (DT A) (JJ short) (NN time)) (RB later)) (, ,) (NP (DT the) (NN squirrel)) (VP (VP (VBD came) (PRT (RP out)) (PP (IN of) (NP (DT the) (NN tree)))) (CC and) (VP (VBD threw) (NP (DT a) (JJ giant) (NN walnut)) (PP (IN at) (NP (NNP Magneson))))) (. .)))', 'lemma': [(u'A', u'a', u'DT'), (u'short', u'short', u'JJ'), (u'time', u'time', u'NN'), (u'later', u'later', u'RB'), (u',', u',', u','), (u'the', u'the', u'DT'), (u'squirrel', u'squirrel', u'NN'), (u'came', u'come', u'VBD'), (u'out', u'out', u'RP'), (u'of', u'of', u'IN'), (u'the', u'the', u'DT'), (u'tree', u'tree', u'NN'), (u'and', u'and', u'CC'), (u'threw', u'throw', u'VBD'), (u'a', u'a', u'DT'), (u'giant', u'giant', u'JJ'), (u'walnut', u'walnut', u'NN'), (u'at', u'at', u'IN'), (u'Magneson', u'Magneson', u'NNP'), (u'.', u'.', u'.')]}, 'tokens': ['A', 'short', 'time', 'later', ',', 'the', 'squirrel', 'came', 'out', 'of', 'the', 'tree', 'and', 'threw', 'a', 'giant', 'walnut', 'at', 'Magneson', '.']}, {'string': ' No one ever saw Magneson again.', 'parse': {'tree': '(ROOT (S (NP (DT No) (NN one)) (ADVP (RB ever)) (VP (VBD saw) (NP (NNP Magneson)) (ADVP (RB again))) (. .)))', 'lemma': [(u'No', u'no', u'DT'), (u'one', u'one', u'NN'), (u'ever', u'ever', u'RB'), (u'saw', u'see', u'VBD'), (u'Magneson', u'Magneson', u'NNP'), (u'again', u'again', u'RB'), (u'.', u'.', u'.')]}, 'tokens': ['No', 'one', 'ever', 'saw', 'Magneson', 'again', '.']}], 'questions': [{'question': {'string': " What was George 's wife 's name?", 'parse': {'tree': "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD was) (NP (NP (NP (NNP George) (POS 's)) (NN wife) (POS 's)) (NN name))) (. ?)))", 'lemma': [(u'What', u'what', u'WP'), (u'was', u'be', u'VBD'), (u'George', u'George', u'NNP'), (u"'s", u"'s", u'POS'), (u'wife', u'wife', u'NN'), (u"'s", u"'s", u'POS'), (u'name', u'name', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'was', 'George', "'s", 'wife', "'s", 'name', '?']}, 'answers': [{'string': ' Magneson', 'parse': {'tree': '(ROOT (NP (NNP Magneson)))', 'lemma': [(u'Magneson', u'Magneson', u'NNP')]}, 'tokens': ['Magneson']}, {'string': ' George', 'parse': {'tree': '(ROOT (NP (NNP George)))', 'lemma': [(u'George', u'George', u'NNP')]}, 'tokens': ['George']}, {'string': ' Nancy', 'parse': {'tree': '(ROOT (NP (NNP Nancy)))', 'lemma': [(u'Nancy', u'Nancy', u'NNP')]}, 'tokens': ['Nancy']}, {'string': ' Leonard', 'parse': {'tree': '(ROOT (NP (NNP Leonard)))', 'lemma': [(u'Leonard', u'Leonard', u'NNP')]}, 'tokens': ['Leonard']}], 'mode': 0}, {'question': {'string': ' Who did the squirrel throw things at?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP Who)) (SQ (VBD did) (NP (DT the) (NN squirrel)) (VP (VB throw) (NP (NNS things)) (PP (IN at)))) (. ?)))', 'lemma': [(u'Who', u'who', u'WP'), (u'did', u'do', u'VBD'), (u'the', u'the', u'DT'), (u'squirrel', u'squirrel', u'NN'), (u'throw', u'throw', u'VB'), (u'things', u'thing', u'NNS'), (u'at', u'at', u'IN'), (u'?', u'?', u'.')]}, 'tokens': ['Who', 'did', 'the', 'squirrel', 'throw', 'things', 'at', '?']}, 'answers': [{'string': ' Nellie and George', 'parse': {'tree': '(ROOT (NP (NP (NNP Nellie)) (CC and) (NP (NNP George))))', 'lemma': [(u'Nellie', u'Nellie', u'NNP'), (u'and', u'and', u'CC'), (u'George', u'George', u'NNP')]}, 'tokens': ['Nellie', 'and', 'George']}, {'string': ' Leonard and Magneson', 'parse': {'tree': '(ROOT (NP (NP (NNP Leonard)) (CC and) (NP (NNP Magneson))))', 'lemma': [(u'Leonard', u'Leonard', u'NNP'), (u'and', u'and', u'CC'), (u'Magneson', u'Magneson', u'NNP')]}, 'tokens': ['Leonard', 'and', 'Magneson']}, {'string': ' George and Leonard', 'parse': {'tree': '(ROOT (NP (NP (NNP George)) (CC and) (NP (NNP Leonard))))', 'lemma': [(u'George', u'George', u'NNP'), (u'and', u'and', u'CC'), (u'Leonard', u'Leonard', u'NNP')]}, 'tokens': ['George', 'and', 'Leonard']}, {'string': ' Magneson and Nellie', 'parse': {'tree': '(ROOT (NP (NN Magneson) (CC and) (NN Nellie)))', 'lemma': [(u'Magneson', u'magneson', u'NN'), (u'and', u'and', u'CC'), (u'Nellie', u'nellie', u'NN')]}, 'tokens': ['Magneson', 'and', 'Nellie']}], 'mode': 0}, {'question': {'string': ' What did the squirrel throw at Magneson?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD did) (NP (DT the) (NN squirrel)) (VP (VB throw) (PP (IN at) (NP (NNP Magneson))))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'did', u'do', u'VBD'), (u'the', u'the', u'DT'), (u'squirrel', u'squirrel', u'NN'), (u'throw', u'throw', u'VB'), (u'at', u'at', u'IN'), (u'Magneson', u'Magneson', u'NNP'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'did', 'the', 'squirrel', 'throw', 'at', 'Magneson', '?']}, 'answers': [{'string': ' a chestnut', 'parse': {'tree': '(ROOT (FRAG (NP (DT a) (NN chestnut))))', 'lemma': [(u'a', u'a', u'DT'), (u'chestnut', u'chestnut', u'NN')]}, 'tokens': ['a', 'chestnut']}, {'string': ' a giant walnut', 'parse': {'tree': '(ROOT (NP (DT a) (NN giant) (NN walnut)))', 'lemma': [(u'a', u'a', u'DT'), (u'giant', u'giant', u'NN'), (u'walnut', u'walnut', u'NN')]}, 'tokens': ['a', 'giant', 'walnut']}, {'string': ' a duck', 'parse': {'tree': '(ROOT (FRAG (NP (DT a) (NN duck))))', 'lemma': [(u'a', u'a', u'DT'), (u'duck', u'duck', u'NN')]}, 'tokens': ['a', 'duck']}, {'string': ' a rock', 'parse': {'tree': '(ROOT (FRAG (NP (DT a) (NN rock))))', 'lemma': [(u'a', u'a', u'DT'), (u'rock', u'rock', u'NN')]}, 'tokens': ['a', 'rock']}], 'mode': 1}, {'question': {'string': ' Where did Magneson walk?', 'parse': {'tree': '(ROOT (SBARQ (WHADVP (WRB Where)) (SQ (VBD did) (NP (NNP Magneson)) (VP (VB walk))) (. ?)))', 'lemma': [(u'Where', u'where', u'WRB'), (u'did', u'do', u'VBD'), (u'Magneson', u'Magneson', u'NNP'), (u'walk', u'walk', u'VB'), (u'?', u'?', u'.')]}, 'tokens': ['Where', 'did', 'Magneson', 'walk', '?']}, 'answers': [{'string': ' in the trees', 'parse': {'tree': '(ROOT (PP (IN in) (NP (DT the) (NNS trees))))', 'lemma': [(u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'trees', u'tree', u'NNS')]}, 'tokens': ['in', 'the', 'trees']}, {'string': ' in the pond', 'parse': {'tree': '(ROOT (PP (IN in) (NP (DT the) (NN pond))))', 'lemma': [(u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'pond', u'pond', u'NN')]}, 'tokens': ['in', 'the', 'pond']}, {'string': ' in the park', 'parse': {'tree': '(ROOT (PP (IN in) (NP (DT the) (NN park))))', 'lemma': [(u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'park', u'park', u'NN')]}, 'tokens': ['in', 'the', 'park']}, {'string': ' in the tall grass', 'parse': {'tree': '(ROOT (PP (IN in) (NP (DT the) (JJ tall) (NN grass))))', 'lemma': [(u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'tall', u'tall', u'JJ'), (u'grass', u'grass', u'NN')]}, 'tokens': ['in', 'the', 'tall', 'grass']}], 'mode': 1}]}
{'sentences': [{'string': ' Every Monday morning, the little bad boy named Josh goes to school.', 'parse': {'tree': '(ROOT (S (NP (NP (DT Every) (NNP Monday) (NN morning)) (, ,) (NP (DT the) (ADJP (RB little) (JJ bad)) (NN boy))) (VP (VBD named) (SBAR (S (NP (NNP Josh)) (VP (VBZ goes) (PP (TO to) (NP (NN school))))))) (. .)))', 'lemma': [(u'Every', u'every', u'DT'), (u'Monday', u'Monday', u'NNP'), (u'morning', u'morning', u'NN'), (u',', u',', u','), (u'the', u'the', u'DT'), (u'little', u'little', u'RB'), (u'bad', u'bad', u'JJ'), (u'boy', u'boy', u'NN'), (u'named', u'name', u'VBD'), (u'Josh', u'Josh', u'NNP'), (u'goes', u'go', u'VBZ'), (u'to', u'to', u'TO'), (u'school', u'school', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Every', 'Monday', 'morning', ',', 'the', 'little', 'bad', 'boy', 'named', 'Josh', 'goes', 'to', 'school', '.']}, {'string': ' Suddenly, little Josh slips on a banana skin ... - Ouch, says Josh, I fell on this and in addition I got a bump on the forehead!', 'parse': {'tree': '(ROOT (S (ADVP (RB Suddenly)) (, ,) (S (NP (JJ little) (NNP Josh)) (VP (VBZ slips) (PP (IN on) (NP (DT a) (NN banana) (NN skin))))) (: ...) (: -) (S (NP (NNP Ouch) (, ,)) (VP (VBZ says) (NP (NNP Josh)))) (, ,) (S (NP (PRP I)) (VP (VBD fell) (PP (IN on) (NP (DT this))))) (CC and) (S (PP (IN in) (NP (NN addition))) (NP (PRP I)) (VP (VBD got) (NP (DT a) (NN bump)) (PP (IN on) (NP (DT the) (NN forehead))))) (. !)))', 'lemma': [(u'Suddenly', u'suddenly', u'RB'), (u',', u',', u','), (u'little', u'little', u'JJ'), (u'Josh', u'Josh', u'NNP'), (u'slips', u'slip', u'VBZ'), (u'on', u'on', u'IN'), (u'a', u'a', u'DT'), (u'banana', u'banana', u'NN'), (u'skin', u'skin', u'NN'), (u'...', u'...', u':'), (u'-', u'-', u':'), (u'Ouch', u'Ouch', u'NNP'), (u',', u',', u','), (u'says', u'say', u'VBZ'), (u'Josh', u'Josh', u'NNP'), (u',', u',', u','), (u'I', u'I', u'PRP'), (u'fell', u'fall', u'VBD'), (u'on', u'on', u'IN'), (u'this', u'this', u'DT'), (u'and', u'and', u'CC'), (u'in', u'in', u'IN'), (u'addition', u'addition', u'NN'), (u'I', u'I', u'PRP'), (u'got', u'get', u'VBD'), (u'a', u'a', u'DT'), (u'bump', u'bump', u'NN'), (u'on', u'on', u'IN'), (u'the', u'the', u'DT'), (u'forehead', u'forehead', u'NN'), (u'!', u'!', u'.')]}, 'tokens': ['Suddenly', ',', 'little', 'Josh', 'slips', 'on', 'a', 'banana', 'skin', '...', '-', 'Ouch', ',', 'says', 'Josh', ',', 'I', 'fell', 'on', 'this', 'and', 'in', 'addition', 'I', 'got', 'a', 'bump', 'on', 'the', 'forehead', '!']}, {'string': ' - Wonderful!', 'parse': {'tree': '(ROOT (FRAG (: -) (VP (VBZ Wonderful)) (. !)))', 'lemma': [(u'-', u'-', u':'), (u'Wonderful', u'wonderful', u'VBZ'), (u'!', u'!', u'.')]}, 'tokens': ['-', 'Wonderful', '!']}, {'string': ' said the banana peel.', 'parse': {'tree': '(ROOT (S (VP (VBD said) (NP (DT the) (NN banana) (NN peel))) (. .)))', 'lemma': [(u'said', u'say', u'VBD'), (u'the', u'the', u'DT'), (u'banana', u'banana', u'NN'), (u'peel', u'peel', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['said', 'the', 'banana', 'peel', '.']}, {'string': ' I am Mary.', 'parse': {'tree': '(ROOT (S (NP (PRP I)) (VP (VBP am) (NP (NNP Mary))) (. .)))', 'lemma': [(u'I', u'I', u'PRP'), (u'am', u'be', u'VBP'), (u'Mary', u'Mary', u'NNP'), (u'.', u'.', u'.')]}, 'tokens': ['I', 'am', 'Mary', '.']}, {'string': ' I turned into banana skin after throwing trash on the school yard.', 'parse': {'tree': '(ROOT (S (NP (PRP I)) (VP (VBD turned) (PP (IN into) (NP (NN banana) (NN skin))) (PP (IN after) (S (VP (VBG throwing) (NP (NN trash)) (PP (IN on) (NP (DT the) (NN school) (NN yard))))))) (. .)))', 'lemma': [(u'I', u'I', u'PRP'), (u'turned', u'turn', u'VBD'), (u'into', u'into', u'IN'), (u'banana', u'banana', u'NN'), (u'skin', u'skin', u'NN'), (u'after', u'after', u'IN'), (u'throwing', u'throw', u'VBG'), (u'trash', u'trash', u'NN'), (u'on', u'on', u'IN'), (u'the', u'the', u'DT'), (u'school', u'school', u'NN'), (u'yard', u'yard', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['I', 'turned', 'into', 'banana', 'skin', 'after', 'throwing', 'trash', 'on', 'the', 'school', 'yard', '.']}, {'string': " You have saved me and now I 'm back to good old Mary.", 'parse': {'tree': "(ROOT (S (S (NP (PRP You)) (VP (VBP have) (VP (VBN saved) (NP (PRP me))))) (CC and) (S (ADVP (RB now)) (NP (PRP I)) (VP (VBP 'm) (ADVP (RB back)) (PP (TO to) (NP (ADJP (JJ good) (JJ old)) (NNP Mary))))) (. .)))", 'lemma': [(u'You', u'you', u'PRP'), (u'have', u'have', u'VBP'), (u'saved', u'save', u'VBN'), (u'me', u'I', u'PRP'), (u'and', u'and', u'CC'), (u'now', u'now', u'RB'), (u'I', u'I', u'PRP'), (u"'m", u'be', u'VBP'), (u'back', u'back', u'RB'), (u'to', u'to', u'TO'), (u'good', u'good', u'JJ'), (u'old', u'old', u'JJ'), (u'Mary', u'Mary', u'NNP'), (u'.', u'.', u'.')]}, 'tokens': ['You', 'have', 'saved', 'me', 'and', 'now', 'I', "'m", 'back', 'to', 'good', 'old', 'Mary', '.']}, {'string': " What 's your name?", 'parse': {'tree': "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ 's) (NP (PRP$ your) (NN name))) (. ?)))", 'lemma': [(u'What', u'what', u'WP'), (u"'s", u'be', u'VBZ'), (u'your', u'you', u'PRP$'), (u'name', u'name', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['What', "'s", 'your', 'name', '?']}, {'string': " - Mine is Josh ... I 'm a late to class ... are you serious, where is the banana peel anyways?", 'parse': {'tree': "(ROOT (S (: -) (S (NP (PRP Mine)) (VP (VBZ is) (NP (NNP Josh)))) (: ...) (S (NP (PRP I)) (VP (VBP 'm) (NP (NP (DT a) (JJ late)) (PP (TO to) (NP (NP (NN class)) (: ...) (SQ (VBP are) (NP (PRP you)) (ADJP (JJ serious)))))))) (, ,) (SBAR (SINV (FRAG (WHADVP (WRB where))) (VP (VBZ is)) (NP (DT the) (NN banana) (NN peel) (NNS anyways)))) (. ?)))", 'lemma': [(u'-', u'-', u':'), (u'Mine', u'mine', u'PRP'), (u'is', u'be', u'VBZ'), (u'Josh', u'Josh', u'NNP'), (u'...', u'...', u':'), (u'I', u'I', u'PRP'), (u"'m", u'be', u'VBP'), (u'a', u'a', u'DT'), (u'late', u'late', u'JJ'), (u'to', u'to', u'TO'), (u'class', u'class', u'NN'), (u'...', u'...', u':'), (u'are', u'be', u'VBP'), (u'you', u'you', u'PRP'), (u'serious', u'serious', u'JJ'), (u',', u',', u','), (u'where', u'where', u'WRB'), (u'is', u'be', u'VBZ'), (u'the', u'the', u'DT'), (u'banana', u'banana', u'NN'), (u'peel', u'peel', u'NN'), (u'anyways', u'anyway', u'NNS'), (u'?', u'?', u'.')]}, 'tokens': ['-', 'Mine', 'is', 'Josh', '...', 'I', "'m", 'a', 'late', 'to', 'class', '...', 'are', 'you', 'serious', ',', 'where', 'is', 'the', 'banana', 'peel', 'anyways', '?']}, {'string': ' - The Banana, my dear Josh, was eaten by me, I threw the banana peel and turned into one ... now you saved me, can you see the banana peel you slipped on around here?', 'parse': {'tree': '(ROOT (S (: -) (S (NP (NP (DT The) (NNP Banana)) (, ,) (NP (PRP$ my) (ADJP (RB dear)) (NN Josh)) (, ,)) (VP (VBD was) (VP (VBN eaten) (PP (IN by) (NP (PRP me)))))) (, ,) (S (S (NP (PRP I)) (VP (VP (VBD threw) (NP (DT the) (NN banana) (NN peel))) (CC and) (VP (VBD turned) (PP (IN into) (NP (CD one)))))) (: ...) (S (ADVP (RB now)) (NP (PRP you)) (VP (VBD saved) (NP (PRP me))))) (, ,) (SBAR (SINV (MD can) (NP (PRP you)) (VP (VB see) (NP (NP (DT the) (NN banana) (NN peel)) (SBAR (S (NP (PRP you)) (VP (VBD slipped) (PRT (RP on)) (ADVP (RB around)) (ADVP (RB here))))))))) (. ?)))', 'lemma': [(u'-', u'-', u':'), (u'The', u'the', u'DT'), (u'Banana', u'Banana', u'NNP'), (u',', u',', u','), (u'my', u'my', u'PRP$'), (u'dear', u'dear', u'RB'), (u'Josh', u'josh', u'NN'), (u',', u',', u','), (u'was', u'be', u'VBD'), (u'eaten', u'eat', u'VBN'), (u'by', u'by', u'IN'), (u'me', u'I', u'PRP'), (u',', u',', u','), (u'I', u'I', u'PRP'), (u'threw', u'throw', u'VBD'), (u'the', u'the', u'DT'), (u'banana', u'banana', u'NN'), (u'peel', u'peel', u'NN'), (u'and', u'and', u'CC'), (u'turned', u'turn', u'VBD'), (u'into', u'into', u'IN'), (u'one', u'one', u'CD'), (u'...', u'...', u':'), (u'now', u'now', u'RB'), (u'you', u'you', u'PRP'), (u'saved', u'save', u'VBD'), (u'me', u'I', u'PRP'), (u',', u',', u','), (u'can', u'can', u'MD'), (u'you', u'you', u'PRP'), (u'see', u'see', u'VB'), (u'the', u'the', u'DT'), (u'banana', u'banana', u'NN'), (u'peel', u'peel', u'NN'), (u'you', u'you', u'PRP'), (u'slipped', u'slip', u'VBD'), (u'on', u'on', u'RP'), (u'around', u'around', u'RB'), (u'here', u'here', u'RB'), (u'?', u'?', u'.')]}, 'tokens': ['-', 'The', 'Banana', ',', 'my', 'dear', 'Josh', ',', 'was', 'eaten', 'by', 'me', ',', 'I', 'threw', 'the', 'banana', 'peel', 'and', 'turned', 'into', 'one', '...', 'now', 'you', 'saved', 'me', ',', 'can', 'you', 'see', 'the', 'banana', 'peel', 'you', 'slipped', 'on', 'around', 'here', '?']}, {'string': ' - No, you are right.', 'parse': {'tree': '(ROOT (S (: -) (S (INTJ (UH No)) (, ,) (NP (PRP you)) (VP (VBP are) (ADJP (JJ right)))) (. .)))', 'lemma': [(u'-', u'-', u':'), (u'No', u'no', u'UH'), (u',', u',', u','), (u'you', u'you', u'PRP'), (u'are', u'be', u'VBP'), (u'right', u'right', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['-', 'No', ',', 'you', 'are', 'right', '.']}, {'string': " - Mary said: Josh, Thank you - Excuse me, Mary ... I have to go ... Otherwise I 'll be late for school ... And I would not want to upset the teacher.", 'parse': {'tree': "(ROOT (S (: -) (S (NP (NNP Mary)) (VP (VBD said) (: :) (S (NP (NNP Josh)) (, ,) (VP (VB Thank) (NP (PRP you)))))) (: -) (S (NP (NNP Excuse) (PRP me)) (, ,) (NP (NNP Mary))) (: ...) (S (NP (PRP I)) (VP (VBP have) (S (VP (TO to) (VP (VB go)))))) (: ...) (S (ADVP (RB Otherwise)) (NP (PRP I)) (VP (MD 'll) (VP (VB be) (ADJP (JJ late) (PP (IN for) (NP (NN school))))))) (: ...) (CC And) (S (NP (PRP I)) (VP (MD would) (RB not) (VP (VB want) (S (VP (TO to) (VP (VB upset) (NP (DT the) (NN teacher)))))))) (. .)))", 'lemma': [(u'-', u'-', u':'), (u'Mary', u'Mary', u'NNP'), (u'said', u'say', u'VBD'), (u':', u':', u':'), (u'Josh', u'Josh', u'NNP'), (u',', u',', u','), (u'Thank', u'thank', u'VB'), (u'you', u'you', u'PRP'), (u'-', u'-', u':'), (u'Excuse', u'Excuse', u'NNP'), (u'me', u'I', u'PRP'), (u',', u',', u','), (u'Mary', u'Mary', u'NNP'), (u'...', u'...', u':'), (u'I', u'I', u'PRP'), (u'have', u'have', u'VBP'), (u'to', u'to', u'TO'), (u'go', u'go', u'VB'), (u'...', u'...', u':'), (u'Otherwise', u'otherwise', u'RB'), (u'I', u'I', u'PRP'), (u"'ll", u"'ll", u'MD'), (u'be', u'be', u'VB'), (u'late', u'late', u'JJ'), (u'for', u'for', u'IN'), (u'school', u'school', u'NN'), (u'...', u'...', u':'), (u'And', u'and', u'CC'), (u'I', u'I', u'PRP'), (u'would', u'would', u'MD'), (u'not', u'not', u'RB'), (u'want', u'want', u'VB'), (u'to', u'to', u'TO'), (u'upset', u'upset', u'VB'), (u'the', u'the', u'DT'), (u'teacher', u'teacher', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['-', 'Mary', 'said', ':', 'Josh', ',', 'Thank', 'you', '-', 'Excuse', 'me', ',', 'Mary', '...', 'I', 'have', 'to', 'go', '...', 'Otherwise', 'I', "'ll", 'be', 'late', 'for', 'school', '...', 'And', 'I', 'would', 'not', 'want', 'to', 'upset', 'the', 'teacher', '.']}], 'questions': [{'question': {'string': ' Who slipped on a banana skin?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP Who)) (SQ (VP (VBD slipped) (PP (IN on) (NP (DT a) (NN banana) (NN skin))))) (. ?)))', 'lemma': [(u'Who', u'who', u'WP'), (u'slipped', u'slip', u'VBD'), (u'on', u'on', u'IN'), (u'a', u'a', u'DT'), (u'banana', u'banana', u'NN'), (u'skin', u'skin', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['Who', 'slipped', 'on', 'a', 'banana', 'skin', '?']}, 'answers': [{'string': ' Josh', 'parse': {'tree': '(ROOT (NP (NNP Josh)))', 'lemma': [(u'Josh', u'Josh', u'NNP')]}, 'tokens': ['Josh']}, {'string': ' John', 'parse': {'tree': '(ROOT (NP (NNP John)))', 'lemma': [(u'John', u'John', u'NNP')]}, 'tokens': ['John']}, {'string': ' Mary', 'parse': {'tree': '(ROOT (NP (NNP Mary)))', 'lemma': [(u'Mary', u'Mary', u'NNP')]}, 'tokens': ['Mary']}, {'string': ' Kate', 'parse': {'tree': '(ROOT (NP (NNP Kate)))', 'lemma': [(u'Kate', u'Kate', u'NNP')]}, 'tokens': ['Kate']}], 'mode': 1}, {'question': {'string': ' Why Josh was in such a hurry?', 'parse': {'tree': '(ROOT (SBARQ (WHADVP (WRB Why)) (S (NP (NNP Josh)) (VP (VBD was) (PP (IN in) (NP (PDT such) (DT a) (NN hurry))))) (. ?)))', 'lemma': [(u'Why', u'why', u'WRB'), (u'Josh', u'Josh', u'NNP'), (u'was', u'be', u'VBD'), (u'in', u'in', u'IN'), (u'such', u'such', u'PDT'), (u'a', u'a', u'DT'), (u'hurry', u'hurry', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['Why', 'Josh', 'was', 'in', 'such', 'a', 'hurry', '?']}, 'answers': [{'string': ' Josh had a soccer game to play.', 'parse': {'tree': '(ROOT (S (NP (NNP Josh)) (VP (VBD had) (NP (DT a) (NN soccer) (NN game) (S (VP (TO to) (VP (VB play)))))) (. .)))', 'lemma': [(u'Josh', u'Josh', u'NNP'), (u'had', u'have', u'VBD'), (u'a', u'a', u'DT'), (u'soccer', u'soccer', u'NN'), (u'game', u'game', u'NN'), (u'to', u'to', u'TO'), (u'play', u'play', u'VB'), (u'.', u'.', u'.')]}, 'tokens': ['Josh', 'had', 'a', 'soccer', 'game', 'to', 'play', '.']}, {'string': ' Josh was going back home.', 'parse': {'tree': '(ROOT (S (NP (NNP Josh)) (VP (VBD was) (VP (VBG going) (ADVP (RB back) (NN home)))) (. .)))', 'lemma': [(u'Josh', u'Josh', u'NNP'), (u'was', u'be', u'VBD'), (u'going', u'go', u'VBG'), (u'back', u'back', u'RB'), (u'home', u'home', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Josh', 'was', 'going', 'back', 'home', '.']}, {'string': ' Josh was heading to the school yard.', 'parse': {'tree': '(ROOT (S (NP (NNP Josh)) (VP (VBD was) (VP (VBG heading) (PP (TO to) (NP (DT the) (NN school) (NN yard))))) (. .)))', 'lemma': [(u'Josh', u'Josh', u'NNP'), (u'was', u'be', u'VBD'), (u'heading', u'head', u'VBG'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'school', u'school', u'NN'), (u'yard', u'yard', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Josh', 'was', 'heading', 'to', 'the', 'school', 'yard', '.']}, {'string': ' Josh was late to class.', 'parse': {'tree': '(ROOT (S (NP (NNP Josh)) (VP (VBD was) (ADJP (JJ late) (PP (TO to) (NP (NN class))))) (. .)))', 'lemma': [(u'Josh', u'Josh', u'NNP'), (u'was', u'be', u'VBD'), (u'late', u'late', u'JJ'), (u'to', u'to', u'TO'), (u'class', u'class', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Josh', 'was', 'late', 'to', 'class', '.']}], 'mode': 0}, {'question': {'string': ' Who turned into banana skin after throwing trash on the school yard?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP Who)) (SQ (VP (VBD turned) (PP (IN into) (NP (NN banana) (NN skin))) (PP (IN after) (S (VP (VBG throwing) (NP (NN trash)) (PP (IN on) (NP (DT the) (NN school) (NN yard)))))))) (. ?)))', 'lemma': [(u'Who', u'who', u'WP'), (u'turned', u'turn', u'VBD'), (u'into', u'into', u'IN'), (u'banana', u'banana', u'NN'), (u'skin', u'skin', u'NN'), (u'after', u'after', u'IN'), (u'throwing', u'throw', u'VBG'), (u'trash', u'trash', u'NN'), (u'on', u'on', u'IN'), (u'the', u'the', u'DT'), (u'school', u'school', u'NN'), (u'yard', u'yard', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['Who', 'turned', 'into', 'banana', 'skin', 'after', 'throwing', 'trash', 'on', 'the', 'school', 'yard', '?']}, 'answers': [{'string': ' Mary', 'parse': {'tree': '(ROOT (NP (NNP Mary)))', 'lemma': [(u'Mary', u'Mary', u'NNP')]}, 'tokens': ['Mary']}, {'string': ' Kate', 'parse': {'tree': '(ROOT (NP (NNP Kate)))', 'lemma': [(u'Kate', u'Kate', u'NNP')]}, 'tokens': ['Kate']}, {'string': ' Josh', 'parse': {'tree': '(ROOT (NP (NNP Josh)))', 'lemma': [(u'Josh', u'Josh', u'NNP')]}, 'tokens': ['Josh']}, {'string': ' Peter', 'parse': {'tree': '(ROOT (NP (NNP Peter)))', 'lemma': [(u'Peter', u'Peter', u'NNP')]}, 'tokens': ['Peter']}], 'mode': 1}, {'question': {'string': ' Who are the principal characters of the story', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP Who)) (SQ (VBP are) (NP (NP (DT the) (JJ principal) (NNS characters)) (PP (IN of) (NP (DT the) (NN story)))))))', 'lemma': [(u'Who', u'who', u'WP'), (u'are', u'be', u'VBP'), (u'the', u'the', u'DT'), (u'principal', u'principal', u'JJ'), (u'characters', u'character', u'NNS'), (u'of', u'of', u'IN'), (u'the', u'the', u'DT'), (u'story', u'story', u'NN')]}, 'tokens': ['Who', 'are', 'the', 'principal', 'characters', 'of', 'the', 'story']}, 'answers': [{'string': ' Mary and Kate', 'parse': {'tree': '(ROOT (NP (NP (NNP Mary)) (CC and) (NP (NNP Kate))))', 'lemma': [(u'Mary', u'Mary', u'NNP'), (u'and', u'and', u'CC'), (u'Kate', u'Kate', u'NNP')]}, 'tokens': ['Mary', 'and', 'Kate']}, {'string': ' Mary and Josh', 'parse': {'tree': '(ROOT (NP (NP (NNP Mary)) (CC and) (NP (NNP Josh))))', 'lemma': [(u'Mary', u'Mary', u'NNP'), (u'and', u'and', u'CC'), (u'Josh', u'Josh', u'NNP')]}, 'tokens': ['Mary', 'and', 'Josh']}, {'string': ' Josh and Peter', 'parse': {'tree': '(ROOT (NP (NP (NNP Josh)) (CC and) (NP (NNP Peter))))', 'lemma': [(u'Josh', u'Josh', u'NNP'), (u'and', u'and', u'CC'), (u'Peter', u'Peter', u'NNP')]}, 'tokens': ['Josh', 'and', 'Peter']}, {'string': ' Kate and Josh', 'parse': {'tree': '(ROOT (NP (NP (NNP Kate)) (CC and) (NP (NNP Josh))))', 'lemma': [(u'Kate', u'Kate', u'NNP'), (u'and', u'and', u'CC'), (u'Josh', u'Josh', u'NNP')]}, 'tokens': ['Kate', 'and', 'Josh']}], 'mode': 0}]}
{'sentences': [{'string': ' Once there was a young boy named Bret who had a cat named Wolfgang.', 'parse': {'tree': '(ROOT (S (SBAR (IN Once) (S (NP (EX there)) (VP (VBD was) (NP (DT a) (JJ young) (NN boy))))) (VP (VBD named) (NP (NP (NNP Bret)) (SBAR (WHNP (WP who)) (S (VP (VBD had) (NP (NP (DT a) (NN cat)) (VP (VBN named) (NP (NNP Wolfgang))))))))) (. .)))', 'lemma': [(u'Once', u'once', u'IN'), (u'there', u'there', u'EX'), (u'was', u'be', u'VBD'), (u'a', u'a', u'DT'), (u'young', u'young', u'JJ'), (u'boy', u'boy', u'NN'), (u'named', u'name', u'VBD'), (u'Bret', u'Bret', u'NNP'), (u'who', u'who', u'WP'), (u'had', u'have', u'VBD'), (u'a', u'a', u'DT'), (u'cat', u'cat', u'NN'), (u'named', u'name', u'VBN'), (u'Wolfgang', u'Wolfgang', u'NNP'), (u'.', u'.', u'.')]}, 'tokens': ['Once', 'there', 'was', 'a', 'young', 'boy', 'named', 'Bret', 'who', 'had', 'a', 'cat', 'named', 'Wolfgang', '.']}, {'string': ' The boy had really wanted a wolf for a pet, but his mother said wolves liked to hog the bathroom and liked to blow things down and they snored.', 'parse': {'tree': '(ROOT (S (S (NP (DT The) (NN boy)) (VP (VBD had) (ADVP (RB really)) (VP (VBN wanted) (NP (NP (DT a) (NN wolf)) (PP (IN for) (NP (DT a) (NN pet))))))) (, ,) (CC but) (S (NP (PRP$ his) (NN mother)) (VP (VBD said) (SBAR (S (S (NP (NNS wolves)) (VP (VP (VBD liked) (S (VP (TO to) (VP (VB hog) (NP (DT the) (NN bathroom)))))) (CC and) (VP (VBD liked) (S (VP (TO to) (VP (VB blow) (NP (NNS things)) (PRT (RP down)))))))) (CC and) (S (NP (PRP they)) (VP (VBD snored))))))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'boy', u'boy', u'NN'), (u'had', u'have', u'VBD'), (u'really', u'really', u'RB'), (u'wanted', u'want', u'VBN'), (u'a', u'a', u'DT'), (u'wolf', u'wolf', u'NN'), (u'for', u'for', u'IN'), (u'a', u'a', u'DT'), (u'pet', u'pet', u'NN'), (u',', u',', u','), (u'but', u'but', u'CC'), (u'his', u'he', u'PRP$'), (u'mother', u'mother', u'NN'), (u'said', u'say', u'VBD'), (u'wolves', u'wolf', u'NNS'), (u'liked', u'like', u'VBD'), (u'to', u'to', u'TO'), (u'hog', u'hog', u'VB'), (u'the', u'the', u'DT'), (u'bathroom', u'bathroom', u'NN'), (u'and', u'and', u'CC'), (u'liked', u'like', u'VBD'), (u'to', u'to', u'TO'), (u'blow', u'blow', u'VB'), (u'things', u'thing', u'NNS'), (u'down', u'down', u'RP'), (u'and', u'and', u'CC'), (u'they', u'they', u'PRP'), (u'snored', u'snore', u'VBD'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'boy', 'had', 'really', 'wanted', 'a', 'wolf', 'for', 'a', 'pet', ',', 'but', 'his', 'mother', 'said', 'wolves', 'liked', 'to', 'hog', 'the', 'bathroom', 'and', 'liked', 'to', 'blow', 'things', 'down', 'and', 'they', 'snored', '.']}, {'string': ' So the boy had to call his cat Wolfie.', 'parse': {'tree': '(ROOT (S (IN So) (NP (DT the) (NN boy)) (VP (VBD had) (S (VP (TO to) (VP (VB call) (NP (PRP$ his) (NN cat) (NN Wolfie)))))) (. .)))', 'lemma': [(u'So', u'so', u'IN'), (u'the', u'the', u'DT'), (u'boy', u'boy', u'NN'), (u'had', u'have', u'VBD'), (u'to', u'to', u'TO'), (u'call', u'call', u'VB'), (u'his', u'he', u'PRP$'), (u'cat', u'cat', u'NN'), (u'Wolfie', u'wolfie', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['So', 'the', 'boy', 'had', 'to', 'call', 'his', 'cat', 'Wolfie', '.']}, {'string': ' He had also thought about naming his cat Sir Purrsalot.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD had) (ADVP (RB also)) (VP (VBN thought) (PP (IN about) (S (VP (VBG naming) (S (NP (PRP$ his) (NN cat)) (NP (NNP Sir) (NNP Purrsalot)))))))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'had', u'have', u'VBD'), (u'also', u'also', u'RB'), (u'thought', u'think', u'VBN'), (u'about', u'about', u'IN'), (u'naming', u'name', u'VBG'), (u'his', u'he', u'PRP$'), (u'cat', u'cat', u'NN'), (u'Sir', u'Sir', u'NNP'), (u'Purrsalot', u'Purrsalot', u'NNP'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'had', 'also', 'thought', 'about', 'naming', 'his', 'cat', 'Sir', 'Purrsalot', '.']}, {'string': ' Bret himself planned to become a knight when he grew up -LRB- or maybe a cowboy -RRB- and thought Sir Purrsalot sounded like a good name for his brother knight.', 'parse': {'tree': '(ROOT (S (VP (VB Bret) (SBAR (S (NP (PRP himself)) (VP (VP (VBD planned) (S (VP (TO to) (VP (VB become) (NP (NP (NP (DT a) (NN knight)) (SBAR (WHADVP (WRB when)) (S (NP (PRP he)) (VP (VBD grew) (PRT (RP up)))))) (PRN (-LRB- -LRB-) (FRAG (CC or) (RB maybe) (NP (DT a) (NN cowboy))) (-RRB- -RRB-))))))) (CC and) (VP (VBD thought) (SBAR (S (NP (NNP Sir) (NNP Purrsalot)) (VP (VBD sounded) (PP (IN like) (NP (DT a) (JJ good) (NN name))) (PP (IN for) (NP (PRP$ his) (NN brother) (NN knight))))))))))) (. .)))', 'lemma': [(u'Bret', u'bret', u'VB'), (u'himself', u'himself', u'PRP'), (u'planned', u'plan', u'VBD'), (u'to', u'to', u'TO'), (u'become', u'become', u'VB'), (u'a', u'a', u'DT'), (u'knight', u'knight', u'NN'), (u'when', u'when', u'WRB'), (u'he', u'he', u'PRP'), (u'grew', u'grow', u'VBD'), (u'up', u'up', u'RP'), (u'-LRB-', u'-lrb-', u'-LRB-'), (u'or', u'or', u'CC'), (u'maybe', u'maybe', u'RB'), (u'a', u'a', u'DT'), (u'cowboy', u'cowboy', u'NN'), (u'-RRB-', u'-rrb-', u'-RRB-'), (u'and', u'and', u'CC'), (u'thought', u'think', u'VBD'), (u'Sir', u'Sir', u'NNP'), (u'Purrsalot', u'Purrsalot', u'NNP'), (u'sounded', u'sound', u'VBD'), (u'like', u'like', u'IN'), (u'a', u'a', u'DT'), (u'good', u'good', u'JJ'), (u'name', u'name', u'NN'), (u'for', u'for', u'IN'), (u'his', u'he', u'PRP$'), (u'brother', u'brother', u'NN'), (u'knight', u'knight', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Bret', 'himself', 'planned', 'to', 'become', 'a', 'knight', 'when', 'he', 'grew', 'up', '-LRB-', 'or', 'maybe', 'a', 'cowboy', '-RRB-', 'and', 'thought', 'Sir', 'Purrsalot', 'sounded', 'like', 'a', 'good', 'name', 'for', 'his', 'brother', 'knight', '.']}, {'string': " The difficulty there was that Wolfie did n't purr a lot.", 'parse': {'tree': "(ROOT (S (NP (DT The) (NN difficulty)) (ADVP (RB there)) (VP (VBD was) (SBAR (IN that) (S (NP (NNP Wolfie)) (VP (VBD did) (RB n't) (VP (VB purr) (NP (DT a) (NN lot))))))) (. .)))", 'lemma': [(u'The', u'the', u'DT'), (u'difficulty', u'difficulty', u'NN'), (u'there', u'there', u'RB'), (u'was', u'be', u'VBD'), (u'that', u'that', u'IN'), (u'Wolfie', u'Wolfie', u'NNP'), (u'did', u'do', u'VBD'), (u"n't", u'not', u'RB'), (u'purr', u'purr', u'VB'), (u'a', u'a', u'DT'), (u'lot', u'lot', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'difficulty', 'there', 'was', 'that', 'Wolfie', 'did', "n't", 'purr', 'a', 'lot', '.']}, {'string': ' He purred when he was being fed or petted, but no one could say he purred a lot.', 'parse': {'tree': '(ROOT (S (S (NP (PRP He)) (VP (VBD purred) (SBAR (WHADVP (WRB when)) (S (NP (PRP he)) (VP (VBD was) (VP (VBG being) (VP (VBN fed) (CC or) (VBN petted)))))))) (, ,) (CC but) (S (NP (DT no) (NN one)) (VP (MD could) (VP (VB say) (SBAR (S (NP (PRP he)) (VP (VBD purred) (NP (DT a) (NN lot)))))))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'purred', u'purr', u'VBD'), (u'when', u'when', u'WRB'), (u'he', u'he', u'PRP'), (u'was', u'be', u'VBD'), (u'being', u'be', u'VBG'), (u'fed', u'feed', u'VBN'), (u'or', u'or', u'CC'), (u'petted', u'pet', u'VBN'), (u',', u',', u','), (u'but', u'but', u'CC'), (u'no', u'no', u'DT'), (u'one', u'one', u'NN'), (u'could', u'could', u'MD'), (u'say', u'say', u'VB'), (u'he', u'he', u'PRP'), (u'purred', u'purr', u'VBD'), (u'a', u'a', u'DT'), (u'lot', u'lot', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'purred', 'when', 'he', 'was', 'being', 'fed', 'or', 'petted', ',', 'but', 'no', 'one', 'could', 'say', 'he', 'purred', 'a', 'lot', '.']}, {'string': " Plus Bret 's mother said knights liked to poke things with their swords and they also liked to hog the bathroom and they clanked.", 'parse': {'tree': "(ROOT (S (NP (NP (NNP Plus) (NNP Bret) (POS 's)) (NN mother)) (VP (VBD said) (SBAR (S (S (NP (NNS knights)) (VP (VBD liked) (S (VP (TO to) (VP (VB poke) (NP (NNS things)) (PP (IN with) (NP (PRP$ their) (NNS swords)))))))) (CC and) (S (S (NP (PRP they)) (ADVP (RB also)) (VP (VBD liked) (S (VP (TO to) (VP (VB hog) (NP (DT the) (NN bathroom))))))) (CC and) (S (NP (PRP they)) (VP (VBD clanked))))))) (. .)))", 'lemma': [(u'Plus', u'Plus', u'NNP'), (u'Bret', u'Bret', u'NNP'), (u"'s", u"'s", u'POS'), (u'mother', u'mother', u'NN'), (u'said', u'say', u'VBD'), (u'knights', u'knight', u'NNS'), (u'liked', u'like', u'VBD'), (u'to', u'to', u'TO'), (u'poke', u'poke', u'VB'), (u'things', u'thing', u'NNS'), (u'with', u'with', u'IN'), (u'their', u'they', u'PRP$'), (u'swords', u'sword', u'NNS'), (u'and', u'and', u'CC'), (u'they', u'they', u'PRP'), (u'also', u'also', u'RB'), (u'liked', u'like', u'VBD'), (u'to', u'to', u'TO'), (u'hog', u'hog', u'VB'), (u'the', u'the', u'DT'), (u'bathroom', u'bathroom', u'NN'), (u'and', u'and', u'CC'), (u'they', u'they', u'PRP'), (u'clanked', u'clank', u'VBD'), (u'.', u'.', u'.')]}, 'tokens': ['Plus', 'Bret', "'s", 'mother', 'said', 'knights', 'liked', 'to', 'poke', 'things', 'with', 'their', 'swords', 'and', 'they', 'also', 'liked', 'to', 'hog', 'the', 'bathroom', 'and', 'they', 'clanked', '.']}, {'string': ' So Bret was left with a cat named Wolfgang.', 'parse': {'tree': '(ROOT (S (IN So) (NP (NNP Bret)) (VP (VBD was) (VP (VBN left) (PP (IN with) (NP (NP (DT a) (NN cat)) (VP (VBN named) (NP (NNP Wolfgang))))))) (. .)))', 'lemma': [(u'So', u'so', u'IN'), (u'Bret', u'Bret', u'NNP'), (u'was', u'be', u'VBD'), (u'left', u'leave', u'VBN'), (u'with', u'with', u'IN'), (u'a', u'a', u'DT'), (u'cat', u'cat', u'NN'), (u'named', u'name', u'VBN'), (u'Wolfgang', u'Wolfgang', u'NNP'), (u'.', u'.', u'.')]}, 'tokens': ['So', 'Bret', 'was', 'left', 'with', 'a', 'cat', 'named', 'Wolfgang', '.']}, {'string': ' The neighbors gave him strange looks when he stood in the front yard in the evening and yelled `` Wolfie!', 'parse': {'tree': '(ROOT (S (NP (DT The) (NNS neighbors)) (VP (VBD gave) (NP (PRP him)) (NP (NP (JJ strange) (NNS looks)) (SBAR (WHADVP (WRB when)) (S (NP (PRP he)) (VP (VP (VBD stood) (PP (IN in) (NP (DT the) (JJ front) (NN yard))) (PP (IN in) (NP (DT the) (NN evening)))) (CC and) (VP (VBD yelled) (S (`` ``) (NP (NNP Wolfie))))))))) (. !)))', 'lemma': [(u'The', u'the', u'DT'), (u'neighbors', u'neighbor', u'NNS'), (u'gave', u'give', u'VBD'), (u'him', u'he', u'PRP'), (u'strange', u'strange', u'JJ'), (u'looks', u'look', u'NNS'), (u'when', u'when', u'WRB'), (u'he', u'he', u'PRP'), (u'stood', u'stand', u'VBD'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'front', u'front', u'JJ'), (u'yard', u'yard', u'NN'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'evening', u'evening', u'NN'), (u'and', u'and', u'CC'), (u'yelled', u'yell', u'VBD'), (u'``', u'``', u'``'), (u'Wolfie', u'Wolfie', u'NNP'), (u'!', u'!', u'.')]}, 'tokens': ['The', 'neighbors', 'gave', 'him', 'strange', 'looks', 'when', 'he', 'stood', 'in', 'the', 'front', 'yard', 'in', 'the', 'evening', 'and', 'yelled', '``', 'Wolfie', '!']}, {'string': " Here Wolfie !!! '', to get Wolfgang to come in for the night.", 'parse': {'tree': "(ROOT (S (NP (RB Here)) (VP (VBP Wolfie) (ADJP (JJ !!!) ('' '')) (, ,) (S (VP (TO to) (VP (VB get) (S (NP (NNP Wolfgang)) (VP (TO to) (VP (VB come) (PRT (RP in)) (PP (IN for) (NP (DT the) (NN night)))))))))) (. .)))", 'lemma': [(u'Here', u'here', u'RB'), (u'Wolfie', u'wolfie', u'VBP'), (u'!!!', u'!!!', u'JJ'), (u"''", u"''", u"''"), (u',', u',', u','), (u'to', u'to', u'TO'), (u'get', u'get', u'VB'), (u'Wolfgang', u'Wolfgang', u'NNP'), (u'to', u'to', u'TO'), (u'come', u'come', u'VB'), (u'in', u'in', u'RP'), (u'for', u'for', u'IN'), (u'the', u'the', u'DT'), (u'night', u'night', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Here', 'Wolfie', '!!!', "''", ',', 'to', 'get', 'Wolfgang', 'to', 'come', 'in', 'for', 'the', 'night', '.']}, {'string': " But Bret did n't care what anyone else thought.", 'parse': {'tree': "(ROOT (S (CC But) (NP (NNP Bret)) (VP (VBD did) (RB n't) (VP (VB care) (SBAR (WHNP (WP what)) (S (NP (NN anyone) (RB else)) (VP (VBD thought)))))) (. .)))", 'lemma': [(u'But', u'but', u'CC'), (u'Bret', u'Bret', u'NNP'), (u'did', u'do', u'VBD'), (u"n't", u'not', u'RB'), (u'care', u'care', u'VB'), (u'what', u'what', u'WP'), (u'anyone', u'anyone', u'NN'), (u'else', u'else', u'RB'), (u'thought', u'think', u'VBD'), (u'.', u'.', u'.')]}, 'tokens': ['But', 'Bret', 'did', "n't", 'care', 'what', 'anyone', 'else', 'thought', '.']}, {'string': " He had a Wolfie and maybe he 'd end up becoming a pet doctor when he grew up instead.", 'parse': {'tree': "(ROOT (S (S (NP (PRP He)) (VP (VBD had) (NP (DT a) (NN Wolfie)))) (CC and) (S (ADVP (RB maybe)) (NP (PRP he)) (VP (MD 'd) (VP (VB end) (PRT (RP up)) (S (VP (VBG becoming) (NP (NP (DT a) (JJ pet) (NN doctor)) (SBAR (WHADVP (WRB when)) (S (NP (PRP he)) (VP (VBD grew) (PRT (RP up)) (ADVP (RB instead))))))))))) (. .)))", 'lemma': [(u'He', u'he', u'PRP'), (u'had', u'have', u'VBD'), (u'a', u'a', u'DT'), (u'Wolfie', u'wolfie', u'NN'), (u'and', u'and', u'CC'), (u'maybe', u'maybe', u'RB'), (u'he', u'he', u'PRP'), (u"'d", u'would', u'MD'), (u'end', u'end', u'VB'), (u'up', u'up', u'RP'), (u'becoming', u'become', u'VBG'), (u'a', u'a', u'DT'), (u'pet', u'pet', u'JJ'), (u'doctor', u'doctor', u'NN'), (u'when', u'when', u'WRB'), (u'he', u'he', u'PRP'), (u'grew', u'grow', u'VBD'), (u'up', u'up', u'RP'), (u'instead', u'instead', u'RB'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'had', 'a', 'Wolfie', 'and', 'maybe', 'he', "'d", 'end', 'up', 'becoming', 'a', 'pet', 'doctor', 'when', 'he', 'grew', 'up', 'instead', '.']}], 'questions': [{'question': {'string': ' When did Wolfie purr?', 'parse': {'tree': '(ROOT (SBARQ (WHADVP (WRB When)) (SQ (VBD did) (NP (NNP Wolfie)) (VP (VB purr))) (. ?)))', 'lemma': [(u'When', u'when', u'WRB'), (u'did', u'do', u'VBD'), (u'Wolfie', u'Wolfie', u'NNP'), (u'purr', u'purr', u'VB'), (u'?', u'?', u'.')]}, 'tokens': ['When', 'did', 'Wolfie', 'purr', '?']}, 'answers': [{'string': ' when hogging the bathroom', 'parse': {'tree': '(ROOT (FRAG (WHADVP (WRB when)) (VP (VB hogging) (NP (DT the) (NN bathroom)))))', 'lemma': [(u'when', u'when', u'WRB'), (u'hogging', u'hog', u'VB'), (u'the', u'the', u'DT'), (u'bathroom', u'bathroom', u'NN')]}, 'tokens': ['when', 'hogging', 'the', 'bathroom']}, {'string': ' when petted', 'parse': {'tree': '(ROOT (FRAG (WHADVP (WRB when)) (ADJP (JJ petted))))', 'lemma': [(u'when', u'when', u'WRB'), (u'petted', u'petted', u'JJ')]}, 'tokens': ['when', 'petted']}, {'string': ' when poked', 'parse': {'tree': '(ROOT (SBARQ (WHADVP (WRB when)) (SQ (VP (VBD poked)))))', 'lemma': [(u'when', u'when', u'WRB'), (u'poked', u'poke', u'VBD')]}, 'tokens': ['when', 'poked']}, {'string': ' when sleeping', 'parse': {'tree': '(ROOT (FRAG (WHADVP (WRB when)) (ADJP (JJ sleeping))))', 'lemma': [(u'when', u'when', u'WRB'), (u'sleeping', u'sleeping', u'JJ')]}, 'tokens': ['when', 'sleeping']}], 'mode': 0}, {'question': {'string': ' What was the name of the cat?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD was) (NP (NP (DT the) (NN name)) (PP (IN of) (NP (DT the) (NN cat))))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'was', u'be', u'VBD'), (u'the', u'the', u'DT'), (u'name', u'name', u'NN'), (u'of', u'of', u'IN'), (u'the', u'the', u'DT'), (u'cat', u'cat', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'was', 'the', 'name', 'of', 'the', 'cat', '?']}, 'answers': [{'string': ' Bret', 'parse': {'tree': '(ROOT (NP (NNP Bret)))', 'lemma': [(u'Bret', u'Bret', u'NNP')]}, 'tokens': ['Bret']}, {'string': ' Buster', 'parse': {'tree': '(ROOT (NP (NNP Buster)))', 'lemma': [(u'Buster', u'Buster', u'NNP')]}, 'tokens': ['Buster']}, {'string': ' Wolfgang', 'parse': {'tree': '(ROOT (NP (NNP Wolfgang)))', 'lemma': [(u'Wolfgang', u'Wolfgang', u'NNP')]}, 'tokens': ['Wolfgang']}, {'string': ' Sir Purrsalot', 'parse': {'tree': '(ROOT (NP (NNP Sir) (NNP Purrsalot)))', 'lemma': [(u'Sir', u'Sir', u'NNP'), (u'Purrsalot', u'Purrsalot', u'NNP')]}, 'tokens': ['Sir', 'Purrsalot']}], 'mode': 0}, {'question': {'string': " What was one reasong his mother did n't like knights?", 'parse': {'tree': "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD was) (NP (NP (CD one) (NN reasong)) (SBAR (S (NP (PRP$ his) (NN mother)) (VP (VBD did) (RB n't) (VP (VB like) (NP (NNS knights)))))))) (. ?)))", 'lemma': [(u'What', u'what', u'WP'), (u'was', u'be', u'VBD'), (u'one', u'one', u'CD'), (u'reasong', u'reasong', u'NN'), (u'his', u'he', u'PRP$'), (u'mother', u'mother', u'NN'), (u'did', u'do', u'VBD'), (u"n't", u'not', u'RB'), (u'like', u'like', u'VB'), (u'knights', u'knight', u'NNS'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'was', 'one', 'reasong', 'his', 'mother', 'did', "n't", 'like', 'knights', '?']}, 'answers': [{'string': ' they grew up', 'parse': {'tree': '(ROOT (S (NP (PRP they)) (VP (VBD grew) (PRT (RP up)))))', 'lemma': [(u'they', u'they', u'PRP'), (u'grew', u'grow', u'VBD'), (u'up', u'up', u'RP')]}, 'tokens': ['they', 'grew', 'up']}, {'string': ' they purred', 'parse': {'tree': '(ROOT (S (NP (PRP they)) (VP (VBD purred))))', 'lemma': [(u'they', u'they', u'PRP'), (u'purred', u'purr', u'VBD')]}, 'tokens': ['they', 'purred']}, {'string': ' they snored', 'parse': {'tree': '(ROOT (S (NP (PRP they)) (VP (VBD snored))))', 'lemma': [(u'they', u'they', u'PRP'), (u'snored', u'snore', u'VBD')]}, 'tokens': ['they', 'snored']}, {'string': ' they clanked', 'parse': {'tree': '(ROOT (S (NP (PRP they)) (VP (VBD clanked))))', 'lemma': [(u'they', u'they', u'PRP'), (u'clanked', u'clank', u'VBD')]}, 'tokens': ['they', 'clanked']}], 'mode': 1}, {'question': {'string': " What was one reason his mother did n't like wolves?", 'parse': {'tree': "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD was) (NP (NP (CD one) (NN reason)) (SBAR (S (NP (PRP$ his) (NN mother)) (VP (VBD did) (RB n't) (VP (VB like) (NP (NNS wolves)))))))) (. ?)))", 'lemma': [(u'What', u'what', u'WP'), (u'was', u'be', u'VBD'), (u'one', u'one', u'CD'), (u'reason', u'reason', u'NN'), (u'his', u'he', u'PRP$'), (u'mother', u'mother', u'NN'), (u'did', u'do', u'VBD'), (u"n't", u'not', u'RB'), (u'like', u'like', u'VB'), (u'wolves', u'wolf', u'NNS'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'was', 'one', 'reason', 'his', 'mother', 'did', "n't", 'like', 'wolves', '?']}, 'answers': [{'string': ' they yelled', 'parse': {'tree': '(ROOT (S (NP (PRP they)) (VP (VBD yelled))))', 'lemma': [(u'they', u'they', u'PRP'), (u'yelled', u'yell', u'VBD')]}, 'tokens': ['they', 'yelled']}, {'string': ' they barked', 'parse': {'tree': '(ROOT (S (NP (PRP they)) (VP (VBD barked))))', 'lemma': [(u'they', u'they', u'PRP'), (u'barked', u'bark', u'VBD')]}, 'tokens': ['they', 'barked']}, {'string': ' they purred', 'parse': {'tree': '(ROOT (S (NP (PRP they)) (VP (VBD purred))))', 'lemma': [(u'they', u'they', u'PRP'), (u'purred', u'purr', u'VBD')]}, 'tokens': ['they', 'purred']}, {'string': ' they snored', 'parse': {'tree': '(ROOT (S (NP (PRP they)) (VP (VBD snored))))', 'lemma': [(u'they', u'they', u'PRP'), (u'snored', u'snore', u'VBD')]}, 'tokens': ['they', 'snored']}], 'mode': 1}]}
{'sentences': [{'string': ' Sally liked going outside.', 'parse': {'tree': '(ROOT (S (NP (NNP Sally)) (VP (VBD liked) (S (VP (VBG going) (ADVP (RB outside))))) (. .)))', 'lemma': [(u'Sally', u'Sally', u'NNP'), (u'liked', u'like', u'VBD'), (u'going', u'go', u'VBG'), (u'outside', u'outside', u'RB'), (u'.', u'.', u'.')]}, 'tokens': ['Sally', 'liked', 'going', 'outside', '.']}, {'string': ' She put on her shoes.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBD put) (PP (IN on) (NP (PRP$ her) (NNS shoes)))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'put', u'put', u'VBD'), (u'on', u'on', u'IN'), (u'her', u'she', u'PRP$'), (u'shoes', u'shoe', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'put', 'on', 'her', 'shoes', '.']}, {'string': ' She went outside to walk.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBD went) (ADVP (RB outside)) (S (VP (TO to) (VP (VB walk))))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'went', u'go', u'VBD'), (u'outside', u'outside', u'RB'), (u'to', u'to', u'TO'), (u'walk', u'walk', u'VB'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'went', 'outside', 'to', 'walk', '.']}, {'string': ' She walked on the green grass.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBD walked) (PP (IN on) (NP (DT the) (JJ green) (NN grass)))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'walked', u'walk', u'VBD'), (u'on', u'on', u'IN'), (u'the', u'the', u'DT'), (u'green', u'green', u'JJ'), (u'grass', u'grass', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'walked', 'on', 'the', 'green', 'grass', '.']}, {'string': ' The sun was warm.', 'parse': {'tree': '(ROOT (S (NP (DT The) (NN sun)) (VP (VBD was) (ADJP (JJ warm))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'sun', u'sun', u'NN'), (u'was', u'be', u'VBD'), (u'warm', u'warm', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'sun', 'was', 'warm', '.']}, {'string': ' The trees were tall.', 'parse': {'tree': '(ROOT (S (NP (DT The) (NNS trees)) (VP (VBD were) (ADJP (JJ tall))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'trees', u'tree', u'NNS'), (u'were', u'be', u'VBD'), (u'tall', u'tall', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'trees', 'were', 'tall', '.']}, {'string': ' The birds sang in the trees.', 'parse': {'tree': '(ROOT (S (NP (DT The) (NNS birds)) (VP (VBD sang) (PP (IN in) (NP (DT the) (NNS trees)))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'birds', u'bird', u'NNS'), (u'sang', u'sing', u'VBD'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'trees', u'tree', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'birds', 'sang', 'in', 'the', 'trees', '.']}, {'string': ' Sally liked how the birds can sing.', 'parse': {'tree': '(ROOT (S (NP (NNP Sally)) (VP (VBD liked) (SBAR (WHADVP (WRB how)) (S (NP (DT the) (NNS birds)) (VP (MD can) (VP (VB sing)))))) (. .)))', 'lemma': [(u'Sally', u'Sally', u'NNP'), (u'liked', u'like', u'VBD'), (u'how', u'how', u'WRB'), (u'the', u'the', u'DT'), (u'birds', u'bird', u'NNS'), (u'can', u'can', u'MD'), (u'sing', u'sing', u'VB'), (u'.', u'.', u'.')]}, 'tokens': ['Sally', 'liked', 'how', 'the', 'birds', 'can', 'sing', '.']}, {'string': ' Sally likes to sing with the birds, outside.', 'parse': {'tree': '(ROOT (S (NP (NNP Sally)) (VP (VBZ likes) (S (VP (TO to) (VP (VB sing) (PP (IN with) (NP (DT the) (NNS birds))) (, ,) (ADVP (RB outside)))))) (. .)))', 'lemma': [(u'Sally', u'Sally', u'NNP'), (u'likes', u'like', u'VBZ'), (u'to', u'to', u'TO'), (u'sing', u'sing', u'VB'), (u'with', u'with', u'IN'), (u'the', u'the', u'DT'), (u'birds', u'bird', u'NNS'), (u',', u',', u','), (u'outside', u'outside', u'RB'), (u'.', u'.', u'.')]}, 'tokens': ['Sally', 'likes', 'to', 'sing', 'with', 'the', 'birds', ',', 'outside', '.']}, {'string': ' Ring, ring, is how the birds sang.', 'parse': {'tree': '(ROOT (S (NP (NP (NN Ring)) (, ,) (NP (NN ring)) (, ,)) (VP (VBZ is) (SBAR (WHADVP (WRB how)) (S (NP (DT the) (NNS birds)) (VP (VBD sang))))) (. .)))', 'lemma': [(u'Ring', u'ring', u'NN'), (u',', u',', u','), (u'ring', u'ring', u'NN'), (u',', u',', u','), (u'is', u'be', u'VBZ'), (u'how', u'how', u'WRB'), (u'the', u'the', u'DT'), (u'birds', u'bird', u'NNS'), (u'sang', u'sing', u'VBD'), (u'.', u'.', u'.')]}, 'tokens': ['Ring', ',', 'ring', ',', 'is', 'how', 'the', 'birds', 'sang', '.']}, {'string': ' Sally sang ring, ring, with the birds in the trees.', 'parse': {'tree': '(ROOT (S (NP (NNP Sally)) (VP (VBD sang) (NP (NP (NP (NN ring)) (, ,) (NP (NN ring)) (, ,)) (PP (IN with) (NP (DT the) (NNS birds)))) (PP (IN in) (NP (DT the) (NNS trees)))) (. .)))', 'lemma': [(u'Sally', u'Sally', u'NNP'), (u'sang', u'sing', u'VBD'), (u'ring', u'ring', u'NN'), (u',', u',', u','), (u'ring', u'ring', u'NN'), (u',', u',', u','), (u'with', u'with', u'IN'), (u'the', u'the', u'DT'), (u'birds', u'bird', u'NNS'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'trees', u'tree', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['Sally', 'sang', 'ring', ',', 'ring', ',', 'with', 'the', 'birds', 'in', 'the', 'trees', '.']}, {'string': ' Sally took off her shoes.', 'parse': {'tree': '(ROOT (S (NP (NNP Sally)) (VP (VBD took) (PRT (RP off)) (NP (PRP$ her) (NNS shoes))) (. .)))', 'lemma': [(u'Sally', u'Sally', u'NNP'), (u'took', u'take', u'VBD'), (u'off', u'off', u'RP'), (u'her', u'she', u'PRP$'), (u'shoes', u'shoe', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['Sally', 'took', 'off', 'her', 'shoes', '.']}, {'string': ' Sally liked how the green grass was on her toes.', 'parse': {'tree': '(ROOT (S (NP (NNP Sally)) (VP (VBD liked) (SBAR (WHADVP (WRB how)) (S (NP (DT the) (JJ green) (NN grass)) (VP (VBD was) (PP (IN on) (NP (PRP$ her) (NNS toes))))))) (. .)))', 'lemma': [(u'Sally', u'Sally', u'NNP'), (u'liked', u'like', u'VBD'), (u'how', u'how', u'WRB'), (u'the', u'the', u'DT'), (u'green', u'green', u'JJ'), (u'grass', u'grass', u'NN'), (u'was', u'be', u'VBD'), (u'on', u'on', u'IN'), (u'her', u'she', u'PRP$'), (u'toes', u'toe', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['Sally', 'liked', 'how', 'the', 'green', 'grass', 'was', 'on', 'her', 'toes', '.']}, {'string': " Sally 's toes liked the green grass.", 'parse': {'tree': "(ROOT (S (NP (NP (NNP Sally) (POS 's)) (NNS toes)) (VP (VBD liked) (NP (DT the) (JJ green) (NN grass))) (. .)))", 'lemma': [(u'Sally', u'Sally', u'NNP'), (u"'s", u"'s", u'POS'), (u'toes', u'toe', u'NNS'), (u'liked', u'like', u'VBD'), (u'the', u'the', u'DT'), (u'green', u'green', u'JJ'), (u'grass', u'grass', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Sally', "'s", 'toes', 'liked', 'the', 'green', 'grass', '.']}, {'string': ' Sally walked on the green grass some more.', 'parse': {'tree': '(ROOT (S (NP (NNP Sally)) (VP (VBD walked) (PP (IN on) (NP (NP (DT the) (JJ green) (NN grass)) (ADJP (DT some) (JJR more))))) (. .)))', 'lemma': [(u'Sally', u'Sally', u'NNP'), (u'walked', u'walk', u'VBD'), (u'on', u'on', u'IN'), (u'the', u'the', u'DT'), (u'green', u'green', u'JJ'), (u'grass', u'grass', u'NN'), (u'some', u'some', u'DT'), (u'more', u'more', u'JJR'), (u'.', u'.', u'.')]}, 'tokens': ['Sally', 'walked', 'on', 'the', 'green', 'grass', 'some', 'more', '.']}, {'string': ' She saw Missy the cat.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBD saw) (S (NP (NNP Missy)) (NP (DT the) (NN cat)))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'saw', u'see', u'VBD'), (u'Missy', u'Missy', u'NNP'), (u'the', u'the', u'DT'), (u'cat', u'cat', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'saw', 'Missy', 'the', 'cat', '.']}, {'string': ' Missy the cat meowed to Sally.', 'parse': {'tree': '(ROOT (S (ADVP (RB Missy)) (NP (DT the) (NN cat)) (VP (VBD meowed) (PP (TO to) (NP (NNP Sally)))) (. .)))', 'lemma': [(u'Missy', u'missy', u'RB'), (u'the', u'the', u'DT'), (u'cat', u'cat', u'NN'), (u'meowed', u'meow', u'VBD'), (u'to', u'to', u'TO'), (u'Sally', u'Sally', u'NNP'), (u'.', u'.', u'.')]}, 'tokens': ['Missy', 'the', 'cat', 'meowed', 'to', 'Sally', '.']}, {'string': ' Sally waved to Missy the cat.', 'parse': {'tree': '(ROOT (S (NP (NNP Sally)) (VP (VBD waved) (S (VP (TO to) (VP (VB Missy) (NP (DT the) (NN cat)))))) (. .)))', 'lemma': [(u'Sally', u'Sally', u'NNP'), (u'waved', u'wave', u'VBD'), (u'to', u'to', u'TO'), (u'Missy', u'missy', u'VB'), (u'the', u'the', u'DT'), (u'cat', u'cat', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Sally', 'waved', 'to', 'Missy', 'the', 'cat', '.']}, {'string': ' Sally likes Missy the cat.', 'parse': {'tree': '(ROOT (S (NP (NNP Sally)) (VP (VBZ likes) (S (NP (NNP Missy)) (NP (DT the) (NN cat)))) (. .)))', 'lemma': [(u'Sally', u'Sally', u'NNP'), (u'likes', u'like', u'VBZ'), (u'Missy', u'Missy', u'NNP'), (u'the', u'the', u'DT'), (u'cat', u'cat', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Sally', 'likes', 'Missy', 'the', 'cat', '.']}, {'string': ' Sally likes to meow to Missy the cat.', 'parse': {'tree': '(ROOT (S (NP (NNP Sally)) (VP (VBZ likes) (S (VP (TO to) (VP (VB meow) (S (VP (TO to) (VP (VB Missy) (NP (DT the) (NN cat))))))))) (. .)))', 'lemma': [(u'Sally', u'Sally', u'NNP'), (u'likes', u'like', u'VBZ'), (u'to', u'to', u'TO'), (u'meow', u'meow', u'VB'), (u'to', u'to', u'TO'), (u'Missy', u'missy', u'VB'), (u'the', u'the', u'DT'), (u'cat', u'cat', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Sally', 'likes', 'to', 'meow', 'to', 'Missy', 'the', 'cat', '.']}, {'string': ' Meow, meow, Sally says to Missy the cat.', 'parse': {'tree': '(ROOT (S (NP (NNP Meow)) (, ,) (ADVP (RB meow)) (, ,) (NP (NNP Sally)) (VP (VBZ says) (S (VP (TO to) (VP (VB Missy) (NP (DT the) (NN cat)))))) (. .)))', 'lemma': [(u'Meow', u'Meow', u'NNP'), (u',', u',', u','), (u'meow', u'meow', u'RB'), (u',', u',', u','), (u'Sally', u'Sally', u'NNP'), (u'says', u'say', u'VBZ'), (u'to', u'to', u'TO'), (u'Missy', u'missy', u'VB'), (u'the', u'the', u'DT'), (u'cat', u'cat', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Meow', ',', 'meow', ',', 'Sally', 'says', 'to', 'Missy', 'the', 'cat', '.']}, {'string': ' Missy the cat walks away from Sally.', 'parse': {'tree': '(ROOT (S (ADVP (RB Missy)) (NP (DT the) (NN cat)) (VP (VBZ walks) (PRT (RP away)) (PP (IN from) (NP (NNP Sally)))) (. .)))', 'lemma': [(u'Missy', u'missy', u'RB'), (u'the', u'the', u'DT'), (u'cat', u'cat', u'NN'), (u'walks', u'walk', u'VBZ'), (u'away', u'away', u'RP'), (u'from', u'from', u'IN'), (u'Sally', u'Sally', u'NNP'), (u'.', u'.', u'.')]}, 'tokens': ['Missy', 'the', 'cat', 'walks', 'away', 'from', 'Sally', '.']}, {'string': ' Sally hears her name.', 'parse': {'tree': '(ROOT (S (NP (NNP Sally)) (VP (VBZ hears) (NP (PRP$ her) (NN name))) (. .)))', 'lemma': [(u'Sally', u'Sally', u'NNP'), (u'hears', u'hear', u'VBZ'), (u'her', u'she', u'PRP$'), (u'name', u'name', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Sally', 'hears', 'her', 'name', '.']}, {'string': " Sally, Sally, come home, Sally 's Mom calls out.", 'parse': {'tree': "(ROOT (S (NP (NP (NNP Sally)) (, ,) (NP (NNP Sally)) (, ,)) (VP (VBP come) (SBAR (S (NP (NP (NN home)) (, ,) (NP (NP (NNP Sally) (POS 's)) (NN Mom))) (VP (VBZ calls) (PRT (RP out)))))) (. .)))", 'lemma': [(u'Sally', u'Sally', u'NNP'), (u',', u',', u','), (u'Sally', u'Sally', u'NNP'), (u',', u',', u','), (u'come', u'come', u'VBP'), (u'home', u'home', u'NN'), (u',', u',', u','), (u'Sally', u'Sally', u'NNP'), (u"'s", u"'s", u'POS'), (u'Mom', u'mom', u'NN'), (u'calls', u'call', u'VBZ'), (u'out', u'out', u'RP'), (u'.', u'.', u'.')]}, 'tokens': ['Sally', ',', 'Sally', ',', 'come', 'home', ',', 'Sally', "'s", 'Mom', 'calls', 'out', '.']}, {'string': ' Sally runs home to her Mom.', 'parse': {'tree': '(ROOT (S (NP (NNP Sally)) (VP (VBZ runs) (NP (NN home)) (PP (TO to) (NP (PRP$ her) (NN Mom)))) (. .)))', 'lemma': [(u'Sally', u'Sally', u'NNP'), (u'runs', u'run', u'VBZ'), (u'home', u'home', u'NN'), (u'to', u'to', u'TO'), (u'her', u'she', u'PRP$'), (u'Mom', u'mom', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Sally', 'runs', 'home', 'to', 'her', 'Mom', '.']}, {'string': ' Sally liked going outside.', 'parse': {'tree': '(ROOT (S (NP (NNP Sally)) (VP (VBD liked) (S (VP (VBG going) (ADVP (RB outside))))) (. .)))', 'lemma': [(u'Sally', u'Sally', u'NNP'), (u'liked', u'like', u'VBD'), (u'going', u'go', u'VBG'), (u'outside', u'outside', u'RB'), (u'.', u'.', u'.')]}, 'tokens': ['Sally', 'liked', 'going', 'outside', '.']}], 'questions': [{'question': {'string': ' Why did Sally put on her shoes?', 'parse': {'tree': '(ROOT (SBARQ (WHADVP (WRB Why)) (SQ (VBD did) (NP (NNP Sally)) (VP (VB put) (PP (IN on) (NP (PRP$ her) (NNS shoes))))) (. ?)))', 'lemma': [(u'Why', u'why', u'WRB'), (u'did', u'do', u'VBD'), (u'Sally', u'Sally', u'NNP'), (u'put', u'put', u'VB'), (u'on', u'on', u'IN'), (u'her', u'she', u'PRP$'), (u'shoes', u'shoe', u'NNS'), (u'?', u'?', u'.')]}, 'tokens': ['Why', 'did', 'Sally', 'put', 'on', 'her', 'shoes', '?']}, 'answers': [{'string': ' To wave to Missy the cat', 'parse': {'tree': '(ROOT (FRAG (S (VP (TO To) (VP (VB wave) (S (VP (TO to) (VP (VB Missy) (NP (DT the) (NN cat))))))))))', 'lemma': [(u'To', u'to', u'TO'), (u'wave', u'wave', u'VB'), (u'to', u'to', u'TO'), (u'Missy', u'missy', u'VB'), (u'the', u'the', u'DT'), (u'cat', u'cat', u'NN')]}, 'tokens': ['To', 'wave', 'to', 'Missy', 'the', 'cat']}, {'string': ' To hear her name', 'parse': {'tree': '(ROOT (FRAG (S (VP (TO To) (VP (VB hear) (NP (PRP$ her) (NN name)))))))', 'lemma': [(u'To', u'to', u'TO'), (u'hear', u'hear', u'VB'), (u'her', u'she', u'PRP$'), (u'name', u'name', u'NN')]}, 'tokens': ['To', 'hear', 'her', 'name']}, {'string': ' Because she wanted to go outside', 'parse': {'tree': '(ROOT (SBAR (IN Because) (S (NP (PRP she)) (VP (VBD wanted) (S (VP (TO to) (VP (VB go) (ADVP (RB outside)))))))))', 'lemma': [(u'Because', u'because', u'IN'), (u'she', u'she', u'PRP'), (u'wanted', u'want', u'VBD'), (u'to', u'to', u'TO'), (u'go', u'go', u'VB'), (u'outside', u'outside', u'RB')]}, 'tokens': ['Because', 'she', 'wanted', 'to', 'go', 'outside']}, {'string': ' To come home', 'parse': {'tree': '(ROOT (FRAG (S (VP (TO To) (VP (VB come) (NP (NN home)))))))', 'lemma': [(u'To', u'to', u'TO'), (u'come', u'come', u'VB'), (u'home', u'home', u'NN')]}, 'tokens': ['To', 'come', 'home']}], 'mode': 0}, {'question': {'string': ' What did Sally like to do?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD did) (NP (NNP Sally)) (VP (VB like) (S (VP (TO to) (VP (VB do)))))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'did', u'do', u'VBD'), (u'Sally', u'Sally', u'NNP'), (u'like', u'like', u'VB'), (u'to', u'to', u'TO'), (u'do', u'do', u'VB'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'did', 'Sally', 'like', 'to', 'do', '?']}, 'answers': [{'string': ' Sally liked going outside', 'parse': {'tree': '(ROOT (S (NP (NNP Sally)) (VP (VBD liked) (S (VP (VBG going) (ADVP (RB outside)))))))', 'lemma': [(u'Sally', u'Sally', u'NNP'), (u'liked', u'like', u'VBD'), (u'going', u'go', u'VBG'), (u'outside', u'outside', u'RB')]}, 'tokens': ['Sally', 'liked', 'going', 'outside']}, {'string': ' walk on the green grass', 'parse': {'tree': '(ROOT (S (VP (VB walk) (PP (IN on) (NP (DT the) (JJ green) (NN grass))))))', 'lemma': [(u'walk', u'walk', u'VB'), (u'on', u'on', u'IN'), (u'the', u'the', u'DT'), (u'green', u'green', u'JJ'), (u'grass', u'grass', u'NN')]}, 'tokens': ['walk', 'on', 'the', 'green', 'grass']}, {'string': ' put on her shoes', 'parse': {'tree': '(ROOT (S (VP (VB put) (PP (IN on) (NP (PRP$ her) (NNS shoes))))))', 'lemma': [(u'put', u'put', u'VB'), (u'on', u'on', u'IN'), (u'her', u'she', u'PRP$'), (u'shoes', u'shoe', u'NNS')]}, 'tokens': ['put', 'on', 'her', 'shoes']}, {'string': ' take off her shoes', 'parse': {'tree': '(ROOT (S (VP (VB take) (PRT (RP off)) (NP (PRP$ her) (NNS shoes)))))', 'lemma': [(u'take', u'take', u'VB'), (u'off', u'off', u'RP'), (u'her', u'she', u'PRP$'), (u'shoes', u'shoe', u'NNS')]}, 'tokens': ['take', 'off', 'her', 'shoes']}], 'mode': 1}, {'question': {'string': ' What was the name of the cat?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD was) (NP (NP (DT the) (NN name)) (PP (IN of) (NP (DT the) (NN cat))))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'was', u'be', u'VBD'), (u'the', u'the', u'DT'), (u'name', u'name', u'NN'), (u'of', u'of', u'IN'), (u'the', u'the', u'DT'), (u'cat', u'cat', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'was', 'the', 'name', 'of', 'the', 'cat', '?']}, 'answers': [{'string': ' Meow', 'parse': {'tree': '(ROOT (NP (NNP Meow)))', 'lemma': [(u'Meow', u'Meow', u'NNP')]}, 'tokens': ['Meow']}, {'string': ' Missy', 'parse': {'tree': '(ROOT (ADVP (RB Missy)))', 'lemma': [(u'Missy', u'missy', u'RB')]}, 'tokens': ['Missy']}, {'string': ' Sally', 'parse': {'tree': '(ROOT (NP (NNP Sally)))', 'lemma': [(u'Sally', u'Sally', u'NNP')]}, 'tokens': ['Sally']}, {'string': ' Ring', 'parse': {'tree': '(ROOT (NP (NN Ring)))', 'lemma': [(u'Ring', u'ring', u'NN')]}, 'tokens': ['Ring']}], 'mode': 1}, {'question': {'string': ' Who called Sally?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP Who)) (SQ (VP (VBD called) (NP (NNP Sally)))) (. ?)))', 'lemma': [(u'Who', u'who', u'WP'), (u'called', u'call', u'VBD'), (u'Sally', u'Sally', u'NNP'), (u'?', u'?', u'.')]}, 'tokens': ['Who', 'called', 'Sally', '?']}, 'answers': [{'string': ' Missy the cat', 'parse': {'tree': '(ROOT (FRAG (ADVP (RB Missy)) (NP (DT the) (NN cat))))', 'lemma': [(u'Missy', u'missy', u'RB'), (u'the', u'the', u'DT'), (u'cat', u'cat', u'NN')]}, 'tokens': ['Missy', 'the', 'cat']}, {'string': ' The birds', 'parse': {'tree': '(ROOT (FRAG (NP (DT The) (NNS birds))))', 'lemma': [(u'The', u'the', u'DT'), (u'birds', u'bird', u'NNS')]}, 'tokens': ['The', 'birds']}, {'string': ' The trees', 'parse': {'tree': '(ROOT (FRAG (NP (DT The) (NNS trees))))', 'lemma': [(u'The', u'the', u'DT'), (u'trees', u'tree', u'NNS')]}, 'tokens': ['The', 'trees']}, {'string': ' Her Mom', 'parse': {'tree': '(ROOT (FRAG (NP (PRP$ Her) (NN Mom))))', 'lemma': [(u'Her', u'she', u'PRP$'), (u'Mom', u'mom', u'NN')]}, 'tokens': ['Her', 'Mom']}], 'mode': 0}]}
{'sentences': [{'string': ' Tammy likes the park.', 'parse': {'tree': '(ROOT (S (NP (NNP Tammy)) (VP (VBZ likes) (NP (DT the) (NN park))) (. .)))', 'lemma': [(u'Tammy', u'Tammy', u'NNP'), (u'likes', u'like', u'VBZ'), (u'the', u'the', u'DT'), (u'park', u'park', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Tammy', 'likes', 'the', 'park', '.']}, {'string': ' There are swings at the park.', 'parse': {'tree': '(ROOT (S (NP (EX There)) (VP (VBP are) (NP (NP (NNS swings)) (PP (IN at) (NP (DT the) (NN park))))) (. .)))', 'lemma': [(u'There', u'there', u'EX'), (u'are', u'be', u'VBP'), (u'swings', u'swing', u'NNS'), (u'at', u'at', u'IN'), (u'the', u'the', u'DT'), (u'park', u'park', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['There', 'are', 'swings', 'at', 'the', 'park', '.']}, {'string': ' There is a slide at the park.', 'parse': {'tree': '(ROOT (S (NP (EX There)) (VP (VBZ is) (NP (NP (DT a) (NN slide)) (PP (IN at) (NP (DT the) (NN park))))) (. .)))', 'lemma': [(u'There', u'there', u'EX'), (u'is', u'be', u'VBZ'), (u'a', u'a', u'DT'), (u'slide', u'slide', u'NN'), (u'at', u'at', u'IN'), (u'the', u'the', u'DT'), (u'park', u'park', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['There', 'is', 'a', 'slide', 'at', 'the', 'park', '.']}, {'string': ' Mary goes to the park with Tammy.', 'parse': {'tree': '(ROOT (S (NP (NNP Mary)) (VP (VBZ goes) (PP (TO to) (NP (NP (DT the) (NN park)) (PP (IN with) (NP (NNP Tammy)))))) (. .)))', 'lemma': [(u'Mary', u'Mary', u'NNP'), (u'goes', u'go', u'VBZ'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'park', u'park', u'NN'), (u'with', u'with', u'IN'), (u'Tammy', u'Tammy', u'NNP'), (u'.', u'.', u'.')]}, 'tokens': ['Mary', 'goes', 'to', 'the', 'park', 'with', 'Tammy', '.']}, {'string': ' They jump rope.', 'parse': {'tree': '(ROOT (S (NP (PRP They)) (VP (VBP jump) (NP (NN rope))) (. .)))', 'lemma': [(u'They', u'they', u'PRP'), (u'jump', u'jump', u'VBP'), (u'rope', u'rope', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['They', 'jump', 'rope', '.']}, {'string': ' They play tag.', 'parse': {'tree': '(ROOT (S (NP (PRP They)) (VP (VBP play) (NP (NN tag))) (. .)))', 'lemma': [(u'They', u'they', u'PRP'), (u'play', u'play', u'VBP'), (u'tag', u'tag', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['They', 'play', 'tag', '.']}, {'string': ' They like the park.', 'parse': {'tree': '(ROOT (S (NP (PRP They)) (VP (VBP like) (NP (DT the) (NN park))) (. .)))', 'lemma': [(u'They', u'they', u'PRP'), (u'like', u'like', u'VBP'), (u'the', u'the', u'DT'), (u'park', u'park', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['They', 'like', 'the', 'park', '.']}, {'string': ' Tammy and Mary have fun at the park.', 'parse': {'tree': '(ROOT (S (NP (NNP Tammy) (CC and) (NNP Mary)) (VP (VBP have) (NP (NN fun)) (PP (IN at) (NP (DT the) (NN park)))) (. .)))', 'lemma': [(u'Tammy', u'Tammy', u'NNP'), (u'and', u'and', u'CC'), (u'Mary', u'Mary', u'NNP'), (u'have', u'have', u'VBP'), (u'fun', u'fun', u'NN'), (u'at', u'at', u'IN'), (u'the', u'the', u'DT'), (u'park', u'park', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Tammy', 'and', 'Mary', 'have', 'fun', 'at', 'the', 'park', '.']}, {'string': ' Tammy has a dog named Max.', 'parse': {'tree': '(ROOT (S (NP (NNP Tammy)) (VP (VBZ has) (NP (NP (DT a) (NN dog)) (VP (VBN named) (NP (NNP Max))))) (. .)))', 'lemma': [(u'Tammy', u'Tammy', u'NNP'), (u'has', u'have', u'VBZ'), (u'a', u'a', u'DT'), (u'dog', u'dog', u'NN'), (u'named', u'name', u'VBN'), (u'Max', u'Max', u'NNP'), (u'.', u'.', u'.')]}, 'tokens': ['Tammy', 'has', 'a', 'dog', 'named', 'Max', '.']}, {'string': ' Tammy and Mary take Max to the park.', 'parse': {'tree': '(ROOT (S (NP (NNP Tammy) (CC and) (NNP Mary)) (VP (VBP take) (NP (NP (NNP Max)) (PP (TO to) (NP (DT the) (NN park))))) (. .)))', 'lemma': [(u'Tammy', u'Tammy', u'NNP'), (u'and', u'and', u'CC'), (u'Mary', u'Mary', u'NNP'), (u'take', u'take', u'VBP'), (u'Max', u'Max', u'NNP'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'park', u'park', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Tammy', 'and', 'Mary', 'take', 'Max', 'to', 'the', 'park', '.']}, {'string': ' Max likes the park.', 'parse': {'tree': '(ROOT (S (NP (NNP Max)) (VP (VBZ likes) (NP (DT the) (NN park))) (. .)))', 'lemma': [(u'Max', u'Max', u'NNP'), (u'likes', u'like', u'VBZ'), (u'the', u'the', u'DT'), (u'park', u'park', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Max', 'likes', 'the', 'park', '.']}, {'string': ' He chases rabbits.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBZ chases) (NP (NNS rabbits))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'chases', u'chase', u'VBZ'), (u'rabbits', u'rabbit', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'chases', 'rabbits', '.']}, {'string': ' He chases a ball.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBZ chases) (NP (DT a) (NN ball))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'chases', u'chase', u'VBZ'), (u'a', u'a', u'DT'), (u'ball', u'ball', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'chases', 'a', 'ball', '.']}, {'string': ' Tammy throws the ball to Max.', 'parse': {'tree': '(ROOT (S (NP (NNP Tammy)) (VP (VBZ throws) (NP (DT the) (NN ball)) (PP (TO to) (NP (NNP Max)))) (. .)))', 'lemma': [(u'Tammy', u'Tammy', u'NNP'), (u'throws', u'throw', u'VBZ'), (u'the', u'the', u'DT'), (u'ball', u'ball', u'NN'), (u'to', u'to', u'TO'), (u'Max', u'Max', u'NNP'), (u'.', u'.', u'.')]}, 'tokens': ['Tammy', 'throws', 'the', 'ball', 'to', 'Max', '.']}, {'string': ' Mary throws the ball to Max.', 'parse': {'tree': '(ROOT (S (NP (NNP Mary)) (VP (VBZ throws) (NP (DT the) (NN ball)) (PP (TO to) (NP (NNP Max)))) (. .)))', 'lemma': [(u'Mary', u'Mary', u'NNP'), (u'throws', u'throw', u'VBZ'), (u'the', u'the', u'DT'), (u'ball', u'ball', u'NN'), (u'to', u'to', u'TO'), (u'Max', u'Max', u'NNP'), (u'.', u'.', u'.')]}, 'tokens': ['Mary', 'throws', 'the', 'ball', 'to', 'Max', '.']}, {'string': ' The park is no fun in the rain.', 'parse': {'tree': '(ROOT (S (NP (DT The) (NN park)) (VP (VBZ is) (NP (NP (DT no) (NN fun)) (PP (IN in) (NP (DT the) (NN rain))))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'park', u'park', u'NN'), (u'is', u'be', u'VBZ'), (u'no', u'no', u'DT'), (u'fun', u'fun', u'NN'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'rain', u'rain', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'park', 'is', 'no', 'fun', 'in', 'the', 'rain', '.']}, {'string': ' Tammy and Mary can not go to the park when it rains.', 'parse': {'tree': '(ROOT (S (NP (NNP Tammy) (CC and) (NNP Mary)) (VP (MD can) (RB not) (VP (VB go) (PP (TO to) (NP (DT the) (NN park))) (SBAR (WHADVP (WRB when)) (S (NP (PRP it)) (VP (VBZ rains)))))) (. .)))', 'lemma': [(u'Tammy', u'Tammy', u'NNP'), (u'and', u'and', u'CC'), (u'Mary', u'Mary', u'NNP'), (u'can', u'can', u'MD'), (u'not', u'not', u'RB'), (u'go', u'go', u'VB'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'park', u'park', u'NN'), (u'when', u'when', u'WRB'), (u'it', u'it', u'PRP'), (u'rains', u'rain', u'VBZ'), (u'.', u'.', u'.')]}, 'tokens': ['Tammy', 'and', 'Mary', 'can', 'not', 'go', 'to', 'the', 'park', 'when', 'it', 'rains', '.']}, {'string': ' Mother says no.', 'parse': {'tree': '(ROOT (S (NP (NNP Mother)) (VP (VBZ says) (NP (RB no))) (. .)))', 'lemma': [(u'Mother', u'Mother', u'NNP'), (u'says', u'say', u'VBZ'), (u'no', u'no', u'RB'), (u'.', u'.', u'.')]}, 'tokens': ['Mother', 'says', 'no', '.']}, {'string': ' They are sad when they can not go to the park.', 'parse': {'tree': '(ROOT (S (NP (PRP They)) (VP (VBP are) (ADJP (JJ sad) (SBAR (WHADVP (WRB when)) (S (NP (PRP they)) (VP (MD can) (RB not) (VP (VB go) (PP (TO to) (NP (DT the) (NN park))))))))) (. .)))', 'lemma': [(u'They', u'they', u'PRP'), (u'are', u'be', u'VBP'), (u'sad', u'sad', u'JJ'), (u'when', u'when', u'WRB'), (u'they', u'they', u'PRP'), (u'can', u'can', u'MD'), (u'not', u'not', u'RB'), (u'go', u'go', u'VB'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'park', u'park', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['They', 'are', 'sad', 'when', 'they', 'can', 'not', 'go', 'to', 'the', 'park', '.']}, {'string': ' Tammy and Mary play in the house when it rains.', 'parse': {'tree': '(ROOT (S (NP (NNP Tammy) (CC and) (NNP Mary)) (VP (VBP play) (PP (IN in) (NP (DT the) (NN house))) (SBAR (WHADVP (WRB when)) (S (NP (PRP it)) (VP (VBZ rains))))) (. .)))', 'lemma': [(u'Tammy', u'Tammy', u'NNP'), (u'and', u'and', u'CC'), (u'Mary', u'Mary', u'NNP'), (u'play', u'play', u'VBP'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'house', u'house', u'NN'), (u'when', u'when', u'WRB'), (u'it', u'it', u'PRP'), (u'rains', u'rain', u'VBZ'), (u'.', u'.', u'.')]}, 'tokens': ['Tammy', 'and', 'Mary', 'play', 'in', 'the', 'house', 'when', 'it', 'rains', '.']}, {'string': ' They play with dolls.', 'parse': {'tree': '(ROOT (S (NP (PRP They)) (VP (VBP play) (PP (IN with) (NP (NNS dolls)))) (. .)))', 'lemma': [(u'They', u'they', u'PRP'), (u'play', u'play', u'VBP'), (u'with', u'with', u'IN'), (u'dolls', u'doll', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['They', 'play', 'with', 'dolls', '.']}, {'string': ' They dress up and have a tea party.', 'parse': {'tree': '(ROOT (S (NP (PRP They)) (VP (VP (VBP dress) (PRT (RP up))) (CC and) (VP (VBP have) (NP (DT a) (NN tea) (NN party)))) (. .)))', 'lemma': [(u'They', u'they', u'PRP'), (u'dress', u'dress', u'VBP'), (u'up', u'up', u'RP'), (u'and', u'and', u'CC'), (u'have', u'have', u'VBP'), (u'a', u'a', u'DT'), (u'tea', u'tea', u'NN'), (u'party', u'party', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['They', 'dress', 'up', 'and', 'have', 'a', 'tea', 'party', '.']}, {'string': ' Today is sunny.', 'parse': {'tree': '(ROOT (S (NP (NNP Today)) (VP (VBZ is) (ADJP (JJ sunny))) (. .)))', 'lemma': [(u'Today', u'Today', u'NNP'), (u'is', u'be', u'VBZ'), (u'sunny', u'sunny', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['Today', 'is', 'sunny', '.']}, {'string': ' Tammy and Mary can go to the park.', 'parse': {'tree': '(ROOT (S (NP (NNP Tammy) (CC and) (NNP Mary)) (VP (MD can) (VP (VB go) (PP (TO to) (NP (DT the) (NN park))))) (. .)))', 'lemma': [(u'Tammy', u'Tammy', u'NNP'), (u'and', u'and', u'CC'), (u'Mary', u'Mary', u'NNP'), (u'can', u'can', u'MD'), (u'go', u'go', u'VB'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'park', u'park', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Tammy', 'and', 'Mary', 'can', 'go', 'to', 'the', 'park', '.']}, {'string': ' Mother says yes.', 'parse': {'tree': '(ROOT (S (NP (NNP Mother)) (VP (VBZ says) (NP (UH yes))) (. .)))', 'lemma': [(u'Mother', u'Mother', u'NNP'), (u'says', u'say', u'VBZ'), (u'yes', u'yes', u'UH'), (u'.', u'.', u'.')]}, 'tokens': ['Mother', 'says', 'yes', '.']}, {'string': ' They can take Max to the park.', 'parse': {'tree': '(ROOT (S (NP (PRP They)) (VP (MD can) (VP (VB take) (NP (NNP Max)) (PP (TO to) (NP (DT the) (NN park))))) (. .)))', 'lemma': [(u'They', u'they', u'PRP'), (u'can', u'can', u'MD'), (u'take', u'take', u'VB'), (u'Max', u'Max', u'NNP'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'park', u'park', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['They', 'can', 'take', 'Max', 'to', 'the', 'park', '.']}, {'string': ' They are happy when it is sunny.', 'parse': {'tree': '(ROOT (S (NP (PRP They)) (VP (VBP are) (ADJP (JJ happy) (SBAR (WHADVP (WRB when)) (S (NP (PRP it)) (VP (VBZ is) (ADJP (JJ sunny))))))) (. .)))', 'lemma': [(u'They', u'they', u'PRP'), (u'are', u'be', u'VBP'), (u'happy', u'happy', u'JJ'), (u'when', u'when', u'WRB'), (u'it', u'it', u'PRP'), (u'is', u'be', u'VBZ'), (u'sunny', u'sunny', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['They', 'are', 'happy', 'when', 'it', 'is', 'sunny', '.']}], 'questions': [{'question': {'string': ' Who has a dog?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP Who)) (SQ (VP (VBZ has) (NP (DT a) (NN dog)))) (. ?)))', 'lemma': [(u'Who', u'who', u'WP'), (u'has', u'have', u'VBZ'), (u'a', u'a', u'DT'), (u'dog', u'dog', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['Who', 'has', 'a', 'dog', '?']}, 'answers': [{'string': ' The park', 'parse': {'tree': '(ROOT (FRAG (NP (DT The) (NN park))))', 'lemma': [(u'The', u'the', u'DT'), (u'park', u'park', u'NN')]}, 'tokens': ['The', 'park']}, {'string': ' Max', 'parse': {'tree': '(ROOT (NP (NNP Max)))', 'lemma': [(u'Max', u'Max', u'NNP')]}, 'tokens': ['Max']}, {'string': ' Tammy', 'parse': {'tree': '(ROOT (NP (NNP Tammy)))', 'lemma': [(u'Tammy', u'Tammy', u'NNP')]}, 'tokens': ['Tammy']}, {'string': ' Mary', 'parse': {'tree': '(ROOT (NP (NNP Mary)))', 'lemma': [(u'Mary', u'Mary', u'NNP')]}, 'tokens': ['Mary']}], 'mode': 1}, {'question': {'string': ' What do Tammy and Mary do when it rains?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBP do) (NP (NNP Tammy) (CC and) (NNP Mary)) (VP (VB do) (SBAR (WHADVP (WRB when)) (S (NP (PRP it)) (VP (VBZ rains)))))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'do', u'do', u'VBP'), (u'Tammy', u'Tammy', u'NNP'), (u'and', u'and', u'CC'), (u'Mary', u'Mary', u'NNP'), (u'do', u'do', u'VB'), (u'when', u'when', u'WRB'), (u'it', u'it', u'PRP'), (u'rains', u'rain', u'VBZ'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'do', 'Tammy', 'and', 'Mary', 'do', 'when', 'it', 'rains', '?']}, 'answers': [{'string': ' go to the park', 'parse': {'tree': '(ROOT (S (VP (VB go) (PP (TO to) (NP (DT the) (NN park))))))', 'lemma': [(u'go', u'go', u'VB'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'park', u'park', u'NN')]}, 'tokens': ['go', 'to', 'the', 'park']}, {'string': ' Play with dolls, have a tea party', 'parse': {'tree': '(ROOT (S (VP (VP (VB Play) (PP (IN with) (NP (NNS dolls)))) (, ,) (VP (VB have) (NP (DT a) (NN tea) (NN party))))))', 'lemma': [(u'Play', u'play', u'VB'), (u'with', u'with', u'IN'), (u'dolls', u'doll', u'NNS'), (u',', u',', u','), (u'have', u'have', u'VB'), (u'a', u'a', u'DT'), (u'tea', u'tea', u'NN'), (u'party', u'party', u'NN')]}, 'tokens': ['Play', 'with', 'dolls', ',', 'have', 'a', 'tea', 'party']}, {'string': ' play ball', 'parse': {'tree': '(ROOT (S (VP (VB play) (NP (NN ball)))))', 'lemma': [(u'play', u'play', u'VB'), (u'ball', u'ball', u'NN')]}, 'tokens': ['play', 'ball']}, {'string': ' chase rabbits', 'parse': {'tree': '(ROOT (NP (JJ chase) (NNS rabbits)))', 'lemma': [(u'chase', u'chase', u'JJ'), (u'rabbits', u'rabbit', u'NNS')]}, 'tokens': ['chase', 'rabbits']}], 'mode': 0}, {'question': {'string': ' Who likes to go to the park?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP Who)) (SQ (VP (VBZ likes) (S (VP (TO to) (VP (VB go) (PP (TO to) (NP (DT the) (NN park)))))))) (. ?)))', 'lemma': [(u'Who', u'who', u'WP'), (u'likes', u'like', u'VBZ'), (u'to', u'to', u'TO'), (u'go', u'go', u'VB'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'park', u'park', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['Who', 'likes', 'to', 'go', 'to', 'the', 'park', '?']}, 'answers': [{'string': ' Dolls', 'parse': {'tree': '(ROOT (NP (NNS Dolls)))', 'lemma': [(u'Dolls', u'doll', u'NNS')]}, 'tokens': ['Dolls']}, {'string': ' Mother', 'parse': {'tree': '(ROOT (NP (NNP Mother)))', 'lemma': [(u'Mother', u'Mother', u'NNP')]}, 'tokens': ['Mother']}, {'string': ' Tammy and Mary', 'parse': {'tree': '(ROOT (NP (NP (NNP Tammy)) (CC and) (NP (NNP Mary))))', 'lemma': [(u'Tammy', u'Tammy', u'NNP'), (u'and', u'and', u'CC'), (u'Mary', u'Mary', u'NNP')]}, 'tokens': ['Tammy', 'and', 'Mary']}, {'string': ' The rabbits', 'parse': {'tree': '(ROOT (X (DT The) (ADJP (JJ rabbits))))', 'lemma': [(u'The', u'the', u'DT'), (u'rabbits', u'rabbits', u'JJ')]}, 'tokens': ['The', 'rabbits']}], 'mode': 0}, {'question': {'string': ' What is the the name of the dog?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (DT the) (DT the) (NN name)) (PP (IN of) (NP (DT the) (NN dog))))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'is', u'be', u'VBZ'), (u'the', u'the', u'DT'), (u'the', u'the', u'DT'), (u'name', u'name', u'NN'), (u'of', u'of', u'IN'), (u'the', u'the', u'DT'), (u'dog', u'dog', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'is', 'the', 'the', 'name', 'of', 'the', 'dog', '?']}, 'answers': [{'string': ' Mother', 'parse': {'tree': '(ROOT (NP (NNP Mother)))', 'lemma': [(u'Mother', u'Mother', u'NNP')]}, 'tokens': ['Mother']}, {'string': ' Max', 'parse': {'tree': '(ROOT (NP (NNP Max)))', 'lemma': [(u'Max', u'Max', u'NNP')]}, 'tokens': ['Max']}, {'string': ' Tammy', 'parse': {'tree': '(ROOT (NP (NNP Tammy)))', 'lemma': [(u'Tammy', u'Tammy', u'NNP')]}, 'tokens': ['Tammy']}, {'string': ' Mary', 'parse': {'tree': '(ROOT (NP (NNP Mary)))', 'lemma': [(u'Mary', u'Mary', u'NNP')]}, 'tokens': ['Mary']}], 'mode': 1}]}
{'sentences': [{'string': ' Once upon a time, there was a dog named Puddles.', 'parse': {'tree': '(ROOT (S (ADVP (RB Once) (PP (IN upon) (NP (DT a) (NN time)))) (, ,) (NP (EX there)) (VP (VBD was) (NP (NP (DT a) (NN dog)) (VP (VBN named) (NP (NNS Puddles))))) (. .)))', 'lemma': [(u'Once', u'once', u'RB'), (u'upon', u'upon', u'IN'), (u'a', u'a', u'DT'), (u'time', u'time', u'NN'), (u',', u',', u','), (u'there', u'there', u'EX'), (u'was', u'be', u'VBD'), (u'a', u'a', u'DT'), (u'dog', u'dog', u'NN'), (u'named', u'name', u'VBN'), (u'Puddles', u'puddle', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['Once', 'upon', 'a', 'time', ',', 'there', 'was', 'a', 'dog', 'named', 'Puddles', '.']}, {'string': ' Puddles was lonely because he lived in an area where there were no other dogs, but only cats.', 'parse': {'tree': '(ROOT (S (NP (NNS Puddles)) (VP (VBD was) (ADJP (JJ lonely)) (SBAR (IN because) (S (NP (PRP he)) (VP (VBD lived) (PP (IN in) (NP (DT an) (NN area))) (SBAR (WHADVP (WRB where)) (S (NP (EX there)) (VP (VBD were) (NP (NP (DT no) (JJ other) (NNS dogs)) (, ,) (CONJP (CC but) (RB only)) (NP (NNS cats)))))))))) (. .)))', 'lemma': [(u'Puddles', u'puddle', u'NNS'), (u'was', u'be', u'VBD'), (u'lonely', u'lonely', u'JJ'), (u'because', u'because', u'IN'), (u'he', u'he', u'PRP'), (u'lived', u'live', u'VBD'), (u'in', u'in', u'IN'), (u'an', u'a', u'DT'), (u'area', u'area', u'NN'), (u'where', u'where', u'WRB'), (u'there', u'there', u'EX'), (u'were', u'be', u'VBD'), (u'no', u'no', u'DT'), (u'other', u'other', u'JJ'), (u'dogs', u'dog', u'NNS'), (u',', u',', u','), (u'but', u'but', u'CC'), (u'only', u'only', u'RB'), (u'cats', u'cat', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['Puddles', 'was', 'lonely', 'because', 'he', 'lived', 'in', 'an', 'area', 'where', 'there', 'were', 'no', 'other', 'dogs', ',', 'but', 'only', 'cats', '.']}, {'string': ' Day after day, Puddles would have to eat cat food and do cat things in order to fit in with the rest of his group.', 'parse': {'tree': '(ROOT (S (NP (NNP Day)) (PP (IN after) (NP (NN day))) (, ,) (NP (NNP Puddles)) (VP (MD would) (VP (VB have) (S (VP (TO to) (VP (VP (VB eat) (NP (NN cat) (NN food))) (CC and) (VP (VB do) (NP (NN cat) (NNS things)) (SBAR (IN in) (NN order) (S (VP (TO to) (VP (VB fit) (PP (IN in) (IN with) (NP (NP (DT the) (NN rest)) (PP (IN of) (NP (PRP$ his) (NN group))))))))))))))) (. .)))', 'lemma': [(u'Day', u'Day', u'NNP'), (u'after', u'after', u'IN'), (u'day', u'day', u'NN'), (u',', u',', u','), (u'Puddles', u'Puddles', u'NNP'), (u'would', u'would', u'MD'), (u'have', u'have', u'VB'), (u'to', u'to', u'TO'), (u'eat', u'eat', u'VB'), (u'cat', u'cat', u'NN'), (u'food', u'food', u'NN'), (u'and', u'and', u'CC'), (u'do', u'do', u'VB'), (u'cat', u'cat', u'NN'), (u'things', u'thing', u'NNS'), (u'in', u'in', u'IN'), (u'order', u'order', u'NN'), (u'to', u'to', u'TO'), (u'fit', u'fit', u'VB'), (u'in', u'in', u'IN'), (u'with', u'with', u'IN'), (u'the', u'the', u'DT'), (u'rest', u'rest', u'NN'), (u'of', u'of', u'IN'), (u'his', u'he', u'PRP$'), (u'group', u'group', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Day', 'after', 'day', ',', 'Puddles', 'would', 'have', 'to', 'eat', 'cat', 'food', 'and', 'do', 'cat', 'things', 'in', 'order', 'to', 'fit', 'in', 'with', 'the', 'rest', 'of', 'his', 'group', '.']}, {'string': ' He found it very boring and Puddles was sad.', 'parse': {'tree': '(ROOT (S (S (NP (PRP He)) (VP (VBD found) (S (NP (PRP it)) (ADJP (RB very) (JJ boring))))) (CC and) (S (NP (NNP Puddles)) (VP (VBD was) (ADJP (JJ sad)))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'found', u'find', u'VBD'), (u'it', u'it', u'PRP'), (u'very', u'very', u'RB'), (u'boring', u'boring', u'JJ'), (u'and', u'and', u'CC'), (u'Puddles', u'Puddles', u'NNP'), (u'was', u'be', u'VBD'), (u'sad', u'sad', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'found', 'it', 'very', 'boring', 'and', 'Puddles', 'was', 'sad', '.']}, {'string': " Puddles did n't even look like a cat!", 'parse': {'tree': "(ROOT (S (NP (NNS Puddles)) (VP (VBD did) (RB n't) (ADVP (RB even)) (VP (VB look) (PP (IN like) (NP (DT a) (NN cat))))) (. !)))", 'lemma': [(u'Puddles', u'puddle', u'NNS'), (u'did', u'do', u'VBD'), (u"n't", u'not', u'RB'), (u'even', u'even', u'RB'), (u'look', u'look', u'VB'), (u'like', u'like', u'IN'), (u'a', u'a', u'DT'), (u'cat', u'cat', u'NN'), (u'!', u'!', u'.')]}, 'tokens': ['Puddles', 'did', "n't", 'even', 'look', 'like', 'a', 'cat', '!']}, {'string': ' All of the other cats teased Puddles.', 'parse': {'tree': '(ROOT (S (NP (NP (DT All)) (PP (IN of) (NP (NP (DT the) (JJ other) (NNS cats)) (VP (VBN teased))))) (VP (VBZ Puddles)) (. .)))', 'lemma': [(u'All', u'all', u'DT'), (u'of', u'of', u'IN'), (u'the', u'the', u'DT'), (u'other', u'other', u'JJ'), (u'cats', u'cat', u'NNS'), (u'teased', u'tease', u'VBN'), (u'Puddles', u'puddle', u'VBZ'), (u'.', u'.', u'.')]}, 'tokens': ['All', 'of', 'the', 'other', 'cats', 'teased', 'Puddles', '.']}, {'string': " `` You 're too big, '' they said.", 'parse': {'tree': "(ROOT (S (`` ``) (S (NP (PRP You)) (VP (VBP 're) (ADJP (RB too) (JJ big)))) (, ,) ('' '') (NP (PRP they)) (VP (VBD said)) (. .)))", 'lemma': [(u'``', u'``', u'``'), (u'You', u'you', u'PRP'), (u"'re", u'be', u'VBP'), (u'too', u'too', u'RB'), (u'big', u'big', u'JJ'), (u',', u',', u','), (u"''", u"''", u"''"), (u'they', u'they', u'PRP'), (u'said', u'say', u'VBD'), (u'.', u'.', u'.')]}, 'tokens': ['``', 'You', "'re", 'too', 'big', ',', "''", 'they', 'said', '.']}, {'string': " `` You 've got too long of a nose! ''", 'parse': {'tree': "(ROOT (S (`` ``) (NP (PRP You)) (VP (VBP 've) (VP (VBN got) (ADVP (RB too) (RB long)) (PP (IN of) (NP (DT a) (NN nose))))) (. !) ('' '')))", 'lemma': [(u'``', u'``', u'``'), (u'You', u'you', u'PRP'), (u"'ve", u'have', u'VBP'), (u'got', u'get', u'VBN'), (u'too', u'too', u'RB'), (u'long', u'long', u'RB'), (u'of', u'of', u'IN'), (u'a', u'a', u'DT'), (u'nose', u'nose', u'NN'), (u'!', u'!', u'.'), (u"''", u"''", u"''")]}, 'tokens': ['``', 'You', "'ve", 'got', 'too', 'long', 'of', 'a', 'nose', '!', "''"]}, {'string': " `` Why are you panting like that? ''", 'parse': {'tree': "(ROOT (SBARQ (`` ``) (WHADVP (WRB Why)) (SQ (VBP are) (NP (PRP you)) (VP (VBG panting) (PP (IN like) (NP (DT that))))) (. ?) ('' '')))", 'lemma': [(u'``', u'``', u'``'), (u'Why', u'why', u'WRB'), (u'are', u'be', u'VBP'), (u'you', u'you', u'PRP'), (u'panting', u'pant', u'VBG'), (u'like', u'like', u'IN'), (u'that', u'that', u'DT'), (u'?', u'?', u'.'), (u"''", u"''", u"''")]}, 'tokens': ['``', 'Why', 'are', 'you', 'panting', 'like', 'that', '?', "''"]}, {'string': ' Puddles knew that he was different.', 'parse': {'tree': '(ROOT (S (NP (NNS Puddles)) (VP (VBD knew) (SBAR (IN that) (S (NP (PRP he)) (VP (VBD was) (ADJP (JJ different)))))) (. .)))', 'lemma': [(u'Puddles', u'puddle', u'NNS'), (u'knew', u'know', u'VBD'), (u'that', u'that', u'IN'), (u'he', u'he', u'PRP'), (u'was', u'be', u'VBD'), (u'different', u'different', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['Puddles', 'knew', 'that', 'he', 'was', 'different', '.']}, {'string': ' One day, Puddles chose to run away from all of the cats.', 'parse': {'tree': '(ROOT (S (NP (CD One) (NN day)) (, ,) (NP (NNP Puddles)) (VP (VBD chose) (S (VP (TO to) (VP (VB run) (PRT (RP away)) (PP (IN from) (NP (NP (DT all)) (PP (IN of) (NP (DT the) (NNS cats))))))))) (. .)))', 'lemma': [(u'One', u'one', u'CD'), (u'day', u'day', u'NN'), (u',', u',', u','), (u'Puddles', u'Puddles', u'NNP'), (u'chose', u'choose', u'VBD'), (u'to', u'to', u'TO'), (u'run', u'run', u'VB'), (u'away', u'away', u'RP'), (u'from', u'from', u'IN'), (u'all', u'all', u'DT'), (u'of', u'of', u'IN'), (u'the', u'the', u'DT'), (u'cats', u'cat', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['One', 'day', ',', 'Puddles', 'chose', 'to', 'run', 'away', 'from', 'all', 'of', 'the', 'cats', '.']}, {'string': ' The cats laughed at him.', 'parse': {'tree': '(ROOT (S (NP (DT The) (NNS cats)) (VP (VBD laughed) (PP (IN at) (NP (PRP him)))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'cats', u'cat', u'NNS'), (u'laughed', u'laugh', u'VBD'), (u'at', u'at', u'IN'), (u'him', u'he', u'PRP'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'cats', 'laughed', 'at', 'him', '.']}, {'string': ' What a stupid dog!', 'parse': {'tree': '(ROOT (FRAG (WHNP (WDT What)) (PP (FW a) (NP (JJ stupid) (NN dog))) (. !)))', 'lemma': [(u'What', u'what', u'WDT'), (u'a', u'a', u'FW'), (u'stupid', u'stupid', u'JJ'), (u'dog', u'dog', u'NN'), (u'!', u'!', u'.')]}, 'tokens': ['What', 'a', 'stupid', 'dog', '!']}, {'string': " Did n't he know that there were monsters in the woods that could eat him?", 'parse': {'tree': "(ROOT (SQ (MD Did) (RB n't) (NP (PRP he)) (VP (VB know) (SBAR (IN that) (S (NP (EX there)) (VP (VBD were) (NP (NP (NNS monsters)) (PP (IN in) (NP (NP (DT the) (NNS woods)) (SBAR (WHNP (WDT that)) (S (VP (MD could) (VP (VB eat) (NP (PRP him))))))))))))) (. ?)))", 'lemma': [(u'Did', u'did', u'MD'), (u"n't", u'not', u'RB'), (u'he', u'he', u'PRP'), (u'know', u'know', u'VB'), (u'that', u'that', u'IN'), (u'there', u'there', u'EX'), (u'were', u'be', u'VBD'), (u'monsters', u'monster', u'NNS'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'woods', u'wood', u'NNS'), (u'that', u'that', u'WDT'), (u'could', u'could', u'MD'), (u'eat', u'eat', u'VB'), (u'him', u'he', u'PRP'), (u'?', u'?', u'.')]}, 'tokens': ['Did', "n't", 'he', 'know', 'that', 'there', 'were', 'monsters', 'in', 'the', 'woods', 'that', 'could', 'eat', 'him', '?']}, {'string': " Puddles did n't care, because Puddles was sad enough to try.", 'parse': {'tree': "(ROOT (S (NP (NNS Puddles)) (VP (VBD did) (RB n't) (VP (VB care) (, ,) (SBAR (IN because) (S (NP (NNP Puddles)) (VP (VBD was) (ADJP (JJ sad) (RB enough) (S (VP (TO to) (VP (VB try)))))))))) (. .)))", 'lemma': [(u'Puddles', u'puddle', u'NNS'), (u'did', u'do', u'VBD'), (u"n't", u'not', u'RB'), (u'care', u'care', u'VB'), (u',', u',', u','), (u'because', u'because', u'IN'), (u'Puddles', u'Puddles', u'NNP'), (u'was', u'be', u'VBD'), (u'sad', u'sad', u'JJ'), (u'enough', u'enough', u'RB'), (u'to', u'to', u'TO'), (u'try', u'try', u'VB'), (u'.', u'.', u'.')]}, 'tokens': ['Puddles', 'did', "n't", 'care', ',', 'because', 'Puddles', 'was', 'sad', 'enough', 'to', 'try', '.']}, {'string': ' So Puddles packed up his things - his squeaky ball, his water dish, and his bone - and headed off into the woods.', 'parse': {'tree': '(ROOT (S (IN So) (NP (NNP Puddles)) (VP (VP (VBD packed) (PRT (RP up)) (NP (NP (PRP$ his) (NNS things)) (PRN (: -) (NP (NP (PRP$ his) (JJ squeaky) (NN ball)) (, ,) (NP (PRP$ his) (NN water) (NN dish)) (, ,) (CC and) (NP (PRP$ his) (NN bone))) (: -)))) (CC and) (VP (VBD headed) (PRT (RP off)) (PP (IN into) (NP (DT the) (NNS woods))))) (. .)))', 'lemma': [(u'So', u'so', u'IN'), (u'Puddles', u'Puddles', u'NNP'), (u'packed', u'pack', u'VBD'), (u'up', u'up', u'RP'), (u'his', u'he', u'PRP$'), (u'things', u'thing', u'NNS'), (u'-', u'-', u':'), (u'his', u'he', u'PRP$'), (u'squeaky', u'squeaky', u'JJ'), (u'ball', u'ball', u'NN'), (u',', u',', u','), (u'his', u'he', u'PRP$'), (u'water', u'water', u'NN'), (u'dish', u'dish', u'NN'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'his', u'he', u'PRP$'), (u'bone', u'bone', u'NN'), (u'-', u'-', u':'), (u'and', u'and', u'CC'), (u'headed', u'head', u'VBD'), (u'off', u'off', u'RP'), (u'into', u'into', u'IN'), (u'the', u'the', u'DT'), (u'woods', u'wood', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['So', 'Puddles', 'packed', 'up', 'his', 'things', '-', 'his', 'squeaky', 'ball', ',', 'his', 'water', 'dish', ',', 'and', 'his', 'bone', '-', 'and', 'headed', 'off', 'into', 'the', 'woods', '.']}, {'string': ' He was finally happy!', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD was) (ADVP (RB finally)) (ADJP (JJ happy))) (. !)))', 'lemma': [(u'He', u'he', u'PRP'), (u'was', u'be', u'VBD'), (u'finally', u'finally', u'RB'), (u'happy', u'happy', u'JJ'), (u'!', u'!', u'.')]}, 'tokens': ['He', 'was', 'finally', 'happy', '!']}, {'string': ' All of a sudden, Puddles turned.', 'parse': {'tree': '(ROOT (S (NP (NP (DT All)) (PP (IN of) (NP (NP (DT a) (JJ sudden)) (, ,) (NP (NNP Puddles))))) (VP (VBD turned)) (. .)))', 'lemma': [(u'All', u'all', u'DT'), (u'of', u'of', u'IN'), (u'a', u'a', u'DT'), (u'sudden', u'sudden', u'JJ'), (u',', u',', u','), (u'Puddles', u'Puddles', u'NNP'), (u'turned', u'turn', u'VBD'), (u'.', u'.', u'.')]}, 'tokens': ['All', 'of', 'a', 'sudden', ',', 'Puddles', 'turned', '.']}, {'string': ' He smelled a funny smell.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD smelled) (NP (DT a) (JJ funny) (NN smell))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'smelled', u'smell', u'VBD'), (u'a', u'a', u'DT'), (u'funny', u'funny', u'JJ'), (u'smell', u'smell', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'smelled', 'a', 'funny', 'smell', '.']}, {'string': ' It smelled like something he had never smelled before.', 'parse': {'tree': '(ROOT (S (NP (PRP It)) (VP (VBD smelled) (SBAR (S (PP (IN like) (NP (NN something))) (NP (PRP he)) (VP (VBD had) (ADVP (RB never)) (VP (VBN smelled) (ADVP (RB before))))))) (. .)))', 'lemma': [(u'It', u'it', u'PRP'), (u'smelled', u'smell', u'VBD'), (u'like', u'like', u'IN'), (u'something', u'something', u'NN'), (u'he', u'he', u'PRP'), (u'had', u'have', u'VBD'), (u'never', u'never', u'RB'), (u'smelled', u'smell', u'VBN'), (u'before', u'before', u'RB'), (u'.', u'.', u'.')]}, 'tokens': ['It', 'smelled', 'like', 'something', 'he', 'had', 'never', 'smelled', 'before', '.']}, {'string': ' He turned around, and what did he see but another dog!', 'parse': {'tree': '(ROOT (S (S (NP (PRP He)) (VP (VBD turned) (PRT (RP around)))) (, ,) (CC and) (SBARQ (WHNP (WP what)) (SQ (VBD did) (NP (PRP he)) (VP (VB see) (PP (CC but) (NP (DT another) (NN dog)))))) (. !)))', 'lemma': [(u'He', u'he', u'PRP'), (u'turned', u'turn', u'VBD'), (u'around', u'around', u'RP'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'what', u'what', u'WP'), (u'did', u'do', u'VBD'), (u'he', u'he', u'PRP'), (u'see', u'see', u'VB'), (u'but', u'but', u'CC'), (u'another', u'another', u'DT'), (u'dog', u'dog', u'NN'), (u'!', u'!', u'.')]}, 'tokens': ['He', 'turned', 'around', ',', 'and', 'what', 'did', 'he', 'see', 'but', 'another', 'dog', '!']}, {'string': ' Puddles was so happy, he barked with joy.', 'parse': {'tree': '(ROOT (S (S (NP (NNS Puddles)) (VP (VBD was) (ADJP (RB so) (JJ happy)))) (, ,) (NP (PRP he)) (VP (VBD barked) (PP (IN with) (NP (NN joy)))) (. .)))', 'lemma': [(u'Puddles', u'puddle', u'NNS'), (u'was', u'be', u'VBD'), (u'so', u'so', u'RB'), (u'happy', u'happy', u'JJ'), (u',', u',', u','), (u'he', u'he', u'PRP'), (u'barked', u'bark', u'VBD'), (u'with', u'with', u'IN'), (u'joy', u'joy', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Puddles', 'was', 'so', 'happy', ',', 'he', 'barked', 'with', 'joy', '.']}, {'string': ' He went home with the other dog, who was named Mittens, and to his family.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD went) (NP (NP (NN home)) (PP (PP (IN with) (NP (NP (DT the) (JJ other) (NN dog)) (, ,) (SBAR (WHNP (WP who)) (S (VP (VBD was) (VP (VBN named) (NP (NNS Mittens)))))))) (, ,) (CC and) (PP (TO to) (NP (PRP$ his) (NN family)))))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'went', u'go', u'VBD'), (u'home', u'home', u'NN'), (u'with', u'with', u'IN'), (u'the', u'the', u'DT'), (u'other', u'other', u'JJ'), (u'dog', u'dog', u'NN'), (u',', u',', u','), (u'who', u'who', u'WP'), (u'was', u'be', u'VBD'), (u'named', u'name', u'VBN'), (u'Mittens', u'mitten', u'NNS'), (u',', u',', u','), (u'and', u'and', u'CC'), (u'to', u'to', u'TO'), (u'his', u'he', u'PRP$'), (u'family', u'family', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'went', 'home', 'with', 'the', 'other', 'dog', ',', 'who', 'was', 'named', 'Mittens', ',', 'and', 'to', 'his', 'family', '.']}, {'string': ' Puddles was never lonely again.', 'parse': {'tree': '(ROOT (S (NP (NNS Puddles)) (VP (VBD was) (ADJP (ADVP (RB never)) (JJ lonely)) (ADVP (RB again))) (. .)))', 'lemma': [(u'Puddles', u'puddle', u'NNS'), (u'was', u'be', u'VBD'), (u'never', u'never', u'RB'), (u'lonely', u'lonely', u'JJ'), (u'again', u'again', u'RB'), (u'.', u'.', u'.')]}, 'tokens': ['Puddles', 'was', 'never', 'lonely', 'again', '.']}], 'questions': [{'question': {'string': ' Why did the cats not like him?', 'parse': {'tree': '(ROOT (SBARQ (WHADVP (WRB Why)) (SQ (VBD did) (NP (DT the) (NNS cats)) (VP (RB not) (VB like) (NP (PRP him)))) (. ?)))', 'lemma': [(u'Why', u'why', u'WRB'), (u'did', u'do', u'VBD'), (u'the', u'the', u'DT'), (u'cats', u'cat', u'NNS'), (u'not', u'not', u'RB'), (u'like', u'like', u'VB'), (u'him', u'he', u'PRP'), (u'?', u'?', u'.')]}, 'tokens': ['Why', 'did', 'the', 'cats', 'not', 'like', 'him', '?']}, 'answers': [{'string': " He did n't eat cat food", 'parse': {'tree': "(ROOT (S (NP (PRP He)) (VP (VBD did) (RB n't) (VP (VB eat) (NP (NN cat) (NN food))))))", 'lemma': [(u'He', u'he', u'PRP'), (u'did', u'do', u'VBD'), (u"n't", u'not', u'RB'), (u'eat', u'eat', u'VB'), (u'cat', u'cat', u'NN'), (u'food', u'food', u'NN')]}, 'tokens': ['He', 'did', "n't", 'eat', 'cat', 'food']}, {'string': ' He had a long nose', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD had) (NP (DT a) (JJ long) (NN nose)))))', 'lemma': [(u'He', u'he', u'PRP'), (u'had', u'have', u'VBD'), (u'a', u'a', u'DT'), (u'long', u'long', u'JJ'), (u'nose', u'nose', u'NN')]}, 'tokens': ['He', 'had', 'a', 'long', 'nose']}, {'string': ' He was different', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD was) (ADJP (JJ different)))))', 'lemma': [(u'He', u'he', u'PRP'), (u'was', u'be', u'VBD'), (u'different', u'different', u'JJ')]}, 'tokens': ['He', 'was', 'different']}, {'string': ' He panted', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (VP (VBD panted))))', 'lemma': [(u'He', u'he', u'PRP'), (u'panted', u'pant', u'VBD')]}, 'tokens': ['He', 'panted']}], 'mode': 0}, {'question': {'string': ' Where did Puddles live in the beginning?', 'parse': {'tree': '(ROOT (SBARQ (WHADVP (WRB Where)) (SQ (VBD did) (NP (NNPS Puddles)) (VP (VB live) (PP (IN in) (NP (DT the) (NN beginning))))) (. ?)))', 'lemma': [(u'Where', u'where', u'WRB'), (u'did', u'do', u'VBD'), (u'Puddles', u'Puddles', u'NNPS'), (u'live', u'live', u'VB'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'beginning', u'beginning', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['Where', 'did', 'Puddles', 'live', 'in', 'the', 'beginning', '?']}, 'answers': [{'string': ' with cats and dogs', 'parse': {'tree': '(ROOT (PP (IN with) (NP (NNS cats) (CC and) (NNS dogs))))', 'lemma': [(u'with', u'with', u'IN'), (u'cats', u'cat', u'NNS'), (u'and', u'and', u'CC'), (u'dogs', u'dog', u'NNS')]}, 'tokens': ['with', 'cats', 'and', 'dogs']}, {'string': ' In a group of cats', 'parse': {'tree': '(ROOT (PP (IN In) (NP (NP (DT a) (NN group)) (PP (IN of) (NP (NNS cats))))))', 'lemma': [(u'In', u'in', u'IN'), (u'a', u'a', u'DT'), (u'group', u'group', u'NN'), (u'of', u'of', u'IN'), (u'cats', u'cat', u'NNS')]}, 'tokens': ['In', 'a', 'group', 'of', 'cats']}, {'string': ' In a group of dogs', 'parse': {'tree': '(ROOT (PP (IN In) (NP (NP (DT a) (NN group)) (PP (IN of) (NP (NNS dogs))))))', 'lemma': [(u'In', u'in', u'IN'), (u'a', u'a', u'DT'), (u'group', u'group', u'NN'), (u'of', u'of', u'IN'), (u'dogs', u'dog', u'NNS')]}, 'tokens': ['In', 'a', 'group', 'of', 'dogs']}, {'string': ' With humans', 'parse': {'tree': '(ROOT (PP (IN With) (NP (NNS humans))))', 'lemma': [(u'With', u'with', u'IN'), (u'humans', u'human', u'NNS')]}, 'tokens': ['With', 'humans']}], 'mode': 1}, {'question': {'string': ' What does Puddles choose to do?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ does) (NP (NNPS Puddles)) (VP (VB choose) (S (VP (TO to) (VP (VB do)))))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'does', u'do', u'VBZ'), (u'Puddles', u'Puddles', u'NNPS'), (u'choose', u'choose', u'VB'), (u'to', u'to', u'TO'), (u'do', u'do', u'VB'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'does', 'Puddles', 'choose', 'to', 'do', '?']}, 'answers': [{'string': ' Go into the woods', 'parse': {'tree': '(ROOT (S (VP (VB Go) (PP (IN into) (NP (DT the) (NNS woods))))))', 'lemma': [(u'Go', u'go', u'VB'), (u'into', u'into', u'IN'), (u'the', u'the', u'DT'), (u'woods', u'wood', u'NNS')]}, 'tokens': ['Go', 'into', 'the', 'woods']}, {'string': ' Go to sleep', 'parse': {'tree': '(ROOT (S (VP (VB Go) (S (VP (TO to) (VP (VB sleep)))))))', 'lemma': [(u'Go', u'go', u'VB'), (u'to', u'to', u'TO'), (u'sleep', u'sleep', u'VB')]}, 'tokens': ['Go', 'to', 'sleep']}, {'string': ' Eat cat food', 'parse': {'tree': '(ROOT (S (VP (VB Eat) (NP (NN cat) (NN food)))))', 'lemma': [(u'Eat', u'eat', u'VB'), (u'cat', u'cat', u'NN'), (u'food', u'food', u'NN')]}, 'tokens': ['Eat', 'cat', 'food']}, {'string': ' Become a cat', 'parse': {'tree': '(ROOT (S (VP (VB Become) (NP (DT a) (NN cat)))))', 'lemma': [(u'Become', u'become', u'VB'), (u'a', u'a', u'DT'), (u'cat', u'cat', u'NN')]}, 'tokens': ['Become', 'a', 'cat']}], 'mode': 0}, {'question': {'string': ' Who did Puddles find?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP Who)) (SQ (VBD did) (NP (NNPS Puddles)) (VP (VB find))) (. ?)))', 'lemma': [(u'Who', u'who', u'WP'), (u'did', u'do', u'VBD'), (u'Puddles', u'Puddles', u'NNPS'), (u'find', u'find', u'VB'), (u'?', u'?', u'.')]}, 'tokens': ['Who', 'did', 'Puddles', 'find', '?']}, 'answers': [{'string': ' Food', 'parse': {'tree': '(ROOT (NP (NNP Food)))', 'lemma': [(u'Food', u'Food', u'NNP')]}, 'tokens': ['Food']}, {'string': ' A monster', 'parse': {'tree': '(ROOT (FRAG (NP (DT A) (NN monster))))', 'lemma': [(u'A', u'a', u'DT'), (u'monster', u'monster', u'NN')]}, 'tokens': ['A', 'monster']}, {'string': ' A dog family', 'parse': {'tree': '(ROOT (NP (DT A) (NN dog) (NN family)))', 'lemma': [(u'A', u'a', u'DT'), (u'dog', u'dog', u'NN'), (u'family', u'family', u'NN')]}, 'tokens': ['A', 'dog', 'family']}, {'string': ' A group of cats', 'parse': {'tree': '(ROOT (NP (NP (DT A) (NN group)) (PP (IN of) (NP (NNS cats)))))', 'lemma': [(u'A', u'a', u'DT'), (u'group', u'group', u'NN'), (u'of', u'of', u'IN'), (u'cats', u'cat', u'NNS')]}, 'tokens': ['A', 'group', 'of', 'cats']}], 'mode': 1}]}
{'sentences': [{'string': ' Once upon a time there was a princess who lived in a high tower and she was not allowed to leave because of her mean mother.', 'parse': {'tree': '(ROOT (S (S (ADVP (RB Once) (PP (IN upon) (NP (DT a) (NN time)))) (NP (EX there)) (VP (VBD was) (NP (NP (DT a) (NNS princess)) (SBAR (WHNP (WP who)) (S (VP (VBD lived) (PP (IN in) (NP (DT a) (JJ high) (NN tower))))))))) (CC and) (S (NP (PRP she)) (VP (VBD was) (RB not) (VP (VBN allowed) (S (VP (TO to) (VP (VB leave) (PP (RB because) (IN of) (NP (PRP$ her) (JJ mean) (NN mother))))))))) (. .)))', 'lemma': [(u'Once', u'once', u'RB'), (u'upon', u'upon', u'IN'), (u'a', u'a', u'DT'), (u'time', u'time', u'NN'), (u'there', u'there', u'EX'), (u'was', u'be', u'VBD'), (u'a', u'a', u'DT'), (u'princess', u'princess', u'NNS'), (u'who', u'who', u'WP'), (u'lived', u'live', u'VBD'), (u'in', u'in', u'IN'), (u'a', u'a', u'DT'), (u'high', u'high', u'JJ'), (u'tower', u'tower', u'NN'), (u'and', u'and', u'CC'), (u'she', u'she', u'PRP'), (u'was', u'be', u'VBD'), (u'not', u'not', u'RB'), (u'allowed', u'allow', u'VBN'), (u'to', u'to', u'TO'), (u'leave', u'leave', u'VB'), (u'because', u'because', u'RB'), (u'of', u'of', u'IN'), (u'her', u'she', u'PRP$'), (u'mean', u'mean', u'JJ'), (u'mother', u'mother', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['Once', 'upon', 'a', 'time', 'there', 'was', 'a', 'princess', 'who', 'lived', 'in', 'a', 'high', 'tower', 'and', 'she', 'was', 'not', 'allowed', 'to', 'leave', 'because', 'of', 'her', 'mean', 'mother', '.']}, {'string': ' One day she chose to leave but her mother would not let her.', 'parse': {'tree': '(ROOT (S (S (NP (CD One) (NN day)) (NP (PRP she)) (VP (VBD chose) (S (VP (TO to) (VP (VB leave)))))) (CC but) (S (NP (PRP$ her) (NN mother)) (VP (MD would) (RB not) (VP (VB let) (NP (PRP her))))) (. .)))', 'lemma': [(u'One', u'one', u'CD'), (u'day', u'day', u'NN'), (u'she', u'she', u'PRP'), (u'chose', u'choose', u'VBD'), (u'to', u'to', u'TO'), (u'leave', u'leave', u'VB'), (u'but', u'but', u'CC'), (u'her', u'she', u'PRP$'), (u'mother', u'mother', u'NN'), (u'would', u'would', u'MD'), (u'not', u'not', u'RB'), (u'let', u'let', u'VB'), (u'her', u'she', u'PRP'), (u'.', u'.', u'.')]}, 'tokens': ['One', 'day', 'she', 'chose', 'to', 'leave', 'but', 'her', 'mother', 'would', 'not', 'let', 'her', '.']}, {'string': ' The princess climbed out the window of the high tower and climbed down the south wall when her mother was sleeping.', 'parse': {'tree': '(ROOT (S (NP (DT The) (NNS princess)) (VP (VP (VBD climbed) (PRT (RP out)) (NP (NP (DT the) (NN window)) (PP (IN of) (NP (DT the) (JJ high) (NN tower))))) (CC and) (VP (VBD climbed) (PRT (RP down)) (NP (NP (DT the) (JJ south) (NN wall)) (SBAR (WHADVP (WRB when)) (S (NP (PRP$ her) (NN mother)) (VP (VBD was) (VP (VBG sleeping)))))))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'princess', u'princess', u'NNS'), (u'climbed', u'climb', u'VBD'), (u'out', u'out', u'RP'), (u'the', u'the', u'DT'), (u'window', u'window', u'NN'), (u'of', u'of', u'IN'), (u'the', u'the', u'DT'), (u'high', u'high', u'JJ'), (u'tower', u'tower', u'NN'), (u'and', u'and', u'CC'), (u'climbed', u'climb', u'VBD'), (u'down', u'down', u'RP'), (u'the', u'the', u'DT'), (u'south', u'south', u'JJ'), (u'wall', u'wall', u'NN'), (u'when', u'when', u'WRB'), (u'her', u'she', u'PRP$'), (u'mother', u'mother', u'NN'), (u'was', u'be', u'VBD'), (u'sleeping', u'sleep', u'VBG'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'princess', 'climbed', 'out', 'the', 'window', 'of', 'the', 'high', 'tower', 'and', 'climbed', 'down', 'the', 'south', 'wall', 'when', 'her', 'mother', 'was', 'sleeping', '.']}, {'string': ' She wandered out a good ways.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBD wandered) (PRT (RP out)) (NP (DT a) (JJ good) (NNS ways))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'wandered', u'wander', u'VBD'), (u'out', u'out', u'RP'), (u'a', u'a', u'DT'), (u'good', u'good', u'JJ'), (u'ways', u'way', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'wandered', 'out', 'a', 'good', 'ways', '.']}, {'string': ' Finally she went into the forest where there are no electric poles but where there are some caves.', 'parse': {'tree': '(ROOT (S (ADVP (RB Finally)) (NP (PRP she)) (VP (VBD went) (PP (IN into) (NP (DT the) (NN forest))) (SBAR (SBAR (WHADVP (WRB where)) (S (NP (EX there)) (VP (VBP are) (NP (DT no) (JJ electric) (NNS poles))))) (CC but) (SBAR (WHADVP (WRB where)) (S (NP (EX there)) (VP (VBP are) (NP (DT some) (NNS caves))))))) (. .)))', 'lemma': [(u'Finally', u'finally', u'RB'), (u'she', u'she', u'PRP'), (u'went', u'go', u'VBD'), (u'into', u'into', u'IN'), (u'the', u'the', u'DT'), (u'forest', u'forest', u'NN'), (u'where', u'where', u'WRB'), (u'there', u'there', u'EX'), (u'are', u'be', u'VBP'), (u'no', u'no', u'DT'), (u'electric', u'electric', u'JJ'), (u'poles', u'pole', u'NNS'), (u'but', u'but', u'CC'), (u'where', u'where', u'WRB'), (u'there', u'there', u'EX'), (u'are', u'be', u'VBP'), (u'some', u'some', u'DT'), (u'caves', u'cave', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['Finally', 'she', 'went', 'into', 'the', 'forest', 'where', 'there', 'are', 'no', 'electric', 'poles', 'but', 'where', 'there', 'are', 'some', 'caves', '.']}, {'string': ' There she met a young man who was running.', 'parse': {'tree': '(ROOT (S (ADVP (RB There)) (NP (PRP she)) (VP (VBD met) (NP (NP (DT a) (JJ young) (NN man)) (SBAR (WHNP (WP who)) (S (VP (VBD was) (VP (VBG running))))))) (. .)))', 'lemma': [(u'There', u'there', u'RB'), (u'she', u'she', u'PRP'), (u'met', u'meet', u'VBD'), (u'a', u'a', u'DT'), (u'young', u'young', u'JJ'), (u'man', u'man', u'NN'), (u'who', u'who', u'WP'), (u'was', u'be', u'VBD'), (u'running', u'run', u'VBG'), (u'.', u'.', u'.')]}, 'tokens': ['There', 'she', 'met', 'a', 'young', 'man', 'who', 'was', 'running', '.']}, {'string': ' His name was John.', 'parse': {'tree': '(ROOT (S (NP (PRP$ His) (NN name)) (VP (VBD was) (NP (NNP John))) (. .)))', 'lemma': [(u'His', u'he', u'PRP$'), (u'name', u'name', u'NN'), (u'was', u'be', u'VBD'), (u'John', u'John', u'NNP'), (u'.', u'.', u'.')]}, 'tokens': ['His', 'name', 'was', 'John', '.']}, {'string': ' John asked the princess why such a beautiful woman like her was out in the middle of a forest.', 'parse': {'tree': '(ROOT (S (NP (NNP John)) (VP (VBD asked) (NP (DT the) (NNS princess)) (SBAR (WHADVP (WRB why)) (S (NP (PDT such) (DT a) (JJ beautiful) (NN woman)) (VP (VBP like) (SBAR (S (NP (PRP her)) (VP (VBD was) (ADVP (RB out)) (PP (IN in) (NP (NP (DT the) (NN middle)) (PP (IN of) (NP (DT a) (NN forest)))))))))))) (. .)))', 'lemma': [(u'John', u'John', u'NNP'), (u'asked', u'ask', u'VBD'), (u'the', u'the', u'DT'), (u'princess', u'princess', u'NNS'), (u'why', u'why', u'WRB'), (u'such', u'such', u'PDT'), (u'a', u'a', u'DT'), (u'beautiful', u'beautiful', u'JJ'), (u'woman', u'woman', u'NN'), (u'like', u'like', u'VBP'), (u'her', u'she', u'PRP'), (u'was', u'be', u'VBD'), (u'out', u'out', u'RB'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'middle', u'middle', u'NN'), (u'of', u'of', u'IN'), (u'a', u'a', u'DT'), (u'forest', u'forest', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['John', 'asked', 'the', 'princess', 'why', 'such', 'a', 'beautiful', 'woman', 'like', 'her', 'was', 'out', 'in', 'the', 'middle', 'of', 'a', 'forest', '.']}, {'string': ' She said that she had been trapped for her whole life by an evil woman who said she was her mother.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBD said) (SBAR (IN that) (S (NP (PRP she)) (VP (VBD had) (VP (VBN been) (VP (VBN trapped) (PP (IN for) (NP (PRP$ her) (JJ whole) (NN life))) (PP (IN by) (NP (NP (DT an) (JJ evil) (NN woman)) (SBAR (WHNP (WP who)) (S (VP (VBD said) (SBAR (S (NP (PRP she)) (VP (VBD was) (NP (PRP$ her) (NN mother)))))))))))))))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'said', u'say', u'VBD'), (u'that', u'that', u'IN'), (u'she', u'she', u'PRP'), (u'had', u'have', u'VBD'), (u'been', u'be', u'VBN'), (u'trapped', u'trap', u'VBN'), (u'for', u'for', u'IN'), (u'her', u'she', u'PRP$'), (u'whole', u'whole', u'JJ'), (u'life', u'life', u'NN'), (u'by', u'by', u'IN'), (u'an', u'a', u'DT'), (u'evil', u'evil', u'JJ'), (u'woman', u'woman', u'NN'), (u'who', u'who', u'WP'), (u'said', u'say', u'VBD'), (u'she', u'she', u'PRP'), (u'was', u'be', u'VBD'), (u'her', u'she', u'PRP$'), (u'mother', u'mother', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'said', 'that', 'she', 'had', 'been', 'trapped', 'for', 'her', 'whole', 'life', 'by', 'an', 'evil', 'woman', 'who', 'said', 'she', 'was', 'her', 'mother', '.']}, {'string': ' The man said that he would take the princess to a castle that was near.', 'parse': {'tree': '(ROOT (S (NP (DT The) (NN man)) (VP (VBD said) (SBAR (IN that) (S (NP (PRP he)) (VP (MD would) (VP (VB take) (NP (DT the) (NNS princess)) (PP (TO to) (NP (NP (DT a) (NN castle)) (SBAR (WHNP (WDT that)) (S (VP (VBD was) (ADJP (JJ near)))))))))))) (. .)))', 'lemma': [(u'The', u'the', u'DT'), (u'man', u'man', u'NN'), (u'said', u'say', u'VBD'), (u'that', u'that', u'IN'), (u'he', u'he', u'PRP'), (u'would', u'would', u'MD'), (u'take', u'take', u'VB'), (u'the', u'the', u'DT'), (u'princess', u'princess', u'NNS'), (u'to', u'to', u'TO'), (u'a', u'a', u'DT'), (u'castle', u'castle', u'NN'), (u'that', u'that', u'WDT'), (u'was', u'be', u'VBD'), (u'near', u'near', u'JJ'), (u'.', u'.', u'.')]}, 'tokens': ['The', 'man', 'said', 'that', 'he', 'would', 'take', 'the', 'princess', 'to', 'a', 'castle', 'that', 'was', 'near', '.']}, {'string': ' He also said that he thought that she may be the missing princess.', 'parse': {'tree': '(ROOT (S (NP (PRP He)) (ADVP (RB also)) (VP (VBD said) (SBAR (IN that) (S (NP (PRP he)) (VP (VBD thought) (SBAR (IN that) (S (NP (PRP she)) (VP (MD may) (VP (VB be) (NP (DT the) (VBG missing) (NNS princess)))))))))) (. .)))', 'lemma': [(u'He', u'he', u'PRP'), (u'also', u'also', u'RB'), (u'said', u'say', u'VBD'), (u'that', u'that', u'IN'), (u'he', u'he', u'PRP'), (u'thought', u'think', u'VBD'), (u'that', u'that', u'IN'), (u'she', u'she', u'PRP'), (u'may', u'may', u'MD'), (u'be', u'be', u'VB'), (u'the', u'the', u'DT'), (u'missing', u'miss', u'VBG'), (u'princess', u'princess', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['He', 'also', 'said', 'that', 'he', 'thought', 'that', 'she', 'may', 'be', 'the', 'missing', 'princess', '.']}, {'string': ' As they go through the forest they run into many problems.', 'parse': {'tree': '(ROOT (S (SBAR (IN As) (S (NP (PRP they)) (VP (VBP go) (PP (IN through) (NP (DT the) (NN forest)))))) (NP (PRP they)) (VP (VBP run) (PP (IN into) (NP (JJ many) (NNS problems)))) (. .)))', 'lemma': [(u'As', u'as', u'IN'), (u'they', u'they', u'PRP'), (u'go', u'go', u'VBP'), (u'through', u'through', u'IN'), (u'the', u'the', u'DT'), (u'forest', u'forest', u'NN'), (u'they', u'they', u'PRP'), (u'run', u'run', u'VBP'), (u'into', u'into', u'IN'), (u'many', u'many', u'JJ'), (u'problems', u'problem', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['As', 'they', 'go', 'through', 'the', 'forest', 'they', 'run', 'into', 'many', 'problems', '.']}, {'string': ' They see that they are lost and have no way of finding where to go.', 'parse': {'tree': '(ROOT (S (NP (PRP They)) (VP (VBP see) (SBAR (IN that) (S (NP (PRP they)) (VP (VP (VBP are) (VP (VBN lost))) (CC and) (VP (VBP have) (NP (NP (DT no) (NN way)) (PP (IN of) (S (VP (VBG finding) (SBAR (WHADVP (WRB where)) (S (VP (TO to) (VP (VB go)))))))))))))) (. .)))', 'lemma': [(u'They', u'they', u'PRP'), (u'see', u'see', u'VBP'), (u'that', u'that', u'IN'), (u'they', u'they', u'PRP'), (u'are', u'be', u'VBP'), (u'lost', u'lose', u'VBN'), (u'and', u'and', u'CC'), (u'have', u'have', u'VBP'), (u'no', u'no', u'DT'), (u'way', u'way', u'NN'), (u'of', u'of', u'IN'), (u'finding', u'find', u'VBG'), (u'where', u'where', u'WRB'), (u'to', u'to', u'TO'), (u'go', u'go', u'VB'), (u'.', u'.', u'.')]}, 'tokens': ['They', 'see', 'that', 'they', 'are', 'lost', 'and', 'have', 'no', 'way', 'of', 'finding', 'where', 'to', 'go', '.']}, {'string': ' After several days pass, the princess climbs up to the top of a tree in order to find out where they are.', 'parse': {'tree': '(ROOT (S (SBAR (IN After) (S (NP (JJ several) (NNS days)) (VP (VBP pass)))) (, ,) (NP (DT the) (NNS princess)) (VP (VBZ climbs) (PRT (RP up)) (PP (TO to) (NP (NP (DT the) (NN top)) (PP (IN of) (NP (DT a) (NN tree))))) (SBAR (IN in) (NN order) (S (VP (TO to) (VP (VB find) (PRT (RP out)) (SBAR (WHADVP (WRB where)) (S (NP (PRP they)) (VP (VBP are))))))))) (. .)))', 'lemma': [(u'After', u'after', u'IN'), (u'several', u'several', u'JJ'), (u'days', u'day', u'NNS'), (u'pass', u'pass', u'VBP'), (u',', u',', u','), (u'the', u'the', u'DT'), (u'princess', u'princess', u'NNS'), (u'climbs', u'climb', u'VBZ'), (u'up', u'up', u'RP'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'top', u'top', u'NN'), (u'of', u'of', u'IN'), (u'a', u'a', u'DT'), (u'tree', u'tree', u'NN'), (u'in', u'in', u'IN'), (u'order', u'order', u'NN'), (u'to', u'to', u'TO'), (u'find', u'find', u'VB'), (u'out', u'out', u'RP'), (u'where', u'where', u'WRB'), (u'they', u'they', u'PRP'), (u'are', u'be', u'VBP'), (u'.', u'.', u'.')]}, 'tokens': ['After', 'several', 'days', 'pass', ',', 'the', 'princess', 'climbs', 'up', 'to', 'the', 'top', 'of', 'a', 'tree', 'in', 'order', 'to', 'find', 'out', 'where', 'they', 'are', '.']}, {'string': ' She sees that the castle where they want to go is not that far away and near a mountain.', 'parse': {'tree': '(ROOT (S (NP (PRP She)) (VP (VBZ sees) (SBAR (IN that) (S (NP (NP (DT the) (NN castle)) (SBAR (WHADVP (WRB where)) (S (NP (PRP they)) (VP (VBP want) (S (VP (TO to) (VP (VB go)))))))) (VP (VBZ is) (UCP (RB not) (ADJP (IN that) (ADVP (RB far) (RB away))) (CC and) (PP (IN near) (NP (DT a) (NN mountain)))))))) (. .)))', 'lemma': [(u'She', u'she', u'PRP'), (u'sees', u'see', u'VBZ'), (u'that', u'that', u'IN'), (u'the', u'the', u'DT'), (u'castle', u'castle', u'NN'), (u'where', u'where', u'WRB'), (u'they', u'they', u'PRP'), (u'want', u'want', u'VBP'), (u'to', u'to', u'TO'), (u'go', u'go', u'VB'), (u'is', u'be', u'VBZ'), (u'not', u'not', u'RB'), (u'that', u'that', u'IN'), (u'far', u'far', u'RB'), (u'away', u'away', u'RB'), (u'and', u'and', u'CC'), (u'near', u'near', u'IN'), (u'a', u'a', u'DT'), (u'mountain', u'mountain', u'NN'), (u'.', u'.', u'.')]}, 'tokens': ['She', 'sees', 'that', 'the', 'castle', 'where', 'they', 'want', 'to', 'go', 'is', 'not', 'that', 'far', 'away', 'and', 'near', 'a', 'mountain', '.']}, {'string': ' After thinking of the best way to get there, John and the princess go to the castle where they live for the rest of their lives.', 'parse': {'tree': '(ROOT (S (PP (IN After) (S (VP (VBG thinking) (PP (IN of) (NP (DT the) (JJS best) (NN way))) (S (VP (TO to) (VP (VB get) (ADVP (RB there)))))))) (, ,) (NP (NP (NNP John)) (CC and) (NP (DT the) (NNS princess))) (VP (VBP go) (PP (TO to) (NP (DT the) (NN castle))) (SBAR (WHADVP (WRB where)) (S (NP (PRP they)) (VP (VBP live) (PP (IN for) (NP (NP (DT the) (NN rest)) (PP (IN of) (NP (PRP$ their) (NNS lives))))))))) (. .)))', 'lemma': [(u'After', u'after', u'IN'), (u'thinking', u'think', u'VBG'), (u'of', u'of', u'IN'), (u'the', u'the', u'DT'), (u'best', u'best', u'JJS'), (u'way', u'way', u'NN'), (u'to', u'to', u'TO'), (u'get', u'get', u'VB'), (u'there', u'there', u'RB'), (u',', u',', u','), (u'John', u'John', u'NNP'), (u'and', u'and', u'CC'), (u'the', u'the', u'DT'), (u'princess', u'princess', u'NNS'), (u'go', u'go', u'VBP'), (u'to', u'to', u'TO'), (u'the', u'the', u'DT'), (u'castle', u'castle', u'NN'), (u'where', u'where', u'WRB'), (u'they', u'they', u'PRP'), (u'live', u'live', u'VBP'), (u'for', u'for', u'IN'), (u'the', u'the', u'DT'), (u'rest', u'rest', u'NN'), (u'of', u'of', u'IN'), (u'their', u'they', u'PRP$'), (u'lives', u'life', u'NNS'), (u'.', u'.', u'.')]}, 'tokens': ['After', 'thinking', 'of', 'the', 'best', 'way', 'to', 'get', 'there', ',', 'John', 'and', 'the', 'princess', 'go', 'to', 'the', 'castle', 'where', 'they', 'live', 'for', 'the', 'rest', 'of', 'their', 'lives', '.']}], 'questions': [{'question': {'string': ' Where did the princess wander to after escaping?', 'parse': {'tree': '(ROOT (SBARQ (WHADVP (WRB Where)) (SQ (VBD did) (NP (DT the) (NNS princess)) (VP (VB wander) (S (VP (TO to))) (PP (IN after) (S (VP (VBG escaping)))))) (. ?)))', 'lemma': [(u'Where', u'where', u'WRB'), (u'did', u'do', u'VBD'), (u'the', u'the', u'DT'), (u'princess', u'princess', u'NNS'), (u'wander', u'wander', u'VB'), (u'to', u'to', u'TO'), (u'after', u'after', u'IN'), (u'escaping', u'escape', u'VBG'), (u'?', u'?', u'.')]}, 'tokens': ['Where', 'did', 'the', 'princess', 'wander', 'to', 'after', 'escaping', '?']}, 'answers': [{'string': ' Mountain', 'parse': {'tree': '(ROOT (NP (NNP Mountain)))', 'lemma': [(u'Mountain', u'Mountain', u'NNP')]}, 'tokens': ['Mountain']}, {'string': ' Forest', 'parse': {'tree': '(ROOT (NP (NNP Forest)))', 'lemma': [(u'Forest', u'Forest', u'NNP')]}, 'tokens': ['Forest']}, {'string': ' Cave', 'parse': {'tree': '(ROOT (NP (NNP Cave)))', 'lemma': [(u'Cave', u'Cave', u'NNP')]}, 'tokens': ['Cave']}, {'string': ' Castle', 'parse': {'tree': '(ROOT (NP (NNP Castle)))', 'lemma': [(u'Castle', u'Castle', u'NNP')]}, 'tokens': ['Castle']}], 'mode': 0}, {'question': {'string': ' Who escaped from the tower?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP Who)) (SQ (VP (VBD escaped) (PP (IN from) (NP (DT the) (NN tower))))) (. ?)))', 'lemma': [(u'Who', u'who', u'WP'), (u'escaped', u'escape', u'VBD'), (u'from', u'from', u'IN'), (u'the', u'the', u'DT'), (u'tower', u'tower', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['Who', 'escaped', 'from', 'the', 'tower', '?']}, 'answers': [{'string': ' Mother', 'parse': {'tree': '(ROOT (NP (NNP Mother)))', 'lemma': [(u'Mother', u'Mother', u'NNP')]}, 'tokens': ['Mother']}, {'string': ' Princess', 'parse': {'tree': '(ROOT (NP (NNP Princess)))', 'lemma': [(u'Princess', u'Princess', u'NNP')]}, 'tokens': ['Princess']}, {'string': ' Man', 'parse': {'tree': '(ROOT (NP (NNP Man)))', 'lemma': [(u'Man', u'Man', u'NNP')]}, 'tokens': ['Man']}, {'string': ' John', 'parse': {'tree': '(ROOT (NP (NNP John)))', 'lemma': [(u'John', u'John', u'NNP')]}, 'tokens': ['John']}], 'mode': 1}, {'question': {'string': ' What did the princess climb to see the castle?', 'parse': {'tree': '(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD did) (NP (DT the) (NNS princess)) (VP (VB climb) (S (VP (TO to) (VP (VB see) (NP (DT the) (NN castle))))))) (. ?)))', 'lemma': [(u'What', u'what', u'WP'), (u'did', u'do', u'VBD'), (u'the', u'the', u'DT'), (u'princess', u'princess', u'NNS'), (u'climb', u'climb', u'VB'), (u'to', u'to', u'TO'), (u'see', u'see', u'VB'), (u'the', u'the', u'DT'), (u'castle', u'castle', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['What', 'did', 'the', 'princess', 'climb', 'to', 'see', 'the', 'castle', '?']}, 'answers': [{'string': ' Electric pole', 'parse': {'tree': '(ROOT (NP (NNP Electric) (NNP pole)))', 'lemma': [(u'Electric', u'Electric', u'NNP'), (u'pole', u'pole', u'NNP')]}, 'tokens': ['Electric', 'pole']}, {'string': ' mountain', 'parse': {'tree': '(ROOT (NP (NN mountain)))', 'lemma': [(u'mountain', u'mountain', u'NN')]}, 'tokens': ['mountain']}, {'string': ' Tree', 'parse': {'tree': '(ROOT (NP (NNP Tree)))', 'lemma': [(u'Tree', u'Tree', u'NNP')]}, 'tokens': ['Tree']}, {'string': ' Castle', 'parse': {'tree': '(ROOT (NP (NNP Castle)))', 'lemma': [(u'Castle', u'Castle', u'NNP')]}, 'tokens': ['Castle']}], 'mode': 0}, {'question': {'string': ' Where does the princess live in the beginning?', 'parse': {'tree': '(ROOT (SBARQ (WHADVP (WRB Where)) (SQ (VBZ does) (NP (DT the) (NNS princess)) (VP (VB live) (PP (IN in) (NP (DT the) (NN beginning))))) (. ?)))', 'lemma': [(u'Where', u'where', u'WRB'), (u'does', u'do', u'VBZ'), (u'the', u'the', u'DT'), (u'princess', u'princess', u'NNS'), (u'live', u'live', u'VB'), (u'in', u'in', u'IN'), (u'the', u'the', u'DT'), (u'beginning', u'beginning', u'NN'), (u'?', u'?', u'.')]}, 'tokens': ['Where', 'does', 'the', 'princess', 'live', 'in', 'the', 'beginning', '?']}, 'answers': [{'string': ' Castle', 'parse': {'tree': '(ROOT (NP (NNP Castle)))', 'lemma': [(u'Castle', u'Castle', u'NNP')]}, 'tokens': ['Castle']}, {'string': ' house', 'parse': {'tree': '(ROOT (NP (NN house)))', 'lemma': [(u'house', u'house', u'NN')]}, 'tokens': ['house']}, {'string': ' Cave', 'parse': {'tree': '(ROOT (NP (NNP Cave)))', 'lemma': [(u'Cave', u'Cave', u'NNP')]}, 'tokens': ['Cave']}, {'string': ' High Tower', 'parse': {'tree': '(ROOT (NP (NNP High) (NNP Tower)))', 'lemma': [(u'High', u'High', u'NNP'), (u'Tower', u'Tower', u'NNP')]}, 'tokens': ['High', 'Tower']}], 'mode': 1}]}